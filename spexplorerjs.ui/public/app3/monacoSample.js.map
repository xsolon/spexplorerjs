{"version":3,"sources":["webpack:///./node_modules/popper.js/dist/esm/popper.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/spexplorerts/bundles/spexplorerts.d.ts.html","webpack:///./node_modules/timers-browserify/main.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/app3/monacoSample.ts","webpack:///./src/components/defs/JQuery.d.html","webpack:///./src/components/defs/jqueryStatic.d.html","webpack:///./src/components/defs/legacy.d.html","webpack:///./src/components/defs/misc.d.html","webpack:///./src/components/defs/sp.d.html","webpack:///./src/components/myMonacoEditor.ts","webpack:///./src/components/tinylogger.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA,cAAc;AACd;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd,mBAAmB;AACnB,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,gBAAgB;;AAE5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,gBAAgB;;AAEtF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB,yDAAyD;;AAE9E;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B,2BAA2B;AAC3B,gCAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,4BAA4B;AAC5B;;AAEA,qCAAqC;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB,cAAc,OAAO;AACrB,aAAa,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,WAAW;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,WAAW;AAC1B;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,WAAW;AAC1B;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,WAAW;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,WAAW;AAC1B;AACA,eAAe,mBAAmB;AAClC;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,WAAW;AAC1B;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,WAAW;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,WAAW;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,WAAW;AAC1B;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,WAAW;AAC1B;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,YAAY;AAC1B,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,IAAI;AACJ;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,kCAAkC;;AAElC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW;AACtB;;AAEA;AACA;AACA,WAAW,WAAW;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc;AACd,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B,iDAAiD,uCAAuC,kDAAkD;AAC1I,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB;AACA;;;AAGA;AACA;AACA;;AAEe,qEAAM,EAAC;AACtB;;;;;;;;;;;;;ACvjFA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;ACvLtC;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;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","file":"monacoSample.js","sourcesContent":["/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.16.1\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n\nvar timeoutDuration = function () {\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}();\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nfunction getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.width;\n  var height = sizes.height || element.clientHeight || result.height;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop);\n    var marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","module.exports = \"/// <reference types=\\\"sharepoint\\\" />\\ninterface Ispexplorerjs {\\r\\n    [key: string]: any;\\r\\n    modules: {\\r\\n        logger: new (name: string) => Logger;\\r\\n        utils: new () => funcs;\\r\\n        funcs: funcs;\\r\\n        listapi: new (ctx?: SP.ClientContext) => ListApi;\\r\\n        listdal: new (title: string, defaultQuery?: string) => ListDal;\\r\\n        folderapi: new (ctx?: SP.ClientContext) => FolderApi;\\r\\n        webapi: new (ctx?: SP.ClientContext) => WebApi;\\r\\n        jQuery: JQueryStatic;\\r\\n    };\\r\\n}\\r\\ninterface IWindow {\\r\\n    [key: string]: any;\\r\\n    spexplorerjs: Ispexplorerjs;\\r\\n    spexplorerts: Ispexplorerjs;\\r\\n}\\r\\n\\nexport declare type QueueStep = (item: any) => Promise<void>;\\r\\nexport declare type ArrayPromise = () => Promise<Array<any>>;\\r\\nexport declare class ListDal {\\r\\n    version: '0.1.18';\\r\\n    title: string;\\r\\n    defaultQuery: string;\\r\\n    ctx: SP.ClientContext;\\r\\n    dal: ListApi;\\r\\n    list: SP.List;\\r\\n    constructor(title: string, defaultQuery?: string);\\r\\n    ensureFolder(serverRelativeUrl: string): JQuery.Promise<SP.Folder>;\\r\\n    getList(): SP.List;\\r\\n    getItems(query?: string, folder?: string, limit?: number): JQuery.Promise<SP.ListItem[]>;\\r\\n    addItems(items: Array<any>, folderUrl?: string, pageNum?: number): JQuery.Promise<Array<SP.ListItem>>;\\r\\n    getItemById(id: number): JQuery.Promise<SP.ListItem>;\\r\\n}\\r\\nexport declare class ListApi {\\r\\n    version: '0.1.17';\\r\\n    ctrace: Logger;\\r\\n    ctx: SP.ClientContext;\\r\\n    folderApi: FolderApi;\\r\\n    constructor(ctx?: SP.ClientContext);\\r\\n    ensureFields: (list: SP.List<any>, fields: FieldMeta[]) => JQuery.Promise<any, any, any>;\\r\\n    listExists(title: string): Promise<[boolean, SP.List]>;\\r\\n    ensureCTypes(ctypes: CTypeMeta[], splist: SP.List): JQuery.Promise<SP.ContentType[]>;\\r\\n    ensureList(meta: ListMeta): JQuery.Promise<SP.List>;\\r\\n    createList(listTitle: any, templateType: any, web: any): JQuery.Promise<SP.List>;\\r\\n    getMeta(listTitle: string, fieldNames: any): Promise<ListMeta>;\\r\\n    setupForms: (tList: SP.List<any>, scriptLink: string, htmlLink?: string) => JQuery.Promise<any, any, any>;\\r\\n    addItems(gitems: Array<{\\r\\n        [key: string]: any;\\r\\n    }>, splist: SP.List, folderUrl?: string, pageNum?: number): JQuery.Promise<Array<SP.ListItem>>;\\r\\n    getQuery(caml?: string, folder?: string): SP.CamlQuery;\\r\\n    runAllQuery(query: SP.CamlQuery, splist: SP.List, limit?: number, trace?: Logger): JQuery.Promise<Array<SP.ListItem>>;\\r\\n    getAll(splist: SP.List, caml?: string, folder?: string, limit?: number): JQuery.Promise<Array<SP.ListItem>>;\\r\\n}\\r\\nexport declare class FolderApi {\\r\\n    ctrace: Logger;\\r\\n    ctx: SP.ClientContext;\\r\\n    constructor(ctx?: SP.ClientContext);\\r\\n    ensureAttachmentFolder(itemId: number, list: SP.List): JQuery.Promise<SP.Folder>;\\r\\n    folderExists(serverRelativeUrl: string, web?: SP.Web): JQuery.Promise<SP.Folder | boolean>;\\r\\n    pathSteps(path: string): Array<string>;\\r\\n    createFolderInList: (name: string, parentFolderPath: string, list: SP.List<any>) => JQuery.Promise<SP.Folder, any, any>;\\r\\n    /**\\r\\n       * returns folder (creating it and its path if necessary)\\r\\n       * @param {string} serverRelativeUrl\\r\\n       */\\r\\n    ensureFolderInList(serverRelativeUrl: string, list: SP.List): JQuery.Promise<SP.Folder>;\\r\\n    /**\\r\\n     * upload a file: returns an promise<sp.file>\\r\\n     * @param parentDir: SP.Folder where file will be uploaded\\r\\n     * @param buffer: base64 encoded byte array\\r\\n     * @param filename: name of the file to save in sharepoint\\r\\n     * @param replaceInvalidChars : replace invalid charaters (for onpremises)\\r\\n     */\\r\\n    uploadFile(parentDir: SP.Folder, buffer: SP.Base64EncodedByteArray, filename: string, replaceInvalidChars?: boolean, createInfo?: SP.FileCreationInformation): JQuery.Promise<SP.File>;\\r\\n}\\r\\nexport declare class WebApi {\\r\\n    ctrace: Logger;\\r\\n    ctx: SP.ClientContext;\\r\\n    constructor(ctx: SP.ClientContext);\\r\\n    ensureCTypes(ctypes: CTypeMeta[], web?: SP.Web): JQuery.Promise<SP.ContentType[]>;\\r\\n    static GetApi(ctx: SP.ClientContext): WebApi;\\r\\n}\\r\\n\\nexport declare class Logger {\\r\\n    version: '0.2';\\r\\n    name: string;\\r\\n    shouldLog: boolean;\\r\\n    shouldDebug: boolean;\\r\\n    shouldTrace: boolean;\\r\\n    constructor(name: string);\\r\\n    log(message: any): void;\\r\\n    debug(message: any): void;\\r\\n    trace(message: any): void;\\r\\n    error(message: any): void;\\r\\n    static get(name: string): Logger;\\r\\n}\\r\\n\\nexport declare class ListMeta {\\r\\n    fields: FieldMeta[];\\r\\n    ctypes: CTypeMeta[];\\r\\n    listTemplate: number;\\r\\n    title: string;\\r\\n    defaultItems: Array<{\\r\\n        [key: string]: any;\\r\\n    }> | itemsFunction;\\r\\n    afterDefaultItemsAdded?: postItemsAddedFunction;\\r\\n    listUpdates?: listUpdatesFunction;\\r\\n    afterListCreated?: listUpdatesFunction;\\r\\n    permissions?: GroupMeta[];\\r\\n    getConfig?: () => any;\\r\\n    constructor(title: string);\\r\\n    static version: '0.1.4';\\r\\n}\\r\\nexport declare class GroupMeta {\\r\\n    name: string;\\r\\n    permissions: [string];\\r\\n    desc?: string;\\r\\n}\\r\\nexport declare class FieldMeta {\\r\\n    markup: markupFunction | string;\\r\\n    name: string;\\r\\n    type?: SP.FieldType;\\r\\n    flags?: number;\\r\\n    multiValue?: boolean;\\r\\n    legacyName?: string | null;\\r\\n    title?: string | null;\\r\\n    post?: postFunction;\\r\\n    inDefaultView?: boolean;\\r\\n    addOptions?: SP.AddFieldOptions;\\r\\n}\\r\\nexport declare class FieldLinkMeta {\\r\\n    name: string;\\r\\n    hidden?: boolean;\\r\\n}\\r\\nexport declare class CTypeMeta {\\r\\n    name: string;\\r\\n    parentCtypeId: string;\\r\\n    fields: FieldLinkMeta[];\\r\\n    group?: string;\\r\\n    description?: string;\\r\\n    jsLink?: string;\\r\\n}\\r\\nexport declare var classBuilder: (list: ListMeta) => string;\\r\\nexport declare var tsClassBuilder: (list: ListMeta) => string;\\r\\nexport declare type itemsFunction = (list: SP.List, dal: ListApi) => JQuery.Promise<Array<{\\r\\n    [key: string]: any;\\r\\n}>>;\\r\\nexport declare type postItemsAddedFunction = (list: SP.List, dal: ListApi, items: SP.ListItem[]) => JQuery.Promise<SP.ListItem[]>;\\r\\nexport declare type markupFunction = (ctx: SP.ClientContext, list: SP.List, spfields: SP.FieldCollection, lists: SP.ListCollection, web: SP.Web) => JQuery.Promise<string>;\\r\\nexport declare type listUpdatesFunction = (list: SP.List, dal: ListApi) => JQuery.Promise<any>;\\r\\nexport declare type postFunction = (field: SP.Field) => void;\\r\\n\\nexport declare var version: string;\\r\\nexport declare type QueueStep<T> = (item: T) => Promise<void>;\\r\\nexport declare type ArrayPromise<T> = () => Promise<Array<T>>;\\r\\nexport declare type KeyFunc<T> = (item: T) => string;\\r\\nexport declare class pagewps {\\r\\n    ctx: SP.ClientContext;\\r\\n    lpm: SP.WebParts.LimitedWebPartManager;\\r\\n    wps: {\\r\\n        [id: string]: {\\r\\n            wpd: SP.WebParts.WebPartDefinition;\\r\\n            wp: SP.WebParts.WebPart;\\r\\n        };\\r\\n    };\\r\\n}\\r\\nexport declare class funcs {\\r\\n    constructor();\\r\\n    /**\\r\\n     * Divides array into an array of arrays where each sub array has no more than pageNum numer of items\\r\\n     * @param array : array to be divided\\r\\n     * @param pageNum : numer of items per sub array\\r\\n     */\\r\\n    pageArray(array: Array<any>, pageNum?: number): Array<Array<any>>;\\r\\n    arrayToDictionary<T>(array: Array<T>, getKey: KeyFunc<T>, forceUnique?: boolean): {\\r\\n        [key: string]: T;\\r\\n    };\\r\\n    getParameterByName: (name: any, url?: any) => string;\\r\\n    getPeoplePickerByName: (name: string) => SPClientPeoplePicker;\\r\\n    collectionToDictionary<T>(spCollection: any, getKey: KeyFunc<T>, forceUnique?: boolean): {\\r\\n        [key: string]: T;\\r\\n    };\\r\\n    collectionToArray: <T>(spCollection: any) => T[];\\r\\n    processAsQueue: <T>(arr: T[] | ArrayPromise<T>, action: QueueStep<T>) => JQuery.Promise<void, any, any>;\\r\\n    loadSpElem(elem: Array<any> | any, sptx?: SP.ClientRuntimeContext, caller?: any | null): JQuery.Promise<any>;\\r\\n    removeScriptLink(ctx: SP.ClientContext, title: string, logger?: Logger): JQuery.Deferred<any, any, any>;\\r\\n    /**\\r\\n     * Adds a script link to userCustomActions. If a match is found (by title) then a new record is not added\\r\\n     * @param ctx SharePoint Client context\\r\\n     * @param src src of the script link\\r\\n     * @param title title of the script link\\r\\n     * @param sequence sequence of the script link\\r\\n     * @param logger logger\\r\\n     */\\r\\n    addScriptLink(ctx: SP.ClientContext, src: string, title: string, sequence?: number, logger?: Logger): JQuery.Promise<any, any, any>;\\r\\n    setHomePage: (folderOrWeb: SP.Web | SP.Folder, url: string, logger?: Logger) => Promise<void>;\\r\\n    addWebPart: (ctx: SP.ClientContext, serverRelativeFormUrl: string, wpXml: string, zone: string, position?: number) => JQuery.Promise<SP.WebParts.WebPartDefinition, any, any>;\\r\\n    getPageWebParts(formUrl: string, ctx: SP.ClientContext): JQuery.Promise<pagewps>;\\r\\n    setformJsLink: (formUrl: string, ctx: SP.ClientContext, bizJs: string) => Promise<any>;\\r\\n    breakRoleInheritance: (securable: SP.SecurableObject, copyRoleAssignments: boolean, clearSubscopes: boolean) => JQuery.Promise<any, any, any>;\\r\\n    getGroups(ctx: SP.ClientContext, logger?: Logger): JQuery.Promise<{\\r\\n        [key: string]: SP.Group;\\r\\n    }>;\\r\\n    ensureGroup(name: any, desc: any, ctx: SP.ClientContext, logger?: Logger): JQuery.Promise<SP.Group>;\\r\\n    addPermission: (ctx: SP.ClientContext, principalIn: any, permissions: any, securable: SP.SecurableObject, parentWeb: SP.Web, logger?: Logger) => JQuery.Promise<any, any, any>;\\r\\n    ensureGroups(groups: Array<GroupMeta>, ctx: SP.ClientContext, securable?: SP.SecurableObject, logger?: Logger): JQuery.Promise<any>;\\r\\n    createGroup(name: any, desc: any, ctx: SP.ClientContext, parentWeb: SP.Web | null, logger?: Logger): JQuery.Promise<SP.Group>;\\r\\n    sendEmail(to: string | [string], body: string, subject: string, webUrl?: string): JQuery.Promise<any>;\\r\\n    /**\\r\\n     * returns table rows that contain the keyword FieldInternName. This identify legacy form fields in a SharePoint form\\r\\n     * @returns object with properties that match the internal name of each field in the form. The propety value is the html table row\\r\\n    */\\r\\n    getFieldMap: () => any;\\r\\n}\\r\\nexport declare var initExtensions: () => void;\\r\\n\\n\";","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// import { CodeMirrorEditor } from '../components/codemirroreditor';\nimport { TinyLogger } from '../components/tinylogger';\nvar $ = require('jquery');\n\nimport 'bootstrap';\nimport '../custom.scss';\nimport { MyMonacoEditor } from '../components/myMonacoEditor';\nvar trace = new TinyLogger();\n\nclass Page1 {\n    constructor() {\n\n        trace.log('init 0.1');\n\n    }\n    buildUI() {\n        trace.log('buildUI');\n\n        var ui = $('#monacoEditor');\n        trace.log(ui.length);\n        var editor = new MyMonacoEditor(ui[0], 'typescript', 'alert(\"hi\")');\n\n        var runScript = function (code: string) {\n            try {\n                trace.log(code);\n                var script = `\n        var log = console.log, clear = console.clear;\n        var exports = {};\n                   ${code}\n      `;\n\n                var args: string[] = ['xmlEditor', 'jsEditor'];\n\n                //@ts-ignore\n                var tempFunction = new Function(args, script);\n                var res = tempFunction.apply(tempFunction, []);\n                if (res) {\n                    console.log(res);\n                }\n\n            } catch (e) {\n                trace.log(e.message);\n                throw e;\n            }\n\n        };\n\n        ui.on('run', () => {\n\n            editor.getValue().then(code => {\n                runScript(code);\n            });\n        });\n    }\n}\n\nvar driver = new Page1();\n\ndriver.buildUI();","module.exports = \"// tslint:disable:jsdoc-format\\n// tslint:disable:max-line-length\\n// tslint:disable:no-irregular-whitespace\\n\\ninterface JQuery<TElement = HTMLElement> extends Iterable<TElement> {\\n    /**\\n     * A string containing the jQuery version number.\\n     * @see \\\\`{@link https://api.jquery.com/jquery-2/#jquery1 }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Determine if an object is a jQuery object\\n```javascript\\nvar a = { what: \\\"A regular JS object\\\" },\\n  b = $( \\\"body\\\" );\\n​\\nif ( a.jquery ) { // Falsy, since it's undefined\\n  alert( \\\"a is a jQuery object!\\\" );\\n}\\n​\\nif ( b.jquery ) { // Truthy, since it's a string\\n    alert( \\\"b is a jQuery object!\\\" );\\n}\\n```\\n     * @example ​ ````Get the current version of jQuery running on the page\\n```javascript\\nalert( \\\"You are running jQuery version: \\\" + $.fn.jquery );\\n```\\n     */\\n    jquery: string;\\n    /**\\n     * The number of elements in the jQuery object.\\n     * @see \\\\`{@link https://api.jquery.com/length/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Count the divs.  Click to add more.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>length demo</title>\\n  <style>\\n  body {\\n    cursor: pointer;\\n  }\\n  div {\\n    width: 50px;\\n    height: 30px;\\n    margin: 5px;\\n    float: left;\\n    background: green;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​<span></span>\\n  <div></div>​\\n<script>\\n$( document.body )\\n  .click(function() {\\n    $( document.body ).append( $( \\\"<div>\\\" ) );\\n    var n = $( \\\"div\\\" ).length;\\n    $( \\\"span\\\" ).text( \\\"There are \\\" + n + \\\" divs.\\\" +\\n      \\\"Click to add more.\\\");\\n  })\\n  // Trigger the click to start\\n  .trigger( \\\"click\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    length: number;\\n    /**\\n     * Create a new jQuery object with elements added to the set of matched elements.\\n     * @param selector A string representing a selector expression to find additional elements to add to the set of matched elements.\\n     * @param context The point in the document at which the selector should begin matching; similar to the context\\n     *                argument of the $(selector, context) method.\\n     * @see \\\\`{@link https://api.jquery.com/add/ }\\\\`\\n     * @since 1.4\\n     */\\n    add(selector: JQuery.Selector, context: Element): this;\\n    // TODO: The return type should reflect newly selected types.\\n    /**\\n     * Create a new jQuery object with elements added to the set of matched elements.\\n     * @param selector_elements_html_selection _&#x40;param_ `selector_elements_html_selection`\\n     * <br>\\n     * * `selector` — A string representing a selector expression to find additional elements to add to the set of matched elements. <br>\\n     * * `elements` — One or more elements to add to the set of matched elements. <br>\\n     * * `html` — An HTML fragment to add to the set of matched elements. <br>\\n     * * `selection` — An existing jQuery object to add to the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/add/ }\\\\`\\n     * @since 1.0\\n     * @since 1.3.2\\n     * @example ​ ````Finds all divs and makes a border.  Then adds all paragraphs to the jQuery object to set their backgrounds yellow.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>add demo</title>\\n  <style>\\n  div {\\n    width: 60px;\\n    height: 60px;\\n    margin: 10px;\\n    float: left;\\n  }\\n  p {\\n    clear: left;\\n    font-weight: bold;\\n    font-size: 16px;\\n    color: blue;\\n    margin: 0 10px;\\n    padding: 2px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<p>Added this... (notice no border)</p>\\n​\\n<script>\\n$( \\\"div\\\" ).css( \\\"border\\\", \\\"2px solid red\\\" )\\n  .add( \\\"p\\\" )\\n  .css( \\\"background\\\", \\\"yellow\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Adds more elements, matched by the given expression, to the set of matched elements.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>add demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<span>Hello Again</span>\\n​\\n<script>\\n$( \\\"p\\\" ).add( \\\"span\\\" ).css( \\\"background\\\", \\\"yellow\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Adds more elements, created on the fly, to the set of matched elements.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>add demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n​\\n<script>\\n$( \\\"p\\\" ).clone().add( \\\"<span>Again</span>\\\" ).appendTo( document.body );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Adds one or more Elements to the set of matched elements.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>add demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<span id=\\\"a\\\">Hello Again</span>\\n​\\n<script>\\n$( \\\"p\\\" ).add( document.getElementById( \\\"a\\\" ) ).css( \\\"background\\\", \\\"yellow\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Demonstrates how to add (or push) elements to an existing collection\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>add demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<span id=\\\"a\\\">Hello Again</span>\\n​\\n<script>\\nvar collection = $( \\\"p\\\" );\\n// Capture the new collection\\ncollection = collection.add( document.getElementById( \\\"a\\\" ) );\\ncollection.css( \\\"background\\\", \\\"yellow\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    add(selector_elements_html_selection: JQuery.Selector | JQuery.TypeOrArray<Element> | JQuery.htmlString | JQuery | JQuery.Node): this;\\n    /**\\n     * Add the previous set of elements on the stack to the current set, optionally filtered by a selector.\\n     * @param selector A string containing a selector expression to match the current set of elements against.\\n     * @see \\\\`{@link https://api.jquery.com/addBack/ }\\\\`\\n     * @since 1.8\\n     * @example ​ ````The .addBack() method causes the previous set of DOM elements in the traversal stack to be added to the current set. In the first example, the top stack contains the set resulting from .find(&quot;p&quot;). In the second example, .addBack() adds the previous set of elements on the stack — in this case $(&quot;div.after-addback&quot;) — to the current set, selecting both the div and its enclosed paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>addBack demo</title>\\n  <style>\\n  p, div {\\n    margin: 5px;\\n    padding: 5px;\\n  }\\n  .border {\\n    border: 2px solid red;\\n  }\\n  .background {\\n    background: yellow;\\n  }\\n  .left, .right {\\n    width: 45%;\\n    float: left;\\n  }\\n  .right {\\n    margin-left: 3%;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"left\\\">\\n  <p><strong>Before <code>addBack()</code></strong></p>\\n  <div class=\\\"before-addback\\\">\\n    <p>First Paragraph</p>\\n    <p>Second Paragraph</p>\\n  </div>\\n</div>\\n<div class=\\\"right\\\">\\n  <p><strong>After <code>addBack()</code></strong></p>\\n  <div class=\\\"after-addback\\\">\\n    <p>First Paragraph</p>\\n    <p>Second Paragraph</p>\\n  </div>\\n</div>\\n​\\n<script>\\n$( \\\"div.left, div.right\\\" ).find( \\\"div, div > p\\\" ).addClass( \\\"border\\\" );\\n​\\n// First Example\\n$( \\\"div.before-addback\\\" ).find( \\\"p\\\" ).addClass( \\\"background\\\" );\\n​\\n// Second Example\\n$( \\\"div.after-addback\\\" ).find( \\\"p\\\" ).addBack().addClass( \\\"background\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    addBack(selector?: JQuery.Selector): this;\\n    /**\\n     * Adds the specified class(es) to each element in the set of matched elements.\\n     * @param className_function _&#x40;param_ `className_function`\\n     * <br>\\n     * * `className` — One or more space-separated classes to be added to the class attribute of each matched element. <br>\\n     * * `function` — A function returning one or more space-separated class names to be added to the existing class\\n     *                name(s). Receives the index position of the element in the set and the existing class name(s) as\\n     *                arguments. Within the function, `this` refers to the current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/addClass/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @since 3.3\\n     * @example ​ ````Add the class &quot;selected&quot; to the matched elements.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>addClass demo</title>\\n  <style>\\n  p {\\n    margin: 8px;\\n    font-size: 16px;\\n  }\\n  .selected {\\n    color: blue;\\n  }\\n  .highlight {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>and</p>\\n<p>Goodbye</p>\\n​\\n<script>\\n$( \\\"p\\\" ).last().addClass( \\\"selected\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Add the classes &quot;selected&quot; and &quot;highlight&quot; to the matched elements.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>addClass demo</title>\\n  <style>\\n  p {\\n    margin: 8px;\\n    font-size: 16px;\\n  }\\n  .selected {\\n    color: red;\\n  }\\n  .highlight {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>and</p>\\n<p>Goodbye</p>\\n​\\n<script>\\n$( \\\"p:last\\\" ).addClass( \\\"selected highlight\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Pass in a function to .addClass() to add the &quot;green&quot; class to a div that already has a &quot;red&quot; class.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>addClass demo</title>\\n  <style>\\n  div {\\n    background: white;\\n  }\\n  .red {\\n    background: red;\\n  }\\n  .red.green {\\n    background: green;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n <div>This div should be white</div>\\n <div class=\\\"red\\\">This div will be green because it now has the \\\"green\\\" and \\\"red\\\" classes.\\n   It would be red if the addClass function failed.</div>\\n <div>This div should be white</div>\\n <p>There are zero green divs</p>\\n​\\n<script>\\n$( \\\"div\\\" ).addClass(function( index, currentClass ) {\\n  var addedClass;\\n​\\n  if ( currentClass === \\\"red\\\" ) {\\n    addedClass = \\\"green\\\";\\n    $( \\\"p\\\" ).text( \\\"There is one green div\\\" );\\n  }\\n​\\n  return addedClass;\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    addClass(className_function: JQuery.TypeOrArray<string> | ((this: TElement, index: number, currentClassName: string) => string)): this;\\n    /**\\n     * Insert content, specified by the parameter, after each element in the set of matched elements.\\n     * @param contents One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or\\n     *                 jQuery objects to insert after each element in the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/after/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Inserts some HTML after all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>after demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>I would like to say: </p>\\n​\\n<script>\\n$( \\\"p\\\" ).after( \\\"<b>Hello</b>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Inserts a DOM element after all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>after demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>I would like to say: </p>\\n​\\n<script>\\n$( \\\"p\\\" ).after( document.createTextNode( \\\"Hello\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Inserts a jQuery object (similar to an Array of DOM Elements) after all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>after demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<b>Hello</b>\\n<p>I would like to say: </p>\\n​\\n<script>\\n$( \\\"p\\\" ).after( $( \\\"b\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    after(...contents: Array<JQuery.htmlString | JQuery.TypeOrArray<JQuery.Node | JQuery<JQuery.Node>>>): this;\\n    /**\\n     * Insert content, specified by the parameter, after each element in the set of matched elements.\\n     * @param function_functionｰhtml _&#x40;param_ `function_functionｰhtml`\\n     * <br>\\n     * * `function` — A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert\\n     *                after each element in the set of matched elements. Receives the index position of the element in the\\n     *                set as an argument. Within the function, `this` refers to the current element in the set. <br>\\n     * * `functionｰhtml` — A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert\\n     *                     after each element in the set of matched elements. Receives the index position of the element in the\\n     *                     set and the old HTML value of the element as arguments. Within the function, `this` refers to the\\n     *                     current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/after/ }\\\\`\\n     * @since 1.4\\n     * @since 1.10\\n     */\\n    after(function_functionｰhtml: (this: TElement, index: number, html: string) => JQuery.htmlString | JQuery.TypeOrArray<JQuery.Node | JQuery<JQuery.Node>>): this;\\n    /**\\n     * Register a handler to be called when Ajax requests complete. This is an AjaxEvent.\\n     * @param handler The function to be invoked.\\n     * @see \\\\`{@link https://api.jquery.com/ajaxComplete/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Show a message when an Ajax request completes.\\n```javascript\\n$( document ).ajaxComplete(function( event, request, settings ) {\\n  $( \\\"#msg\\\" ).append( \\\"<li>Request Complete.</li>\\\" );\\n});\\n```\\n     */\\n    ajaxComplete(handler: (this: Document,\\n                           event: JQuery.TriggeredEvent<Document, undefined, Document, Document>,\\n                           jqXHR: JQuery.jqXHR,\\n                           ajaxOptions: JQuery.AjaxSettings) => void | false): this;\\n    /**\\n     * Register a handler to be called when Ajax requests complete with an error. This is an Ajax Event.\\n     * @param handler The function to be invoked.\\n     * @see \\\\`{@link https://api.jquery.com/ajaxError/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Show a message when an Ajax request fails.\\n```javascript\\n$( document ).ajaxError(function( event, request, settings ) {\\n  $( \\\"#msg\\\" ).append( \\\"<li>Error requesting page \\\" + settings.url + \\\"</li>\\\" );\\n});\\n```\\n     */\\n    ajaxError(handler: (this: Document,\\n                        event: JQuery.TriggeredEvent<Document, undefined, Document, Document>,\\n                        jqXHR: JQuery.jqXHR,\\n                        ajaxSettings: JQuery.AjaxSettings,\\n                        thrownError: string) => void | false): this;\\n    /**\\n     * Attach a function to be executed before an Ajax request is sent. This is an Ajax Event.\\n     * @param handler The function to be invoked.\\n     * @see \\\\`{@link https://api.jquery.com/ajaxSend/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Show a message before an Ajax request is sent.\\n```javascript\\n$( document ).ajaxSend(function( event, request, settings ) {\\n  $( \\\"#msg\\\" ).append( \\\"<li>Starting request at \\\" + settings.url + \\\"</li>\\\" );\\n});\\n```\\n     */\\n    ajaxSend(handler: (this: Document,\\n                       event: JQuery.TriggeredEvent<Document, undefined, Document, Document>,\\n                       jqXHR: JQuery.jqXHR,\\n                       ajaxOptions: JQuery.AjaxSettings) => void | false): this;\\n    /**\\n     * Register a handler to be called when the first Ajax request begins. This is an Ajax Event.\\n     * @param handler The function to be invoked.\\n     * @see \\\\`{@link https://api.jquery.com/ajaxStart/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Show a loading message whenever an Ajax request starts (and none is already active).\\n```javascript\\n$( document ).ajaxStart(function() {\\n  $( \\\"#loading\\\" ).show();\\n});\\n```\\n     */\\n    ajaxStart(handler: (this: Document) => void | false): this;\\n    /**\\n     * Register a handler to be called when all Ajax requests have completed. This is an Ajax Event.\\n     * @param handler The function to be invoked.\\n     * @see \\\\`{@link https://api.jquery.com/ajaxStop/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Hide a loading message after all the Ajax requests have stopped.\\n```javascript\\n$( document ).ajaxStop(function() {\\n  $( \\\"#loading\\\" ).hide();\\n});\\n```\\n     */\\n    ajaxStop(handler: (this: Document) => void | false): this;\\n    /**\\n     * Attach a function to be executed whenever an Ajax request completes successfully. This is an Ajax Event.\\n     * @param handler The function to be invoked.\\n     * @see \\\\`{@link https://api.jquery.com/ajaxSuccess/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Show a message when an Ajax request completes successfully.\\n```javascript\\n$( document ).ajaxSuccess(function( event, request, settings ) {\\n  $( \\\"#msg\\\" ).append( \\\"<li>Successful Request!</li>\\\" );\\n});\\n```\\n     */\\n    ajaxSuccess(handler: (this: Document,\\n                          event: JQuery.TriggeredEvent<Document, undefined, Document, Document>,\\n                          jqXHR: JQuery.jqXHR,\\n                          ajaxOptions: JQuery.AjaxSettings,\\n                          data: JQuery.PlainObject) => void | false): this;\\n    /**\\n     * Perform a custom animation of a set of CSS properties.\\n     * @param properties An object of CSS properties and values that the animation will move toward.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/animate/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````An example of using an &#39;easing&#39; function to provide a different style of animation. This will only work if you have a plugin that provides this easing function.  Note, this code will do nothing unless the paragraph element is hidden.\\n```javascript\\n$( \\\"p\\\" ).animate({\\n  opacity: \\\"show\\\"\\n}, \\\"slow\\\", \\\"easein\\\" );\\n```\\n     * @example ​ ````Animate all paragraphs and execute a callback function when the animation is complete.  The first argument is an object of CSS properties, the second specifies that the animation should take 1000 milliseconds to complete, the third states the easing type, and the fourth argument is an anonymous callback function.\\n```javascript\\n$( \\\"p\\\" ).animate({\\n  height: 200,\\n  width: 400,\\n  opacity: 0.5\\n}, 1000, \\\"linear\\\", function() {\\n  alert( \\\"all done\\\" );\\n});\\n```\\n     */\\n    animate(properties: JQuery.PlainObject,\\n            duration: JQuery.Duration,\\n            easing: string,\\n            complete?: (this: TElement) => void): this;\\n    /**\\n     * Perform a custom animation of a set of CSS properties.\\n     * @param properties An object of CSS properties and values that the animation will move toward.\\n     * @param duration_easing _&#x40;param_ `duration_easing`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/animate/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Click the button to animate the div with a number of different properties.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>animate demo</title>\\n  <style>\\n  div {\\n    background-color: #bca;\\n    width: 100px;\\n    border: 1px solid green;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"go\\\">&raquo; Run</button>\\n<div id=\\\"block\\\">Hello!</div>\\n​\\n<script>\\n// Using multiple unit types within one animation.\\n​\\n$( \\\"#go\\\" ).click(function() {\\n  $( \\\"#block\\\" ).animate({\\n    width: \\\"70%\\\",\\n    opacity: 0.4,\\n    marginLeft: \\\"0.6in\\\",\\n    fontSize: \\\"3em\\\",\\n    borderWidth: \\\"10px\\\"\\n  }, 1500 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Animates a div&#39;s left property with a relative value. Click several times on the buttons to see the relative animations queued up.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>animate demo</title>\\n  <style>\\n  div {\\n    position: absolute;\\n    background-color: #abc;\\n    left: 50px;\\n    width: 90px;\\n    height: 90px;\\n    margin: 5px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"left\\\">&laquo;</button>\\n<button id=\\\"right\\\">&raquo;</button>\\n<div class=\\\"block\\\"></div>\\n​\\n<script>\\n$( \\\"#right\\\" ).click(function() {\\n  $( \\\".block\\\" ).animate({ \\\"left\\\": \\\"+=50px\\\" }, \\\"slow\\\" );\\n});\\n​\\n$( \\\"#left\\\" ).click(function(){\\n  $( \\\".block\\\" ).animate({ \\\"left\\\": \\\"-=50px\\\" }, \\\"slow\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Animate all paragraphs to toggle both height and opacity, completing the animation within 600 milliseconds.\\n```javascript\\n$( \\\"p\\\" ).animate({\\n  height: \\\"toggle\\\",\\n  opacity: \\\"toggle\\\"\\n}, \\\"slow\\\" );\\n```\\n     * @example ​ ````Animate all paragraphs to a left style of 50 and opacity of 1 (opaque, visible), completing the animation within 500 milliseconds.\\n```javascript\\n$( \\\"p\\\" ).animate({\\n  left: 50,\\n  opacity: 1\\n}, 500 );\\n```\\n     */\\n    animate(properties: JQuery.PlainObject,\\n            duration_easing: JQuery.Duration | string,\\n            complete?: (this: TElement) => void): this;\\n    /**\\n     * Perform a custom animation of a set of CSS properties.\\n     * @param properties An object of CSS properties and values that the animation will move toward.\\n     * @param options A map of additional options to pass to the method.\\n     * @see \\\\`{@link https://api.jquery.com/animate/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````The first button shows how an unqueued animation works.  It expands the div out to 90% width while the font-size is increasing. Once the font-size change is complete, the border animation will begin.\\n\\nThe second button starts a traditional chained animation, where each animation will start once the previous animation on the element has completed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>animate demo</title>\\n  <style>\\n  div {\\n    background-color: #bca;\\n    width: 200px;\\n    height: 1.1em;\\n    text-align: center;\\n    border: 2px solid green;\\n    margin: 3px;\\n    font-size: 14px;\\n  }\\n  button {\\n    font-size: 14px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"go1\\\">&raquo; Animate Block1</button>\\n<button id=\\\"go2\\\">&raquo; Animate Block2</button>\\n<button id=\\\"go3\\\">&raquo; Animate Both</button>\\n<button id=\\\"go4\\\">&raquo; Reset</button>\\n<div id=\\\"block1\\\">Block1</div>\\n<div id=\\\"block2\\\">Block2</div>\\n​\\n<script>\\n$( \\\"#go1\\\" ).click(function() {\\n  $( \\\"#block1\\\" )\\n    .animate({\\n      width: \\\"90%\\\"\\n    }, {\\n      queue: false,\\n      duration: 3000\\n    })\\n    .animate({ fontSize: \\\"24px\\\" }, 1500 )\\n    .animate({ borderRightWidth: \\\"15px\\\" }, 1500 );\\n});\\n​\\n$( \\\"#go2\\\" ).click(function() {\\n  $( \\\"#block2\\\" )\\n    .animate({ width: \\\"90%\\\" }, 1000 )\\n    .animate({ fontSize: \\\"24px\\\" }, 1000 )\\n    .animate({ borderLeftWidth: \\\"15px\\\" }, 1000 );\\n});\\n​\\n$( \\\"#go3\\\" ).click(function() {\\n  $( \\\"#go1\\\" ).add( \\\"#go2\\\" ).click();\\n});\\n​\\n$( \\\"#go4\\\" ).click(function() {\\n  $( \\\"div\\\" ).css({\\n    width: \\\"\\\",\\n    fontSize: \\\"\\\",\\n    borderWidth: \\\"\\\"\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Animates the first div&#39;s left property and synchronizes the remaining divs, using the step function to set their left properties at each stage of the animation.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>animate demo</title>\\n  <style>\\n  div {\\n    position: relative;\\n    background-color: #abc;\\n    width: 40px;\\n    height: 40px;\\n    float: left;\\n    margin: 5px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button id=\\\"go\\\">Run »</button></p>\\n<div class=\\\"block\\\"></div>\\n<div class=\\\"block\\\"></div>\\n<div class=\\\"block\\\"></div>\\n<div class=\\\"block\\\"></div>\\n<div class=\\\"block\\\"></div>\\n<div class=\\\"block\\\"></div>\\n​\\n<script>\\n$( \\\"#go\\\" ).click(function() {\\n  $( \\\".block:first\\\" ).animate({\\n    left: 100\\n  }, {\\n    duration: 1000,\\n    step: function( now, fx ){\\n      $( \\\".block:gt(0)\\\" ).css( \\\"left\\\", now );\\n    }\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Animate the left and opacity style properties of all paragraphs; run the animation outside the queue, so that it will automatically start without waiting for its turn.\\n```javascript\\n$( \\\"p\\\" ).animate({\\n  left: \\\"50px\\\",\\n  opacity: 1\\n}, {\\n  duration: 500,\\n  queue: false\\n});\\n```\\n     * @example ​ ````Animates all paragraphs to toggle both height and opacity, completing the animation within 600 milliseconds.\\n```javascript\\n$( \\\"p\\\" ).animate({\\n  height: \\\"toggle\\\",\\n  opacity: \\\"toggle\\\"\\n}, {\\n  duration: \\\"slow\\\"\\n});\\n```\\n     * @example ​ ````Use an easing function to provide a different style of animation. This will only work if you have a plugin that provides this easing function.\\n```javascript\\n$( \\\"p\\\" ).animate({\\n  opacity: \\\"show\\\"\\n}, {\\n  duration: \\\"slow\\\",\\n  easing: \\\"easein\\\"\\n});\\n```\\n     */\\n    animate(properties: JQuery.PlainObject,\\n            options: JQuery.EffectsOptions<TElement>): this;\\n    /**\\n     * Perform a custom animation of a set of CSS properties.\\n     * @param properties An object of CSS properties and values that the animation will move toward.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/animate/ }\\\\`\\n     * @since 1.0\\n     */\\n    animate(properties: JQuery.PlainObject,\\n            complete?: (this: TElement) => void): this;\\n    /**\\n     * Insert content, specified by the parameter, to the end of each element in the set of matched elements.\\n     * @param contents One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or\\n     *                 jQuery objects to insert at the end of each element in the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/append/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Appends some HTML to all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>append demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>I would like to say: </p>\\n​\\n<script>\\n$( \\\"p\\\" ).append( \\\"<strong>Hello</strong>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Appends an Element to all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>append demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>I would like to say: </p>\\n​\\n<script>\\n$( \\\"p\\\" ).append( document.createTextNode( \\\"Hello\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Appends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>append demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<strong>Hello world!!!</strong>\\n<p>I would like to say: </p>\\n​\\n<script>\\n$( \\\"p\\\" ).append( $( \\\"strong\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    append(...contents: Array<JQuery.htmlString | JQuery.TypeOrArray<JQuery.Node | JQuery<JQuery.Node>>>): this;\\n    /**\\n     * Insert content, specified by the parameter, to the end of each element in the set of matched elements.\\n     * @param funсtion A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert at\\n     *                 the end of each element in the set of matched elements. Receives the index position of the element\\n     *                 in the set and the old HTML value of the element as arguments. Within the function, `this` refers to\\n     *                 the current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/append/ }\\\\`\\n     * @since 1.4\\n     */\\n    append(funсtion: (this: TElement, index: number, html: string) => JQuery.htmlString | JQuery.TypeOrArray<JQuery.Node | JQuery<JQuery.Node>>): this;\\n    /**\\n     * Insert every element in the set of matched elements to the end of the target.\\n     * @param target A selector, element, HTML string, array of elements, or jQuery object; the matched set of elements\\n     *               will be inserted at the end of the element(s) specified by this parameter.\\n     * @see \\\\`{@link https://api.jquery.com/appendTo/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Append all spans to the element with the ID &quot;foo&quot; (Check append() documentation for more examples)\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>appendTo demo</title>\\n  <style>\\n  #foo {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<span>I have nothing more to say... </span>\\n​\\n<div id=\\\"foo\\\">FOO! </div>\\n​\\n<script>\\n$( \\\"span\\\" ).appendTo( \\\"#foo\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    appendTo(target: JQuery.Selector | JQuery.htmlString | JQuery.TypeOrArray<Element | DocumentFragment> | JQuery): this;\\n    /**\\n     * Set one or more attributes for the set of matched elements.\\n     * @param attributeName The name of the attribute to set.\\n     * @param value_function _&#x40;param_ `value_function`\\n     * <br>\\n     * * `value` — A value to set for the attribute. If `null`, the specified attribute will be removed (as in \\\\`{@link removeAttr .removeAttr()}`). <br>\\n     * * `function` — A function returning the value to set. `this` is the current element. Receives the index position of\\n     *                the element in the set and the old attribute value as arguments.\\n     * @see \\\\`{@link https://api.jquery.com/attr/ }\\\\`\\n     * @since 1.0\\n     * @since 1.1\\n     * @example ​ ````Set the id for divs based on the position in the page.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>attr demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  span {\\n    color: red;\\n  }\\n  b {\\n    font-weight: bolder;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>Zero-th <span></span></div>\\n<div>First <span></span></div>\\n<div>Second <span></span></div>\\n​\\n<script>\\n$( \\\"div\\\" )\\n  .attr( \\\"id\\\", function( arr ) {\\n    return \\\"div-id\\\" + arr;\\n  })\\n  .each(function() {\\n    $( \\\"span\\\", this ).html( \\\"(id = '<b>\\\" + this.id + \\\"</b>')\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Set the src attribute from title attribute on the image.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>attr demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<img title=\\\"hat.gif\\\">\\n​\\n<script>\\n$( \\\"img\\\" ).attr( \\\"src\\\", function() {\\n  return \\\"/resources/\\\" + this.title;\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    attr(attributeName: string,\\n         value_function: string | number | null | ((this: TElement, index: number, attr: string) => string | number | void | undefined)): this;\\n    /**\\n     * Set one or more attributes for the set of matched elements.\\n     * @param attributes An object of attribute-value pairs to set.\\n     * @see \\\\`{@link https://api.jquery.com/attr/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Set some attributes for all &lt;img&gt;s in the page.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>attr demo</title>\\n  <style>\\n  img {\\n    padding: 10px;\\n  }\\n  div {\\n    color: red;\\n    font-size: 24px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<img>\\n<img>\\n<img>\\n​\\n<div><b>Attribute of Ajax</b></div>\\n​\\n<script>\\n$( \\\"img\\\" ).attr({\\n  src: \\\"/resources/hat.gif\\\",\\n  title: \\\"jQuery\\\",\\n  alt: \\\"jQuery Logo\\\"\\n});\\n$( \\\"div\\\" ).text( $( \\\"img\\\" ).attr( \\\"alt\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    attr(attributes: JQuery.PlainObject): this;\\n    /**\\n     * Get the value of an attribute for the first element in the set of matched elements.\\n     * @param attributeName The name of the attribute to get.\\n     * @see \\\\`{@link https://api.jquery.com/attr/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Display the checked attribute and property of a checkbox as it changes.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>attr demo</title>\\n  <style>\\n  p {\\n    margin: 20px 0 0;\\n  }\\n  b {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"check1\\\" type=\\\"checkbox\\\" checked=\\\"checked\\\">\\n<label for=\\\"check1\\\">Check me</label>\\n<p></p>\\n​\\n<script>\\n$( \\\"input\\\" )\\n  .change(function() {\\n    var $input = $( this );\\n    $( \\\"p\\\" ).html( \\\".attr( 'checked' ): <b>\\\" + $input.attr( \\\"checked\\\" ) + \\\"</b><br>\\\" +\\n      \\\".prop( 'checked' ): <b>\\\" + $input.prop( \\\"checked\\\" ) + \\\"</b><br>\\\" +\\n      \\\".is( ':checked' ): <b>\\\" + $input.is( \\\":checked\\\" ) + \\\"</b>\\\" );\\n  })\\n  .change();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Find the title attribute of the first &lt;em&gt; in the page.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>attr demo</title>\\n  <style>\\n  em {\\n    color: blue;\\n    font-weight: bold;\\n  }\\n  div {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Once there was a <em title=\\\"huge, gigantic\\\">large</em> dinosaur...</p>\\n​\\nThe title of the emphasis is:<div></div>\\n​\\n<script>\\nvar title = $( \\\"em\\\" ).attr( \\\"title\\\" );\\n$( \\\"div\\\" ).text( title );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    attr(attributeName: string): string | undefined;\\n    /**\\n     * Insert content, specified by the parameter, before each element in the set of matched elements.\\n     * @param contents One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or\\n     *                 jQuery objects to insert before each element in the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/before/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Inserts some HTML before all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>before demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p> is what I said...</p>\\n​\\n<script>\\n$( \\\"p\\\" ).before( \\\"<b>Hello</b>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Inserts a DOM element before all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>before demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p> is what I said...</p>\\n​\\n<script>\\n$( \\\"p\\\" ).before( document.createTextNode( \\\"Hello\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Inserts a jQuery object (similar to an Array of DOM Elements) before all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>before demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p> is what I said...</p><b>Hello</b>\\n​\\n<script>\\n$( \\\"p\\\" ).before( $( \\\"b\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    before(...contents: Array<JQuery.htmlString | JQuery.TypeOrArray<JQuery.Node | JQuery<JQuery.Node>>>): this;\\n    /**\\n     * Insert content, specified by the parameter, before each element in the set of matched elements.\\n     * @param function_functionｰhtml _&#x40;param_ `function_functionｰhtml`\\n     * <br>\\n     * * `function` — A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert\\n     *                before each element in the set of matched elements. Receives the index position of the element in\\n     *                the set as an argument. Within the function, `this` refers to the current element in the set. <br>\\n     * * `functionｰhtml` — A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert\\n     *                     before each element in the set of matched elements. Receives the index position of the element in\\n     *                     the set and the old HTML value of the element as arguments. Within the function, `this` refers to the\\n     *                     current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/before/ }\\\\`\\n     * @since 1.4\\n     * @since 1.10\\n     */\\n    before(function_functionｰhtml: (this: TElement, index: number, html: string) => JQuery.htmlString | JQuery.TypeOrArray<JQuery.Node | JQuery<JQuery.Node>>): this;\\n    // [bind() overloads] https://github.com/jquery/api.jquery.com/issues/1048\\n    /**\\n     * Attach a handler to an event for the elements.\\n     * @param eventType A string containing one or more DOM event types, such as \\\"click\\\" or \\\"submit,\\\" or custom event names.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/bind/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link on }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     */\\n    bind<TType extends string,\\n         TData>(\\n        eventType: TType,\\n        eventData: TData,\\n        handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, TType>\\n    ): this;\\n    /**\\n     * Attach a handler to an event for the elements.\\n     * @param eventType A string containing one or more DOM event types, such as \\\"click\\\" or \\\"submit,\\\" or custom event names.\\n     * @param handler_preventBubble _&#x40;param_ `handler_preventBubble`\\n     * <br>\\n     * * `handler` — A function to execute each time the event is triggered. <br>\\n     * * `preventBubble` — Setting the third argument to false will attach a function that prevents the default action from\\n     *                     occurring and stops the event from bubbling. The default is `true`.\\n     * @see \\\\`{@link https://api.jquery.com/bind/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link on }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     * @example ​ ````Handle click and double-click for the paragraph.  Note: the coordinates are window relative, so in this case relative to the demo iframe.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>bind demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n    font-weight: bold;\\n    cursor: pointer;\\n    padding: 5px;\\n  }\\n  p.over {\\n     background: #ccc;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Click or double click here.</p>\\n<span></span>\\n​\\n<script>\\n$( \\\"p\\\" ).bind( \\\"click\\\", function( event ) {\\n  var str = \\\"( \\\" + event.pageX + \\\", \\\" + event.pageY + \\\" )\\\";\\n  $( \\\"span\\\" ).text( \\\"Click happened! \\\" + str );\\n});\\n$( \\\"p\\\" ).bind( \\\"dblclick\\\", function() {\\n  $( \\\"span\\\" ).text( \\\"Double-click happened in \\\" + this.nodeName );\\n});\\n$( \\\"p\\\" ).bind( \\\"mouseenter mouseleave\\\", function( event ) {\\n  $( this ).toggleClass( \\\"over\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To display each paragraph&#39;s text in an alert box whenever it is clicked:\\n```javascript\\n$( \\\"p\\\" ).bind( \\\"click\\\", function() {\\n  alert( $( this ).text() );\\n});\\n```\\n     * @example ​ ````Cancel a default action and prevent it from bubbling up by returning false:\\n```javascript\\n$( \\\"form\\\" ).bind( \\\"submit\\\", function() {\\n  return false;\\n})\\n```\\n     * @example ​ ````Cancel only the default action by using the .preventDefault() method.\\n```javascript\\n$( \\\"form\\\" ).bind( \\\"submit\\\", function( event ) {\\n  event.preventDefault();\\n});\\n```\\n     * @example ​ ````Stop an event from bubbling without preventing the default action by using the .stopPropagation() method.\\n```javascript\\n$( \\\"form\\\" ).bind( \\\"submit\\\", function( event ) {\\n  event.stopPropagation();\\n});\\n```\\n     * @example ​ ````Bind custom events.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>bind demo</title>\\n  <style>\\n  p {\\n    color: red;\\n  }\\n  span {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Has an attached custom event.</p>\\n<button>Trigger custom event</button>\\n<span style=\\\"display: none;\\\"></span>\\n​\\n<script>\\n$( \\\"p\\\" ).bind( \\\"myCustomEvent\\\", function( e, myName, myValue ) {\\n  $( this ).text( myName + \\\", hi there!\\\" );\\n  $( \\\"span\\\" )\\n    .stop()\\n    .css( \\\"opacity\\\", 1 )\\n    .text( \\\"myName = \\\" + myName )\\n    .fadeIn( 30 )\\n    .fadeOut( 1000 );\\n  });\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).trigger( \\\"myCustomEvent\\\", [ \\\"John\\\" ] );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    bind<TType extends string>(\\n        eventType: TType,\\n        handler_preventBubble: JQuery.TypeEventHandler<TElement, undefined, TElement, TElement, TType> |\\n                               false |\\n                               null |\\n                               undefined\\n    ): this;\\n    /**\\n     * Attach a handler to an event for the elements.\\n     * @param events An object containing one or more DOM event types and functions to execute for them.\\n     * @see \\\\`{@link https://api.jquery.com/bind/ }\\\\`\\n     * @since 1.4\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link on }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     * @example ​ ````Bind multiple events simultaneously.\\n```javascript\\n$( \\\"div.test\\\" ).bind({\\n  click: function() {\\n    $( this ).addClass( \\\"active\\\" );\\n  },\\n  mouseenter: function() {\\n    $( this ).addClass( \\\"inside\\\" );\\n  },\\n  mouseleave: function() {\\n    $( this ).removeClass( \\\"inside\\\" );\\n  }\\n});\\n```\\n     */\\n    bind(events: JQuery.TypeEventHandlers<TElement, undefined, TElement, TElement>): this;\\n    /**\\n     * Bind an event handler to the \\\"blur\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/blur/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    blur<TData>(eventData: TData,\\n                handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'blur'>): this;\\n    /**\\n     * Bind an event handler to the \\\"blur\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/blur/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````To trigger the blur event on all paragraphs:\\n```javascript\\n$( \\\"p\\\" ).blur();\\n```\\n     */\\n    blur(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'blur'> |\\n                   false): this;\\n    /**\\n     * Bind an event handler to the \\\"change\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/change/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    change<TData>(eventData: TData,\\n                  handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'change'>): this;\\n    /**\\n     * Bind an event handler to the \\\"change\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/change/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Attaches a change event to the select that gets the text for each selected option and writes them in the div.  It then triggers the event for the initial text draw.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>change demo</title>\\n  <style>\\n  div {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<select name=\\\"sweets\\\" multiple=\\\"multiple\\\">\\n  <option>Chocolate</option>\\n  <option selected=\\\"selected\\\">Candy</option>\\n  <option>Taffy</option>\\n  <option selected=\\\"selected\\\">Caramel</option>\\n  <option>Fudge</option>\\n  <option>Cookie</option>\\n</select>\\n<div></div>\\n​\\n<script>\\n$( \\\"select\\\" )\\n  .change(function () {\\n    var str = \\\"\\\";\\n    $( \\\"select option:selected\\\" ).each(function() {\\n      str += $( this ).text() + \\\" \\\";\\n    });\\n    $( \\\"div\\\" ).text( str );\\n  })\\n  .change();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To add a validity test to all text input elements:\\n```javascript\\n$( \\\"input[type='text']\\\" ).change(function() {\\n  // Check input( $( this ).val() ) for validity here\\n});\\n```\\n     */\\n    change(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'change'> |\\n                     false): this;\\n    /**\\n     * Get the children of each element in the set of matched elements, optionally filtered by a selector.\\n     * @param selector A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/children/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Find all children of the clicked element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>children demo</title>\\n  <style>\\n  body {\\n    font-size: 16px;\\n    font-weight: bolder;\\n  }\\n  div {\\n    width: 130px;\\n    height: 82px;\\n    margin: 10px;\\n    float: left;\\n    border: 1px solid blue;\\n    padding: 4px;\\n  }\\n  #container {\\n    width: auto;\\n    height: 105px;\\n    margin: 0;\\n    float: none;\\n    border: none;\\n  }\\n  .hilite {\\n    border-color: red;\\n  }\\n  #results {\\n    display: block;\\n    color: red;\\n  }\\n  p, span, em, a, b, button {\\n    border: 1px solid transparent;\\n  }\\n  p {\\n    margin: 10px;\\n  }\\n  span {\\n    color: blue;\\n  }\\n  input {\\n    width: 100px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"container\\\">\\n  <div>\\n    <p>This <span>is the <em>way</em> we</span>\\n      write <em>the</em> demo,</p>\\n  </div>\\n​\\n  <div>\\n    <a href=\\\"#\\\"><b>w</b>rit<b>e</b></a> the <span>demo,</span> <button>write\\n    the</button> demo,\\n  </div>\\n​\\n  <div>\\n    This <span>the way we <em>write</em> the <em>demo</em> so</span>\\n    <input type=\\\"text\\\" value=\\\"early\\\"> in\\n  </div>\\n​\\n  <p>\\n    <span>t</span>he <span>m</span>orning.\\n    <span id=\\\"results\\\">Found <span>0</span> children in <span>TAG</span>.</span>\\n  </p>\\n</div>\\n​\\n<script>\\n$( \\\"#container\\\" ).click(function ( event ) {\\n  $( \\\"*\\\" ).removeClass( \\\"hilite\\\" );\\n  var kids = $( event.target ).children();\\n  var len = kids.addClass( \\\"hilite\\\" ).length;\\n​\\n  $( \\\"#results span:first\\\" ).text( len );\\n  $( \\\"#results span:last\\\" ).text( event.target.tagName );\\n​\\n  event.preventDefault();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Find all children of each div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>children demo</title>\\n  <style>\\n  body {\\n    font-size: 16px;\\n    font-weight: bolder;\\n  }\\n  span {\\n    color: blue;\\n  }\\n  p {\\n    margin: 5px 0;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello (this is a paragraph)</p>\\n​\\n<div><span>Hello Again (this span is a child of the a div)</span></div>\\n<p>And <span>Again</span> (in another paragraph)</p>\\n​\\n<div>And One Last <span>Time</span> (most text directly in a div)</div>\\n​\\n<script>\\n$( \\\"div\\\" ).children().css( \\\"border-bottom\\\", \\\"3px double red\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Find all children with a class &quot;selected&quot; of each div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>children demo</title>\\n  <style>\\n  body {\\n    font-size: 16px;\\n    font-weight: bolder;\\n  }\\n  p {\\n    margin: 5px 0;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>\\n  <span>Hello</span>\\n  <p class=\\\"selected\\\">Hello Again</p>\\n  <div class=\\\"selected\\\">And Again</div>\\n  <p>And One Last Time</p>\\n</div>\\n​\\n<script>\\n$( \\\"div\\\" ).children( \\\".selected\\\" ).css( \\\"color\\\", \\\"blue\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    children(selector?: JQuery.Selector): this;\\n    /**\\n     * Remove from the queue all items that have not yet been run.\\n     * @param queueName A string containing the name of the queue. Defaults to fx, the standard effects queue.\\n     * @see \\\\`{@link https://api.jquery.com/clearQueue/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Empty the queue.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>clearQueue demo</title>\\n  <style>\\n  div {\\n    margin: 3px;\\n    width: 40px;\\n    height: 40px;\\n    position: absolute;\\n    left: 0px;\\n    top: 30px;\\n    background: green;\\n    display: none;\\n  }\\n  div.newcolor {\\n    background: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"start\\\">Start</button>\\n<button id=\\\"stop\\\">Stop</button>\\n<div></div>\\n​\\n<script>\\n$( \\\"#start\\\" ).click(function() {\\n  var myDiv = $( \\\"div\\\" );\\n  myDiv.show( \\\"slow\\\" );\\n  myDiv.animate({\\n    left:\\\"+=200\\\"\\n  }, 5000 );\\n​\\n  myDiv.queue(function() {\\n    var that = $( this );\\n    that.addClass( \\\"newcolor\\\" );\\n    that.dequeue();\\n  });\\n​\\n  myDiv.animate({\\n    left:\\\"-=200\\\"\\n  }, 1500 );\\n  myDiv.queue(function() {\\n    var that = $( this );\\n    that.removeClass( \\\"newcolor\\\" );\\n    that.dequeue();\\n  });\\n  myDiv.slideUp();\\n});\\n​\\n$( \\\"#stop\\\" ).click(function() {\\n  var myDiv = $( \\\"div\\\" );\\n  myDiv.clearQueue();\\n  myDiv.stop();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    clearQueue(queueName?: string): this;\\n    /**\\n     * Bind an event handler to the \\\"click\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/click/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    click<TData>(eventData: TData,\\n                 handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'click'>): this;\\n    /**\\n     * Bind an event handler to the \\\"click\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/click/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Hide paragraphs on a page when they are clicked:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>click demo</title>\\n  <style>\\n  p {\\n    color: red;\\n    margin: 5px;\\n    cursor: pointer;\\n  }\\n  p:hover {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>First Paragraph</p>\\n<p>Second Paragraph</p>\\n<p>Yet one more Paragraph</p>\\n​\\n<script>\\n$( \\\"p\\\" ).click(function() {\\n  $( this ).slideUp();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Trigger the click event on all of the paragraphs on the page:\\n```javascript\\n$( \\\"p\\\" ).click();\\n```\\n     */\\n    click(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'click'> |\\n                    false): this;\\n    /**\\n     * Create a deep copy of the set of matched elements.\\n     * @param withDataAndEvents A Boolean indicating whether event handlers and data should be copied along with the elements. The\\n     *                          default value is false. *In jQuery 1.5.0 the default value was incorrectly true; it was changed back\\n     *                          to false in 1.5.1 and up.\\n     * @param deepWithDataAndEvents A Boolean indicating whether event handlers and data for all children of the cloned element should\\n     *                              be copied. By default its value matches the first argument's value (which defaults to false).\\n     * @see \\\\`{@link https://api.jquery.com/clone/ }\\\\`\\n     * @since 1.0\\n     * @since 1.5\\n     * @example ​ ````Clones all b elements (and selects the clones) and prepends them to all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>clone demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<b>Hello</b><p>, how are you?</p>\\n​\\n<script>\\n$( \\\"b\\\" ).clone().prependTo( \\\"p\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    clone(withDataAndEvents?: boolean, deepWithDataAndEvents?: boolean): this;\\n    /**\\n     * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\\n     * @param selector A string containing a selector expression to match elements against.\\n     * @param context A DOM element within which a matching element may be found.\\n     * @see \\\\`{@link https://api.jquery.com/closest/ }\\\\`\\n     * @since 1.4\\n     */\\n    closest(selector: JQuery.Selector, context: Element): this;\\n    /**\\n     * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\\n     * @param selector_selection_element _&#x40;param_ `selector_selection_element`\\n     * <br>\\n     * * `selector` — A string containing a selector expression to match elements against. <br>\\n     * * `selection` — A jQuery object to match elements against. <br>\\n     * * `element` — An element to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/closest/ }\\\\`\\n     * @since 1.3\\n     * @since 1.6\\n     * @example ​ ````Show how event delegation can be done with closest. The closest list element toggles a yellow background when it or its descendent is clicked.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>closest demo</title>\\n  <style>\\n  li {\\n    margin: 3px;\\n    padding: 3px;\\n    background: #EEEEEE;\\n  }\\n  li.highlight {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li><b>Click me!</b></li>\\n  <li>You can also <b>Click me!</b></li>\\n</ul>\\n​\\n<script>\\n$( document ).on( \\\"click\\\", function( event ) {\\n  $( event.target ).closest( \\\"li\\\" ).toggleClass( \\\"highlight\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Pass a jQuery object to closest. The closest list element toggles a yellow background when it or its descendent is clicked.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>closest demo</title>\\n  <style>\\n  li {\\n    margin: 3px;\\n    padding: 3px;\\n    background: #EEEEEE;\\n  }\\n  li.highlight {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li><b>Click me!</b></li>\\n  <li>You can also <b>Click me!</b></li>\\n</ul>\\n​\\n<script>\\nvar listElements = $( \\\"li\\\" ).css( \\\"color\\\", \\\"blue\\\" );\\n$( document ).on( \\\"click\\\", function( event ) {\\n  $( event.target ).closest( listElements ).toggleClass( \\\"highlight\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    closest(selector_selection_element: JQuery.Selector | Element | JQuery): this;\\n    /**\\n     * Get the children of each element in the set of matched elements, including text and comment nodes.\\n     * @see \\\\`{@link https://api.jquery.com/contents/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Find all the text nodes inside a paragraph and wrap them with a bold tag.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>contents demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello <a href=\\\"https://johnresig.com/\\\">John</a>, how are you doing?</p>\\n​\\n<script>\\n$( \\\"p\\\" )\\n  .contents()\\n  .filter(function(){\\n    return this.nodeType !== 1;\\n  })\\n  .wrap( \\\"<b></b>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the background color of links inside of an iframe.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>contents demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<iframe src=\\\"https://api.jquery.com/\\\" width=\\\"80%\\\" height=\\\"600\\\" id=\\\"frameDemo\\\"></iframe>\\n​\\n<script>\\n$( \\\"#frameDemo\\\" ).contents().find( \\\"a\\\" ).css( \\\"background-color\\\", \\\"#BADA55\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    contents(): JQuery<TElement | Text | Comment | Document>;\\n    /**\\n     * Bind an event handler to the \\\"contextmenu\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/contextmenu/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    contextmenu<TData>(eventData: TData,\\n                       handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'contextmenu'>): this;\\n    /**\\n     * Bind an event handler to the \\\"contextmenu\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/contextmenu/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````To show a &quot;Hello World!&quot; alert box when the contextmenu event is triggered on a paragraph on the page:\\n```javascript\\n$( \\\"p\\\" ).contextmenu(function() {\\n  alert( \\\"Hello World!\\\" );\\n});\\n```\\n     * @example ​ ````Right click to toggle background color.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>contextmenu demo</title>\\n  <style>\\n  div {\\n    background: blue;\\n    color: white;\\n    height: 100px;\\n    width: 150px;\\n }\\n  div.contextmenu {\\n    background: yellow;\\n    color: black;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<span>Right click the block</span>\\n​\\n<script>\\nvar div = $( \\\"div:first\\\" );\\ndiv.contextmenu(function() {\\n  div.toggleClass( \\\"contextmenu\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    contextmenu(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'contextmenu'> |\\n                          false): this;\\n    /**\\n     * Set one or more CSS properties for the set of matched elements.\\n     * @param propertyName A CSS property name.\\n     * @param value_function _&#x40;param_ `value_function`\\n     * <br>\\n     * * `value` — A value to set for the property. <br>\\n     * * `function` — A function returning the value to set. `this` is the current element. Receives the index position of\\n     *                the element in the set and the old value as arguments.\\n     * @see \\\\`{@link https://api.jquery.com/css/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @example ​ ````Change the color of any paragraph to red on mouseover event.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>css demo</title>\\n  <style>\\n  p {\\n    color: blue;\\n    width: 200px;\\n    font-size: 14px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n  <p>Just roll the mouse over me.</p>\\n​\\n  <p>Or me to see a color change.</p>\\n​\\n<script>\\n$( \\\"p\\\" ).on( \\\"mouseover\\\", function() {\\n  $( this ).css( \\\"color\\\", \\\"red\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Increase the width of #box by 200 pixels the first time it is clicked.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>css demo</title>\\n  <style>\\n  #box {\\n    background: black;\\n    color: snow;\\n    width: 100px;\\n    padding: 10px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"box\\\">Click me to grow</div>\\n​\\n<script>\\n$( \\\"#box\\\" ).one( \\\"click\\\", function() {\\n  $( this ).css( \\\"width\\\", \\\"+=200\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Highlight a clicked word in the paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>css demo</title>\\n  <style>\\n  p {\\n    color: blue;\\n    font-weight: bold;\\n    cursor: pointer;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  Once upon a time there was a man\\n  who lived in a pizza parlor. This\\n  man just loved pizza and ate it all\\n  the time.  He went on to be the\\n  happiest man in the world.  The end.\\n</p>\\n​\\n<script>\\nvar words = $( \\\"p\\\" ).first().text().split( /\\\\s+/ );\\nvar text = words.join( \\\"</span> <span>\\\" );\\n$( \\\"p\\\" ).first().html( \\\"<span>\\\" + text + \\\"</span>\\\" );\\n$( \\\"span\\\" ).on( \\\"click\\\", function() {\\n  $( this ).css( \\\"background-color\\\", \\\"yellow\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    css(propertyName: string,\\n        value_function: string | number | ((this: TElement, index: number, value: string) => string | number | void | undefined)): this;\\n    /**\\n     * Set one or more CSS properties for the set of matched elements.\\n     * @param properties An object of property-value pairs to set.\\n     * @see \\\\`{@link https://api.jquery.com/css/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Change the font weight and background color on mouseenter and mouseleave.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>css demo</title>\\n  <style>\\n  p {\\n    color: green;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Move the mouse over a paragraph.</p>\\n<p>Like this one or the one above.</p>\\n​\\n<script>\\n$( \\\"p\\\" )\\n  .on( \\\"mouseenter\\\", function() {\\n    $( this ).css({\\n      \\\"background-color\\\": \\\"yellow\\\",\\n      \\\"font-weight\\\": \\\"bolder\\\"\\n    });\\n  })\\n  .on( \\\"mouseleave\\\", function() {\\n    var styles = {\\n      backgroundColor : \\\"#ddd\\\",\\n      fontWeight: \\\"\\\"\\n    };\\n    $( this ).css( styles );\\n  });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Increase the size of a div when you click it.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>css demo</title>\\n  <style>\\n  div {\\n    width: 20px;\\n    height: 15px;\\n    background-color: #f33;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>click</div>\\n<div>click</div>\\n​\\n<script>\\n$( \\\"div\\\" ).on( \\\"click\\\", function() {\\n  $( this ).css({\\n    width: function( index, value ) {\\n      return parseFloat( value ) * 1.2;\\n    },\\n    height: function( index, value ) {\\n      return parseFloat( value ) * 1.2;\\n    }\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    css(properties: JQuery.PlainObject<string | number | ((this: TElement, index: number, value: string) => string | number | void | undefined)>): this;\\n    /**\\n     * Get the computed style properties for the first element in the set of matched elements.\\n     * @param propertyName A CSS property.\\n     * @see \\\\`{@link https://api.jquery.com/css/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Get the background color of a clicked div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>css demo</title>\\n  <style>\\n  div {\\n    width: 60px;\\n    height: 60px;\\n    margin: 5px;\\n    float: left;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<span id=\\\"result\\\">&nbsp;</span>\\n<div style=\\\"background-color:blue;\\\"></div>\\n<div style=\\\"background-color:rgb(15,99,30);\\\"></div>\\n<div style=\\\"background-color:#123456;\\\"></div>\\n<div style=\\\"background-color:#f11;\\\"></div>\\n​\\n<script>\\n$( \\\"div\\\" ).click(function() {\\n  var color = $( this ).css( \\\"background-color\\\" );\\n  $( \\\"#result\\\" ).html( \\\"That div is <span style='color:\\\" +\\n    color + \\\";'>\\\" + color + \\\"</span>.\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    css(propertyName: string): string;\\n    /**\\n     * Get the computed style properties for the first element in the set of matched elements.\\n     * @param propertyNames An array of one or more CSS properties.\\n     * @see \\\\`{@link https://api.jquery.com/css/ }\\\\`\\n     * @since 1.9\\n     * @example ​ ````Get the width, height, text color, and background color of a clicked div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>css demo</title>\\n  <style>\\n  div {\\n    height: 50px;\\n    margin: 5px;\\n    padding: 5px;\\n    float: left;\\n  }\\n  #box1 {\\n    width: 50px;\\n    color: yellow;\\n    background-color: blue;\\n  }\\n  #box2 {\\n    width: 80px;\\n    color: rgb(255, 255, 255);\\n    background-color: rgb(15, 99, 30);\\n  }\\n  #box3 {\\n    width: 40px;\\n    color: #fcc;\\n    background-color: #123456;\\n  }\\n  #box4 {\\n    width: 70px;\\n    background-color: #f11;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p id=\\\"result\\\">&nbsp;</p>\\n<div id=\\\"box1\\\">1</div>\\n<div id=\\\"box2\\\">2</div>\\n<div id=\\\"box3\\\">3</div>\\n<div id=\\\"box4\\\">4</div>\\n​\\n<script>\\n$( \\\"div\\\" ).click(function() {\\n  var html = [ \\\"The clicked div has the following styles:\\\" ];\\n​\\n  var styleProps = $( this ).css([\\n    \\\"width\\\", \\\"height\\\", \\\"color\\\", \\\"background-color\\\"\\n  ]);\\n  $.each( styleProps, function( prop, value ) {\\n    html.push( prop + \\\": \\\" + value );\\n  });\\n​\\n  $( \\\"#result\\\" ).html( html.join( \\\"<br>\\\" ) );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    css(propertyNames: string[]): JQuery.PlainObject<string>;\\n    /**\\n     * Store arbitrary data associated with the matched elements.\\n     * @param key A string naming the piece of data to set.\\n     * @param value The new data value; this can be any Javascript type except `undefined`.\\n     * @see \\\\`{@link https://api.jquery.com/data/ }\\\\`\\n     * @since 1.2.3\\n     * @example ​ ````Store then retrieve a value from the div element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>data demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>\\n  The values stored were\\n  <span></span>\\n  and\\n  <span></span>\\n</div>\\n​\\n<script>\\n$( \\\"div\\\" ).data( \\\"test\\\", { first: 16, last: \\\"pizza!\\\" } );\\n$( \\\"span:first\\\" ).text( $( \\\"div\\\" ).data( \\\"test\\\" ).first );\\n$( \\\"span:last\\\" ).text( $( \\\"div\\\" ).data( \\\"test\\\" ).last );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    data(key: string, value: string | number | boolean | symbol | object | null): this;\\n    /**\\n     * Store arbitrary data associated with the matched elements.\\n     * @param obj An object of key-value pairs of data to update.\\n     * @see \\\\`{@link https://api.jquery.com/data/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    data(obj: JQuery.PlainObject): this;\\n    /**\\n     * Return the value at the named data store for the first element in the jQuery collection, as set by data(name, value) or by an HTML5 data-* attribute.\\n     * @param key Name of the data stored.\\n     * @param value `undefined` is not recognized as a data value. Calls such as `.data( \\\"name\\\", undefined )`\\n     *              will return the jQuery object that it was called on, allowing for chaining.\\n     * @see \\\\`{@link https://api.jquery.com/data/ }\\\\`\\n     * @since 1.2.3\\n     */\\n    // `unified-signatures` is disabled so that behavior when passing `undefined` to `value` can be documented. Unifying the signatures\\n    // results in potential confusion for users from an unexpected parameter.\\n    // tslint:disable-next-line:unified-signatures\\n    data(key: string, value: undefined): any;\\n    /**\\n     * Return the value at the named data store for the first element in the jQuery collection, as set by data(name, value) or by an HTML5 data-* attribute.\\n     * @param key Name of the data stored.\\n     * @see \\\\`{@link https://api.jquery.com/data/ }\\\\`\\n     * @since 1.2.3\\n     * @example ​ ````Get the data named &quot;blah&quot; stored at for an element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>data demo</title>\\n  <style>\\n  div {\\n    margin: 5px;\\n    background: yellow;\\n  }\\n  button {\\n    margin: 5px;\\n    font-size: 14px;\\n  }\\n  p {\\n    margin: 5px;\\n    color: blue;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>A div</div>\\n<button>Get \\\"blah\\\" from the div</button>\\n<button>Set \\\"blah\\\" to \\\"hello\\\"</button>\\n<button>Set \\\"blah\\\" to 86</button>\\n<button>Remove \\\"blah\\\" from the div</button>\\n<p>The \\\"blah\\\" value of this div is <span>?</span></p>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  var value;\\n​\\n  switch ( $( \\\"button\\\" ).index( this ) ) {\\n    case 0 :\\n      value = $( \\\"div\\\" ).data( \\\"blah\\\" );\\n      break;\\n    case 1 :\\n      $( \\\"div\\\" ).data( \\\"blah\\\", \\\"hello\\\" );\\n      value = \\\"Stored!\\\";\\n      break;\\n    case 2 :\\n      $( \\\"div\\\" ).data( \\\"blah\\\", 86 );\\n      value = \\\"Stored!\\\";\\n      break;\\n    case 3 :\\n      $( \\\"div\\\" ).removeData( \\\"blah\\\" );\\n      value = \\\"Removed!\\\";\\n      break;\\n  }\\n​\\n  $( \\\"span\\\" ).text( \\\"\\\" + value );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    data(key: string): any;\\n    /**\\n     * Return the value at the named data store for the first element in the jQuery collection, as set by data(name, value) or by an HTML5 data-* attribute.\\n     * @see \\\\`{@link https://api.jquery.com/data/ }\\\\`\\n     * @since 1.4\\n     */\\n    data(): JQuery.PlainObject;\\n    /**\\n     * Bind an event handler to the \\\"dblclick\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/dblclick/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    dblclick<TData>(eventData: TData,\\n                    handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'dblclick'>): this;\\n    /**\\n     * Bind an event handler to the \\\"dblclick\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/dblclick/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````To bind a &quot;Hello World!&quot; alert box to the dblclick event on every paragraph on the page:\\n```javascript\\n$( \\\"p\\\" ).dblclick(function() {\\n  alert( \\\"Hello World!\\\" );\\n});\\n```\\n     * @example ​ ````Double click to toggle background color.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>dblclick demo</title>\\n  <style>\\n  div {\\n    background: blue;\\n    color: white;\\n    height: 100px;\\n    width: 150px;\\n }\\n  div.dbl {\\n    background: yellow;\\n    color: black;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<span>Double click the block</span>\\n​\\n<script>\\nvar divdbl = $( \\\"div:first\\\" );\\ndivdbl.dblclick(function() {\\n  divdbl.toggleClass( \\\"dbl\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    dblclick(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'dblclick'> |\\n                       false): this;\\n    /**\\n     * Set a timer to delay execution of subsequent items in the queue.\\n     * @param duration An integer indicating the number of milliseconds to delay execution of the next item in the queue.\\n     * @param queueName A string containing the name of the queue. Defaults to fx, the standard effects queue.\\n     * @see \\\\`{@link https://api.jquery.com/delay/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Animate the hiding and showing of two divs, delaying the first before showing it.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>delay demo</title>\\n  <style>\\n  div {\\n    position: absolute;\\n    width: 60px;\\n    height: 60px;\\n    float: left;\\n  }\\n  .first {\\n    background-color: #3f3;\\n    left: 0;\\n  }\\n  .second {\\n    background-color: #33f;\\n    left: 80px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button>Run</button></p>\\n<div class=\\\"first\\\"></div>\\n<div class=\\\"second\\\"></div>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"div.first\\\" ).slideUp( 300 ).delay( 800 ).fadeIn( 400 );\\n  $( \\\"div.second\\\" ).slideUp( 300 ).fadeIn( 400 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    delay(duration: JQuery.Duration, queueName?: string): this;\\n    /**\\n     * Attach a handler to one or more events for all elements that match the selector, now or in the future, based on a specific set of root elements.\\n     * @param selector A selector to filter the elements that trigger the event.\\n     * @param eventType A string containing one or more space-separated JavaScript event types, such as \\\"click\\\" or\\n     *                  \\\"keydown,\\\" or custom event names.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/delegate/ }\\\\`\\n     * @since 1.4.2\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link on }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     */\\n    delegate<TType extends string,\\n             TData>(\\n        selector: JQuery.Selector,\\n        eventType: TType,\\n        eventData: TData,\\n        handler: JQuery.TypeEventHandler<TElement, TData, any, any, TType>\\n    ): this;\\n    /**\\n     * Attach a handler to one or more events for all elements that match the selector, now or in the future, based on a specific set of root elements.\\n     * @param selector A selector to filter the elements that trigger the event.\\n     * @param eventType A string containing one or more space-separated JavaScript event types, such as \\\"click\\\" or\\n     *                  \\\"keydown,\\\" or custom event names.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/delegate/ }\\\\`\\n     * @since 1.4.2\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link on }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     * @example ​ ````Click a paragraph to add another. Note that .delegate() attaches a click event handler to all paragraphs - even new ones.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>delegate demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n    font-weight: bold;\\n    cursor: pointer;\\n    padding: 5px;\\n  }\\n  p.over {\\n    background: #ccc;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Click me!</p>\\n​\\n<span></span>\\n​\\n<script>\\n$( \\\"body\\\" ).delegate( \\\"p\\\", \\\"click\\\", function() {\\n  $( this ).after( \\\"<p>Another paragraph!</p>\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To display each paragraph&#39;s text in an alert box whenever it is clicked:\\n```javascript\\n$( \\\"body\\\" ).delegate( \\\"p\\\", \\\"click\\\", function() {\\n  alert( $( this ).text() );\\n});\\n```\\n     * @example ​ ````To cancel a default action and prevent it from bubbling up, return false:\\n```javascript\\n$( \\\"body\\\" ).delegate( \\\"a\\\", \\\"click\\\", function() {\\n  return false;\\n});\\n```\\n     * @example ​ ````To cancel only the default action by using the preventDefault method.\\n```javascript\\n$( \\\"body\\\" ).delegate( \\\"a\\\", \\\"click\\\", function( event ) {\\n  event.preventDefault();\\n});\\n```\\n     * @example ​ ````Can bind custom events too.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>delegate demo</title>\\n  <style>\\n  p {\\n    color: red;\\n  }\\n  span {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Has an attached custom event.</p>\\n<button>Trigger custom event</button>\\n<span style=\\\"display:none;\\\"></span>\\n​\\n<script>\\n$( \\\"body\\\" ).delegate( \\\"p\\\", \\\"myCustomEvent\\\", function( e, myName, myValue ) {\\n  $( this ).text( \\\"Hi there!\\\" );\\n  $( \\\"span\\\" )\\n    .stop()\\n    .css( \\\"opacity\\\", 1 )\\n    .text( \\\"myName = \\\" + myName )\\n    .fadeIn( 30 )\\n    .fadeOut( 1000 );\\n});\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).trigger( \\\"myCustomEvent\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    delegate<TType extends string>(\\n        selector: JQuery.Selector,\\n        eventType: TType,\\n        handler: JQuery.TypeEventHandler<TElement, undefined, any, any, TType> |\\n                 false\\n    ): this;\\n    /**\\n     * Attach a handler to one or more events for all elements that match the selector, now or in the future, based on a specific set of root elements.\\n     * @param selector A selector to filter the elements that trigger the event.\\n     * @param events A plain object of one or more event types and functions to execute for them.\\n     * @see \\\\`{@link https://api.jquery.com/delegate/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link on }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     */\\n    delegate(selector: JQuery.Selector,\\n             events: JQuery.TypeEventHandlers<TElement, undefined, any, any>\\n    ): this;\\n    /**\\n     * Execute the next function on the queue for the matched elements.\\n     * @param queueName A string containing the name of the queue. Defaults to fx, the standard effects queue.\\n     * @see \\\\`{@link https://api.jquery.com/dequeue/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Use dequeue to end a custom queue function which allows the queue to keep going.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>dequeue demo</title>\\n  <style>\\n  div {\\n    margin: 3px;\\n    width: 50px;\\n    position: absolute;\\n    height: 50px;\\n    left: 10px;\\n    top: 30px;\\n    background-color: yellow;\\n  }\\n  div.red {\\n    background-color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Start</button>\\n<div></div>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"div\\\" )\\n    .animate({ left:\\\"+=200px\\\" }, 2000 )\\n    .animate({ top:\\\"0px\\\" }, 600 )\\n    .queue(function() {\\n      $( this ).toggleClass( \\\"red\\\" ).dequeue();\\n    })\\n    .animate({ left:\\\"10px\\\", top:\\\"30px\\\" }, 700 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    dequeue(queueName?: string): this;\\n    /**\\n     * Remove the set of matched elements from the DOM.\\n     * @param selector A selector expression that filters the set of matched elements to be removed.\\n     * @see \\\\`{@link https://api.jquery.com/detach/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Detach all paragraphs from the DOM\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>detach demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n    margin: 6px 0;\\n  }\\n  p.off {\\n    background: black;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\nhow are\\n<p>you?</p>\\n<button>Attach/detach paragraphs</button>\\n​\\n<script>\\n$( \\\"p\\\" ).click(function() {\\n  $( this ).toggleClass( \\\"off\\\" );\\n});\\nvar p;\\n$( \\\"button\\\" ).click(function() {\\n  if ( p ) {\\n    p.appendTo( \\\"body\\\" );\\n    p = null;\\n  } else {\\n    p = $( \\\"p\\\" ).detach();\\n  }\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    detach(selector?: JQuery.Selector): this;\\n    /**\\n     * Iterate over a jQuery object, executing a function for each matched element.\\n     * @param funсtion A function to execute for each matched element.\\n     * @see \\\\`{@link https://api.jquery.com/each/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Iterate over three divs and sets their color property.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>each demo</title>\\n  <style>\\n  div {\\n    color: red;\\n    text-align: center;\\n    cursor: pointer;\\n    font-weight: bolder;\\n    width: 300px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>Click here</div>\\n<div>to iterate through</div>\\n<div>these divs.</div>\\n​\\n<script>\\n$( document.body ).click(function() {\\n  $( \\\"div\\\" ).each(function( i ) {\\n    if ( this.style.color !== \\\"blue\\\" ) {\\n      this.style.color = \\\"blue\\\";\\n    } else {\\n      this.style.color = \\\"\\\";\\n    }\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To access a jQuery object instead of the regular DOM element, use $( this ). For example:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>each demo</title>\\n  <style>\\n  ul {\\n    font-size: 18px;\\n    margin: 0;\\n  }\\n  span {\\n    color: blue;\\n    text-decoration: underline;\\n    cursor: pointer;\\n  }\\n  .example {\\n    font-style: italic;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nTo do list: <span>(click here to change)</span>\\n<ul>\\n  <li>Eat</li>\\n  <li>Sleep</li>\\n  <li>Be merry</li>\\n</ul>\\n​\\n<script>\\n$( \\\"span\\\" ).click(function() {\\n  $( \\\"li\\\" ).each(function() {\\n    $( this ).toggleClass( \\\"example\\\" );\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Use return false to break out of each() loops early.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>each demo</title>\\n  <style>\\n  div {\\n    width: 40px;\\n    height: 40px;\\n    margin: 5px;\\n    float: left;\\n    border: 2px blue solid;\\n    text-align: center;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Change colors</button>\\n<span></span>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div id=\\\"stop\\\">Stop here</div>\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"div\\\" ).each(function( index, element ) {\\n    // element == this\\n    $( element ).css( \\\"backgroundColor\\\", \\\"yellow\\\" );\\n    if ( $( this ).is( \\\"#stop\\\" ) ) {\\n      $( \\\"span\\\" ).text( \\\"Stopped at div index #\\\" + index );\\n      return false;\\n    }\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    each(funсtion: (this: TElement, index: number, element: TElement) => void | false): this;\\n    /**\\n     * Remove all child nodes of the set of matched elements from the DOM.\\n     * @see \\\\`{@link https://api.jquery.com/empty/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Removes all child nodes (including text nodes) from all paragraphs\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>empty demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  Hello, <span>Person</span> <em>and person</em>.\\n</p>\\n​\\n<button>Call empty() on above paragraph</button>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).empty();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    empty(): this;\\n    /**\\n     * End the most recent filtering operation in the current chain and return the set of matched elements to its previous state.\\n     * @see \\\\`{@link https://api.jquery.com/end/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Selects all paragraphs, finds span elements inside these, and reverts the selection back to the paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>end demo</title>\\n  <style>\\n  p, div {\\n    margin: 1px;\\n    padding: 1px;\\n    font-weight: bold;\\n    font-size: 16px;\\n  }\\n  div {\\n    color: blue;\\n  }\\n  b {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  Hi there <span>how</span> are you <span>doing</span>?\\n</p>\\n​\\n<p>\\n  This <span>span</span> is one of\\n  several <span>spans</span> in this\\n  <span>sentence</span>.\\n</p>\\n​\\n<div>\\n  Tags in jQuery object initially: <b></b>\\n</div>\\n​\\n<div>\\n  Tags in jQuery object after find: <b></b>\\n</div>\\n​\\n<div>\\n  Tags in jQuery object after end: <b></b>\\n</div>\\n​\\n<script>\\njQuery.fn.showTags = function( n ) {\\n  var tags = this.map(function() {\\n    return this.tagName;\\n  })\\n  .get()\\n  .join( \\\", \\\" );\\n  $( \\\"b:eq( \\\" + n + \\\" )\\\" ).text( tags );\\n  return this;\\n};\\n​\\n$( \\\"p\\\" )\\n  .showTags( 0 )\\n  .find( \\\"span\\\" )\\n    .showTags( 1 )\\n    .css( \\\"background\\\", \\\"yellow\\\" )\\n  .end()\\n  .showTags( 2 )\\n  .css( \\\"font-style\\\", \\\"italic\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Selects all paragraphs, finds span elements inside these, and reverts the selection back to the paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>end demo</title>\\n  <style>\\n  p {\\n    margin: 10px;\\n    padding: 10px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><span>Hello</span>, how are you?</p>\\n​\\n<script>\\n$( \\\"p\\\" )\\n  .find( \\\"span\\\" )\\n  .end()\\n  .css( \\\"border\\\", \\\"2px red solid\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    end(): this;\\n    /**\\n     * Reduce the set of matched elements to the one at the specified index.\\n     * @param index An integer indicating the 0-based position of the element.\\n     *              An integer indicating the position of the element, counting backwards from the last element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/eq/ }\\\\`\\n     * @since 1.1.2\\n     * @since 1.4\\n     * @example ​ ````Turn the div with index 2 blue by adding an appropriate class.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>eq demo</title>\\n  <style>\\n  div {\\n    width: 60px;\\n    height: 60px;\\n    margin: 10px;\\n    float: left;\\n    border: 2px solid blue;\\n  }\\n  .blue {\\n    background: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<script>\\n$( \\\"body\\\" ).find( \\\"div\\\" ).eq( 2 ).addClass( \\\"blue\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    eq(index: number): this;\\n    /**\\n     * Merge the contents of an object onto the jQuery prototype to provide new jQuery instance methods.\\n     * @param obj An object to merge onto the jQuery prototype.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.fn.extend/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Add two methods to the jQuery prototype ($.fn) object and then use one of them.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.fn.extend demo</title>\\n  <style>\\n  label {\\n    display: block;\\n    margin: .5em;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<label><input type=\\\"checkbox\\\" name=\\\"foo\\\"> Foo</label>\\n<label><input type=\\\"checkbox\\\" name=\\\"bar\\\"> Bar</label>\\n​\\n<script>\\njQuery.fn.extend({\\n  check: function() {\\n    return this.each(function() {\\n      this.checked = true;\\n    });\\n  },\\n  uncheck: function() {\\n    return this.each(function() {\\n      this.checked = false;\\n    });\\n  }\\n});\\n​\\n// Use the newly created .check() method\\n$( \\\"input[type='checkbox']\\\" ).check();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend(obj: object): this;\\n    /**\\n     * Display the matched elements by fading them to opaque.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/fadeIn/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    fadeIn(duration: JQuery.Duration, easing: string, complete?: (this: TElement) => void): this;\\n    /**\\n     * Display the matched elements by fading them to opaque.\\n     * @param duration_easing _&#x40;param_ `duration_easing`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/fadeIn/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Fades a red block in over the text. Once the animation is done, it quickly fades in more text on top.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>fadeIn demo</title>\\n  <style>\\n  p {\\n    position: relative;\\n    width: 400px;\\n    height: 90px;\\n  }\\n  div {\\n    position: absolute;\\n    width: 400px;\\n    height: 65px;\\n    font-size: 36px;\\n    text-align: center;\\n    color: yellow;\\n    background: red;\\n    padding-top: 25px;\\n    top: 0;\\n    left: 0;\\n    display: none;\\n  }\\n  span {\\n    display: none;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  Let it be known that the party of the first part\\n  and the party of the second part are henceforth\\n  and hereto directed to assess the allegations\\n  for factual correctness... (<a href=\\\"#\\\">click!</a>)\\n  <div><span>CENSORED!</span></div>\\n</p>\\n​\\n<script>\\n$( \\\"a\\\" ).click(function() {\\n  $( \\\"div\\\" ).fadeIn( 3000, function() {\\n    $( \\\"span\\\" ).fadeIn( 100 );\\n  });\\n  return false;\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    fadeIn(duration_easing: JQuery.Duration | string, complete: (this: TElement) => void): this;\\n    /**\\n     * Display the matched elements by fading them to opaque.\\n     * @param duration_easing_complete_options _&#x40;param_ `duration_easing_complete_options`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element. <br>\\n     * * `options` — A map of additional options to pass to the method.\\n     * @see \\\\`{@link https://api.jquery.com/fadeIn/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Animates hidden divs to fade in one by one, completing each animation within 600 milliseconds.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>fadeIn demo</title>\\n  <style>\\n  span {\\n    color: red;\\n    cursor: pointer;\\n  }\\n  div {\\n    margin: 3px;\\n    width: 80px;\\n    display: none;\\n    height: 80px;\\n    float: left;\\n  }\\n  #one {\\n    background: #f00;\\n  }\\n  #two {\\n    background: #0f0;\\n  }\\n  #three {\\n    background: #00f;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<span>Click here...</span>\\n<div id=\\\"one\\\"></div>\\n<div id=\\\"two\\\"></div>\\n<div id=\\\"three\\\"></div>\\n​\\n<script>\\n$( document.body ).click(function() {\\n  $( \\\"div:hidden:first\\\" ).fadeIn( \\\"slow\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    fadeIn(duration_easing_complete_options?: JQuery.Duration | string | ((this: TElement) => void) | JQuery.EffectsOptions<TElement>): this;\\n    /**\\n     * Hide the matched elements by fading them to transparent.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/fadeOut/ }\\\\`\\n     * @since 1.4.3\\n     * @example ​ ````Fades out two divs, one with a &quot;linear&quot; easing and one with the default, &quot;swing,&quot; easing.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>fadeOut demo</title>\\n  <style>\\n  .box,\\n  button {\\n    float: left;\\n    margin: 5px 10px 5px 0;\\n  }\\n  .box {\\n    height: 80px;\\n    width: 80px;\\n    background: #090;\\n  }\\n  #log {\\n    clear: left;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"btn1\\\">fade out</button>\\n<button id=\\\"btn2\\\">show</button>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<div id=\\\"box1\\\" class=\\\"box\\\">linear</div>\\n<div id=\\\"box2\\\" class=\\\"box\\\">swing</div>\\n​\\n<script>\\n$( \\\"#btn1\\\" ).click(function() {\\n  function complete() {\\n    $( \\\"<div>\\\" ).text( this.id ).appendTo( \\\"#log\\\" );\\n  }\\n  $( \\\"#box1\\\" ).fadeOut( 1600, \\\"linear\\\", complete );\\n  $( \\\"#box2\\\" ).fadeOut( 1600, complete );\\n});\\n​\\n$( \\\"#btn2\\\" ).click(function() {\\n  $( \\\"div\\\" ).show();\\n  $( \\\"#log\\\" ).empty();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    fadeOut(duration: JQuery.Duration, easing: string, complete?: (this: TElement) => void): this;\\n    /**\\n     * Hide the matched elements by fading them to transparent.\\n     * @param duration_easing _&#x40;param_ `duration_easing`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/fadeOut/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Fades out spans in one section that you click on.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>fadeOut demo</title>\\n  <style>\\n  span {\\n    cursor: pointer;\\n  }\\n  span.hilite {\\n    background: yellow;\\n  }\\n  div {\\n    display: inline;\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<h3>Find the modifiers - <div></div></h3>\\n<p>\\n  If you <span>really</span> want to go outside\\n  <span>in the cold</span> then make sure to wear\\n  your <span>warm</span> jacket given to you by\\n  your <span>favorite</span> teacher.\\n</p>\\n​\\n<script>\\n$( \\\"span\\\" ).click(function() {\\n  $( this ).fadeOut( 1000, function() {\\n    $( \\\"div\\\" ).text( \\\"'\\\" + $( this ).text() + \\\"' has faded!\\\" );\\n    $( this ).remove();\\n  });\\n});\\n$( \\\"span\\\" ).hover(function() {\\n  $( this ).addClass( \\\"hilite\\\" );\\n}, function() {\\n  $( this ).removeClass( \\\"hilite\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    fadeOut(duration_easing: JQuery.Duration | string, complete: (this: TElement) => void): this;\\n    /**\\n     * Hide the matched elements by fading them to transparent.\\n     * @param duration_easing_complete_options _&#x40;param_ `duration_easing_complete_options`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element. <br>\\n     * * `options` — A map of additional options to pass to the method.\\n     * @see \\\\`{@link https://api.jquery.com/fadeOut/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Animates all paragraphs to fade out, completing the animation within 600 milliseconds.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>fadeOut demo</title>\\n  <style>\\n  p {\\n    font-size: 150%;\\n    cursor: pointer;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  If you click on this paragraph\\n  you'll see it just fade away.\\n</p>\\n​\\n<script>\\n$( \\\"p\\\" ).click(function() {\\n  $( \\\"p\\\" ).fadeOut( \\\"slow\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    fadeOut(duration_easing_complete_options?: JQuery.Duration | string | ((this: TElement) => void) | JQuery.EffectsOptions<TElement>): this;\\n    /**\\n     * Adjust the opacity of the matched elements.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param opacity A number between 0 and 1 denoting the target opacity.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/fadeTo/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    fadeTo(duration: JQuery.Duration, opacity: number, easing: string, complete?: (this: TElement) => void): this;\\n    /**\\n     * Adjust the opacity of the matched elements.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param opacity A number between 0 and 1 denoting the target opacity.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/fadeTo/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Animates first paragraph to fade to an opacity of 0.33 (33%, about one third visible), completing the animation within 600 milliseconds.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>fadeTo demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\nClick this paragraph to see it fade.\\n</p>\\n​\\n<p>\\nCompare to this one that won't fade.\\n</p>\\n​\\n<script>\\n$( \\\"p:first\\\" ).click(function() {\\n  $( this ).fadeTo( \\\"slow\\\", 0.33 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Fade div to a random opacity on each click, completing the animation within 200 milliseconds.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>fadeTo demo</title>\\n  <style>\\n  p {\\n    width: 80px;\\n    margin: 0;\\n    padding: 5px;\\n  }\\n  div {\\n    width: 40px;\\n    height: 40px;\\n    position: absolute;\\n  }\\n  #one {\\n    top: 0;\\n    left: 0;\\n    background: #f00;\\n  }\\n  #two {\\n    top: 20px;\\n    left: 20px;\\n    background: #0f0;\\n  }\\n  #three {\\n    top: 40px;\\n    left:40px;\\n    background:#00f;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>And this is the library that John built...</p>\\n​\\n<div id=\\\"one\\\"></div>\\n<div id=\\\"two\\\"></div>\\n<div id=\\\"three\\\"></div>\\n​\\n<script>\\n$( \\\"div\\\" ).click(function() {\\n  $( this ).fadeTo( \\\"fast\\\", Math.random() );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Find the right answer! The fade will take 250 milliseconds and change various styles when it completes.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>fadeTo demo</title>\\n  <style>\\n  div, p {\\n    width: 80px;\\n    height: 40px;\\n    top: 0;\\n    margin: 0;\\n    position: absolute;\\n    padding-top: 8px;\\n  }\\n  p {\\n    background: #fcc;\\n    text-align: center;\\n  }\\n  div {\\n    background: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Wrong</p>\\n<div></div>\\n<p>Wrong</p>\\n<div></div>\\n<p>Right!</p>\\n<div></div>\\n​\\n<script>\\nvar getPos = function( n ) {\\n  return (Math.floor( n ) * 90) + \\\"px\\\";\\n};\\n$( \\\"p\\\" ).each(function( n ) {\\n  var r = Math.floor( Math.random() * 3 );\\n  var tmp = $( this ).text();\\n  $( this ).text( $( \\\"p:eq(\\\" + r + \\\")\\\" ).text() );\\n  $( \\\"p:eq(\\\" + r + \\\")\\\" ).text( tmp );\\n  $( this ).css( \\\"left\\\", getPos( n ) );\\n});\\n$( \\\"div\\\" )\\n  .each(function( n ) {\\n    $( this ).css( \\\"left\\\", getPos( n ) );\\n  })\\n  .css( \\\"cursor\\\", \\\"pointer\\\" )\\n  .click( function() {\\n    $( this ).fadeTo( 250, 0.25, function() {\\n      $( this )\\n        .css( \\\"cursor\\\", \\\"\\\" )\\n        .prev()\\n          .css({\\n            \\\"font-weight\\\": \\\"bolder\\\",\\n            \\\"font-style\\\": \\\"italic\\\"\\n          });\\n    });\\n  });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    fadeTo(duration: JQuery.Duration, opacity: number, complete?: (this: TElement) => void): this;\\n    /**\\n     * Display or hide the matched elements by animating their opacity.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/fadeToggle/ }\\\\`\\n     * @since 1.4.4\\n     * @example ​ ````Fades first paragraph in or out, completing the animation within 600 milliseconds and using a linear easing. Fades last paragraph in or out for 200 milliseconds, inserting a &quot;finished&quot; message upon completion.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>fadeToggle demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>fadeToggle p1</button>\\n<button>fadeToggle p2</button>\\n<p>This paragraph has a slow, linear fade.</p>\\n<p>This paragraph has a fast animation.</p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"button:first\\\" ).click(function() {\\n  $( \\\"p:first\\\" ).fadeToggle( \\\"slow\\\", \\\"linear\\\" );\\n});\\n$( \\\"button:last\\\" ).click(function() {\\n  $( \\\"p:last\\\" ).fadeToggle( \\\"fast\\\", function() {\\n    $( \\\"#log\\\" ).append( \\\"<div>finished</div>\\\" );\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    fadeToggle(duration: JQuery.Duration, easing: string, complete?: (this: TElement) => void): this;\\n    /**\\n     * Display or hide the matched elements by animating their opacity.\\n     * @param duration_easing _&#x40;param_ `duration_easing`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/fadeToggle/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Fades first paragraph in or out, completing the animation within 600 milliseconds and using a linear easing. Fades last paragraph in or out for 200 milliseconds, inserting a &quot;finished&quot; message upon completion.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>fadeToggle demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>fadeToggle p1</button>\\n<button>fadeToggle p2</button>\\n<p>This paragraph has a slow, linear fade.</p>\\n<p>This paragraph has a fast animation.</p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"button:first\\\" ).click(function() {\\n  $( \\\"p:first\\\" ).fadeToggle( \\\"slow\\\", \\\"linear\\\" );\\n});\\n$( \\\"button:last\\\" ).click(function() {\\n  $( \\\"p:last\\\" ).fadeToggle( \\\"fast\\\", function() {\\n    $( \\\"#log\\\" ).append( \\\"<div>finished</div>\\\" );\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    fadeToggle(duration_easing: JQuery.Duration | string, complete: (this: TElement) => void): this;\\n    /**\\n     * Display or hide the matched elements by animating their opacity.\\n     * @param duration_easing_complete_options _&#x40;param_ `duration_easing_complete_options`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element. <br>\\n     * * `options` — A map of additional options to pass to the method.\\n     * @see \\\\`{@link https://api.jquery.com/fadeToggle/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     */\\n    fadeToggle(duration_easing_complete_options?: JQuery.Duration | string | ((this: TElement) => void) | JQuery.EffectsOptions<TElement>): this;\\n    /**\\n     * Reduce the set of matched elements to those that match the selector or pass the function's test.\\n     * @param selector_elements_selection_function _&#x40;param_ `selector_elements_selection_function`\\n     * <br>\\n     * * `selector` — A string containing a selector expression to match the current set of elements against. <br>\\n     * * `elements` — One or more DOM elements to match the current set of elements against. <br>\\n     * * `selection` — An existing jQuery object to match the current set of elements against. <br>\\n     * * `function` — A function used as a test for each element in the set. this is the current DOM element.\\n     * @see \\\\`{@link https://api.jquery.com/filter/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @example ​ ````Change the color of all divs; then add a border to those with a &quot;middle&quot; class.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>filter demo</title>\\n  <style>\\n  div {\\n    width: 60px;\\n    height: 60px;\\n    margin: 5px;\\n    float: left;\\n    border: 2px white solid;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div class=\\\"middle\\\"></div>\\n<div class=\\\"middle\\\"></div>\\n<div class=\\\"middle\\\"></div>\\n<div class=\\\"middle\\\"></div>\\n<div></div>\\n​\\n<script>\\n$( \\\"div\\\" )\\n  .css( \\\"background\\\", \\\"#c8ebcc\\\" )\\n  .filter( \\\".middle\\\" )\\n    .css( \\\"border-color\\\", \\\"red\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the color of all divs; then add a border to the second one (index == 1) and the div with an id of &quot;fourth.&quot;\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>filter demo</title>\\n  <style>\\n  div {\\n    width: 60px;\\n    height: 60px;\\n    margin: 5px;\\n    float: left;\\n    border: 3px white solid;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"first\\\"></div>\\n<div id=\\\"second\\\"></div>\\n<div id=\\\"third\\\"></div>\\n<div id=\\\"fourth\\\"></div>\\n<div id=\\\"fifth\\\"></div>\\n<div id=\\\"sixth\\\"></div>\\n​\\n<script>\\n$( \\\"div\\\" )\\n  .css( \\\"background\\\", \\\"#b4b0da\\\" )\\n  .filter(function( index ) {\\n    return index === 1 || $( this ).attr( \\\"id\\\" ) === \\\"fourth\\\";\\n  })\\n    .css( \\\"border\\\", \\\"3px double red\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Select all divs and filter the selection with a DOM element, keeping only the one with an id of &quot;unique&quot;.\\n```javascript\\n$( \\\"div\\\" ).filter( document.getElementById( \\\"unique\\\" ) );\\n```\\n     * @example ​ ````Select all divs and filter the selection with a jQuery object, keeping only the one with an id of &quot;unique&quot;.\\n```javascript\\n$( \\\"div\\\" ).filter( $( \\\"#unique\\\" ) );\\n```\\n     */\\n    filter(selector_elements_selection_function:\\n        JQuery.Selector |\\n        JQuery.TypeOrArray<Element> |\\n        JQuery |\\n        ((this: TElement, index: number, element: TElement) => boolean)\\n    ): this;\\n    /**\\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\\n     * @param selector_element _&#x40;param_ `selector_element`\\n     * <br>\\n     * * `selector` — A string containing a selector expression to match elements against. <br>\\n     * * `element` — An element or a jQuery object to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/find/ }\\\\`\\n     * @since 1.0\\n     * @since 1.6\\n     * @example ​ ````Starts with all paragraphs and searches for descendant span elements, same as $( &quot;p span&quot; )\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>find demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><span>Hello</span>, how are you?</p>\\n<p>Me? I'm <span>good</span>.</p>\\n​\\n<script>\\n$( \\\"p\\\" ).find( \\\"span\\\" ).css( \\\"color\\\", \\\"red\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````A selection using a jQuery collection of all span tags. Only spans within p tags are changed to red while others are left blue.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>find demo</title>\\n  <style>\\n  span {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><span>Hello</span>, how are you?</p>\\n<p>Me? I'm <span>good</span>.</p>\\n<div>Did you <span>eat</span> yet?</div>\\n​\\n<script>\\nvar spans = $( \\\"span\\\" );\\n$( \\\"p\\\" ).find( spans ).css( \\\"color\\\", \\\"red\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Add spans around each word then add a hover and italicize words with the letter t.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>find demo</title>\\n  <style>\\n  p {\\n    font-size: 20px;\\n    width: 200px;\\n    color: blue;\\n    font-weight: bold;\\n    margin: 0 10px;\\n  }\\n  .hilite {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  When the day is short\\n  find that which matters to you\\n  or stop believing\\n</p>\\n​\\n<script>\\nvar newText = $( \\\"p\\\" ).text().split( \\\" \\\" ).join( \\\"</span> <span>\\\" );\\nnewText = \\\"<span>\\\" + newText + \\\"</span>\\\";\\n​\\n$( \\\"p\\\" )\\n  .html( newText )\\n  .find( \\\"span\\\" )\\n    .hover(function() {\\n      $( this ).addClass( \\\"hilite\\\" );\\n    }, function() {\\n      $( this ).removeClass( \\\"hilite\\\" );\\n    })\\n  .end()\\n  .find( \\\":contains('t')\\\" )\\n    .css({\\n      \\\"font-style\\\": \\\"italic\\\",\\n      \\\"font-weight\\\": \\\"bolder\\\"\\n    });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    find(selector_element: JQuery.Selector | Element | JQuery): this;\\n    /**\\n     * Stop the currently-running animation, remove all queued animations, and complete all animations for the matched elements.\\n     * @param queue The name of the queue in which to stop animations.\\n     * @see \\\\`{@link https://api.jquery.com/finish/ }\\\\`\\n     * @since 1.9\\n     * @example ​ ````Click the Go button once to start the animation, and then click the other buttons to see how they affect the current and queued animations.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>finish demo</title>\\n  <style>\\n  .box {\\n    position: absolute;\\n    top: 10px;\\n    left: 10px;\\n    width: 15px;\\n    height: 15px;\\n    background: black;\\n  }\\n  #path {\\n    height: 244px;\\n    font-size: 70%;\\n    border-left: 2px dashed red;\\n    border-bottom: 2px dashed green;\\n    border-right: 2px dashed blue;\\n  }\\n  button {\\n    width: 12em;\\n    display: block;\\n    text-align: left;\\n    margin: 0 auto;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"box\\\"></div>\\n<div id=\\\"path\\\">\\n  <button id=\\\"go\\\">Go</button>\\n  <br>\\n  <button id=\\\"bstt\\\" class=\\\"b\\\">.stop( true,true )</button>\\n  <button id=\\\"bcf\\\" class=\\\"b\\\">.clearQueue().finish()</button>\\n  <br>\\n  <button id=\\\"bstf\\\" class=\\\"b\\\">.stop( true, false )</button>\\n  <button id=\\\"bcs\\\" class=\\\"b\\\">.clearQueue().stop()</button>\\n  <br>\\n  <button id=\\\"bsff\\\" class=\\\"b\\\">.stop( false, false )</button>\\n  <button id=\\\"bs\\\" class=\\\"b\\\">.stop()</button>\\n  <br>\\n  <button id=\\\"bsft\\\" class=\\\"b\\\">.stop( false, true )</button>\\n  <br>\\n  <button id=\\\"bf\\\" class=\\\"b\\\">.finish()</button>\\n</div>\\n​\\n<script>\\nvar horiz = $( \\\"#path\\\" ).width() - 20,\\n  vert = $( \\\"#path\\\" ).height() - 20;\\n​\\nvar btns = {\\n  bstt: function() {\\n    $( \\\"div.box\\\" ).stop( true, true );\\n  },\\n  bs: function() {\\n    $( \\\"div.box\\\" ).stop();\\n  },\\n  bsft: function() {\\n    $( \\\"div.box\\\" ).stop( false, true );\\n  },\\n  bf: function() {\\n    $( \\\"div.box\\\" ).finish();\\n  },\\n  bcf: function() {\\n    $( \\\"div.box\\\" ).clearQueue().finish();\\n  },\\n  bsff: function() {\\n    $( \\\"div.box\\\" ).stop( false, false );\\n  },\\n  bstf: function() {\\n    $( \\\"div.box\\\" ).stop( true, false );\\n  },\\n  bcs: function() {\\n    $( \\\"div.box\\\" ).clearQueue().stop();\\n  }\\n};\\n​\\n$( \\\"button.b\\\" ).on( \\\"click\\\", function() {\\n  btns[ this.id ]();\\n});\\n​\\n$( \\\"#go\\\" ).on( \\\"click\\\", function() {\\n  $( \\\".box\\\" )\\n    .clearQueue()\\n    .stop()\\n    .css({\\n      left: 10,\\n      top: 10\\n    })\\n    .animate({\\n      top: vert\\n    }, 3000 )\\n    .animate({\\n      left: horiz\\n    }, 3000 )\\n    .animate({\\n      top: 10\\n    }, 3000 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    finish(queue?: string): this;\\n    /**\\n     * Reduce the set of matched elements to the first in the set.\\n     * @see \\\\`{@link https://api.jquery.com/first/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Highlight the first span in a paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>first demo</title>\\n  <style>\\n  .highlight{\\n    background-color: yellow\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  <span>Look:</span>\\n  <span>This is some text in a paragraph.</span>\\n  <span>This is a note about it.</span>\\n</p>\\n​\\n<script>\\n$( \\\"p span\\\" ).first().addClass( \\\"highlight\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    first(): this;\\n    /**\\n     * Bind an event handler to the \\\"focus\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/focus/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    focus<TData>(eventData: TData,\\n                 handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'focus'>): this;\\n    /**\\n     * Bind an event handler to the \\\"focus\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/focus/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Fire focus.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>focus demo</title>\\n  <style>\\n  span {\\n    display: none;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><input type=\\\"text\\\"> <span>focus fire</span></p>\\n<p><input type=\\\"password\\\"> <span>focus fire</span></p>\\n​\\n<script>\\n$( \\\"input\\\" ).focus(function() {\\n  $( this ).next( \\\"span\\\" ).css( \\\"display\\\", \\\"inline\\\" ).fadeOut( 1000 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To stop people from writing in text input boxes, try:\\n```javascript\\n$( \\\"input[type=text]\\\" ).focus(function() {\\n  $( this ).blur();\\n});\\n```\\n     * @example ​ ````To focus on a login input box with id &#39;login&#39; on page startup, try:\\n```javascript\\n$( document ).ready(function() {\\n  $( \\\"#login\\\" ).focus();\\n});\\n```\\n     */\\n    focus(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'focus'> |\\n                    false): this;\\n    /**\\n     * Bind an event handler to the \\\"focusin\\\" event.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/focusin/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    focusin<TData>(eventData: TData,\\n                   handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'focusin'>): this;\\n    /**\\n     * Bind an event handler to the \\\"focusin\\\" event.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/focusin/ }\\\\`\\n     * @since 1.4\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Watch for a focus to occur within the paragraphs on the page.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>focusin demo</title>\\n  <style>\\n  span {\\n    display: none;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><input type=\\\"text\\\"> <span>focusin fire</span></p>\\n<p><input type=\\\"password\\\"> <span>focusin fire</span></p>\\n​\\n<script>\\n$( \\\"p\\\" ).focusin(function() {\\n  $( this ).find( \\\"span\\\" ).css( \\\"display\\\", \\\"inline\\\" ).fadeOut( 1000 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    focusin(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'focusin'> |\\n                      false): this;\\n    /**\\n     * Bind an event handler to the \\\"focusout\\\" JavaScript event.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/focusout/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    focusout<TData>(eventData: TData,\\n                    handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'focusout'>): this;\\n    /**\\n     * Bind an event handler to the \\\"focusout\\\" JavaScript event.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/focusout/ }\\\\`\\n     * @since 1.4\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Watch for a loss of focus to occur inside paragraphs and note the difference between the focusout count and the blur count. (The blur count does not change because those events do not bubble.)\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>focusout demo</title>\\n  <style>\\n  .inputs {\\n    float: left;\\n    margin-right: 1em;\\n  }\\n  .inputs p {\\n    margin-top: 0;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"inputs\\\">\\n  <p>\\n    <input type=\\\"text\\\"><br>\\n    <input type=\\\"text\\\">\\n  </p>\\n  <p>\\n    <input type=\\\"password\\\">\\n  </p>\\n</div>\\n<div id=\\\"focus-count\\\">focusout fire</div>\\n<div id=\\\"blur-count\\\">blur fire</div>\\n​\\n<script>\\nvar focus = 0,\\n  blur = 0;\\n$( \\\"p\\\" )\\n  .focusout(function() {\\n    focus++;\\n    $( \\\"#focus-count\\\" ).text( \\\"focusout fired: \\\" + focus + \\\"x\\\" );\\n  })\\n  .blur(function() {\\n    blur++;\\n    $( \\\"#blur-count\\\" ).text( \\\"blur fired: \\\" + blur + \\\"x\\\" );\\n  });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    focusout(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'focusout'> |\\n                       false): this;\\n    /**\\n     * Retrieve one of the elements matched by the jQuery object.\\n     * @param index A zero-based integer indicating which element to retrieve.\\n     * @see \\\\`{@link https://api.jquery.com/get/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Display the tag name of the click element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>get demo</title>\\n  <style>\\n  span {\\n    color: red;\\n  }\\n  div {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<span>&nbsp;</span>\\n<p>In this paragraph is an <span>important</span> section</p>\\n<div><input type=\\\"text\\\"></div>\\n​\\n<script>\\n$( \\\"*\\\", document.body ).click(function( event ) {\\n  event.stopPropagation();\\n  var domElement = $( this ).get( 0 );\\n  $( \\\"span:first\\\" ).text( \\\"Clicked on - \\\" + domElement.nodeName );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    get(index: number): TElement;\\n    /**\\n     * Retrieve the elements matched by the jQuery object.\\n     * @see \\\\`{@link https://api.jquery.com/get/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Select all divs in the document and return the DOM Elements as an Array; then use the built-in reverse() method to reverse that array.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>get demo</title>\\n  <style>\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nReversed - <span></span>\\n​\\n<div>One</div>\\n<div>Two</div>\\n<div>Three</div>\\n​\\n<script>\\nfunction display( divs ) {\\n  var a = [];\\n  for ( var i = 0; i < divs.length; i++ ) {\\n    a.push( divs[ i ].innerHTML );\\n  }\\n  $( \\\"span\\\" ).text( a.join(\\\" \\\") );\\n}\\ndisplay( $( \\\"div\\\" ).get().reverse() );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    get(): TElement[];\\n    /**\\n     * Reduce the set of matched elements to those that have a descendant that matches the selector or DOM element.\\n     * @param selector_contained _&#x40;param_ `selector_contained`\\n     * <br>\\n     * * `selector` — A string containing a selector expression to match elements against. <br>\\n     * * `contained` — A DOM element to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/has/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Check if an element is inside another.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>has demo</title>\\n  <style>\\n  .full {\\n    border: 1px solid red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul><li>Does the UL contain an LI?</li></ul>\\n​\\n<script>\\n$( \\\"ul\\\" ).append( \\\"<li>\\\" +\\n  ( $( \\\"ul\\\" ).has( \\\"li\\\" ).length ? \\\"Yes\\\" : \\\"No\\\" ) +\\n  \\\"</li>\\\" );\\n$( \\\"ul\\\" ).has( \\\"li\\\" ).addClass( \\\"full\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    has(selector_contained: string | Element): this;\\n    /**\\n     * Determine whether any of the matched elements are assigned the given class.\\n     * @param className The class name to search for.\\n     * @see \\\\`{@link https://api.jquery.com/hasClass/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Looks for the paragraph that contains &#39;selected&#39; as a class.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>hasClass demo</title>\\n  <style>\\n  p {\\n    margin: 8px;\\n    font-size: 16px;\\n  }\\n  .selected {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>This paragraph is black and is the first paragraph.</p>\\n<p class=\\\"selected\\\">This paragraph is red and is the second paragraph.</p>\\n<div id=\\\"result1\\\">First paragraph has selected class: </div>\\n<div id=\\\"result2\\\">Second paragraph has selected class: </div>\\n<div id=\\\"result3\\\">At least one paragraph has selected class: </div>\\n​\\n<script>\\n$( \\\"#result1\\\" ).append( $( \\\"p:first\\\" ).hasClass( \\\"selected\\\" ).toString() );\\n$( \\\"#result2\\\" ).append( $( \\\"p:last\\\" ).hasClass( \\\"selected\\\" ).toString() );\\n$( \\\"#result3\\\" ).append( $( \\\"p\\\" ).hasClass( \\\"selected\\\" ).toString() ) ;\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    hasClass(className: string): boolean;\\n    /**\\n     * Set the CSS height of every matched element.\\n     * @param value_function _&#x40;param_ `value_function`\\n     * <br>\\n     * * `value` — An integer representing the number of pixels, or an integer with an optional unit of measure\\n     *             appended (as a string). <br>\\n     * * `function` — A function returning the height to set. Receives the index position of the element in the set and\\n     *                the old height as arguments. Within the function, `this` refers to the current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/height/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.1\\n     * @example ​ ````To set the height of each div on click to 30px plus a color change.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>height demo</title>\\n  <style>\\n  div {\\n    width: 50px;\\n    height: 70px;\\n    float: left;\\n    margin: 5px;\\n    background: rgb(255,140,0);\\n    cursor: pointer;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<script>\\n$( \\\"div\\\" ).one( \\\"click\\\", function() {\\n  $( this ).height( 30 ).css({\\n    cursor: \\\"auto\\\",\\n    backgroundColor: \\\"green\\\"\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    height(value_function: string | number | ((this: TElement, index: number, height: number) => string | number)): this;\\n    /**\\n     * Get the current computed height for the first element in the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/height/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Show various heights.  Note the values are from the iframe so might be smaller than you expected.  The yellow highlight shows the iframe body.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>height demo</title>\\n  <style>\\n  body {\\n    background: yellow;\\n  }\\n  button {\\n    font-size: 12px;\\n    margin: 2px;\\n  }\\n  p {\\n    width: 150px;\\n    border: 1px red solid;\\n  }\\n  div {\\n    color: red;\\n    font-weight: bold;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"getp\\\">Get Paragraph Height</button>\\n<button id=\\\"getd\\\">Get Document Height</button>\\n<button id=\\\"getw\\\">Get Window Height</button>\\n​\\n<div>&nbsp;</div>\\n<p>\\n  Sample paragraph to test height\\n</p>\\n​\\n<script>\\nfunction showHeight( element, height ) {\\n  $( \\\"div\\\" ).text( \\\"The height for the \\\" + element + \\\" is \\\" + height + \\\"px.\\\" );\\n}\\n$( \\\"#getp\\\" ).click(function() {\\n  showHeight( \\\"paragraph\\\", $( \\\"p\\\" ).height() );\\n});\\n$( \\\"#getd\\\" ).click(function() {\\n  showHeight( \\\"document\\\", $( document ).height() );\\n});\\n$( \\\"#getw\\\" ).click(function() {\\n  showHeight( \\\"window\\\", $( window ).height() );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    height(): number | undefined;\\n    /**\\n     * Hide the matched elements.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/hide/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    hide(duration: JQuery.Duration, easing: string, complete: (this: TElement) => void): this;\\n    /**\\n     * Hide the matched elements.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing_complete _&#x40;param_ `easing_complete`\\n     * <br>\\n     * * `easing` — A string indicating which easing function to use for the transition. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/hide/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Animates all spans (words in this case) to hide fastly, completing each animation within 200 milliseconds. Once each animation is done, it starts the next one.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>hide demo</title>\\n  <style>\\n  span {\\n    background: #def3ca;\\n    padding: 3px;\\n    float: left;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"hider\\\">Hide</button>\\n<button id=\\\"shower\\\">Show</button>\\n<div>\\n  <span>Once</span> <span>upon</span> <span>a</span>\\n  <span>time</span> <span>there</span> <span>were</span>\\n  <span>three</span> <span>programmers...</span>\\n</div>\\n​\\n<script>\\n$( \\\"#hider\\\" ).click(function() {\\n  $( \\\"span:last-child\\\" ).hide( \\\"fast\\\", function() {\\n    // Use arguments.callee so we don't need a named function\\n    $( this ).prev().hide( \\\"fast\\\", arguments.callee );\\n  });\\n});\\n$( \\\"#shower\\\" ).click(function() {\\n  $( \\\"span\\\" ).show( 2000 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Hides the divs when clicked over 2 seconds, then removes the div element when its hidden.  Try clicking on more than one box at a time.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>hide demo</title>\\n  <style>\\n  div {\\n    background: #ece023;\\n    width: 30px;\\n    height: 40px;\\n    margin: 2px;\\n    float: left;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n​\\n<script>\\nfor ( var i = 0; i < 5; i++ ) {\\n  $( \\\"<div>\\\" ).appendTo( document.body );\\n}\\n$( \\\"div\\\" ).click(function() {\\n  $( this ).hide( 2000, function() {\\n    $( this ).remove();\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    hide(duration: JQuery.Duration, easing_complete: string | ((this: TElement) => void)): this;\\n    /**\\n     * Hide the matched elements.\\n     * @param duration_complete_options _&#x40;param_ `duration_complete_options`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element. <br>\\n     * * `options` — A map of additional options to pass to the method.\\n     * @see \\\\`{@link https://api.jquery.com/hide/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Hides all paragraphs then the link on click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>hide demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<a href=\\\"#\\\">Click to hide me too</a>\\n<p>Here is another paragraph</p>\\n​\\n<script>\\n$( \\\"p\\\" ).hide();\\n$( \\\"a\\\" ).click(function( event ) {\\n  event.preventDefault();\\n  $( this ).hide();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Animates all shown paragraphs to hide slowly, completing the animation within 600 milliseconds.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>hide demo</title>\\n  <style>\\n  p {\\n    background: #dad;\\n    font-weight: bold;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Hide 'em</button>\\n<p>Hiya</p>\\n<p>Such interesting text, eh?</p>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).hide( \\\"slow\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    hide(duration_complete_options?: JQuery.Duration | ((this: TElement) => void) | JQuery.EffectsOptions<TElement>): this;\\n    /**\\n     * Bind two handlers to the matched elements, to be executed when the mouse pointer enters and leaves the elements.\\n     * @param handlerIn A function to execute when the mouse pointer enters the element.\\n     * @param handlerOut A function to execute when the mouse pointer leaves the element.\\n     * @see \\\\`{@link https://api.jquery.com/hover/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated.\\n     *\\n     * **Cause**: The `.hover()` method is a shorthand for the use of the `mouseover`/`mouseout` events. It is often a poor user interface choice because it does not allow for any small amounts of delay between when the mouse enters or exits an area and when the event fires. This can make it quite difficult to use with UI widgets such as drop-down menus. For more information on the problems of hovering, see the \\\\`{@link http://cherne.net/brian/resources/jquery.hoverIntent.html hoverIntent plugin}\\\\`.\\n     *\\n     * **Solution**: Review uses of `.hover()` to determine if they are appropriate, and consider use of plugins such as `hoverIntent` as an alternative. The direct replacement for `.hover(fn1, fn2)`, is `.on(\\\"mouseenter\\\", fn1).on(\\\"mouseleave\\\", fn2)`.\\n     * @example ​ ````To add a special style to list items that are being hovered over, try:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>hover demo</title>\\n  <style>\\n  ul {\\n    margin-left: 20px;\\n    color: blue;\\n  }\\n  li {\\n    cursor: default;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li>Milk</li>\\n  <li>Bread</li>\\n  <li class=\\\"fade\\\">Chips</li>\\n  <li class=\\\"fade\\\">Socks</li>\\n</ul>\\n​\\n<script>\\n$( \\\"li\\\" ).hover(\\n  function() {\\n    $( this ).append( $( \\\"<span> ***</span>\\\" ) );\\n  }, function() {\\n    $( this ).find( \\\"span:last\\\" ).remove();\\n  }\\n);\\n​\\n$( \\\"li.fade\\\" ).hover(function() {\\n  $( this ).fadeOut( 100 );\\n  $( this ).fadeIn( 500 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To add a special style to table cells that are being hovered over, try:\\n```javascript\\n$( \\\"td\\\" ).hover(\\n  function() {\\n    $( this ).addClass( \\\"hover\\\" );\\n  }, function() {\\n    $( this ).removeClass( \\\"hover\\\" );\\n  }\\n);\\n```\\n     * @example ​ ````To unbind the above example use:\\n```javascript\\n$( \\\"td\\\" ).off( \\\"mouseenter mouseleave\\\" );\\n```\\n     */\\n    hover(handlerIn: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'mouseenter'> |\\n                     false,\\n          handlerOut: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'mouseleave'> |\\n                      false): this;\\n    /**\\n     * Bind a single handler to the matched elements, to be executed when the mouse pointer enters or leaves the elements.\\n     * @param handlerInOut A function to execute when the mouse pointer enters or leaves the element.\\n     * @see \\\\`{@link https://api.jquery.com/hover/ }\\\\`\\n     * @since 1.4\\n     * @deprecated ​ Deprecated.\\n     *\\n     * **Cause**: The `.hover()` method is a shorthand for the use of the `mouseover`/`mouseout` events. It is often a poor user interface choice because it does not allow for any small amounts of delay between when the mouse enters or exits an area and when the event fires. This can make it quite difficult to use with UI widgets such as drop-down menus. For more information on the problems of hovering, see the \\\\`{@link http://cherne.net/brian/resources/jquery.hoverIntent.html hoverIntent plugin}\\\\`.\\n     *\\n     * **Solution**: Review uses of `.hover()` to determine if they are appropriate, and consider use of plugins such as `hoverIntent` as an alternative. The direct replacement for `.hover(fn1, fn2)`, is `.on(\\\"mouseenter\\\", fn1).on(\\\"mouseleave\\\", fn2)`.\\n     * @example ​ ````Slide the next sibling LI up or down on hover, and toggle a class.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>hover demo</title>\\n  <style>\\n  ul {\\n    margin-left: 20px;\\n    color: blue;\\n  }\\n  li {\\n    cursor: default;\\n  }\\n  li.active {\\n    background: black;\\n    color: white;\\n  }\\n  span {\\n    color:red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li>Milk</li>\\n  <li>White</li>\\n  <li>Carrots</li>\\n  <li>Orange</li>\\n  <li>Broccoli</li>\\n  <li>Green</li>\\n</ul>\\n​\\n<script>\\n$( \\\"li\\\" )\\n  .filter( \\\":odd\\\" )\\n    .hide()\\n  .end()\\n  .filter( \\\":even\\\" )\\n    .hover(function() {\\n      $( this )\\n        .toggleClass( \\\"active\\\" )\\n        .next()\\n          .stop( true, true )\\n          .slideToggle();\\n    });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    hover(handlerInOut: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'mouseenter' | 'mouseleave'> |\\n                        false): this;\\n    /**\\n     * Set the HTML contents of each element in the set of matched elements.\\n     * @param htmlString_function _&#x40;param_ `htmlString_function`\\n     * <br>\\n     * * `htmlString` — A string of HTML to set as the content of each matched element. <br>\\n     * * `function` — A function returning the HTML content to set. Receives the index position of the element in the set\\n     *                and the old HTML value as arguments. jQuery empties the element before calling the function; use the\\n     *                oldhtml argument to reference the previous content. Within the function, `this` refers to the current\\n     *                element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/html/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @example ​ ````Add some html to each div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>html demo</title>\\n  <style>\\n  .red {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<span>Hello</span>\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<script>\\n$( \\\"div\\\" ).html( \\\"<span class='red'>Hello <b>Again</b></span>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Add some html to each div then immediately do further manipulations to the inserted html.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>html demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n    font-size: 18px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<script>\\n$( \\\"div\\\" ).html( \\\"<b>Wow!</b> Such excitement...\\\" );\\n$( \\\"div b\\\" )\\n  .append( document.createTextNode( \\\"!!!\\\" ) )\\n  .css( \\\"color\\\", \\\"red\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    html(htmlString_function: JQuery.htmlString |\\n                              JQuery.Node |\\n                              ((this: TElement, index: number, oldhtml: JQuery.htmlString) => JQuery.htmlString | JQuery.Node)): this;\\n    /**\\n     * Get the HTML contents of the first element in the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/html/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Click a paragraph to convert it from html to text.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>html demo</title>\\n  <style>\\n  p {\\n    margin: 8px;\\n    font-size: 20px;\\n    color: blue;\\n    cursor: pointer;\\n  }\\n  b {\\n    text-decoration: underline;\\n  }\\n  button {\\n    cursor: pointer;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  <b>Click</b> to change the <span id=\\\"tag\\\">html</span>\\n</p>\\n<p>\\n  to a <span id=\\\"text\\\">text</span> node.\\n</p>\\n<p>\\n  This <button name=\\\"nada\\\">button</button> does nothing.\\n</p>\\n​\\n<script>\\n$( \\\"p\\\" ).click(function() {\\n  var htmlString = $( this ).html();\\n  $( this ).text( htmlString );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    html(): string;\\n    /**\\n     * Search for a given element from among the matched elements.\\n     * @param selector_element _&#x40;param_ `selector_element`\\n     * <br>\\n     * * `selector` — A selector representing a jQuery collection in which to look for an element. <br>\\n     * * `element` — The DOM element or first element within the jQuery object to look for.\\n     * @see \\\\`{@link https://api.jquery.com/index/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @example ​ ````On click, returns the index (zero-based) of that div in the page.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>index demo</title>\\n  <style>\\n  div {\\n    background: yellow;\\n    margin: 5px;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<span>Click a div!</span>\\n<div>First div</div>\\n<div>Second div</div>\\n<div>Third div</div>\\n​\\n<script>\\n$( \\\"div\\\" ).click(function() {\\n  // `this` is the DOM element that was clicked\\n  var index = $( \\\"div\\\" ).index( this );\\n  $( \\\"span\\\" ).text( \\\"That was div index #\\\" + index );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Returns the index for the element with ID bar.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>index demo</title>\\n  <style>\\n  div {\\n    font-weight: bold;\\n    color: #090;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li id=\\\"foo\\\">foo</li>\\n  <li id=\\\"bar\\\">bar</li>\\n  <li id=\\\"baz\\\">baz</li>\\n</ul>\\n<div></div>\\n​\\n<script>\\nvar listItem = $( \\\"#bar\\\" );\\n$( \\\"div\\\" ).html( \\\"Index: \\\" + $( \\\"li\\\" ).index( listItem ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Returns the index for the first item in the jQuery collection.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>index demo</title>\\n  <style>\\n  div {\\n    font-weight: bold;\\n    color: #090;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li id=\\\"foo\\\">foo</li>\\n  <li id=\\\"bar\\\">bar</li>\\n  <li id=\\\"baz\\\">baz</li>\\n</ul>\\n<div></div>\\n​\\n<script>\\nvar listItems = $( \\\"li:gt(0)\\\" );\\n$( \\\"div\\\" ).html( \\\"Index: \\\" + $( \\\"li\\\" ).index( listItems ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Returns the index for the element with ID bar in relation to all &lt;li&gt; elements.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>index demo</title>\\n  <style>\\n  div {\\n    font-weight: bold;\\n    color: #090;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li id=\\\"foo\\\">foo</li>\\n  <li id=\\\"bar\\\">bar</li>\\n  <li id=\\\"baz\\\">baz</li>\\n</ul>\\n<div></div>\\n​\\n<script>\\n$( \\\"div\\\" ).html( \\\"Index: \\\" +  $( \\\"#bar\\\" ).index( \\\"li\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Returns the index for the element with ID bar in relation to its siblings.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>index demo</title>\\n  <style>\\n  div {\\n    font-weight: bold;\\n    color: #090;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li id=\\\"foo\\\">foo</li>\\n  <li id=\\\"bar\\\">bar</li>\\n  <li id=\\\"baz\\\">baz</li>\\n</ul>\\n<div></div>\\n​\\n<script>\\nvar barIndex = $( \\\"#bar\\\" ).index();\\n$( \\\"div\\\" ).html( \\\"Index: \\\" +  barIndex );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Returns -1, as there is no element with ID foobar.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>index demo</title>\\n  <style>\\n  div {\\n    font-weight: bold;\\n    color: #090;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li id=\\\"foo\\\">foo</li>\\n  <li id=\\\"bar\\\">bar</li>\\n  <li id=\\\"baz\\\">baz</li>\\n</ul>\\n<div></div>\\n​\\n<script>\\nvar foobar = $( \\\"li\\\" ).index( $( \\\"#foobar\\\" ) );\\n$( \\\"div\\\" ).html( \\\"Index: \\\" + foobar );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    index(selector_element?: JQuery.Selector | Element | JQuery): number;\\n    /**\\n     * Set the CSS inner height of each element in the set of matched elements.\\n     * @param value_function _&#x40;param_ `value_function`\\n     * <br>\\n     * * `value` — A number representing the number of pixels, or a number along with an optional unit of measure\\n     *             appended (as a string). <br>\\n     * * `function` — A function returning the inner height (including padding but not border) to set. Receives the index\\n     *                position of the element in the set and the old inner height as arguments. Within the function, `this`\\n     *                refers to the current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/innerHeight/ }\\\\`\\n     * @since 1.8.0\\n     * @example ​ ````Change the inner height of each div the first time it is clicked (and change its color).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>innerHeight demo</title>\\n  <style>\\ndiv {\\n  width: 60px;\\n  padding: 10px;\\n  height: 70px;\\n  float: left;\\n  margin: 5px;\\n  background: red;\\n  cursor: pointer;\\n}\\n.mod {\\n  background: blue;\\n  cursor: default;\\n}\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n​\\n<script>\\nvar modHeight = 70;\\n$( \\\"div\\\" ).one( \\\"click\\\", function() {\\n  $( this ).innerHeight( modHeight ).addClass( \\\"mod\\\" );\\n  modHeight -= 8;\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    innerHeight(value_function: string | number | ((this: TElement, index: number, height: number) => string | number)): this;\\n    /**\\n     * Get the current computed height for the first element in the set of matched elements, including padding but not border.\\n     * @see \\\\`{@link https://api.jquery.com/innerHeight/ }\\\\`\\n     * @since 1.2.6\\n     * @example ​ ````Get the innerHeight of a paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>innerHeight demo</title>\\n  <style>\\n  p {\\n    margin: 10px;\\n    padding: 5px;\\n    border: 2px solid #666;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p></p>\\n​\\n<script>\\nvar p = $( \\\"p:first\\\" );\\n$( \\\"p:last\\\" ).text( \\\"innerHeight:\\\" + p.innerHeight() );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    innerHeight(): number | undefined;\\n    /**\\n     * Set the CSS inner width of each element in the set of matched elements.\\n     * @param value_function _&#x40;param_ `value_function`\\n     * <br>\\n     * * `value` — A number representing the number of pixels, or a number along with an optional unit of measure\\n     *             appended (as a string). <br>\\n     * * `function` — A function returning the inner width (including padding but not border) to set. Receives the index\\n     *                position of the element in the set and the old inner width as arguments. Within the function, `this`\\n     *                refers to the current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/innerWidth/ }\\\\`\\n     * @since 1.8.0\\n     * @example ​ ````Change the inner width of each div the first time it is clicked (and change its color).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>innerWidth demo</title>\\n  <style>\\ndiv {\\nwidth: 60px;\\npadding: 10px;\\nheight: 50px;\\nfloat: left;\\nmargin: 5px;\\nbackground: red;\\ncursor: pointer;\\n}\\n.mod {\\nbackground: blue;\\ncursor: default;\\n}\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n​\\n<script>\\nvar modWidth = 60;\\n$( \\\"div\\\" ).one( \\\"click\\\", function() {\\n$( this ).innerWidth( modWidth ).addClass( \\\"mod\\\" );\\nmodWidth -= 8;\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    innerWidth(value_function: string | number | ((this: TElement, index: number, width: number) => string | number)): this;\\n    /**\\n     * Get the current computed inner width for the first element in the set of matched elements, including padding but not border.\\n     * @see \\\\`{@link https://api.jquery.com/innerWidth/ }\\\\`\\n     * @since 1.2.6\\n     * @example ​ ````Get the innerWidth of a paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>innerWidth demo</title>\\n  <style>\\n  p {\\n    margin: 10px;\\n    padding: 5px;\\n    border: 2px solid #666;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p></p>\\n​\\n<script>\\nvar p = $( \\\"p:first\\\" );\\n$( \\\"p:last\\\" ).text( \\\"innerWidth:\\\" + p.innerWidth() );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    innerWidth(): number | undefined;\\n    /**\\n     * Insert every element in the set of matched elements after the target.\\n     * @param target A selector, element, array of elements, HTML string, or jQuery object; the matched set of elements\\n     *               will be inserted after the element(s) specified by this parameter.\\n     * @see \\\\`{@link https://api.jquery.com/insertAfter/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Insert all paragraphs after an element with id of &quot;foo&quot;. Same as $( &quot;#foo&quot; ).after( &quot;p&quot; )\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>insertAfter demo</title>\\n  <style>\\n  #foo {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p> is what I said... </p>\\n<div id=\\\"foo\\\">FOO!</div>\\n​\\n<script>\\n$( \\\"p\\\" ).insertAfter( \\\"#foo\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    insertAfter(target: JQuery.Selector | JQuery.htmlString | JQuery.TypeOrArray<Node> | JQuery<Node>): this;\\n    /**\\n     * Insert every element in the set of matched elements before the target.\\n     * @param target A selector, element, array of elements, HTML string, or jQuery object; the matched set of elements\\n     *               will be inserted before the element(s) specified by this parameter.\\n     * @see \\\\`{@link https://api.jquery.com/insertBefore/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Insert all paragraphs before an element with id of &quot;foo&quot;. Same as $( &quot;#foo&quot; ).before( &quot;p&quot; )\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>insertBefore demo</title>\\n  <style>\\n  #foo {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"foo\\\">FOO!</div>\\n<p>I would like to say: </p>\\n​\\n<script>\\n$( \\\"p\\\" ).insertBefore( \\\"#foo\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    insertBefore(target: JQuery.Selector | JQuery.htmlString | JQuery.TypeOrArray<Node> | JQuery<Node>): this;\\n    /**\\n     * Check the current matched set of elements against a selector, element, or jQuery object and return true if at least one of these elements matches the given arguments.\\n     * @param selector_function_selection_elements _&#x40;param_ `selector_function_selection_elements`\\n     * <br>\\n     * * `selector` — A string containing a selector expression to match elements against. <br>\\n     * * `function` — A function used as a test for every element in the set. It accepts two arguments, `index`, which is\\n     *                the element's index in the jQuery collection, and `element`, which is the DOM element. Within the\\n     *                function, `this` refers to the current DOM element. <br>\\n     * * `selection` — An existing jQuery object to match the current set of elements against. <br>\\n     * * `elements` — One or more elements to match the current set of elements against.\\n     * @see \\\\`{@link https://api.jquery.com/is/ }\\\\`\\n     * @since 1.0\\n     * @since 1.6\\n     * @example ​ ````Shows a few ways is() can be used inside an event handler.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>is demo</title>\\n  <style>\\n  div {\\n    width: 60px;\\n    height: 60px;\\n    margin: 5px;\\n    float: left;\\n    border: 4px outset;\\n    background: green;\\n    text-align: center;\\n    font-weight: bolder;\\n    cursor: pointer;\\n  }\\n  .blue {\\n    background: blue;\\n  }\\n  .red {\\n    background: red;\\n  }\\n  span {\\n    color: white;\\n    font-size: 16px;\\n  }\\n  p {\\n    color: red;\\n    font-weight: bolder;\\n    background: yellow;\\n    margin: 3px;\\n    clear: left;\\n    display: none;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div class=\\\"blue\\\"></div>\\n<div></div>\\n<div class=\\\"red\\\"></div>\\n<div><br/><span>Peter</span></div>\\n<div class=\\\"blue\\\"></div>\\n<p>&nbsp;</p>\\n​\\n<script>\\n$( \\\"div\\\" ).one( \\\"click\\\", function() {\\n  if ( $( this ).is( \\\":first-child\\\" ) ) {\\n    $( \\\"p\\\" ).text( \\\"It's the first div.\\\" );\\n  } else if ( $( this ).is( \\\".blue,.red\\\" ) ) {\\n    $( \\\"p\\\" ).text( \\\"It's a blue or red div.\\\" );\\n  } else if ( $( this ).is( \\\":contains('Peter')\\\" ) ) {\\n    $( \\\"p\\\" ).text( \\\"It's Peter!\\\" );\\n  } else {\\n    $( \\\"p\\\" ).html( \\\"It's nothing <em>special</em>.\\\" );\\n  }\\n  $( \\\"p\\\" ).hide().slideDown( \\\"slow\\\" );\\n  $( this ).css({\\n    \\\"border-style\\\": \\\"inset\\\",\\n    cursor: \\\"default\\\"\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Returns true, because the parent of the input is a form element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>is demo</title>\\n  <style>\\n  div {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<form>\\n  <input type=\\\"checkbox\\\">\\n</form>\\n<div></div>\\n​\\n<script>\\nvar isFormParent = $( \\\"input[type='checkbox']\\\" ).parent().is( \\\"form\\\" );\\n$( \\\"div\\\" ).text( \\\"isFormParent = \\\" + isFormParent );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Returns false, because the parent of the input is a p element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>is demo</title>\\n  <style>\\n  div {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<form>\\n  <p><input type=\\\"checkbox\\\"></p>\\n</form>\\n<div></div>\\n​\\n<script>\\nvar isFormParent = $( \\\"input[type='checkbox']\\\" ).parent().is( \\\"form\\\" );\\n$( \\\"div\\\" ).text( \\\"isFormParent = \\\" + isFormParent );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Checks against an existing collection of alternating list elements. Blue, alternating list elements slide up while others turn red.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>is demo</title>\\n  <style>\\n  li {\\n    cursor: pointer;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul id=\\\"browsers\\\">\\n  <li>Chrome</li>\\n  <li>Safari</li>\\n  <li>Firefox</li>\\n  <li>Opera</li>\\n</ul>\\n​\\n<script>\\nvar alt = $( \\\"#browsers li:nth-child(2n)\\\" ).css( \\\"background\\\", \\\"#0ff\\\" );\\n$( \\\"li\\\" ).click(function() {\\n  var li = $( this );\\n  if ( li.is( alt ) ) {\\n    li.slideUp();\\n  } else {\\n    li.css( \\\"background\\\", \\\"red\\\" );\\n  }\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````An alternate way to achieve the above example using an element rather than a jQuery object. Checks against an existing collection of alternating list elements. Blue, alternating list elements slide up while others turn red.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>is demo</title>\\n  <style>\\n  li {\\n    cursor: pointer;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul id=\\\"browsers\\\">\\n  <li>Chrome</li>\\n  <li>Safari</li>\\n  <li>Firefox</li>\\n  <li>Opera</li>\\n</ul>\\n​\\n<script>\\nvar alt = $( \\\"#browsers li:nth-child(2n)\\\" ).css( \\\"background\\\", \\\"#0ff\\\" );\\n$( \\\"li\\\" ).click(function() {\\n  if ( alt.is( this ) ) {\\n    $( this ).slideUp();\\n  } else {\\n    $( this ).css( \\\"background\\\", \\\"red\\\" );\\n  }\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    is(selector_function_selection_elements: JQuery.Selector | JQuery.TypeOrArray<Element> | JQuery | ((this: TElement, index: number, element: TElement) => boolean)): boolean;\\n    /**\\n     * Bind an event handler to the \\\"keydown\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/keydown/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    keydown<TData>(eventData: TData,\\n                   handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'keydown'>): this;\\n    /**\\n     * Bind an event handler to the \\\"keydown\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/keydown/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Show the event object for the keydown handler when a key is pressed in the input.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>keydown demo</title>\\n  <style>\\n  fieldset {\\n    margin-bottom: 1em;\\n  }\\n  input {\\n    display: block;\\n    margin-bottom: .25em;\\n  }\\n  #print-output {\\n    width: 100%;\\n  }\\n  .print-output-line {\\n    white-space: pre;\\n    padding: 5px;\\n    font-family: monaco, monospace;\\n    font-size: .7em;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<form>\\n  <fieldset>\\n    <label for=\\\"target\\\">Type Something:</label>\\n    <input id=\\\"target\\\" type=\\\"text\\\">\\n  </fieldset>\\n</form>\\n<button id=\\\"other\\\">\\n  Trigger the handler\\n</button>\\n<script type=\\\"text/javascript\\\" src=\\\"/resources/events.js\\\"></script>\\n​\\n<script>\\nvar xTriggered = 0;\\n$( \\\"#target\\\" ).keydown(function( event ) {\\n  if ( event.which == 13 ) {\\n   event.preventDefault();\\n  }\\n  xTriggered++;\\n  var msg = \\\"Handler for .keydown() called \\\" + xTriggered + \\\" time(s).\\\";\\n  $.print( msg, \\\"html\\\" );\\n  $.print( event );\\n});\\n​\\n$( \\\"#other\\\" ).click(function() {\\n  $( \\\"#target\\\" ).keydown();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    keydown(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'keydown'> |\\n                      false): this;\\n    /**\\n     * Bind an event handler to the \\\"keypress\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/keypress/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    keypress<TData>(eventData: TData,\\n                    handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'keypress'>): this;\\n    /**\\n     * Bind an event handler to the \\\"keypress\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/keypress/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Show the event object when a key is pressed in the input. Note: This demo relies on a simple $.print() plugin (https://api.jquery.com/resources/events.js) for the event object&#39;s output.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>keypress demo</title>\\n  <style>\\n  fieldset {\\n    margin-bottom: 1em;\\n  }\\n  input {\\n    display: block;\\n    margin-bottom: .25em;\\n  }\\n  #print-output {\\n    width: 100%;\\n  }\\n  .print-output-line {\\n    white-space: pre;\\n    padding: 5px;\\n    font-family: monaco, monospace;\\n    font-size: .7em;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<form>\\n  <fieldset>\\n    <label for=\\\"target\\\">Type Something:</label>\\n    <input id=\\\"target\\\" type=\\\"text\\\">\\n  </fieldset>\\n</form>\\n<button id=\\\"other\\\">\\n  Trigger the handler\\n</button>\\n<script src=\\\"/resources/events.js\\\"></script>\\n​\\n<script>\\nvar xTriggered = 0;\\n$( \\\"#target\\\" ).keypress(function( event ) {\\n  if ( event.which == 13 ) {\\n     event.preventDefault();\\n  }\\n  xTriggered++;\\n  var msg = \\\"Handler for .keypress() called \\\" + xTriggered + \\\" time(s).\\\";\\n  $.print( msg, \\\"html\\\" );\\n  $.print( event );\\n});\\n​\\n$( \\\"#other\\\" ).click(function() {\\n  $( \\\"#target\\\" ).keypress();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    keypress(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'keypress'> |\\n                       false): this;\\n    /**\\n     * Bind an event handler to the \\\"keyup\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/keyup/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    keyup<TData>(eventData: TData,\\n                 handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'keyup'>): this;\\n    /**\\n     * Bind an event handler to the \\\"keyup\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/keyup/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Show the event object for the keyup handler (using a simple $.print plugin) when a key is released in the input.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>keyup demo</title>\\n  <style>\\n  fieldset {\\n    margin-bottom: 1em;\\n  }\\n  input {\\n    display: block;\\n    margin-bottom: .25em;\\n  }\\n  #print-output {\\n    width: 100%;\\n  }\\n  .print-output-line {\\n    white-space: pre;\\n    padding: 5px;\\n    font-family: monaco, monospace;\\n    font-size: .7em;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<form>\\n  <fieldset>\\n    <label for=\\\"target\\\">Type Something:</label>\\n    <input id=\\\"target\\\" type=\\\"text\\\">\\n  </fieldset>\\n</form>\\n<button id=\\\"other\\\">\\n  Trigger the handler\\n</button>\\n<script type=\\\"text/javascript\\\" src=\\\"/resources/events.js\\\"></script>\\n​\\n<script>\\nvar xTriggered = 0;\\n$( \\\"#target\\\" ).keyup(function( event ) {\\n  xTriggered++;\\n  var msg = \\\"Handler for .keyup() called \\\" + xTriggered + \\\" time(s).\\\";\\n  $.print( msg, \\\"html\\\" );\\n  $.print( event );\\n}).keydown(function( event ) {\\n  if ( event.which == 13 ) {\\n    event.preventDefault();\\n  }\\n});\\n​\\n$( \\\"#other\\\").click(function() {\\n  $( \\\"#target\\\" ).keyup();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    keyup(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'keyup'> |\\n                    false): this;\\n    /**\\n     * Reduce the set of matched elements to the final one in the set.\\n     * @see \\\\`{@link https://api.jquery.com/last/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Highlight the last span in a paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>last demo</title>\\n  <style>\\n  .highlight {\\n    background-color: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><span>Look:</span> <span>This is some text in a paragraph.</span> <span>This is a note about it.</span></p>\\n​\\n<script>\\n$( \\\"p span\\\" ).last().addClass( \\\"highlight\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    last(): this;\\n    /**\\n     * Load data from the server and place the returned HTML into the matched element.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param data A plain object or string that is sent to the server with the request.\\n     * @param complete A callback function that is executed when the request completes.\\n     * @see \\\\`{@link https://api.jquery.com/load/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Same as above, but will POST the additional parameters to the server and a callback that is executed when the server is finished responding.\\n```javascript\\n$( \\\"#feeds\\\" ).load( \\\"feeds.php\\\", { limit: 25 }, function() {\\n  alert( \\\"The last 25 entries in the feed have been loaded\\\" );\\n});\\n```\\n     */\\n    load(url: string,\\n         data: string | JQuery.PlainObject,\\n         complete: (this: TElement, responseText: string, textStatus: JQuery.Ajax.TextStatus, jqXHR: JQuery.jqXHR) => void): this;\\n    /**\\n     * Load data from the server and place the returned HTML into the matched element.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param complete_data _&#x40;param_ `complete_data`\\n     * <br>\\n     * * `complete` — A callback function that is executed when the request completes. <br>\\n     * * `data` — A plain object or string that is sent to the server with the request.\\n     * @see \\\\`{@link https://api.jquery.com/load/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Load another page&#39;s list items into an ordered list.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>load demo</title>\\n  <style>\\n  body {\\n    font-size: 12px;\\n    font-family: Arial;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<b>Projects:</b>\\n<ol id=\\\"new-projects\\\"></ol>\\n​\\n<script>\\n$( \\\"#new-projects\\\" ).load( \\\"/resources/load.html #projects li\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Display a notice if the Ajax request encounters an error.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>load demo</title>\\n  <style>\\n  body {\\n    font-size: 12px;\\n    font-family: Arial;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<b>Successful Response (should be blank):</b>\\n<div id=\\\"success\\\"></div>\\n<b>Error Response:</b>\\n<div id=\\\"error\\\"></div>\\n​\\n<script>\\n$( \\\"#success\\\" ).load( \\\"/not-here.php\\\", function( response, status, xhr ) {\\n  if ( status == \\\"error\\\" ) {\\n    var msg = \\\"Sorry but there was an error: \\\";\\n    $( \\\"#error\\\" ).html( msg + xhr.status + \\\" \\\" + xhr.statusText );\\n  }\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Load the feeds.html file into the div with the ID of feeds.\\n```javascript\\n$( \\\"#feeds\\\" ).load( \\\"feeds.html\\\" );\\n```\\n     * @example ​ ````pass arrays of data to the server.\\n```javascript\\n$( \\\"#objectID\\\" ).load( \\\"test.php\\\", { \\\"choices[]\\\": [ \\\"Jon\\\", \\\"Susan\\\" ] } );\\n```\\n     */\\n    load(url: string,\\n         complete_data?: ((this: TElement, responseText: string, textStatus: JQuery.Ajax.TextStatus, jqXHR: JQuery.jqXHR) => void) | string | JQuery.PlainObject): this;\\n    /**\\n     * Pass each element in the current matched set through a function, producing a new jQuery object containing the return values.\\n     * @param callback A function object that will be invoked for each element in the current set.\\n     * @see \\\\`{@link https://api.jquery.com/map/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Build a list of all the values within a form.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>map demo</title>\\n  <style>\\n  p {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><b>Values: </b></p>\\n<form>\\n  <input type=\\\"text\\\" name=\\\"name\\\" value=\\\"John\\\">\\n  <input type=\\\"text\\\" name=\\\"password\\\" value=\\\"password\\\">\\n  <input type=\\\"text\\\" name=\\\"url\\\" value=\\\"https://johnresig.com/\\\">\\n</form>\\n​\\n<script>\\n$( \\\"p\\\" )\\n  .append( $( \\\"input\\\" ).map(function() {\\n    return $( this ).val();\\n  })\\n  .get()\\n  .join( \\\", \\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````A contrived example to show some functionality.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>map demo</title>\\n  <style>\\n  body {\\n    font-size: 16px;\\n  }\\n  ul {\\n    float: left;\\n    margin: 0 30px;\\n    color: blue;\\n  }\\n  #results {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li>First</li>\\n  <li>Second</li>\\n  <li>Third</li>\\n  <li>Fourth</li>\\n  <li>Fifth</li>\\n</ul>\\n<ul id=\\\"results\\\">\\n</ul>\\n​\\n<script>\\nvar mappedItems = $( \\\"li\\\" ).map(function( index ) {\\n  var replacement = $( \\\"<li>\\\" ).text( $( this ).text() ).get( 0 );\\n  if ( index === 0 ) {\\n​\\n    // Make the first item all caps\\n    $( replacement ).text( $( replacement ).text().toUpperCase() );\\n  } else if ( index === 1 || index === 3 ) {\\n​\\n    // Delete the second and fourth items\\n    replacement = null;\\n  } else if ( index === 2 ) {\\n​\\n    // Make two of the third item and add some text\\n    replacement = [ replacement, $( \\\"<li>\\\" ).get( 0 ) ];\\n    $( replacement[ 0 ] ).append( \\\"<b> - A</b>\\\" );\\n    $( replacement[ 1 ] ).append( \\\"Extra <b> - B</b>\\\" );\\n  }\\n​\\n  // Replacement will be a dom element, null,\\n  // or an array of dom elements\\n  return replacement;\\n});\\n$( \\\"#results\\\" ).append( mappedItems );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Equalize the heights of the divs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>map demo</title>\\n  <style>\\n  div {\\n    width: 40px;\\n    float: left;\\n  }\\n  input {\\n    clear: left;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input type=\\\"button\\\" value=\\\"equalize div heights\\\">\\n<div style=\\\"background: red; height: 40px; \\\"></div>\\n<div style=\\\"background: green; height: 70px;\\\"></div>\\n<div style=\\\"background: blue; height: 50px; \\\"></div>\\n​\\n<script>\\n$.fn.equalizeHeights = function() {\\n  var maxHeight = this.map(function( i, e ) {\\n    return $( e ).height();\\n  }).get();\\n  return this.height( Math.max.apply( this, maxHeight ) );\\n};\\n​\\n$( \\\"input\\\" ).click(function() {\\n  $( \\\"div\\\" ).equalizeHeights();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    map<TReturn>(callback: (this: TElement, index: number, domElement: TElement) => JQuery.TypeOrArray<TReturn> | null | undefined): JQuery<TReturn>;\\n    /**\\n     * Bind an event handler to the \\\"mousedown\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mousedown/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    mousedown<TData>(eventData: TData,\\n                     handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'mousedown'>): this;\\n    /**\\n     * Bind an event handler to the \\\"mousedown\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mousedown/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Show texts when mouseup and mousedown event triggering.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>mousedown demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Press mouse and release here.</p>\\n​\\n<script>\\n$( \\\"p\\\" )\\n  .mouseup(function() {\\n    $( this ).append( \\\"<span style='color:#f00;'>Mouse up.</span>\\\" );\\n  })\\n  .mousedown(function() {\\n    $( this ).append( \\\"<span style='color:#00f;'>Mouse down.</span>\\\" );\\n  });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    mousedown(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'mousedown'> |\\n                        false): this;\\n    /**\\n     * Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mouseenter/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    mouseenter<TData>(eventData: TData,\\n                      handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'mouseenter'>): this;\\n    /**\\n     * Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mouseenter/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Show texts when mouseenter and mouseout event triggering.\\n    mouseover fires when the pointer moves into the child element as well, while mouseenter fires only when the pointer moves into the bound element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>mouseenter demo</title>\\n  <style>\\n  div.out {\\n    width: 40%;\\n    height: 120px;\\n    margin: 0 15px;\\n    background-color: #d6edfc;\\n    float: left;\\n  }\\n  div.in {\\n    width: 60%;\\n    height: 60%;\\n    background-color: #fc0;\\n    margin: 10px auto;\\n  }\\n  p {\\n    line-height: 1em;\\n    margin: 0;\\n    padding: 0;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"out overout\\\">\\n  <p>move your mouse</p>\\n  <div class=\\\"in overout\\\"><p>move your mouse</p><p>0</p></div>\\n  <p>0</p>\\n</div>\\n​\\n<div class=\\\"out enterleave\\\">\\n  <p>move your mouse</p>\\n  <div class=\\\"in enterleave\\\"><p>move your mouse</p><p>0</p></div>\\n  <p>0</p>\\n</div>\\n​\\n<script>\\nvar i = 0;\\n$( \\\"div.overout\\\" )\\n  .mouseover(function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse over\\\" );\\n    $( \\\"p:last\\\", this ).text( ++i );\\n  })\\n  .mouseout(function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse out\\\" );\\n  });\\n​\\nvar n = 0;\\n$( \\\"div.enterleave\\\" )\\n  .mouseenter(function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse enter\\\" );\\n    $( \\\"p:last\\\", this ).text( ++n );\\n  })\\n  .mouseleave(function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse leave\\\" );\\n  });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    mouseenter(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'mouseenter'> |\\n                         false): this;\\n    /**\\n     * Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mouseleave/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    mouseleave<TData>(eventData: TData,\\n                      handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'mouseleave'>): this;\\n    /**\\n     * Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mouseleave/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Show number of times mouseout and mouseleave events are triggered. mouseout fires when the pointer moves out of child element as well, while mouseleave fires only when the pointer moves out of the bound element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>mouseleave demo</title>\\n  <style>\\n  div.out {\\n    width: 40%;\\n    height: 120px;\\n    margin: 0 15px;\\n    background-color: #d6edfc;\\n    float: left;\\n  }\\n  div.in {\\n    width: 60%;\\n    height: 60%;\\n    background-color: #fc0;\\n    margin: 10px auto;\\n  }\\n  p {\\n    line-height: 1em;\\n    margin: 0;\\n    padding: 0;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"out overout\\\">\\n  <p>move your mouse</p>\\n  <div class=\\\"in overout\\\"><p>move your mouse</p><p>0</p></div>\\n  <p>0</p>\\n</div>\\n<div class=\\\"out enterleave\\\">\\n  <p>move your mouse</p>\\n  <div class=\\\"in enterleave\\\"><p>move your mouse</p><p>0</p></div>\\n  <p>0</p>\\n</div>\\n​\\n<script>\\nvar i = 0;\\n$( \\\"div.overout\\\" )\\n  .mouseover(function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse over\\\" );\\n  })\\n  .mouseout(function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse out\\\" );\\n    $( \\\"p:last\\\", this ).text( ++i );\\n  });\\n​\\nvar n = 0;\\n$( \\\"div.enterleave\\\" )\\n  .mouseenter(function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse enter\\\" );\\n  })\\n  .mouseleave(function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse leave\\\" );\\n    $( \\\"p:last\\\", this ).text( ++n );\\n  });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    mouseleave(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'mouseleave'> |\\n                         false): this;\\n    /**\\n     * Bind an event handler to the \\\"mousemove\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mousemove/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    mousemove<TData>(eventData: TData,\\n                     handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'mousemove'>): this;\\n    /**\\n     * Bind an event handler to the \\\"mousemove\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mousemove/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Show the mouse coordinates when the mouse is moved over the yellow div.  Coordinates are relative to the window, which in this case is the iframe.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>mousemove demo</title>\\n  <style>\\n  div {\\n    width: 220px;\\n    height: 170px;\\n    margin: 10px 50px 10px 10px;\\n    background: yellow;\\n    border: 2px groove;\\n    float: right;\\n  }\\n  p {\\n    margin: 0;\\n    margin-left: 10px;\\n    color: red;\\n    width: 220px;\\n    height: 120px;\\n    padding-top: 70px;\\n    float: left;\\n    font-size: 14px;\\n  }\\n  span {\\n    display: block;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  <span>Move the mouse over the div.</span>\\n  <span>&nbsp;</span>\\n</p>\\n<div></div>\\n​\\n<script>\\n$( \\\"div\\\" ).mousemove(function( event ) {\\n  var pageCoords = \\\"( \\\" + event.pageX + \\\", \\\" + event.pageY + \\\" )\\\";\\n  var clientCoords = \\\"( \\\" + event.clientX + \\\", \\\" + event.clientY + \\\" )\\\";\\n  $( \\\"span:first\\\" ).text( \\\"( event.pageX, event.pageY ) : \\\" + pageCoords );\\n  $( \\\"span:last\\\" ).text( \\\"( event.clientX, event.clientY ) : \\\" + clientCoords );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    mousemove(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'mousemove'> |\\n                        false): this;\\n    /**\\n     * Bind an event handler to the \\\"mouseout\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mouseout/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    mouseout<TData>(eventData: TData,\\n                    handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'mouseout'>): this;\\n    /**\\n     * Bind an event handler to the \\\"mouseout\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mouseout/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Show the number of times mouseout and mouseleave events are triggered.\\n  mouseout fires when the pointer moves out of the child element as well, while mouseleave fires only when the pointer moves out of the bound element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>mouseout demo</title>\\n  <style>\\n  div.out {\\n    width: 40%;\\n    height: 120px;\\n    margin: 0 15px;\\n    background-color: #d6edfc;\\n    float: left;\\n  }\\n  div.in {\\n    width: 60%;\\n    height: 60%;\\n    background-color: #fc0;\\n    margin: 10px auto;\\n  }\\n  p {\\n    line-height: 1em;\\n    margin: 0;\\n    padding: 0;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"out overout\\\">\\n  <p>move your mouse</p>\\n  <div class=\\\"in overout\\\"><p>move your mouse</p><p>0</p></div>\\n  <p>0</p>\\n</div>\\n​\\n<div class=\\\"out enterleave\\\">\\n  <p>move your mouse</p>\\n  <div class=\\\"in enterleave\\\"><p>move your mouse</p><p>0</p></div>\\n  <p>0</p>\\n</div>\\n​\\n<script>\\nvar i = 0;\\n$( \\\"div.overout\\\" )\\n  .mouseout(function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse out\\\" );\\n    $( \\\"p:last\\\", this ).text( ++i );\\n  })\\n  .mouseover(function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse over\\\" );\\n  });\\n​\\nvar n = 0;\\n$( \\\"div.enterleave\\\" )\\n  .on( \\\"mouseenter\\\", function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse enter\\\" );\\n  })\\n  .on( \\\"mouseleave\\\", function() {\\n    $( \\\"p:first\\\", this ).text( \\\"mouse leave\\\" );\\n    $( \\\"p:last\\\", this ).text( ++n );\\n  });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    mouseout(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'mouseout'> |\\n                       false): this;\\n    /**\\n     * Bind an event handler to the \\\"mouseover\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mouseover/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    mouseover<TData>(eventData: TData,\\n                     handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'mouseover'>): this;\\n    /**\\n     * Bind an event handler to the \\\"mouseover\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mouseover/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Show the number of times mouseover and mouseenter events are triggered.\\nmouseover fires when the pointer moves into the child element as well, while mouseenter fires only when the pointer moves into the bound element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>mouseover demo</title>\\n  <style>\\n  div.out {\\n    width: 40%;\\n    height: 120px;\\n    margin: 0 15px;\\n    background-color: #d6edfc;\\n    float: left;\\n  }\\n  div.in {\\n    width: 60%;\\n    height: 60%;\\n    background-color: #fc0;\\n    margin: 10px auto;\\n  }\\n  p {\\n    line-height: 1em;\\n    margin: 0;\\n    padding: 0;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"out overout\\\">\\n  <span>move your mouse</span>\\n  <div class=\\\"in\\\">\\n  </div>\\n</div>\\n​\\n<div class=\\\"out enterleave\\\">\\n  <span>move your mouse</span>\\n  <div class=\\\"in\\\">\\n  </div>\\n</div>\\n​\\n<script>\\nvar i = 0;\\n$( \\\"div.overout\\\" )\\n  .mouseover(function() {\\n    i += 1;\\n    $( this ).find( \\\"span\\\" ).text( \\\"mouse over x \\\" + i );\\n  })\\n  .mouseout(function() {\\n    $( this ).find( \\\"span\\\" ).text( \\\"mouse out \\\" );\\n  });\\n​\\nvar n = 0;\\n$( \\\"div.enterleave\\\" )\\n  .mouseenter(function() {\\n    n += 1;\\n    $( this ).find( \\\"span\\\" ).text( \\\"mouse enter x \\\" + n );\\n  })\\n  .mouseleave(function() {\\n    $( this ).find( \\\"span\\\" ).text( \\\"mouse leave\\\" );\\n  });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    mouseover(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'mouseover'> |\\n                        false): this;\\n    /**\\n     * Bind an event handler to the \\\"mouseup\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mouseup/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    mouseup<TData>(eventData: TData,\\n                   handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'mouseup'>): this;\\n    /**\\n     * Bind an event handler to the \\\"mouseup\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/mouseup/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````Show texts when mouseup and mousedown event triggering.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>mouseup demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Press mouse and release here.</p>\\n​\\n<script>\\n$( \\\"p\\\" )\\n  .mouseup(function() {\\n    $( this ).append( \\\"<span style='color:#f00;'>Mouse up.</span>\\\" );\\n  })\\n  .mousedown(function() {\\n    $( this ).append( \\\"<span style='color:#00f;'>Mouse down.</span>\\\" );\\n  });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    mouseup(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'mouseup'> |\\n                      false): this;\\n    /**\\n     * Get the immediately following sibling of each element in the set of matched elements. If a selector is provided, it retrieves the next sibling only if it matches that selector.\\n     * @param selector A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/next/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Find the very next sibling of each disabled button and change its text &quot;this button is disabled&quot;.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>next demo</title>\\n  <style>\\n  span {\\n    color: blue;\\n    font-weight: bold;\\n  }\\n  button {\\n    width: 100px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div><button disabled=\\\"disabled\\\">First</button> - <span></span></div>\\n<div><button>Second</button> - <span></span></div>\\n<div><button disabled=\\\"disabled\\\">Third</button> - <span></span></div>\\n​\\n<script>\\n$( \\\"button[disabled]\\\" ).next().text( \\\"this button is disabled\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Find the very next sibling of each paragraph. Keep only the ones with a class &quot;selected&quot;.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>next demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p class=\\\"selected\\\">Hello Again</p>\\n<div><span>And Again</span></div>\\n​\\n<script>\\n$( \\\"p\\\" ).next( \\\".selected\\\" ).css( \\\"background\\\", \\\"yellow\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    next(selector?: JQuery.Selector): this;\\n    /**\\n     * Get all following siblings of each element in the set of matched elements, optionally filtered by a selector.\\n     * @param selector A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/nextAll/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Locate all the divs after the first and give them a class.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>nextAll demo</title>\\n  <style>\\n  div {\\n    width: 80px;\\n    height: 80px;\\n    background: #abc;\\n    border: 2px solid black;\\n    margin: 10px;\\n    float: left;\\n  }\\n  div.after {\\n    border-color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>first</div>\\n<div>sibling<div>child</div></div>\\n<div>sibling</div>\\n<div>sibling</div>​\\n<script>\\n$( \\\"div:first\\\" ).nextAll().addClass( \\\"after\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Locate all the paragraphs after the second child in the body and give them a class.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>nextAll demo</title>\\n  <style>\\n  div, p {\\n    width: 60px;\\n    height: 60px;\\n    background: #abc;\\n    border: 2px solid black;\\n    margin: 10px;\\n    float: left;\\n  }\\n  .after {\\n    border-color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>p</p>\\n<div>div</div>\\n<p>p</p>\\n<p>p</p>\\n<div>div</div>\\n<p>p</p>\\n<div>div</div>\\n​\\n<script>\\n$( \\\":nth-child(1)\\\" ).nextAll( \\\"p\\\" ).addClass( \\\"after\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    nextAll(selector?: string): this;\\n    /**\\n     * Get all following siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object passed.\\n     * @param selector_element _&#x40;param_ `selector_element`\\n     * <br>\\n     * * `selector` — A string containing a selector expression to indicate where to stop matching following sibling elements. <br>\\n     * * `element` — A DOM node or jQuery object indicating where to stop matching following sibling elements.\\n     * @param filter A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/nextUntil/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @example ​ ````Find the siblings that follow &lt;dt id=&quot;term-2&quot;&gt; up to the next &lt;dt&gt; and give them a red background color. Also, find &lt;dd&gt; siblings that follow &lt;dt id=&quot;term-1&quot;&gt; up to &lt;dt id=&quot;term-3&quot;&gt; and give them a green text color.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>nextUntil demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<dl>\\n  <dt id=\\\"term-1\\\">term 1</dt>\\n  <dd>definition 1-a</dd>\\n  <dd>definition 1-b</dd>\\n  <dd>definition 1-c</dd>\\n  <dd>definition 1-d</dd>\\n  <dt id=\\\"term-2\\\">term 2</dt>\\n  <dd>definition 2-a</dd>\\n  <dd>definition 2-b</dd>\\n  <dd>definition 2-c</dd>\\n  <dt id=\\\"term-3\\\">term 3</dt>\\n  <dd>definition 3-a</dd>\\n  <dd>definition 3-b</dd>\\n</dl>\\n​\\n<script>\\n$( \\\"#term-2\\\" )\\n  .nextUntil( \\\"dt\\\" )\\n    .css( \\\"background-color\\\", \\\"red\\\" );\\nvar term3 = document.getElementById( \\\"term-3\\\" );\\n$( \\\"#term-1\\\" )\\n  .nextUntil( term3, \\\"dd\\\" )\\n    .css( \\\"color\\\", \\\"green\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    nextUntil(selector_element?: JQuery.Selector | Element | JQuery, filter?: JQuery.Selector): this;\\n    /**\\n     * Remove elements from the set of matched elements.\\n     * @param selector_function_selection _&#x40;param_ `selector_function_selection`\\n     * <br>\\n     * * `selector` — A string containing a selector expression, a DOM element, or an array of elements to match against the set. <br>\\n     * * `function` — A function used as a test for each element in the set. It accepts two arguments, `index`, which is\\n     *                the element's index in the jQuery collection, and `element`, which is the DOM element. Within the\\n     *                function, `this` refers to the current DOM element. <br>\\n     * * `selection` — An existing jQuery object to match the current set of elements against.\\n     * @see \\\\`{@link https://api.jquery.com/not/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @example ​ ````Adds a border to divs that are not green or blue.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>not demo</title>\\n  <style>\\n  div {\\n    width: 50px;\\n    height: 50px;\\n    margin: 10px;\\n    float: left;\\n    background: yellow;\\n    border: 2px solid white;\\n  }\\n  .green {\\n    background: #8f8;\\n  }\\n  .gray {\\n    background: #ccc;\\n  }\\n  #blueone {\\n    background: #99f;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div id=\\\"blueone\\\"></div>\\n<div></div>\\n<div class=\\\"green\\\"></div>\\n<div class=\\\"green\\\"></div>\\n<div class=\\\"gray\\\"></div>\\n<div></div>\\n​\\n<script>\\n$( \\\"div\\\" ).not( \\\".green, #blueone\\\" )\\n  .css( \\\"border-color\\\", \\\"red\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Removes the element with the ID &quot;selected&quot; from the set of all paragraphs.\\n```javascript\\n$( \\\"p\\\" ).not( $( \\\"#selected\\\" )[ 0 ] );\\n```\\n     * @example ​ ````Removes the element with the ID &quot;selected&quot; from the set of all paragraphs.\\n```javascript\\n$( \\\"p\\\" ).not( \\\"#selected\\\" );\\n```\\n     * @example ​ ````Removes all elements that match &quot;div p.selected&quot; from the total set of all paragraphs.\\n```javascript\\n$( \\\"p\\\" ).not( $( \\\"div p.selected\\\" ) );\\n```\\n     */\\n    not(selector_function_selection: JQuery.Selector | JQuery.TypeOrArray<Element> | JQuery | ((this: TElement, index: number, element: TElement) => boolean)): this;\\n    /**\\n     * Remove an event handler.\\n     * @param events One or more space-separated event types and optional namespaces, or just namespaces, such as\\n     *               \\\"click\\\", \\\"keydown.myPlugin\\\", or \\\".myPlugin\\\".\\n     * @param selector A selector which should match the one originally passed to .on() when attaching event handlers.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/off/ }\\\\`\\n     * @since 1.7\\n     * @example ​ ````Add and remove event handlers on the colored button.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>off demo</title>\\n  <style>\\n  button {\\n    margin: 5px;\\n  }\\n  button#theone {\\n    color: red;\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"theone\\\">Does nothing...</button>\\n<button id=\\\"bind\\\">Add Click</button>\\n<button id=\\\"unbind\\\">Remove Click</button>\\n<div style=\\\"display:none;\\\">Click!</div>\\n​\\n<script>\\nfunction flash() {\\n  $( \\\"div\\\" ).show().fadeOut( \\\"slow\\\" );\\n}\\n$( \\\"#bind\\\" ).click(function() {\\n  $( \\\"body\\\" )\\n    .on( \\\"click\\\", \\\"#theone\\\", flash )\\n    .find( \\\"#theone\\\" )\\n      .text( \\\"Can Click!\\\" );\\n});\\n$( \\\"#unbind\\\" ).click(function() {\\n  $( \\\"body\\\" )\\n    .off( \\\"click\\\", \\\"#theone\\\", flash )\\n    .find( \\\"#theone\\\" )\\n      .text( \\\"Does nothing...\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Remove just one previously bound handler by passing it as the third argument:\\n```javascript\\nvar foo = function() {\\n  // Code to handle some kind of event\\n};\\n​\\n// ... Now foo will be called when paragraphs are clicked ...\\n$( \\\"body\\\" ).on( \\\"click\\\", \\\"p\\\", foo );\\n​\\n// ... Foo will no longer be called.\\n$( \\\"body\\\" ).off( \\\"click\\\", \\\"p\\\", foo );\\n```\\n     */\\n    off<TType extends string>(\\n        events: TType,\\n        selector: JQuery.Selector,\\n        handler: JQuery.TypeEventHandler<TElement, any, any, any, TType> |\\n                 false\\n    ): this;\\n    /**\\n     * Remove an event handler.\\n     * @param events One or more space-separated event types and optional namespaces, or just namespaces, such as\\n     *               \\\"click\\\", \\\"keydown.myPlugin\\\", or \\\".myPlugin\\\".\\n     * @param selector_handler _&#x40;param_ `selector_handler`\\n     * <br>\\n     * * `selector` — A selector which should match the one originally passed to `.on()` when attaching event handlers. <br>\\n     * * `handler` — A handler function previously attached for the event(s), or the special value `false`.\\n     * @see \\\\`{@link https://api.jquery.com/off/ }\\\\`\\n     * @since 1.7\\n     * @example ​ ````Remove all delegated click handlers from all paragraphs:\\n```javascript\\n$( \\\"p\\\" ).off( \\\"click\\\", \\\"**\\\" );\\n```\\n     * @example ​ ````Unbind all delegated event handlers by their namespace:\\n```javascript\\nvar validate = function() {\\n  // Code to validate form entries\\n};\\n​\\n// Delegate events under the \\\".validator\\\" namespace\\n$( \\\"form\\\" ).on( \\\"click.validator\\\", \\\"button\\\", validate );\\n​\\n$( \\\"form\\\" ).on( \\\"keypress.validator\\\", \\\"input[type='text']\\\", validate );\\n​\\n// Remove event handlers in the \\\".validator\\\" namespace\\n$( \\\"form\\\" ).off( \\\".validator\\\" );\\n```\\n     */\\n    off<TType extends string>(\\n        events: TType,\\n        selector_handler?: JQuery.Selector |\\n                           JQuery.TypeEventHandler<TElement, any, any, any, TType> |\\n                           false\\n    ): this;\\n    /**\\n     * Remove an event handler.\\n     * @param events An object where the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent handler functions previously attached for the event(s).\\n     * @param selector A selector which should match the one originally passed to .on() when attaching event handlers.\\n     * @see \\\\`{@link https://api.jquery.com/off/ }\\\\`\\n     * @since 1.7\\n     */\\n    off(events: JQuery.TypeEventHandlers<TElement, any, any, any>,\\n        selector?: JQuery.Selector): this;\\n    /**\\n     * Remove an event handler.\\n     * @param event A jQuery.Event object.\\n     * @see \\\\`{@link https://api.jquery.com/off/ }\\\\`\\n     * @since 1.7\\n     * @example ​ ````Remove all event handlers from all paragraphs:\\n```javascript\\n$( \\\"p\\\" ).off();\\n```\\n     */\\n    off(event?: JQuery.TriggeredEvent<TElement>): this;\\n    /**\\n     * Set the current coordinates of every element in the set of matched elements, relative to the document.\\n     * @param coordinates_function _&#x40;param_ `coordinates_function`\\n     * <br>\\n     * * `coordinates` — An object containing the properties `top` and `left`, which are numbers indicating the new top and\\n     *                   left coordinates for the elements. <br>\\n     * * `function` — A function to return the coordinates to set. Receives the index of the element in the collection as\\n     *                the first argument and the current coordinates as the second argument. The function should return an\\n     *                object with the new `top` and `left` properties.\\n     * @see \\\\`{@link https://api.jquery.com/offset/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Set the offset of the second paragraph:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>offset demo</title>\\n  <style>\\n  p {\\n    margin-left: 10px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p><p>2nd Paragraph</p>\\n​\\n<script>\\n$( \\\"p:last\\\" ).offset({ top: 10, left: 30 });\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    offset(coordinates_function: JQuery.CoordinatesPartial | ((this: TElement, index: number, coords: JQuery.Coordinates) => JQuery.CoordinatesPartial)): this;\\n    /**\\n     * Get the current coordinates of the first element in the set of matched elements, relative to the document.\\n     * @see \\\\`{@link https://api.jquery.com/offset/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Access the offset of the second paragraph:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>offset demo</title>\\n  <style>\\n  p {\\n    margin-left: 10px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p><p>2nd Paragraph</p>\\n​\\n<script>\\nvar p = $( \\\"p:last\\\" );\\nvar offset = p.offset();\\np.html( \\\"left: \\\" + offset.left + \\\", top: \\\" + offset.top );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Click to see the offset.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>offset demo</title>\\n  <style>\\n  p {\\n    margin-left: 10px;\\n    color: blue;\\n    width: 200px;\\n    cursor: pointer;\\n  }\\n  span {\\n    color: red;\\n    cursor: pointer;\\n  }\\n  div.abs {\\n    width: 50px;\\n    height: 50px;\\n    position: absolute;\\n    left: 220px;\\n    top: 35px;\\n    background-color: green;\\n    cursor: pointer;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"result\\\">Click an element.</div>\\n<p>\\n  This is the best way to <span>find</span> an offset.\\n</p>\\n<div class=\\\"abs\\\">\\n</div>\\n​\\n<script>\\n$( \\\"*\\\", document.body ).click(function( event ) {\\n  var offset = $( this ).offset();\\n  event.stopPropagation();\\n  $( \\\"#result\\\" ).text( this.tagName +\\n    \\\" coords ( \\\" + offset.left + \\\", \\\" + offset.top + \\\" )\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    offset(): JQuery.Coordinates | undefined;\\n    /**\\n     * Get the closest ancestor element that is positioned.\\n     * @see \\\\`{@link https://api.jquery.com/offsetParent/ }\\\\`\\n     * @since 1.2.6\\n     * @example ​ ````Find the offsetParent of item &quot;A.&quot;\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>offsetParent demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul class=\\\"level-1\\\">\\n  <li class=\\\"item-i\\\">I</li>\\n  <li class=\\\"item-ii\\\" style=\\\"position: relative;\\\">II\\n    <ul class=\\\"level-2\\\">\\n      <li class=\\\"item-a\\\">A</li>\\n      <li class=\\\"item-b\\\">B\\n        <ul class=\\\"level-3\\\">\\n          <li class=\\\"item-1\\\">1</li>\\n          <li class=\\\"item-2\\\">2</li>\\n          <li class=\\\"item-3\\\">3</li>\\n        </ul>\\n      </li>\\n      <li class=\\\"item-c\\\">C</li>\\n    </ul>\\n  </li>\\n  <li class=\\\"item-iii\\\">III</li>\\n</ul>\\n​\\n<script>$( \\\"li.item-a\\\" ).offsetParent().css( \\\"background-color\\\", \\\"red\\\" );</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    offsetParent(): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param selector A selector string to filter the descendants of the selected elements that trigger the event. If the\\n     *                 selector is null or omitted, the event is always triggered when it reaches the selected element.\\n     * @param data Data to be passed to the handler in event.data when an event is triggered.\\n     * @param handler A function to execute when the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     */\\n    on<TType extends string,\\n       TData>(\\n        events: TType,\\n        selector: JQuery.Selector,\\n        data: TData,\\n        handler: JQuery.TypeEventHandler<TElement, TData, any, any, TType>\\n    ): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param selector A selector string to filter the descendants of the selected elements that trigger the event. If the\\n     *                 selector is null or omitted, the event is always triggered when it reaches the selected element.\\n     * @param data Data to be passed to the handler in event.data when an event is triggered.\\n     * @param handler A function to execute when the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     */\\n    on<TType extends string,\\n       TData>(\\n        events: TType,\\n        selector: null | undefined,\\n        data: TData,\\n        handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, TType>\\n    ): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param selector A selector string to filter the descendants of the selected elements that trigger the event. If the\\n     *                 selector is null or omitted, the event is always triggered when it reaches the selected element.\\n     * @param data Data to be passed to the handler in event.data when an event is triggered.\\n     * @param handler A function to execute when the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     * @deprecated ​ Deprecated. Use \\\\`{@link JQuery.Event }\\\\` in place of \\\\`{@link JQueryEventObject }\\\\`.\\n     */\\n    on(events: string,\\n       selector: JQuery.Selector | null | undefined,\\n       data: any,\\n       handler: ((event: JQueryEventObject) => void)): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param selector A selector string to filter the descendants of the selected elements that trigger the event. If the\\n     *                 selector is null or omitted, the event is always triggered when it reaches the selected element.\\n     * @param handler A function to execute when the event is triggered. The value false is also allowed as a shorthand\\n     *                for a function that simply does return false.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     * @example ​ ````Click any paragraph to add another after it. Note that .on() allows a click event on any paragraph--even new ones--since the event is handled by the ever-present body element after it bubbles to there.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>on demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n    font-weight: bold;\\n    cursor: pointer;\\n    padding: 5px;\\n  }\\n  p.over {\\n    background: #ccc;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Click me!</p>\\n<span></span>\\n​\\n<script>\\nvar count = 0;\\n$( \\\"body\\\" ).on( \\\"click\\\", \\\"p\\\", function() {\\n  $( this ).after( \\\"<p>Another paragraph! \\\" + (++count) + \\\"</p>\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Display each paragraph&#39;s text in an alert box whenever it is clicked:\\n```javascript\\n$( \\\"body\\\" ).on( \\\"click\\\", \\\"p\\\", function() {\\n  alert( $( this ).text() );\\n});\\n```\\n     * @example ​ ````Cancel a link&#39;s default action using the .preventDefault() method:\\n```javascript\\n$( \\\"body\\\" ).on( \\\"click\\\", \\\"a\\\", function( event ) {\\n  event.preventDefault();\\n});\\n```\\n     */\\n    on<TType extends string>(\\n        events: TType,\\n        selector: JQuery.Selector,\\n        handler: JQuery.TypeEventHandler<TElement, undefined, any, any, TType> |\\n                 false\\n    ): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param data Data to be passed to the handler in event.data when an event is triggered.\\n     * @param handler A function to execute when the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     * @example ​ ````Pass data to the event handler, which is specified here by name:\\n```javascript\\nfunction myHandler( event ) {\\n  alert( event.data.foo );\\n}\\n$( \\\"p\\\" ).on( \\\"click\\\", { foo: \\\"bar\\\" }, myHandler );\\n```\\n     */\\n    on<TType extends string,\\n       TData>(\\n        events: TType,\\n        data: TData,\\n        handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, TType>\\n    ): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param selector_data _&#x40;param_ `selector_data`\\n     * <br>\\n     * * `selector` — A selector string to filter the descendants of the selected elements that trigger the event. If the\\n     *                selector is null or omitted, the event is always triggered when it reaches the selected element. <br>\\n     * * `data` — Data to be passed to the handler in event.data when an event is triggered.\\n     * @param handler A function to execute when the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     * @deprecated ​ Deprecated. Use \\\\`{@link JQuery.Event }\\\\` in place of \\\\`{@link JQueryEventObject }\\\\`.\\n     * @example ​ ````Click any paragraph to add another after it. Note that .on() allows a click event on any paragraph--even new ones--since the event is handled by the ever-present body element after it bubbles to there.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>on demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n    font-weight: bold;\\n    cursor: pointer;\\n    padding: 5px;\\n  }\\n  p.over {\\n    background: #ccc;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Click me!</p>\\n<span></span>\\n​\\n<script>\\nvar count = 0;\\n$( \\\"body\\\" ).on( \\\"click\\\", \\\"p\\\", function() {\\n  $( this ).after( \\\"<p>Another paragraph! \\\" + (++count) + \\\"</p>\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Display each paragraph&#39;s text in an alert box whenever it is clicked:\\n```javascript\\n$( \\\"body\\\" ).on( \\\"click\\\", \\\"p\\\", function() {\\n  alert( $( this ).text() );\\n});\\n```\\n     * @example ​ ````Cancel a link&#39;s default action using the .preventDefault() method:\\n```javascript\\n$( \\\"body\\\" ).on( \\\"click\\\", \\\"a\\\", function( event ) {\\n  event.preventDefault();\\n});\\n```\\n     * @example ​ ````Pass data to the event handler, which is specified here by name:\\n```javascript\\nfunction myHandler( event ) {\\n  alert( event.data.foo );\\n}\\n$( \\\"p\\\" ).on( \\\"click\\\", { foo: \\\"bar\\\" }, myHandler );\\n```\\n     */\\n    on(events: string,\\n       selector_data: any,\\n       handler: ((event: JQueryEventObject) => void)): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param handler A function to execute when the event is triggered. The value false is also allowed as a shorthand\\n     *                for a function that simply does return false.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     * @example ​ ````Display a paragraph&#39;s text in an alert when it is clicked:\\n```javascript\\n$( \\\"p\\\" ).on( \\\"click\\\", function() {\\n  alert( $( this ).text() );\\n});\\n```\\n     * @example ​ ````Cancel a form submit action and prevent the event from bubbling up by returning false:\\n```javascript\\n$( \\\"form\\\" ).on( \\\"submit\\\", false );\\n```\\n     * @example ​ ````Cancel only the default action by using .preventDefault().\\n```javascript\\n$( \\\"form\\\" ).on( \\\"submit\\\", function( event ) {\\n  event.preventDefault();\\n});\\n```\\n     * @example ​ ````Stop submit events from bubbling without preventing form submit, using .stopPropagation().\\n```javascript\\n$( \\\"form\\\" ).on( \\\"submit\\\", function( event ) {\\n  event.stopPropagation();\\n});\\n```\\n     * @example ​ ````Pass data to the event handler using the second argument to .trigger()\\n```javascript\\n$( \\\"div\\\" ).on( \\\"click\\\", function( event, person ) {\\n  alert( \\\"Hello, \\\" + person.name );\\n});\\n$( \\\"div\\\" ).trigger( \\\"click\\\", { name: \\\"Jim\\\" } );\\n```\\n     * @example ​ ````Use the the second argument of .trigger() to pass an array of data to the event handler\\n```javascript\\n$( \\\"div\\\" ).on( \\\"click\\\", function( event, salutation, name ) {\\n  alert( salutation + \\\", \\\" + name );\\n});\\n$( \\\"div\\\" ).trigger( \\\"click\\\", [ \\\"Goodbye\\\", \\\"Jim\\\" ] );\\n```\\n     * @example ​ ````Attach and trigger custom (non-browser) events.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>on demo</title>\\n  <style>\\n  p {\\n    color: red;\\n  }\\n  span {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Has an attached custom event.</p>\\n<button>Trigger custom event</button>\\n<span style=\\\"display:none;\\\"></span>\\n​\\n<script>\\n$( \\\"p\\\" ).on( \\\"myCustomEvent\\\", function( event, myName ) {\\n  $( this ).text( myName + \\\", hi there!\\\" );\\n  $( \\\"span\\\" )\\n    .stop()\\n    .css( \\\"opacity\\\", 1 )\\n    .text( \\\"myName = \\\" + myName )\\n    .fadeIn( 30 )\\n    .fadeOut( 1000 );\\n});\\n$( \\\"button\\\" ).click(function () {\\n  $( \\\"p\\\" ).trigger( \\\"myCustomEvent\\\", [ \\\"John\\\" ] );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Attach multiple events—one on mouseenter and one on mouseleave to the same element:\\n```javascript\\n$( \\\"#cart\\\" ).on( \\\"mouseenter mouseleave\\\", function( event ) {\\n  $( this ).toggleClass( \\\"active\\\" );\\n});\\n```\\n     */\\n    on<TType extends string>(\\n        events: TType,\\n        handler: JQuery.TypeEventHandler<TElement, undefined, TElement, TElement, TType> |\\n                 false\\n    ): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param handler A function to execute when the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     * @deprecated ​ Deprecated. Use \\\\`{@link JQuery.Event }\\\\` in place of \\\\`{@link JQueryEventObject }\\\\`.\\n     * @example ​ ````Display a paragraph&#39;s text in an alert when it is clicked:\\n```javascript\\n$( \\\"p\\\" ).on( \\\"click\\\", function() {\\n  alert( $( this ).text() );\\n});\\n```\\n     * @example ​ ````Cancel a form submit action and prevent the event from bubbling up by returning false:\\n```javascript\\n$( \\\"form\\\" ).on( \\\"submit\\\", false );\\n```\\n     * @example ​ ````Cancel only the default action by using .preventDefault().\\n```javascript\\n$( \\\"form\\\" ).on( \\\"submit\\\", function( event ) {\\n  event.preventDefault();\\n});\\n```\\n     * @example ​ ````Stop submit events from bubbling without preventing form submit, using .stopPropagation().\\n```javascript\\n$( \\\"form\\\" ).on( \\\"submit\\\", function( event ) {\\n  event.stopPropagation();\\n});\\n```\\n     * @example ​ ````Pass data to the event handler using the second argument to .trigger()\\n```javascript\\n$( \\\"div\\\" ).on( \\\"click\\\", function( event, person ) {\\n  alert( \\\"Hello, \\\" + person.name );\\n});\\n$( \\\"div\\\" ).trigger( \\\"click\\\", { name: \\\"Jim\\\" } );\\n```\\n     * @example ​ ````Use the the second argument of .trigger() to pass an array of data to the event handler\\n```javascript\\n$( \\\"div\\\" ).on( \\\"click\\\", function( event, salutation, name ) {\\n  alert( salutation + \\\", \\\" + name );\\n});\\n$( \\\"div\\\" ).trigger( \\\"click\\\", [ \\\"Goodbye\\\", \\\"Jim\\\" ] );\\n```\\n     * @example ​ ````Attach and trigger custom (non-browser) events.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>on demo</title>\\n  <style>\\n  p {\\n    color: red;\\n  }\\n  span {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Has an attached custom event.</p>\\n<button>Trigger custom event</button>\\n<span style=\\\"display:none;\\\"></span>\\n​\\n<script>\\n$( \\\"p\\\" ).on( \\\"myCustomEvent\\\", function( event, myName ) {\\n  $( this ).text( myName + \\\", hi there!\\\" );\\n  $( \\\"span\\\" )\\n    .stop()\\n    .css( \\\"opacity\\\", 1 )\\n    .text( \\\"myName = \\\" + myName )\\n    .fadeIn( 30 )\\n    .fadeOut( 1000 );\\n});\\n$( \\\"button\\\" ).click(function () {\\n  $( \\\"p\\\" ).trigger( \\\"myCustomEvent\\\", [ \\\"John\\\" ] );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Attach multiple events—one on mouseenter and one on mouseleave to the same element:\\n```javascript\\n$( \\\"#cart\\\" ).on( \\\"mouseenter mouseleave\\\", function( event ) {\\n  $( this ).toggleClass( \\\"active\\\" );\\n});\\n```\\n     */\\n    on(events: string,\\n       handler: ((event: JQueryEventObject) => void)): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events An object in which the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent a handler function to be called for the event(s).\\n     * @param selector A selector string to filter the descendants of the selected elements that will call the handler. If\\n     *                 the selector is null or omitted, the handler is always called when it reaches the selected element.\\n     * @param data Data to be passed to the handler in event.data when an event occurs.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     */\\n    on<TData>(\\n        events: JQuery.TypeEventHandlers<TElement, TData, any, any>,\\n        selector: JQuery.Selector,\\n        data: TData\\n    ): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events An object in which the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent a handler function to be called for the event(s).\\n     * @param selector A selector string to filter the descendants of the selected elements that will call the handler. If\\n     *                 the selector is null or omitted, the handler is always called when it reaches the selected element.\\n     * @param data Data to be passed to the handler in event.data when an event occurs.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     */\\n    on<TData>(\\n        events: JQuery.TypeEventHandlers<TElement, TData, TElement, TElement>,\\n        selector: null | undefined,\\n        data: TData\\n    ): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events An object in which the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent a handler function to be called for the event(s).\\n     * @param selector A selector string to filter the descendants of the selected elements that will call the handler. If\\n     *                 the selector is null or omitted, the handler is always called when it reaches the selected element.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     */\\n    on(events: JQuery.TypeEventHandlers<TElement, undefined, any, any>,\\n       selector: JQuery.Selector\\n    ): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events An object in which the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent a handler function to be called for the event(s).\\n     * @param data Data to be passed to the handler in event.data when an event occurs.\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     */\\n    on<TData>(\\n        events: JQuery.TypeEventHandlers<TElement, TData, TElement, TElement>,\\n        data: TData\\n    ): this;\\n    /**\\n     * Attach an event handler function for one or more events to the selected elements.\\n     * @param events An object in which the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent a handler function to be called for the event(s).\\n     * @see \\\\`{@link https://api.jquery.com/on/ }\\\\`\\n     * @since 1.7\\n     * @example ​ ````Attach multiple event handlers simultaneously using a plain object.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>on demo</title>\\n  <style>\\n  .test {\\n    color: #000;\\n    padding: .5em;\\n    border: 1px solid #444;\\n  }\\n  .active {\\n    color: #900;\\n  }\\n  .inside {\\n    background-color: aqua;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"test\\\">test div</div>\\n​\\n<script>\\n$( \\\"div.test\\\" ).on({\\n  click: function() {\\n    $( this ).toggleClass( \\\"active\\\" );\\n  }, mouseenter: function() {\\n    $( this ).addClass( \\\"inside\\\" );\\n  }, mouseleave: function() {\\n    $( this ).removeClass( \\\"inside\\\" );\\n  }\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    on(events: JQuery.TypeEventHandlers<TElement, undefined, TElement, TElement>): this;\\n    /**\\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param selector A selector string to filter the descendants of the selected elements that trigger the event. If the\\n     *                 selector is null or omitted, the event is always triggered when it reaches the selected element.\\n     * @param data Data to be passed to the handler in event.data when an event is triggered.\\n     * @param handler A function to execute when the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/one/ }\\\\`\\n     * @since 1.7\\n     */\\n    one<TType extends string,\\n        TData>(\\n        events: TType,\\n        selector: JQuery.Selector,\\n        data: TData,\\n        handler: JQuery.TypeEventHandler<TElement, TData, any, any, TType>\\n    ): this;\\n    /**\\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param selector A selector string to filter the descendants of the selected elements that trigger the event. If the\\n     *                 selector is null or omitted, the event is always triggered when it reaches the selected element.\\n     * @param data Data to be passed to the handler in event.data when an event is triggered.\\n     * @param handler A function to execute when the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/one/ }\\\\`\\n     * @since 1.7\\n     */\\n    one<TType extends string,\\n        TData>(\\n        events: TType,\\n        selector: null | undefined,\\n        data: TData,\\n        handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, TType>\\n    ): this;\\n    /**\\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param selector A selector string to filter the descendants of the selected elements that trigger the event. If the\\n     *                 selector is null or omitted, the event is always triggered when it reaches the selected element.\\n     * @param handler A function to execute when the event is triggered. The value false is also allowed as a shorthand\\n     *                for a function that simply does return false.\\n     * @see \\\\`{@link https://api.jquery.com/one/ }\\\\`\\n     * @since 1.7\\n     */\\n    one<TType extends string>(\\n        events: TType,\\n        selector: JQuery.Selector,\\n        handler: JQuery.TypeEventHandler<TElement, undefined, any, any, TType> |\\n                 false\\n    ): this;\\n    /**\\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param data Data to be passed to the handler in event.data when an event is triggered.\\n     * @param handler A function to execute when the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/one/ }\\\\`\\n     * @since 1.7\\n     */\\n    one<TType extends string,\\n        TData>(\\n        events: TType,\\n        data: TData,\\n        handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, TType>\\n    ): this;\\n    /**\\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\\n     * @param events One or more space-separated event types and optional namespaces, such as \\\"click\\\" or \\\"keydown.myPlugin\\\".\\n     * @param handler A function to execute when the event is triggered. The value false is also allowed as a shorthand\\n     *                for a function that simply does return false.\\n     * @see \\\\`{@link https://api.jquery.com/one/ }\\\\`\\n     * @since 1.7\\n     * @example ​ ````Tie a one-time click to each div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>one demo</title>\\n  <style>\\n  div {\\n    width: 60px;\\n    height: 60px;\\n    margin: 5px;\\n    float: left;\\n    background: green;\\n    border: 10px outset;\\n    cursor:pointer;\\n  }\\n  p {\\n    color: red;\\n    margin: 0;\\n    clear: left;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n<p>Click a green square...</p>\\n​\\n<script>\\nvar n = 0;\\n$( \\\"div\\\" ).one( \\\"click\\\", function() {\\n  var index = $( \\\"div\\\" ).index( this );\\n  $( this ).css({\\n    borderStyle: \\\"inset\\\",\\n    cursor: \\\"auto\\\"\\n  });\\n  $( \\\"p\\\" ).text( \\\"Div at index #\\\" + index + \\\" clicked.\\\" +\\n    \\\" That's \\\" + (++n) + \\\" total clicks.\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To display the text of all paragraphs in an alert box the first time each of them is clicked:\\n```javascript\\n$( \\\"p\\\" ).one( \\\"click\\\", function() {\\n  alert( $( this ).text() );\\n});\\n```\\n     * @example ​ ````Event handlers will trigger once per element per event type\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>one demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"count\\\">0</div>\\n<div class=\\\"target\\\">Hover/click me</div>\\n​\\n<script>\\nvar n = 0;\\n$(\\\".target\\\").one(\\\"click mouseenter\\\", function() {\\n  $(\\\".count\\\").html(++n);\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    one<TType extends string>(\\n        events: TType,\\n        handler: JQuery.TypeEventHandler<TElement, undefined, TElement, TElement, TType>|\\n                 false\\n    ): this;\\n    /**\\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\\n     * @param events An object in which the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent a handler function to be called for the event(s).\\n     * @param selector A selector string to filter the descendants of the selected elements that will call the handler. If\\n     *                 the selector is null or omitted, the handler is always called when it reaches the selected element.\\n     * @param data Data to be passed to the handler in event.data when an event occurs.\\n     * @see \\\\`{@link https://api.jquery.com/one/ }\\\\`\\n     * @since 1.7\\n     */\\n    one<TData>(\\n        events: JQuery.TypeEventHandlers<TElement, TData, any, any>,\\n        selector: JQuery.Selector,\\n        data: TData\\n    ): this;\\n    /**\\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\\n     * @param events An object in which the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent a handler function to be called for the event(s).\\n     * @param selector A selector string to filter the descendants of the selected elements that will call the handler. If\\n     *                 the selector is null or omitted, the handler is always called when it reaches the selected element.\\n     * @param data Data to be passed to the handler in event.data when an event occurs.\\n     * @see \\\\`{@link https://api.jquery.com/one/ }\\\\`\\n     * @since 1.7\\n     */\\n    one<TData>(\\n        events: JQuery.TypeEventHandlers<TElement, TData, TElement, TElement>,\\n        selector: null | undefined,\\n        data: TData\\n    ): this;\\n    /**\\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\\n     * @param events An object in which the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent a handler function to be called for the event(s).\\n     * @param selector A selector string to filter the descendants of the selected elements that will call the handler. If\\n     *                 the selector is null or omitted, the handler is always called when it reaches the selected element.\\n     * @see \\\\`{@link https://api.jquery.com/one/ }\\\\`\\n     * @since 1.7\\n     */\\n    one(events: JQuery.TypeEventHandlers<TElement, undefined, any, any>,\\n        selector: JQuery.Selector): this;\\n    /**\\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\\n     * @param events An object in which the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent a handler function to be called for the event(s).\\n     * @param data Data to be passed to the handler in event.data when an event occurs.\\n     * @see \\\\`{@link https://api.jquery.com/one/ }\\\\`\\n     * @since 1.7\\n     */\\n    one<TData>(\\n        events: JQuery.TypeEventHandlers<TElement, TData, TElement, TElement>,\\n        data: TData\\n    ): this;\\n    /**\\n     * Attach a handler to an event for the elements. The handler is executed at most once per element per event type.\\n     * @param events An object in which the string keys represent one or more space-separated event types and optional\\n     *               namespaces, and the values represent a handler function to be called for the event(s).\\n     * @see \\\\`{@link https://api.jquery.com/one/ }\\\\`\\n     * @since 1.7\\n     */\\n    one(events: JQuery.TypeEventHandlers<TElement, undefined, TElement, TElement>): this;\\n    /**\\n     * Set the CSS outer height of each element in the set of matched elements.\\n     * @param value_function _&#x40;param_ `value_function`\\n     * <br>\\n     * * `value` — A number representing the number of pixels, or a number along with an optional unit of measure\\n     *             appended (as a string). <br>\\n     * * `function` — A function returning the outer height to set. Receives the index position of the element in the set\\n     *                and the old outer height as arguments. Within the function, `this` refers to the current element in\\n     *                the set.\\n     * @see \\\\`{@link https://api.jquery.com/outerHeight/ }\\\\`\\n     * @since 1.8.0\\n     * @example ​ ````Change the outer height of each div the first time it is clicked (and change its color).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>outerHeight demo</title>\\n  <style>\\n  div {\\n    width: 50px;\\n    padding: 10px;\\n    height: 60px;\\n    float: left;\\n    margin: 5px;\\n    background: red;\\n    cursor: pointer;\\n  }\\n  .mod {\\n    background: blue;\\n    cursor: default;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n​\\n<script>\\nvar modHeight = 60;\\n$( \\\"div\\\" ).one( \\\"click\\\", function() {\\n  $( this ).outerHeight( modHeight ).addClass( \\\"mod\\\" );\\n  modHeight -= 8;\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    outerHeight(value_function: string | number | ((this: TElement, index: number, height: number) => string | number),\\n                includeMargin?: boolean): this;\\n    /**\\n     * Get the current computed outer height (including padding, border, and optionally margin) for the first element in the set of matched elements.\\n     * @param includeMargin A Boolean indicating whether to include the element's margin in the calculation.\\n     * @see \\\\`{@link https://api.jquery.com/outerHeight/ }\\\\`\\n     * @since 1.2.6\\n     * @example ​ ````Get the outerHeight of a paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>outerHeight demo</title>\\n  <style>\\n  p {\\n    margin: 10px;\\n    padding: 5px;\\n    border: 2px solid #666;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p><p></p>\\n​\\n<script>\\nvar p = $( \\\"p:first\\\" );\\n$( \\\"p:last\\\" ).text(\\n  \\\"outerHeight:\\\" + p.outerHeight() +\\n  \\\" , outerHeight( true ):\\\" + p.outerHeight( true ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    outerHeight(includeMargin?: boolean): number | undefined;\\n    /**\\n     * Set the CSS outer width of each element in the set of matched elements.\\n     * @param value_function _&#x40;param_ `value_function`\\n     * <br>\\n     * * `value` — A number representing the number of pixels, or a number along with an optional unit of measure\\n     *             appended (as a string). <br>\\n     * * `function` — A function returning the outer width to set. Receives the index position of the element in the set\\n     *                and the old outer width as arguments. Within the function, `this` refers to the current element in\\n     *                the set.\\n     * @see \\\\`{@link https://api.jquery.com/outerWidth/ }\\\\`\\n     * @since 1.8.0\\n     * @example ​ ````Change the outer width of each div the first time it is clicked (and change its color).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>outerWidth demo</title>\\n  <style>\\n  div {\\n    width: 60px;\\n    padding: 10px;\\n    height: 50px;\\n    float: left;\\n    margin: 5px;\\n    background: red;\\n    cursor: pointer;\\n  }\\n  .mod {\\n    background: blue;\\n    cursor: default;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n​\\n<script>\\nvar modWidth = 60;\\n$( \\\"div\\\" ).one( \\\"click\\\", function() {\\n  $( this ).outerWidth( modWidth ).addClass( \\\"mod\\\" );\\n  modWidth -= 8;\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    outerWidth(value_function: string | number | ((this: TElement, index: number, width: number) => string | number),\\n               includeMargin?: boolean): this;\\n    /**\\n     * Get the current computed outer width (including padding, border, and optionally margin) for the first element in the set of matched elements.\\n     * @param includeMargin A Boolean indicating whether to include the element's margin in the calculation.\\n     * @see \\\\`{@link https://api.jquery.com/outerWidth/ }\\\\`\\n     * @since 1.2.6\\n     * @example ​ ````Get the outerWidth of a paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>outerWidth demo</title>\\n  <style>\\n  p {\\n    margin: 10px;\\n    padding: 5px;\\n    border: 2px solid #666;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p><p></p>\\n​\\n<script>\\nvar p = $( \\\"p:first\\\" );\\n$( \\\"p:last\\\" ).text(\\n  \\\"outerWidth:\\\" + p.outerWidth() +\\n  \\\" , outerWidth( true ):\\\" + p.outerWidth( true ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    outerWidth(includeMargin?: boolean): number | undefined;\\n    /**\\n     * Get the parent of each element in the current set of matched elements, optionally filtered by a selector.\\n     * @param selector A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/parent/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Shows the parent of each element as (parent &gt; child).  Check the View Source to see the raw html.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>parent demo</title>\\n  <style>\\n  div, p {\\n    margin: 10px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>div,\\n  <span>span, </span>\\n  <b>b </b>\\n</div>\\n​\\n<p>p,\\n  <span>span,\\n    <em>em </em>\\n  </span>\\n</p>\\n​\\n<div>div,\\n  <strong>strong,\\n    <span>span, </span>\\n    <em>em,\\n      <b>b, </b>\\n    </em>\\n  </strong>\\n  <b>b </b>\\n</div>\\n​\\n<script>\\n$( \\\"*\\\", document.body ).each(function() {\\n  var parentTag = $( this ).parent().get( 0 ).tagName;\\n  $( this ).prepend( document.createTextNode( parentTag + \\\" > \\\" ) );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Find the parent element of each paragraph with a class &quot;selected&quot;.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>parent demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div><p>Hello</p></div>\\n<div class=\\\"selected\\\"><p>Hello Again</p></div>\\n​\\n<script>\\n$( \\\"p\\\" ).parent( \\\".selected\\\" ).css( \\\"background\\\", \\\"yellow\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    parent(selector?: JQuery.Selector): this;\\n    /**\\n     * Get the ancestors of each element in the current set of matched elements, optionally filtered by a selector.\\n     * @param selector A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/parents/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Find all parent elements of each b.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>parents demo</title>\\n  <style>\\n  b, span, p, html body {\\n    padding: .5em;\\n    border: 1px solid;\\n  }\\n  b {\\n    color: blue;\\n  }\\n  strong {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>\\n  <p>\\n    <span>\\n      <b>My parents are: </b>\\n    </span>\\n  </p>\\n</div>\\n​\\n<script>\\nvar parentEls = $( \\\"b\\\" ).parents()\\n  .map(function() {\\n    return this.tagName;\\n  })\\n  .get()\\n  .join( \\\", \\\" );\\n$( \\\"b\\\" ).append( \\\"<strong>\\\" + parentEls + \\\"</strong>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Click to find all unique div parent elements of each span.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>parents demo</title>\\n  <style>\\n  p, div, span {\\n    margin: 2px;\\n    padding: 1px;\\n  }\\n  div {\\n    border: 2px white solid;\\n  }\\n  span {\\n    cursor: pointer;\\n    font-size: 12px;\\n  }\\n  .selected {\\n    color: blue;\\n  }\\n  b {\\n    color: red;\\n    display: block;\\n    font-size: 14px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  <div>\\n    <div><span>Hello</span></div>\\n      <span>Hello Again</span>\\n    </div>\\n    <div>\\n      <span>And Hello Again</span>\\n    </div>\\n  </p>\\n  <b>Click Hellos to toggle their parents.</b>\\n​\\n<script>\\nfunction showParents() {\\n  $( \\\"div\\\" ).css( \\\"border-color\\\", \\\"white\\\" );\\n  var len = $( \\\"span.selected\\\" )\\n    .parents( \\\"div\\\" )\\n      .css( \\\"border\\\", \\\"2px red solid\\\" )\\n      .length;\\n  $( \\\"b\\\" ).text( \\\"Unique div parents: \\\" + len );\\n}\\n$( \\\"span\\\" ).click(function() {\\n  $( this ).toggleClass( \\\"selected\\\" );\\n  showParents();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    parents(selector?: JQuery.Selector): this;\\n    /**\\n     * Get the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector, DOM node, or jQuery object.\\n     * @param selector_element _&#x40;param_ `selector_element`\\n     * <br>\\n     * * `selector` — A string containing a selector expression to indicate where to stop matching ancestor elements. <br>\\n     * * `element` — A DOM node or jQuery object indicating where to stop matching ancestor elements.\\n     * @param filter A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/parentsUntil/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @example ​ ````Find the ancestors of &lt;li class=&quot;item-a&quot;&gt; up to &lt;ul class=&quot;level-1&quot;&gt; and give them a red background color. Also, find ancestors of &lt;li class=&quot;item-2&quot;&gt; that have a class of &quot;yes&quot; up to &lt;ul class=&quot;level-1&quot;&gt; and give them a green border.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>parentsUntil demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul class=\\\"level-1 yes\\\">\\n  <li class=\\\"item-i\\\">I</li>\\n  <li class=\\\"item-ii\\\">II\\n    <ul class=\\\"level-2 yes\\\">\\n      <li class=\\\"item-a\\\">A</li>\\n      <li class=\\\"item-b\\\">B\\n        <ul class=\\\"level-3\\\">\\n          <li class=\\\"item-1\\\">1</li>\\n          <li class=\\\"item-2\\\">2</li>\\n          <li class=\\\"item-3\\\">3</li>\\n        </ul>\\n      </li>\\n      <li class=\\\"item-c\\\">C</li>\\n    </ul>\\n  </li>\\n  <li class=\\\"item-iii\\\">III</li>\\n</ul>\\n​\\n<script>\\n$( \\\"li.item-a\\\" )\\n  .parentsUntil( \\\".level-1\\\" )\\n    .css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n$( \\\"li.item-2\\\" )\\n  .parentsUntil( $( \\\"ul.level-1\\\" ), \\\".yes\\\" )\\n    .css( \\\"border\\\", \\\"3px solid green\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    parentsUntil(selector_element?: JQuery.Selector | Element | JQuery, filter?: JQuery.Selector): this;\\n    /**\\n     * Get the current coordinates of the first element in the set of matched elements, relative to the offset parent.\\n     * @see \\\\`{@link https://api.jquery.com/position/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Access the position of the second paragraph:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>position demo</title>\\n  <style>\\n  div {\\n    padding: 15px;\\n  }\\n  p {\\n    margin-left: 10px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>\\n  <p>Hello</p>\\n</div>\\n<p></p>\\n​\\n<script>\\nvar p = $( \\\"p:first\\\" );\\nvar position = p.position();\\n$( \\\"p:last\\\" ).text( \\\"left: \\\" + position.left + \\\", top: \\\" + position.top );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    position(): JQuery.Coordinates;\\n    /**\\n     * Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.\\n     * @param contents One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or\\n     *                 jQuery objects to insert at the beginning of each element in the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/prepend/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Prepends some HTML to all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>prepend demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>there, friend!</p>\\n<p>amigo!</p>\\n​\\n<script>\\n$( \\\"p\\\" ).prepend( \\\"<b>Hello </b>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Prepends a DOM Element to all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>prepend demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>is what I'd say</p>\\n<p>is what I said</p>\\n​\\n<script>\\n$( \\\"p\\\" ).prepend( document.createTextNode( \\\"Hello \\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Prepends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>prepend demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p> is what was said.</p><b>Hello</b>\\n​\\n<script>\\n$( \\\"p\\\" ).prepend( $( \\\"b\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    prepend(...contents: Array<JQuery.htmlString | JQuery.TypeOrArray<JQuery.Node | JQuery<JQuery.Node>>>): this;\\n    /**\\n     * Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.\\n     * @param funсtion A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert at\\n     *                 the beginning of each element in the set of matched elements. Receives the index position of the\\n     *                 element in the set and the old HTML value of the element as arguments. Within the function, `this`\\n     *                 refers to the current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/prepend/ }\\\\`\\n     * @since 1.4\\n     */\\n    prepend(funсtion: (this: TElement, index: number, html: string) => JQuery.htmlString | JQuery.TypeOrArray<JQuery.Node | JQuery<JQuery.Node>>): this;\\n    /**\\n     * Insert every element in the set of matched elements to the beginning of the target.\\n     * @param target A selector, element, HTML string, array of elements, or jQuery object; the matched set of elements\\n     *               will be inserted at the beginning of the element(s) specified by this parameter.\\n     * @see \\\\`{@link https://api.jquery.com/prependTo/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Prepend all spans to the element with the ID &quot;foo&quot; (Check .prepend() documentation for more examples)\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>prependTo demo</title>\\n  <style>\\n  div {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"foo\\\">FOO!</div>\\n<span>I have something to say... </span>\\n​\\n<script>\\n$( \\\"span\\\" ).prependTo( \\\"#foo\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    prependTo(target: JQuery.Selector | JQuery.htmlString | JQuery.TypeOrArray<Element | DocumentFragment> | JQuery): this;\\n    /**\\n     * Get the immediately preceding sibling of each element in the set of matched elements. If a selector is provided, it retrieves the previous sibling only if it matches that selector.\\n     * @param selector A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/prev/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Find the very previous sibling of each div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>prev demo</title>\\n  <style>\\n  div {\\n    width: 40px;\\n    height: 40px;\\n    margin: 10px;\\n    float: left;\\n    border: 2px blue solid;\\n    padding: 2px;\\n  }\\n  span {\\n    font-size: 14px;\\n  }\\n  p {\\n    clear: left;\\n    margin: 10px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div></div>\\n<div><span>has child</span></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div id=\\\"start\\\"></div>\\n<div></div>\\n<p><button>Go to Prev</button></p>\\n​\\n<script>\\nvar $curr = $( \\\"#start\\\" );\\n$curr.css( \\\"background\\\", \\\"#f99\\\" );\\n$( \\\"button\\\" ).click(function() {\\n  $curr = $curr.prev();\\n  $( \\\"div\\\" ).css( \\\"background\\\", \\\"\\\" );\\n  $curr.css( \\\"background\\\", \\\"#f99\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````For each paragraph, find the very previous sibling that has a class &quot;selected&quot;.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>prev demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div><span>Hello</span></div>\\n<p class=\\\"selected\\\">Hello Again</p>\\n<p>And Again</p>\\n​\\n<script>\\n$( \\\"p\\\" ).prev( \\\".selected\\\" ).css( \\\"background\\\", \\\"yellow\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    prev(selector?: JQuery.Selector): this;\\n    /**\\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\\n     * @param selector A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/prevAll/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Locate all the divs preceding the last div and give them a class.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>prevAll demo</title>\\n  <style>\\n  div {\\n    width: 70px;\\n    height: 70px;\\n    background: #abc;\\n    border: 2px solid black;\\n    margin: 10px;\\n    float: left;\\n  }\\n  div.before {\\n    border-color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<script>\\n$( \\\"div:last\\\" ).prevAll().addClass( \\\"before\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    prevAll(selector?: JQuery.Selector): this;\\n    /**\\n     * Get all preceding siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object.\\n     * @param selector_element _&#x40;param_ `selector_element`\\n     * <br>\\n     * * `selector` — A string containing a selector expression to indicate where to stop matching preceding sibling elements. <br>\\n     * * `element` — A DOM node or jQuery object indicating where to stop matching preceding sibling elements.\\n     * @param filter A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/prevUntil/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @example ​ ````Find the siblings that precede &lt;dt id=&quot;term-2&quot;&gt; up to the preceding &lt;dt&gt; and give them a red background color. Also, find previous &lt;dd&gt; siblings of &lt;dt id=&quot;term-3&quot;&gt; up to &lt;dt id=&quot;term-1&quot;&gt; and give them a green text color.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>prevUntil demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<dl>\\n  <dt id=\\\"term-1\\\">term 1</dt>\\n  <dd>definition 1-a</dd>\\n  <dd>definition 1-b</dd>\\n  <dd>definition 1-c</dd>\\n  <dd>definition 1-d</dd>\\n​\\n  <dt id=\\\"term-2\\\">term 2</dt>\\n  <dd>definition 2-a</dd>\\n  <dd>definition 2-b</dd>\\n  <dd>definition 2-c</dd>\\n​\\n  <dt id=\\\"term-3\\\">term 3</dt>\\n  <dd>definition 3-a</dd>\\n  <dd>definition 3-b</dd>\\n</dl>\\n​\\n<script>\\n$( \\\"#term-2\\\" ).prevUntil( \\\"dt\\\" )\\n  .css( \\\"background-color\\\", \\\"red\\\" );\\n​\\nvar term1 = document.getElementById( \\\"term-1\\\" );\\n$( \\\"#term-3\\\" ).prevUntil( term1, \\\"dd\\\" )\\n  .css( \\\"color\\\", \\\"green\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    prevUntil(selector_element?: JQuery.Selector | Element | JQuery, filter?: JQuery.Selector): this;\\n    /**\\n     * Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.\\n     * @param type The type of queue that needs to be observed.\\n     * @param target Object onto which the promise methods have to be attached\\n     * @see \\\\`{@link https://api.jquery.com/promise/ }\\\\`\\n     * @since 1.6\\n     */\\n    promise<T extends object>(type: string, target: T): T & JQuery.Promise<this>;\\n    /**\\n     * Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.\\n     * @param target Object onto which the promise methods have to be attached\\n     * @see \\\\`{@link https://api.jquery.com/promise/ }\\\\`\\n     * @since 1.6\\n     */\\n    promise<T extends object>(target: T): T & JQuery.Promise<this>;\\n    /**\\n     * Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.\\n     * @param type The type of queue that needs to be observed.\\n     * @see \\\\`{@link https://api.jquery.com/promise/ }\\\\`\\n     * @since 1.6\\n     * @example ​ ````Using .promise() on a collection with no active animation returns a resolved Promise:\\n```javascript\\nvar div = $( \\\"<div>\\\" );\\n​\\ndiv.promise().done(function( arg1 ) {\\n  // Will fire right away and alert \\\"true\\\"\\n  alert( this === div && arg1 === div );\\n});\\n```\\n     * @example ​ ````Resolve the returned Promise when all animations have ended (including those initiated in the animation callback or added later on):\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>promise demo</title>\\n  <style>\\n  div {\\n    height: 50px;\\n    width: 50px;\\n    float: left;\\n    margin-right: 10px;\\n    display: none;\\n    background-color: #090;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Go</button>\\n<p>Ready...</p>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<script>\\n$( \\\"button\\\" ).on( \\\"click\\\", function() {\\n  $( \\\"p\\\" ).append( \\\"Started...\\\" );\\n​\\n  $( \\\"div\\\" ).each(function( i ) {\\n    $( this ).fadeIn().fadeOut( 1000 * ( i + 1 ) );\\n  });\\n​\\n  $( \\\"div\\\" ).promise().done(function() {\\n    $( \\\"p\\\" ).append( \\\" Finished! \\\" );\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Resolve the returned Promise using a $.when() statement (the .promise() method makes it possible to do this with jQuery collections):\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>promise demo</title>\\n  <style>\\n  div {\\n    height: 50px;\\n    width: 50px;\\n    float: left;\\n    margin-right: 10px;\\n    display: none;\\n    background-color: #090;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Go</button>\\n<p>Ready...</p>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<script>\\nvar effect = function() {\\n  return $( \\\"div\\\" ).fadeIn( 800 ).delay( 1200 ).fadeOut();\\n};\\n​\\n$( \\\"button\\\" ).on( \\\"click\\\", function() {\\n  $( \\\"p\\\" ).append( \\\" Started... \\\" );\\n​\\n  $.when( effect() ).done(function() {\\n    $( \\\"p\\\" ).append( \\\" Finished! \\\" );\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    promise(type?: string): JQuery.Promise<this>;\\n    /**\\n     * Set one or more properties for the set of matched elements.\\n     * @param propertyName The name of the property to set.\\n     * @param value_function _&#x40;param_ `value_function`\\n     * <br>\\n     * * `value` — A value to set for the property. <br>\\n     * * `function` — A function returning the value to set. Receives the index position of the element in the set and the\\n     *                old property value as arguments. Within the function, the keyword `this` refers to the current element.\\n     * @see \\\\`{@link https://api.jquery.com/prop/ }\\\\`\\n     * @since 1.6\\n     */\\n    prop(propertyName: string,\\n         value_function: string | number | boolean | symbol | object | null | undefined | ((this: TElement, index: number, oldPropertyValue: any) => any)): this;\\n    /**\\n     * Set one or more properties for the set of matched elements.\\n     * @param properties An object of property-value pairs to set.\\n     * @see \\\\`{@link https://api.jquery.com/prop/ }\\\\`\\n     * @since 1.6\\n     * @example ​ ````Disable all checkboxes on the page.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>prop demo</title>\\n  <style>\\n  img {\\n    padding: 10px;\\n  }\\n  div {\\n    color: red;\\n    font-size: 24px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n  <input type=\\\"checkbox\\\" checked=\\\"checked\\\">\\n  <input type=\\\"checkbox\\\">\\n  <input type=\\\"checkbox\\\">\\n  <input type=\\\"checkbox\\\" checked=\\\"checked\\\">\\n​\\n<script>\\n$( \\\"input[type='checkbox']\\\" ).prop({\\n  disabled: true\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    prop(properties: JQuery.PlainObject): this;\\n    /**\\n     * Get the value of a property for the first element in the set of matched elements.\\n     * @param propertyName The name of the property to get.\\n     * @see \\\\`{@link https://api.jquery.com/prop/ }\\\\`\\n     * @since 1.6\\n     * @example ​ ````Display the checked property and attribute of a checkbox as it changes.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>prop demo</title>\\n  <style>\\n  p {\\n    margin: 20px 0 0;\\n  }\\n  b {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"check1\\\" type=\\\"checkbox\\\" checked=\\\"checked\\\">\\n<label for=\\\"check1\\\">Check me</label>\\n<p></p>\\n​\\n<script>\\n$( \\\"input\\\" ).change(function() {\\n  var $input = $( this );\\n  $( \\\"p\\\" ).html(\\n    \\\".attr( \\\\\\\"checked\\\\\\\" ): <b>\\\" + $input.attr( \\\"checked\\\" ) + \\\"</b><br>\\\" +\\n    \\\".prop( \\\\\\\"checked\\\\\\\" ): <b>\\\" + $input.prop( \\\"checked\\\" ) + \\\"</b><br>\\\" +\\n    \\\".is( \\\\\\\":checked\\\\\\\" ): <b>\\\" + $input.is( \\\":checked\\\" ) + \\\"</b>\\\" );\\n}).change();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    prop(propertyName: string): any;\\n    /**\\n     * Add a collection of DOM elements onto the jQuery stack.\\n     * @param elements An array of elements to push onto the stack and make into a new jQuery object.\\n     * @param name The name of a jQuery method that generated the array of elements.\\n     * @param args The arguments that were passed in to the jQuery method (for serialization).\\n     * @see \\\\`{@link https://api.jquery.com/pushStack/ }\\\\`\\n     * @since 1.3\\n     */\\n    pushStack(elements: ArrayLike<Element>, name: string, args: any[]): this;\\n    /**\\n     * Add a collection of DOM elements onto the jQuery stack.\\n     * @param elements An array of elements to push onto the stack and make into a new jQuery object.\\n     * @see \\\\`{@link https://api.jquery.com/pushStack/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Add some elements onto the jQuery stack, then pop back off again.\\n```javascript\\njQuery([])\\n  .pushStack( document.getElementsByTagName( \\\"div\\\" ) )\\n  .remove()\\n  .end();\\n```\\n     */\\n    pushStack(elements: ArrayLike<Element>): this;\\n    /**\\n     * Manipulate the queue of functions to be executed, once for each matched element.\\n     * @param queueName A string containing the name of the queue. Defaults to fx, the standard effects queue.\\n     * @param newQueue The new function to add to the queue, with a function to call that will dequeue the next item.\\n     *                 An array of functions to replace the current queue contents.\\n     * @see \\\\`{@link https://api.jquery.com/queue/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Set a queue array to delete the queue.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>queue demo</title>\\n  <style>\\n  div {\\n    margin: 3px;\\n    width: 40px;\\n    height: 40px;\\n    position: absolute;\\n    left: 0px;\\n    top: 30px;\\n    background: green;\\n    display: none;\\n  }\\n  div.newcolor {\\n    background: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"start\\\">Start</button>\\n<button id=\\\"stop\\\">Stop</button>\\n<div></div>\\n​\\n<script>\\n$( \\\"#start\\\" ).click(function() {\\n  $( \\\"div\\\" )\\n    .show( \\\"slow\\\" )\\n    .animate({ left: \\\"+=200\\\" }, 5000 )\\n    .queue(function() {\\n      $( this ).addClass( \\\"newcolor\\\" ).dequeue();\\n    })\\n    .animate({ left: '-=200' }, 1500 )\\n    .queue(function() {\\n      $( this ).removeClass( \\\"newcolor\\\" ).dequeue();\\n    })\\n    .slideUp();\\n});\\n$( \\\"#stop\\\" ).click(function() {\\n  $( \\\"div\\\" )\\n    .queue( \\\"fx\\\", [] )\\n    .stop();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    queue(queueName: string, newQueue: JQuery.TypeOrArray<JQuery.QueueFunction<TElement>>): this;\\n    /**\\n     * Manipulate the queue of functions to be executed, once for each matched element.\\n     * @param newQueue The new function to add to the queue, with a function to call that will dequeue the next item.\\n     *                 An array of functions to replace the current queue contents.\\n     * @see \\\\`{@link https://api.jquery.com/queue/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Queue a custom function.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>queue demo</title>\\n  <style>\\n  div {\\n    margin: 3px;\\n    width: 40px;\\n    height: 40px;\\n    position: absolute;\\n    left: 0px;\\n    top: 30px;\\n    background: green;\\n    display: none;\\n  }\\n  div.newcolor {\\n    background: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nClick here...\\n<div></div>\\n​\\n<script>\\n$( document.body ).click(function() {\\n  $( \\\"div\\\" )\\n    .show( \\\"slow\\\" )\\n    .animate({ left: \\\"+=200\\\" }, 2000 )\\n    .queue(function() {\\n      $( this ).addClass( \\\"newcolor\\\" ).dequeue();\\n    })\\n    .animate({ left: \\\"-=200\\\" }, 500 )\\n    .queue(function() {\\n      $( this ).removeClass( \\\"newcolor\\\" ).dequeue();\\n    })\\n    .slideUp();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    queue(newQueue: JQuery.TypeOrArray<JQuery.QueueFunction<TElement>>): this;\\n    /**\\n     * Show the queue of functions to be executed on the matched elements.\\n     * @param queueName A string containing the name of the queue. Defaults to fx, the standard effects queue.\\n     * @see \\\\`{@link https://api.jquery.com/queue/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Show the length of the queue.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>queue demo</title>\\n  <style>\\n  div {\\n    margin: 3px;\\n    width: 40px;\\n    height: 40px;\\n    position: absolute;\\n    left: 0px;\\n    top: 60px;\\n    background: green;\\n    display: none;\\n  }\\n  div.newcolor {\\n    background: blue;\\n  }\\n  p {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>The queue length is: <span></span></p>\\n<div></div>\\n​\\n<script>\\nvar div = $( \\\"div\\\" );\\n​\\nfunction runIt() {\\n  div\\n    .show( \\\"slow\\\" )\\n    .animate({ left: \\\"+=200\\\" }, 2000 )\\n    .slideToggle( 1000 )\\n    .slideToggle( \\\"fast\\\" )\\n    .animate({ left: \\\"-=200\\\" }, 1500 )\\n    .hide( \\\"slow\\\" )\\n    .show( 1200 )\\n    .slideUp( \\\"normal\\\", runIt );\\n}\\n​\\nfunction showIt() {\\n  var n = div.queue( \\\"fx\\\" );\\n  $( \\\"span\\\" ).text( n.length );\\n  setTimeout( showIt, 100 );\\n}\\n​\\nrunIt();\\nshowIt();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    queue(queueName?: string): JQuery.Queue<Node>;\\n    /**\\n     * Specify a function to execute when the DOM is fully loaded.\\n     * @param handler A function to execute after the DOM is ready.\\n     * @see \\\\`{@link https://api.jquery.com/ready/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.0. Use `jQuery(function() { })`.\\n     * @example ​ ````Display a message when the DOM is loaded.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>ready demo</title>\\n  <style>\\n  p {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n  <script>\\n​\\n  $(function() {\\n    $( \\\"p\\\" ).text( \\\"The DOM is now loaded and can be manipulated.\\\" );\\n  });\\n​\\n  </script>\\n</head>\\n<body>\\n​\\n<p>Not loaded yet.</p>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    ready(handler: ($: JQueryStatic) => void): this;\\n    /**\\n     * Remove the set of matched elements from the DOM.\\n     * @param selector A selector expression that filters the set of matched elements to be removed.\\n     * @see \\\\`{@link https://api.jquery.com/remove/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Removes all paragraphs from the DOM\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>remove demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n    margin: 6px 0;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\nhow are\\n<p>you?</p>\\n<button>Call remove() on paragraphs</button>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).remove();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Removes all paragraphs that contain &quot;Hello&quot; from the DOM.  Analogous to doing $(&quot;p&quot;).filter(&quot;:contains(&#39;Hello&#39;)&quot;).remove().\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>remove demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n    margin: 6px 0;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p class=\\\"hello\\\">Hello</p>\\nhow are\\n<p>you?</p>\\n<button>Call remove( \\\":contains('Hello')\\\" ) on paragraphs</button>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).remove( \\\":contains('Hello')\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    remove(selector?: string): this;\\n    /**\\n     * Remove an attribute from each element in the set of matched elements.\\n     * @param attributeName An attribute to remove; as of version 1.7, it can be a space-separated list of attributes.\\n     * @see \\\\`{@link https://api.jquery.com/removeAttr/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Clicking the button changes the title of the input next to it. Move the mouse pointer over the text input to see the effect of adding and removing the title attribute.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>removeAttr demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Change title</button>\\n<input type=\\\"text\\\" title=\\\"hello there\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n(function() {\\n  var inputTitle = $( \\\"input\\\" ).attr( \\\"title\\\" );\\n  $( \\\"button\\\" ).click(function() {\\n    var input = $( this ).next();\\n​\\n    if ( input.attr( \\\"title\\\" ) === inputTitle ) {\\n      input.removeAttr( \\\"title\\\" )\\n    } else {\\n      input.attr( \\\"title\\\", inputTitle );\\n    }\\n​\\n    $( \\\"#log\\\" ).html( \\\"input title is now \\\" + input.attr( \\\"title\\\" ) );\\n  });\\n})();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    removeAttr(attributeName: string): this;\\n    /**\\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\\n     * @param className_function _&#x40;param_ `className_function`\\n     * <br>\\n     * * `className` — One or more space-separated classes to be removed from the class attribute of each matched element. <br>\\n     * * `function` — A function returning one or more space-separated class names to be removed. Receives the index\\n     *                position of the element in the set and the old class value as arguments.\\n     * @see \\\\`{@link https://api.jquery.com/removeClass/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @since 3.3\\n     * @example ​ ````Remove the class &#39;blue&#39; from the matched elements.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>removeClass demo</title>\\n  <style>\\n  p {\\n    margin: 4px;\\n    font-size: 16px;\\n    font-weight: bolder;\\n  }\\n  .blue {\\n    color: blue;\\n  }\\n  .under {\\n    text-decoration: underline;\\n  }\\n  .highlight {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p class=\\\"blue under\\\">Hello</p>\\n<p class=\\\"blue under highlight\\\">and</p>\\n<p class=\\\"blue under\\\">then</p>\\n<p class=\\\"blue under\\\">Goodbye</p>\\n​\\n<script>\\n$( \\\"p:even\\\" ).removeClass( \\\"blue\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Remove the class &#39;blue&#39; and &#39;under&#39; from the matched elements.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>removeClass demo</title>\\n  <style>\\n  p {\\n    margin: 4px;\\n    font-size: 16px;\\n    font-weight: bolder;\\n  }\\n  .blue {\\n    color: blue;\\n  }\\n  .under {\\n    text-decoration: underline;\\n  }\\n  .highlight {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p class=\\\"blue under\\\">Hello</p>\\n<p class=\\\"blue under highlight\\\">and</p>\\n<p class=\\\"blue under\\\">then</p>\\n<p class=\\\"blue under\\\">Goodbye</p>\\n​\\n<script>\\n$( \\\"p:odd\\\" ).removeClass( \\\"blue under\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Remove all the classes from the matched elements.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>removeClass demo</title>\\n  <style>\\n  p {\\n    margin: 4px;\\n    font-size: 16px;\\n    font-weight: bolder;\\n  }\\n  .blue {\\n    color: blue;\\n  }\\n  .under {\\n    text-decoration: underline;\\n  }\\n  .highlight {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p class=\\\"blue under\\\">Hello</p>\\n<p class=\\\"blue under highlight\\\">and</p>\\n<p class=\\\"blue under\\\">then</p>\\n<p class=\\\"blue under\\\">Goodbye</p>\\n​\\n<script>\\n$( \\\"p:eq(1)\\\" ).removeClass();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    removeClass(className_function?: JQuery.TypeOrArray<string> | ((this: TElement, index: number, className: string) => string)): this;\\n    /**\\n     * Remove a previously-stored piece of data.\\n     * @param name A string naming the piece of data to delete.\\n     *             An array or space-separated string naming the pieces of data to delete.\\n     * @see \\\\`{@link https://api.jquery.com/removeData/ }\\\\`\\n     * @since 1.2.3\\n     * @since 1.7\\n     * @example ​ ````Set a data store for 2 names then remove one of them.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>removeData demo</title>\\n  <style>\\n  div {\\n    margin: 2px;\\n    color: blue;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>value1 before creation: <span></span></div>\\n<div>value1 after creation: <span></span></div>\\n<div>value1 after removal: <span></span></div>\\n<div>value2 after removal: <span></span></div>\\n​\\n<script>\\n$( \\\"span:eq(0)\\\" ).text( \\\"\\\" + $( \\\"div\\\" ).data( \\\"test1\\\" ) );\\n$( \\\"div\\\" ).data( \\\"test1\\\", \\\"VALUE-1\\\" );\\n$( \\\"div\\\" ).data( \\\"test2\\\", \\\"VALUE-2\\\" );\\n$( \\\"span:eq(1)\\\" ).text( \\\"\\\" + $( \\\"div\\\").data( \\\"test1\\\" ) );\\n$( \\\"div\\\" ).removeData( \\\"test1\\\" );\\n$( \\\"span:eq(2)\\\" ).text( \\\"\\\" + $( \\\"div\\\" ).data( \\\"test1\\\" ) );\\n$( \\\"span:eq(3)\\\" ).text( \\\"\\\" + $( \\\"div\\\" ).data( \\\"test2\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    removeData(name?: JQuery.TypeOrArray<string>): this;\\n    /**\\n     * Remove a property for the set of matched elements.\\n     * @param propertyName The name of the property to remove.\\n     * @see \\\\`{@link https://api.jquery.com/removeProp/ }\\\\`\\n     * @since 1.6\\n     * @example ​ ````Set a numeric property on a paragraph and then remove it.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>removeProp demo</title>\\n  <style>\\n  img {\\n    padding: 10px;\\n  }\\n  div {\\n    color: red;\\n    font-size: 24px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n  <p></p>\\n​\\n<script>\\npara = $( \\\"p\\\" );\\npara\\n  .prop( \\\"luggageCode\\\", 1234 )\\n  .append( \\\"The secret luggage code is: \\\", String( para.prop( \\\"luggageCode\\\" ) ), \\\". \\\" )\\n  .removeProp( \\\"luggageCode\\\" )\\n  .append( \\\"Now the secret luggage code is: \\\", String( para.prop( \\\"luggageCode\\\" ) ), \\\". \\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    removeProp(propertyName: string): this;\\n    /**\\n     * Replace each target element with the set of matched elements.\\n     * @param target A selector string, jQuery object, DOM element, or array of elements indicating which element(s) to replace.\\n     * @see \\\\`{@link https://api.jquery.com/replaceAll/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Replace all the paragraphs with bold words.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>replaceAll demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n​\\n<script>\\n$( \\\"<b>Paragraph. </b>\\\" ).replaceAll( \\\"p\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    replaceAll(target: JQuery.Selector | JQuery | JQuery.TypeOrArray<Element>): this;\\n    /**\\n     * Replace each element in the set of matched elements with the provided new content and return the set of elements that was removed.\\n     * @param newContent_function _&#x40;param_ `newContent_function`\\n     * <br>\\n     * * `newContent` — The content to insert. May be an HTML string, DOM element, array of DOM elements, or jQuery object. <br>\\n     * * `function` — A function that returns content with which to replace the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/replaceWith/ }\\\\`\\n     * @since 1.2\\n     * @since 1.4\\n     * @example ​ ````On click, replace the button with a div containing the same word.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>replaceWith demo</title>\\n  <style>\\n  button {\\n    display: block;\\n    margin: 3px;\\n    color: red;\\n    width: 200px;\\n  }\\n  div {\\n    color: red;\\n    border: 2px solid blue;\\n    width: 200px;\\n    margin: 3px;\\n    text-align: center;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>First</button>\\n<button>Second</button>\\n<button>Third</button>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( this ).replaceWith( \\\"<div>\\\" + $( this ).text() + \\\"</div>\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Replace all paragraphs with bold words.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>replaceWith demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n​\\n<script>\\n$( \\\"p\\\" ).replaceWith( \\\"<b>Paragraph. </b>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````On click, replace each paragraph with a div that is already in the DOM and selected with the $() function. Notice it doesn&#39;t clone the object but rather moves it to replace the paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>replaceWith demo</title>\\n  <style>\\n  div {\\n    border: 2px solid blue;\\n    color: red;\\n    margin: 3px;\\n  }\\n  p {\\n    border: 2px solid red;\\n    color: blue;\\n    margin: 3px;\\n    cursor: pointer;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n  <p>Hello</p>\\n  <p>cruel</p>\\n  <p>World</p>\\n  <div>Replaced!</div>\\n​\\n<script>\\n$( \\\"p\\\" ).click(function() {\\n  $( this ).replaceWith( $( \\\"div\\\" ) );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````On button click, replace the containing div with its child divs and append the class name of the selected element to the paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>replaceWith demo</title>\\n  <style>\\n  .container {\\n    background-color: #991;\\n  }\\n  .inner {\\n    color: #911;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>\\n  <button>Replace!</button>\\n</p>\\n<div class=\\\"container\\\">\\n  <div class=\\\"inner\\\">Scooby</div>\\n  <div class=\\\"inner\\\">Dooby</div>\\n  <div class=\\\"inner\\\">Doo</div>\\n</div>\\n​\\n<script>\\n$( \\\"button\\\" ).on( \\\"click\\\", function() {\\n  var $container = $( \\\"div.container\\\" ).replaceWith(function() {\\n    return $( this ).contents();\\n  });\\n​\\n  $( \\\"p\\\" ).append( $container.attr( \\\"class\\\" ) );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    replaceWith(newContent_function: JQuery.htmlString |\\n                                     JQuery<JQuery.Node> |\\n                                     JQuery.TypeOrArray<Element> |\\n                                     JQuery.Node |\\n                                     ((this: TElement, index: number, oldhtml: JQuery.htmlString) => JQuery.htmlString |\\n                                                                                                     JQuery<JQuery.Node> |\\n                                                                                                     JQuery.TypeOrArray<Element> |\\n                                                                                                     JQuery.Node)): this;\\n    /**\\n     * Bind an event handler to the \\\"resize\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/resize/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    resize<TData>(eventData: TData,\\n                  handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'resize'>): this;\\n    /**\\n     * Bind an event handler to the \\\"resize\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/resize/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````To see the window width while (or after) it is resized, try:\\n```javascript\\n$( window ).resize(function() {\\n  $( \\\"body\\\" ).prepend( \\\"<div>\\\" + $( window ).width() + \\\"</div>\\\" );\\n});\\n```\\n     */\\n    resize(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'resize'> |\\n                     false): this;\\n    /**\\n     * Bind an event handler to the \\\"scroll\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/scroll/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    scroll<TData>(eventData: TData,\\n                  handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'scroll'>): this;\\n    /**\\n     * Bind an event handler to the \\\"scroll\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/scroll/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````To do something when your page is scrolled:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>scroll demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  p {\\n    color: green;\\n  }\\n  span {\\n    color: red;\\n    display: none;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>Try scrolling the iframe.</div>\\n<p>Paragraph - <span>Scroll happened!</span></p>\\n​\\n<script>\\n$( \\\"p\\\" ).clone().appendTo( document.body );\\n$( \\\"p\\\" ).clone().appendTo( document.body );\\n$( \\\"p\\\" ).clone().appendTo( document.body );\\n$( window ).scroll(function() {\\n  $( \\\"span\\\" ).css( \\\"display\\\", \\\"inline\\\" ).fadeOut( \\\"slow\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    scroll(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'scroll'> |\\n                     false): this;\\n    /**\\n     * Set the current horizontal position of the scroll bar for each of the set of matched elements.\\n     * @param value An integer indicating the new position to set the scroll bar to.\\n     * @see \\\\`{@link https://api.jquery.com/scrollLeft/ }\\\\`\\n     * @since 1.2.6\\n     * @example ​ ````Set the scrollLeft of a div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>scrollLeft demo</title>\\n  <style>\\n  div.demo {\\n    background: #ccc none repeat scroll 0 0;\\n    border: 3px solid #666;\\n    margin: 5px;\\n    padding: 5px;\\n    position: relative;\\n    width: 200px;\\n    height: 100px;\\n    overflow: auto;\\n  }\\n  p {\\n    margin: 10px;\\n    padding: 5px;\\n    border: 2px solid #666;\\n    width: 1000px;\\n    height: 1000px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"demo\\\"><h1>lalala</h1><p>Hello</p></div>\\n​\\n<script>\\n$( \\\"div.demo\\\" ).scrollLeft( 300 );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    scrollLeft(value: number): this;\\n    /**\\n     * Get the current horizontal position of the scroll bar for the first element in the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/scrollLeft/ }\\\\`\\n     * @since 1.2.6\\n     * @example ​ ````Get the scrollLeft of a paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>scrollLeft demo</title>\\n  <style>\\n  p {\\n    margin: 10px;\\n    padding: 5px;\\n    border: 2px solid #666;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p><p></p>\\n​\\n<script>\\nvar p = $( \\\"p:first\\\" );\\n$( \\\"p:last\\\" ).text( \\\"scrollLeft:\\\" + p.scrollLeft() );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    scrollLeft(): number | undefined;\\n    /**\\n     * Set the current vertical position of the scroll bar for each of the set of matched elements.\\n     * @param value A number indicating the new position to set the scroll bar to.\\n     * @see \\\\`{@link https://api.jquery.com/scrollTop/ }\\\\`\\n     * @since 1.2.6\\n     * @example ​ ````Set the scrollTop of a div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>scrollTop demo</title>\\n  <style>\\n  div.demo {\\n    background: #ccc none repeat scroll 0 0;\\n    border: 3px solid #666;\\n    margin: 5px;\\n    padding: 5px;\\n    position: relative;\\n    width: 200px;\\n    height: 100px;\\n    overflow: auto;\\n  }\\n  p {\\n    margin: 10px;\\n    padding: 5px;\\n    border: 2px solid #666;\\n    width: 1000px;\\n    height: 1000px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"demo\\\"><h1>lalala</h1><p>Hello</p></div>\\n​\\n<script>\\n$( \\\"div.demo\\\" ).scrollTop( 300 );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    scrollTop(value: number): this;\\n    /**\\n     * Get the current vertical position of the scroll bar for the first element in the set of matched elements or set the vertical position of the scroll bar for every matched element.\\n     * @see \\\\`{@link https://api.jquery.com/scrollTop/ }\\\\`\\n     * @since 1.2.6\\n     * @example ​ ````Get the scrollTop of a paragraph.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>scrollTop demo</title>\\n  <style>\\n  p {\\n    margin: 10px;\\n    padding: 5px;\\n    border: 2px solid #666;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p><p></p>\\n​\\n<script>\\nvar p = $( \\\"p:first\\\" );\\n$( \\\"p:last\\\" ).text( \\\"scrollTop:\\\" + p.scrollTop() );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    scrollTop(): number | undefined;\\n    /**\\n     * Bind an event handler to the \\\"select\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/select/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    select<TData>(eventData: TData,\\n                  handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'select'>): this;\\n    /**\\n     * Bind an event handler to the \\\"select\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/select/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````To do something when text in input boxes is selected:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>select demo</title>\\n  <style>\\n  p {\\n    color: blue;\\n  }\\n  div {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n  <p>Click and drag the mouse to select text in the inputs.</p>\\n  <input type=\\\"text\\\" value=\\\"Some text\\\">\\n  <input type=\\\"text\\\" value=\\\"to test on\\\">\\n  <div></div>\\n  ​\\n<script>\\n$( \\\":input\\\" ).select(function() {\\n  $( \\\"div\\\" ).text( \\\"Something was selected\\\" ).show().fadeOut( 1000 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To trigger the select event on all input elements, try:\\n```javascript\\n$( \\\"input\\\" ).select();\\n```\\n     */\\n    select(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'select'> |\\n                     false): this;\\n    /**\\n     * Encode a set of form elements as a string for submission.\\n     * @see \\\\`{@link https://api.jquery.com/serialize/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Serialize a form to a query string that could be sent to a server in an Ajax request.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>serialize demo</title>\\n  <style>\\n  body, select {\\n    font-size: 12px;\\n  }\\n  form {\\n    margin: 5px;\\n  }\\n  p {\\n    color: red;\\n    margin: 5px;\\n    font-size: 14px;\\n  }\\n  b {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<form>\\n  <select name=\\\"single\\\">\\n    <option>Single</option>\\n    <option>Single2</option>\\n  </select>\\n​\\n  <br>\\n  <select name=\\\"multiple\\\" multiple=\\\"multiple\\\">\\n    <option selected=\\\"selected\\\">Multiple</option>\\n    <option>Multiple2</option>\\n    <option selected=\\\"selected\\\">Multiple3</option>\\n  </select>\\n​\\n  <br>\\n  <input type=\\\"checkbox\\\" name=\\\"check\\\" value=\\\"check1\\\" id=\\\"ch1\\\">\\n  <label for=\\\"ch1\\\">check1</label>\\n  <input type=\\\"checkbox\\\" name=\\\"check\\\" value=\\\"check2\\\" checked=\\\"checked\\\" id=\\\"ch2\\\">\\n  <label for=\\\"ch2\\\">check2</label>\\n​\\n  <br>\\n  <input type=\\\"radio\\\" name=\\\"radio\\\" value=\\\"radio1\\\" checked=\\\"checked\\\" id=\\\"r1\\\">\\n  <label for=\\\"r1\\\">radio1</label>\\n  <input type=\\\"radio\\\" name=\\\"radio\\\" value=\\\"radio2\\\" id=\\\"r2\\\">\\n  <label for=\\\"r2\\\">radio2</label>\\n</form>\\n​\\n<p><tt id=\\\"results\\\"></tt></p>\\n​\\n<script>\\n  function showValues() {\\n    var str = $( \\\"form\\\" ).serialize();\\n    $( \\\"#results\\\" ).text( str );\\n  }\\n  $( \\\"input[type='checkbox'], input[type='radio']\\\" ).on( \\\"click\\\", showValues );\\n  $( \\\"select\\\" ).on( \\\"change\\\", showValues );\\n  showValues();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    serialize(): string;\\n    /**\\n     * Encode a set of form elements as an array of names and values.\\n     * @see \\\\`{@link https://api.jquery.com/serializeArray/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Get the values from a form, iterate through them, and append them to a results display.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>serializeArray demo</title>\\n  <style>\\n  body, select {\\n    font-size: 14px;\\n  }\\n  form {\\n    margin: 5px;\\n  }\\n  p {\\n    color: red;\\n    margin: 5px;\\n  }\\n  b {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><b>Results:</b> <span id=\\\"results\\\"></span></p>\\n<form>\\n  <select name=\\\"single\\\">\\n    <option>Single</option>\\n    <option>Single2</option>\\n  </select>\\n  <select name=\\\"multiple\\\" multiple=\\\"multiple\\\">\\n    <option selected=\\\"selected\\\">Multiple</option>\\n    <option>Multiple2</option>\\n    <option selected=\\\"selected\\\">Multiple3</option>\\n  </select>\\n  <br>\\n  <input type=\\\"checkbox\\\" name=\\\"check\\\" value=\\\"check1\\\" id=\\\"ch1\\\">\\n  <label for=\\\"ch1\\\">check1</label>\\n  <input type=\\\"checkbox\\\" name=\\\"check\\\" value=\\\"check2\\\" checked=\\\"checked\\\" id=\\\"ch2\\\">\\n  <label for=\\\"ch2\\\">check2</label>\\n  <input type=\\\"radio\\\" name=\\\"radio\\\" value=\\\"radio1\\\" checked=\\\"checked\\\" id=\\\"r1\\\">\\n  <label for=\\\"r1\\\">radio1</label>\\n  <input type=\\\"radio\\\" name=\\\"radio\\\" value=\\\"radio2\\\" id=\\\"r2\\\">\\n  <label for=\\\"r2\\\">radio2</label>\\n</form>\\n​\\n<script>\\n  function showValues() {\\n    var fields = $( \\\":input\\\" ).serializeArray();\\n    $( \\\"#results\\\" ).empty();\\n    jQuery.each( fields, function( i, field ) {\\n      $( \\\"#results\\\" ).append( field.value + \\\" \\\" );\\n    });\\n  }\\n​\\n  $( \\\":checkbox, :radio\\\" ).click( showValues );\\n  $( \\\"select\\\" ).change( showValues );\\n  showValues();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    serializeArray(): JQuery.NameValuePair[];\\n    /**\\n     * Display the matched elements.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/show/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    show(duration: JQuery.Duration, easing: string, complete: (this: TElement) => void): this;\\n    /**\\n     * Display the matched elements.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing_complete _&#x40;param_ `easing_complete`\\n     * <br>\\n     * * `easing` — A string indicating which easing function to use for the transition. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/show/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Show the first div, followed by each next adjacent sibling div in order, with a 200ms animation. Each animation starts when the previous sibling div&#39;s animation ends.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>show demo</title>\\n  <style>\\n  div {\\n    background: #def3ca;\\n    margin: 3px;\\n    width: 80px;\\n    display: none;\\n    float: left;\\n    text-align: center;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"showr\\\">Show</button>\\n<button id=\\\"hidr\\\">Hide</button>\\n<div>Hello 3,</div>\\n<div>how</div>\\n<div>are</div>\\n<div>you?</div>\\n​\\n<script>\\n$( \\\"#showr\\\" ).click(function() {\\n  $( \\\"div\\\" ).first().show( \\\"fast\\\", function showNext() {\\n    $( this ).next( \\\"div\\\" ).show( \\\"fast\\\", showNext );\\n  });\\n});\\n​\\n$( \\\"#hidr\\\" ).click(function() {\\n  $( \\\"div\\\" ).hide( 1000 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Show all span and input elements with an animation. Change the text once the animation is done.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>show demo</title>\\n  <style>\\n  span {\\n    display: none;\\n  }\\n  div {\\n    display: none;\\n  }\\n  p {\\n    font-weight: bold;\\n    background-color: #fcd;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Do it!</button>\\n<span>Are you sure? (type 'yes' if you are) </span>\\n<div>\\n  <form>\\n    <input type=\\\"text\\\"  value=\\\"as;ldkfjalsdf\\\">\\n  </form>\\n</div>\\n<p style=\\\"display:none;\\\">I'm hidden...</p>\\n​\\n<script>\\nfunction doIt() {\\n  $( \\\"span,div\\\" ).show( \\\"slow\\\" );\\n}\\n// Can pass in function name\\n$( \\\"button\\\" ).click( doIt );\\n​\\n$( \\\"form\\\" ).submit(function( event ) {\\n  if ( $( \\\"input\\\" ).val() === \\\"yes\\\" ) {\\n    $( \\\"p\\\" ).show( 4000, function() {\\n      $( this ).text( \\\"Ok, DONE! (now showing)\\\" );\\n    });\\n  }\\n  $( \\\"span,div\\\" ).hide( \\\"fast\\\" );\\n​\\n  // Prevent form submission\\n  event.preventDefault();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    show(duration: JQuery.Duration, easing_complete: string | ((this: TElement) => void)): this;\\n    /**\\n     * Display the matched elements.\\n     * @param duration_complete_options _&#x40;param_ `duration_complete_options`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element. <br>\\n     * * `options` — A map of additional options to pass to the method.\\n     * @see \\\\`{@link https://api.jquery.com/show/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Animates all hidden paragraphs to show slowly, completing the animation within 600 milliseconds.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>show demo</title>\\n  <style>\\n  p {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Show it</button>\\n<p style=\\\"display: none\\\">Hello  2</p>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).show( \\\"slow\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    show(duration_complete_options?: JQuery.Duration | ((this: TElement) => void) | JQuery.EffectsOptions<TElement>): this;\\n    /**\\n     * Get the siblings of each element in the set of matched elements, optionally filtered by a selector.\\n     * @param selector A string containing a selector expression to match elements against.\\n     * @see \\\\`{@link https://api.jquery.com/siblings/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Find the unique siblings of all yellow li elements in the 3 lists (including other yellow li elements if appropriate).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>siblings demo</title>\\n  <style>\\n  ul {\\n    float: left;\\n    margin: 5px;\\n    font-size: 16px;\\n    font-weight: bold;\\n  }\\n  p {\\n    color: blue;\\n    margin: 10px 20px;\\n    font-size: 16px;\\n    padding: 5px;\\n    font-weight: bolder;\\n  }\\n  .hilite {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li>One</li>\\n  <li>Two</li>\\n  <li class=\\\"hilite\\\">Three</li>\\n  <li>Four</li>\\n</ul>\\n​\\n<ul>\\n  <li>Five</li>\\n  <li>Six</li>\\n  <li>Seven</li>\\n</ul>\\n​\\n<ul>\\n  <li>Eight</li>\\n  <li class=\\\"hilite\\\">Nine</li>\\n  <li>Ten</li>\\n  <li class=\\\"hilite\\\">Eleven</li>\\n</ul>\\n​\\n<p>Unique siblings: <b></b></p>\\n​\\n<script>\\nvar len = $( \\\".hilite\\\" ).siblings()\\n  .css( \\\"color\\\", \\\"red\\\" )\\n  .length;\\n$( \\\"b\\\" ).text( len );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Find all siblings with a class &quot;selected&quot; of each div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>siblings demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div><span>Hello</span></div>\\n<p class=\\\"selected\\\">Hello Again</p>\\n<p>And Again</p>\\n​\\n<script>\\n$( \\\"p\\\" ).siblings( \\\".selected\\\" ).css( \\\"background\\\", \\\"yellow\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    siblings(selector?: JQuery.Selector): this;\\n    /**\\n     * Reduce the set of matched elements to a subset specified by a range of indices.\\n     * @param start An integer indicating the 0-based position at which the elements begin to be selected. If negative,\\n     *              it indicates an offset from the end of the set.\\n     * @param end An integer indicating the 0-based position at which the elements stop being selected. If negative,\\n     *            it indicates an offset from the end of the set. If omitted, the range continues until the end of the set.\\n     * @see \\\\`{@link https://api.jquery.com/slice/ }\\\\`\\n     * @since 1.1.4\\n     * @example ​ ````Turns divs yellow based on a random slice.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>slice demo</title>\\n  <style>\\n  div {\\n    width: 40px;\\n    height: 40px;\\n    margin: 10px;\\n    float: left;\\n    border: 2px solid blue;\\n  }\\n  span {\\n    color: red;\\n    font-weight: bold;\\n  }\\n  button {\\n    margin: 5px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button>Turn slice yellow</button>\\n  <span>Click the button!</span></p>\\n  <div></div>\\n  <div></div>\\n  <div></div>\\n  <div></div>\\n  <div></div>\\n  <div></div>\\n  <div></div>\\n  <div></div>\\n  <div></div>\\n  ​\\n<script>\\nfunction colorEm() {\\n  var $div = $( \\\"div\\\" );\\n  var start = Math.floor( Math.random() * $div.length );\\n  var end = Math.floor( Math.random() * ( $div.length - start ) ) +\\n    start + 1;\\n  if ( end === $div.length ) {\\n    end = undefined;\\n  }\\n  $div.css( \\\"background\\\", \\\"\\\" );\\n  if ( end ) {\\n    $div.slice( start, end ).css( \\\"background\\\", \\\"yellow\\\" );\\n  } else {\\n    $div.slice( start ).css( \\\"background\\\", \\\"yellow\\\" );\\n  }\\n  $( \\\"span\\\" ).text( \\\"$( 'div' ).slice( \\\" + start +\\n    (end ? \\\", \\\" + end : \\\"\\\") +\\n    \\\").css( 'background', 'yellow' );\\\" );\\n}\\n​\\n$( \\\"button\\\" ).click( colorEm );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Selects all paragraphs, then slices the selection to include only the first element.\\n```javascript\\n$( \\\"p\\\" ).slice( 0, 1 ).wrapInner( \\\"<b></b>\\\" );\\n```\\n     * @example ​ ````Selects all paragraphs, then slices the selection to include only the first and second element.\\n```javascript\\n$( \\\"p\\\" ).slice( 0, 2 ).wrapInner( \\\"<b></b>\\\" );\\n```\\n     * @example ​ ````Selects all paragraphs, then slices the selection to include only the second element.\\n```javascript\\n$( \\\"p\\\" ).slice( 1, 2 ).wrapInner( \\\"<b></b>\\\" );\\n```\\n     * @example ​ ````Selects all paragraphs, then slices the selection to include only the second and third element.\\n```javascript\\n$( \\\"p\\\" ).slice( 1 ).wrapInner( \\\"<b></b>\\\" );\\n```\\n     * @example ​ ````Selects all paragraphs, then slices the selection to include only the third element.\\n```javascript\\n$( \\\"p\\\" ).slice( -1 ).wrapInner( \\\"<b></b>\\\" );\\n```\\n     */\\n    slice(start: number, end?: number): this;\\n    /**\\n     * Display the matched elements with a sliding motion.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/slideDown/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    slideDown(duration: JQuery.Duration, easing: string, complete?: (this: TElement) => void): this;\\n    /**\\n     * Display the matched elements with a sliding motion.\\n     * @param duration_easing _&#x40;param_ `duration_easing`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/slideDown/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Animates all inputs to slide down, completing the animation within 1000 milliseconds. Once the animation is done, the input look is changed especially if it is the middle input which gets the focus.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>slideDown demo</title>\\n  <style>\\n  div {\\n    background: #cfd;\\n    margin: 3px;\\n    width: 50px;\\n    text-align: center;\\n    float: left;\\n    cursor: pointer;\\n    border: 2px outset black;\\n    font-weight: bolder;\\n  }\\n  input {\\n    display: none;\\n    width: 120px;\\n    float: left;\\n    margin: 10px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>Push!</div>\\n<input type=\\\"text\\\">\\n<input type=\\\"text\\\" class=\\\"middle\\\">\\n<input type=\\\"text\\\">\\n  ​\\n<script>\\n$( \\\"div\\\" ).click(function() {\\n  $( this ).css({\\n    borderStyle: \\\"inset\\\",\\n    cursor: \\\"wait\\\"\\n  });\\n  $( \\\"input\\\" ).slideDown( 1000, function() {\\n    $( this )\\n      .css( \\\"border\\\", \\\"2px red inset\\\" )\\n      .filter( \\\".middle\\\" )\\n        .css( \\\"background\\\", \\\"yellow\\\" )\\n        .focus();\\n    $( \\\"div\\\" ).css( \\\"visibility\\\", \\\"hidden\\\" );\\n  });\\n});\\n​\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    slideDown(duration_easing: JQuery.Duration | string, complete: (this: TElement) => void): this;\\n    /**\\n     * Display the matched elements with a sliding motion.\\n     * @param duration_easing_complete_options _&#x40;param_ `duration_easing_complete_options`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element. <br>\\n     * * `options` — A map of additional options to pass to the method.\\n     * @see \\\\`{@link https://api.jquery.com/slideDown/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Animates all divs to slide down and show themselves over 600 milliseconds.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>slideDown demo</title>\\n  <style>\\n  div {\\n    background: #de9a44;\\n    margin: 3px;\\n    width: 80px;\\n    height: 40px;\\n    display: none;\\n    float: left;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nClick me!\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<script>\\n$( document.body ).click(function () {\\n  if ( $( \\\"div:first\\\" ).is( \\\":hidden\\\" ) ) {\\n    $( \\\"div\\\" ).slideDown( \\\"slow\\\" );\\n  } else {\\n    $( \\\"div\\\" ).hide();\\n  }\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    slideDown(duration_easing_complete_options?: JQuery.Duration | string | ((this: TElement) => void) | JQuery.EffectsOptions<TElement>): this;\\n    /**\\n     * Display or hide the matched elements with a sliding motion.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/slideToggle/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    slideToggle(duration: JQuery.Duration, easing: string, complete?: (this: TElement) => void): this;\\n    /**\\n     * Display or hide the matched elements with a sliding motion.\\n     * @param duration_easing _&#x40;param_ `duration_easing`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/slideToggle/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Animates divs between dividers with a toggle that makes some appear and some disappear.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>slideToggle demo</title>\\n  <style>\\n  div {\\n    background: #b977d1;\\n    margin: 3px;\\n    width: 60px;\\n    height: 60px;\\n    float: left;\\n  }\\n  div.still {\\n    background: #345;\\n    width: 5px;\\n  }\\n  div.hider {\\n    display: none;\\n  }\\n  span {\\n    color: red;\\n  }\\n  p {\\n    clear: left;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<div class=\\\"still\\\"></div>\\n<div style=\\\"display:none;\\\">\\n</div><div class=\\\"still\\\"></div>\\n<div></div>\\n<div class=\\\"still\\\"></div>\\n<div class=\\\"hider\\\"></div>\\n<div class=\\\"still\\\"></div>\\n<div class=\\\"hider\\\"></div>\\n<div class=\\\"still\\\"></div>\\n<div></div>\\n<p><button id=\\\"aa\\\">Toggle</button> There have been <span>0</span> toggled divs.</p>\\n​\\n<script>\\n$( \\\"#aa\\\" ).click(function() {\\n  $( \\\"div:not(.still)\\\" ).slideToggle( \\\"slow\\\", function() {\\n    var n = parseInt( $( \\\"span\\\" ).text(), 10 );\\n    $( \\\"span\\\" ).text( n + 1 );\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    slideToggle(duration_easing: JQuery.Duration | string, complete: (this: TElement) => void): this;\\n    /**\\n     * Display or hide the matched elements with a sliding motion.\\n     * @param duration_easing_complete_options _&#x40;param_ `duration_easing_complete_options`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element. <br>\\n     * * `options` — A map of additional options to pass to the method.\\n     * @see \\\\`{@link https://api.jquery.com/slideToggle/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Animates all paragraphs to slide up or down, completing the animation within 600 milliseconds.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>slideToggle demo</title>\\n  <style>\\n  p {\\n    width: 400px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Toggle</button>\\n<p>\\n  This is the paragraph to end all paragraphs.  You\\n  should feel <em>lucky</em> to have seen such a paragraph in\\n  your life.  Congratulations!\\n</p>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).slideToggle( \\\"slow\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    slideToggle(duration_easing_complete_options?: JQuery.Duration | string | ((this: TElement) => void) | JQuery.EffectsOptions<TElement>): this;\\n    /**\\n     * Hide the matched elements with a sliding motion.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/slideUp/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    slideUp(duration: JQuery.Duration, easing: string, complete?: (this: TElement) => void): this;\\n    /**\\n     * Hide the matched elements with a sliding motion.\\n     * @param duration_easing _&#x40;param_ `duration_easing`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/slideUp/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Animates the parent paragraph to slide up, completing the animation within 200 milliseconds. Once the animation is done, it displays an alert.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>slideUp demo</title>\\n  <style>\\n div {\\n   margin: 2px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>\\n  <button>Hide One</button>\\n  <input type=\\\"text\\\" value=\\\"One\\\">\\n</div>\\n​\\n<div>\\n  <button>Hide Two</button>\\n  <input type=\\\"text\\\" value=\\\"Two\\\">\\n</div>\\n​\\n<div>\\n  <button>Hide Three</button>\\n  <input type=\\\"text\\\" value=\\\"Three\\\">\\n</div>\\n​\\n<div id=\\\"msg\\\"></div>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( this ).parent().slideUp( \\\"slow\\\", function() {\\n    $( \\\"#msg\\\" ).text( $( \\\"button\\\", this ).text() + \\\" has completed.\\\" );\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    slideUp(duration_easing: JQuery.Duration | string, complete: (this: TElement) => void): this;\\n    /**\\n     * Hide the matched elements with a sliding motion.\\n     * @param duration_easing_complete_options _&#x40;param_ `duration_easing_complete_options`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `easing` — A string indicating which easing function to use for the transition. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element. <br>\\n     * * `options` — A map of additional options to pass to the method.\\n     * @see \\\\`{@link https://api.jquery.com/slideUp/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @example ​ ````Animates all divs to slide up, completing the animation within 400 milliseconds.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>slideUp demo</title>\\n  <style>\\n  div {\\n    background: #3d9a44;\\n    margin: 3px;\\n    width: 80px;\\n    height: 40px;\\n    float: left;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nClick me!\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n<div></div>\\n​\\n<script>\\n$( document.body ).click(function() {\\n  if ( $( \\\"div:first\\\" ).is( \\\":hidden\\\" ) ) {\\n    $( \\\"div\\\" ).show( \\\"slow\\\" );\\n  } else {\\n    $( \\\"div\\\" ).slideUp();\\n  }\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    slideUp(duration_easing_complete_options?: JQuery.Duration | string | ((this: TElement) => void) | JQuery.EffectsOptions<TElement>): this;\\n    /**\\n     * Stop the currently-running animation on the matched elements.\\n     * @param queue The name of the queue in which to stop animations.\\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well. Defaults to false.\\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately. Defaults to false.\\n     * @see \\\\`{@link https://api.jquery.com/stop/ }\\\\`\\n     * @since 1.7\\n     */\\n    stop(queue: string, clearQueue?: boolean, jumpToEnd?: boolean): this;\\n    /**\\n     * Stop the currently-running animation on the matched elements.\\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well. Defaults to false.\\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately. Defaults to false.\\n     * @see \\\\`{@link https://api.jquery.com/stop/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Click the Go button once to start the animation, then click the STOP button to stop it where it&#39;s currently positioned.  Another option is to click several buttons to queue them up and see that stop just kills the currently playing one.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>stop demo</title>\\n  <style>\\n  div {\\n    position: absolute;\\n    background-color: #abc;\\n    left: 0px;\\n    top: 30px;\\n    width: 60px;\\n    height: 60px;\\n    margin: 5px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"go\\\">Go</button>\\n<button id=\\\"stop\\\">STOP!</button>\\n<button id=\\\"back\\\">Back</button>\\n<div class=\\\"block\\\"></div>\\n​\\n<script>\\n// Start animation\\n$( \\\"#go\\\" ).click(function() {\\n  $( \\\".block\\\" ).animate({ left: \\\"+=100px\\\" }, 2000 );\\n});\\n​\\n// Stop animation when button is clicked\\n$( \\\"#stop\\\" ).click(function() {\\n  $( \\\".block\\\" ).stop();\\n});\\n​\\n// Start animation in the opposite direction\\n$( \\\"#back\\\" ).click(function() {\\n  $( \\\".block\\\" ).animate({ left: \\\"-=100px\\\" }, 2000 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Click the slideToggle button to start the animation, then click again before the animation is completed. The animation will toggle the other direction from the saved starting point.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>stop demo</title>\\n  <style>\\n  .block {\\n    background-color: #abc;\\n    border: 2px solid black;\\n    width: 200px;\\n    height: 80px;\\n    margin: 10px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"toggle\\\">slideToggle</button>\\n<div class=\\\"block\\\"></div>\\n​\\n<script>\\nvar $block = $( \\\".block\\\" );\\n​\\n// Toggle a sliding animation animation\\n$( \\\"#toggle\\\" ).on( \\\"click\\\", function() {\\n  $block.stop().slideToggle( 1000 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    stop(clearQueue?: boolean, jumpToEnd?: boolean): this;\\n    /**\\n     * Bind an event handler to the \\\"submit\\\" JavaScript event, or trigger that event on an element.\\n     * @param eventData An object containing data that will be passed to the event handler.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/submit/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     */\\n    submit<TData>(eventData: TData,\\n                  handler: JQuery.TypeEventHandler<TElement, TData, TElement, TElement, 'submit'>): this;\\n    /**\\n     * Bind an event handler to the \\\"submit\\\" JavaScript event, or trigger that event on an element.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/submit/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link on }\\\\` or \\\\`{@link trigger }\\\\`.\\n     *\\n     * **Cause**: The `.on()` and `.trigger()` methods can set an event handler or generate an event for any event type, and should be used instead of the shortcut methods. This message also applies to the other event shorthands, including: blur, focus, focusin, focusout, resize, scroll, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, and contextmenu.\\n     *\\n     * **Solution**: Instead of `.click(fn)` use `.on(\\\"click\\\", fn)`. Instead of `.click()` use `.trigger(\\\"click\\\")`.\\n     * @example ​ ````If you&#39;d like to prevent forms from being submitted unless a flag variable is set, try:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>submit demo</title>\\n  <style>\\n  p {\\n    margin: 0;\\n    color: blue;\\n  }\\n  div,p {\\n    margin-left: 10px;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Type 'correct' to validate.</p>\\n<form action=\\\"javascript:alert( 'success!' );\\\">\\n  <div>\\n    <input type=\\\"text\\\">\\n    <input type=\\\"submit\\\">\\n  </div>\\n</form>\\n<span></span>\\n​\\n<script>\\n$( \\\"form\\\" ).submit(function( event ) {\\n  if ( $( \\\"input:first\\\" ).val() === \\\"correct\\\" ) {\\n    $( \\\"span\\\" ).text( \\\"Validated...\\\" ).show();\\n    return;\\n  }\\n​\\n  $( \\\"span\\\" ).text( \\\"Not valid!\\\" ).show().fadeOut( 1000 );\\n  event.preventDefault();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````If you&#39;d like to prevent forms from being submitted unless a flag variable is set, try:\\n```javascript\\n$( \\\"form\\\" ).submit(function() {\\n  return this.some_flag_variable;\\n});\\n```\\n     * @example ​ ````To trigger the submit event on the first form on the page, try:\\n```javascript\\n$( \\\"form:first\\\" ).submit();\\n```\\n     */\\n    submit(handler?: JQuery.TypeEventHandler<TElement, null, TElement, TElement, 'submit'> |\\n                     false): this;\\n    /**\\n     * Set the content of each element in the set of matched elements to the specified text.\\n     * @param text_function _&#x40;param_ `text_function`\\n     * <br>\\n     * * `text` — The text to set as the content of each matched element. When Number or Boolean is supplied, it will\\n     *            be converted to a String representation. <br>\\n     * * `function` — A function returning the text content to set. Receives the index position of the element in the set\\n     *                and the old text value as arguments.\\n     * @see \\\\`{@link https://api.jquery.com/text/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @example ​ ````Add text to the paragraph (notice the bold tag is escaped).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>text demo</title>\\n  <style>\\n  p {\\n    color: blue;\\n    margin: 8px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Test Paragraph.</p>\\n​\\n<script>\\n$( \\\"p\\\" ).text( \\\"<b>Some</b> new text.\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    text(text_function: string | number | boolean | ((this: TElement, index: number, text: string) => string | number | boolean)): this;\\n    /**\\n     * Get the combined text contents of each element in the set of matched elements, including their descendants.\\n     * @see \\\\`{@link https://api.jquery.com/text/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Find the text in the first paragraph (stripping out the html), then set the html of the last paragraph to show it is just text (the red bold is gone).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>text demo</title>\\n  <style>\\n  p {\\n    color: blue;\\n    margin: 8px;\\n  }\\n  b {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><b>Test</b> Paragraph.</p>\\n<p></p>\\n​\\n<script>\\nvar str = $( \\\"p:first\\\" ).text();\\n$( \\\"p:last\\\" ).html( str );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    text(): string;\\n    /**\\n     * Retrieve all the elements contained in the jQuery set, as an array.\\n     * @see \\\\`{@link https://api.jquery.com/toArray/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Select all divs in the document and return the DOM Elements as an Array; then use the built-in reverse() method to reverse that array.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>toArray demo</title>\\n  <style>\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nReversed - <span></span>\\n​\\n<div>One</div>\\n<div>Two</div>\\n<div>Three</div>​\\n<script>\\nfunction disp( divs ) {\\n  var a = [];\\n  for ( var i = 0; i < divs.length; i++ ) {\\n    a.push( divs[ i ].innerHTML );\\n  }\\n  $( \\\"span\\\" ).text( a.join( \\\" \\\" ) );\\n}\\n​\\ndisp( $( \\\"div\\\" ).toArray().reverse() );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    toArray(): TElement[];\\n    /**\\n     * Display or hide the matched elements.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/toggle/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    toggle(duration: JQuery.Duration, easing: string, complete?: (this: TElement) => void): this;\\n    /**\\n     * Display or hide the matched elements.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/toggle/ }\\\\`\\n     * @since 1.0\\n     */\\n    toggle(duration: JQuery.Duration, complete: (this: TElement) => void): this;\\n    /**\\n     * Display or hide the matched elements.\\n     * @param duration_complete_options_display _&#x40;param_ `duration_complete_options_display`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element. <br>\\n     * * `options` — A map of additional options to pass to the method. <br>\\n     * * `display` — Use true to show the element or false to hide it.\\n     * @see \\\\`{@link https://api.jquery.com/toggle/ }\\\\`\\n     * @since 1.0\\n     * @since 1.3\\n     * @example ​ ````Toggles all paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>toggle demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Toggle</button>\\n<p>Hello</p>\\n<p style=\\\"display: none\\\">Good Bye</p>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).toggle();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Animates all paragraphs to be shown if they are hidden and hidden if they are visible, completing the animation within 600 milliseconds.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>toggle demo</title>\\n  <style>\\n  p {\\n    background: #dad;\\n    font-weight: bold;\\n    font-size: 16px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Toggle 'em</button>\\n<p>Hiya</p>\\n<p>Such interesting text, eh?</p>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).toggle( \\\"slow\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Shows all paragraphs, then hides them all, back and forth.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>toggle demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Toggle</button>\\n<p>Hello</p>\\n<p style=\\\"display: none\\\">Good Bye</p>\\n​\\n<script>\\nvar flip = 0;\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"p\\\" ).toggle( flip++ % 2 === 0 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    toggle(duration_complete_options_display?: JQuery.Duration | ((this: TElement) => void) | JQuery.EffectsOptions<TElement> | boolean): this;\\n    /**\\n     * Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the state argument.\\n     * @param className_function _&#x40;param_ `className_function`\\n     * <br>\\n     * * `className` — One or more class names (separated by spaces) to be toggled for each element in the matched set. <br>\\n     * * `function` — A function that returns class names to be toggled in the class attribute of each element in the\\n     *                matched set. Receives the index position of the element in the set, the old class value, and the state as arguments.\\n     * @param state A Boolean (not just truthy/falsy) value to determine whether the class should be added or removed.\\n     * @see \\\\`{@link https://api.jquery.com/toggleClass/ }\\\\`\\n     * @since 1.0\\n     * @since 1.3\\n     * @since 1.4\\n     * @since 3.3\\n     * @example ​ ````Toggle the class &#39;highlight&#39; when a paragraph is clicked.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>toggleClass demo</title>\\n  <style>\\n  p {\\n    margin: 4px;\\n    font-size: 16px;\\n    font-weight: bolder;\\n    cursor: pointer;\\n  }\\n  .blue {\\n    color: blue;\\n  }\\n  .highlight {\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p class=\\\"blue\\\">Click to toggle</p>\\n<p class=\\\"blue highlight\\\">highlight</p>\\n<p class=\\\"blue\\\">on these</p>\\n<p class=\\\"blue\\\">paragraphs</p>\\n​\\n<script>\\n$( \\\"p\\\" ).click(function() {\\n  $( this ).toggleClass( \\\"highlight\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Add the &quot;highlight&quot; class to the clicked paragraph on every third click of that paragraph, remove it every first and second click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>toggleClass demo</title>\\n  <style>\\n  p {\\n    margin: 4px;\\n    font-size: 16px;\\n    font-weight: bolder;\\n    cursor: pointer;\\n  }\\n  .blue {\\n    color: blue;\\n  }\\n  .highlight {\\n    background: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p class=\\\"blue\\\">Click to toggle (<span>clicks: 0</span>)</p>\\n<p class=\\\"blue highlight\\\">highlight (<span>clicks: 0</span>)</p>\\n<p class=\\\"blue\\\">on these (<span>clicks: 0</span>)</p>\\n<p class=\\\"blue\\\">paragraphs (<span>clicks: 0</span>)</p>\\n​\\n<script>\\nvar count = 0;\\n$( \\\"p\\\" ).each(function() {\\n  var $thisParagraph = $( this );\\n  var count = 0;\\n  $thisParagraph.click(function() {\\n    count++;\\n    $thisParagraph.find( \\\"span\\\" ).text( \\\"clicks: \\\" + count );\\n    $thisParagraph.toggleClass( \\\"highlight\\\", count % 3 === 0 );\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Toggle the class name(s) indicated on the buttons for each div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>toggleClass demo</title>\\n  <style>\\n  .wrap > div {\\n    float: left;\\n    width: 100px;\\n    margin: 1em 1em 0 0;\\n    padding-left: 3px;\\n    border: 1px solid #abc;\\n  }\\n  div.a {\\n    background-color: aqua;\\n  }\\n  div.b {\\n    background-color: burlywood;\\n  }\\n  div.c {\\n    background-color: cornsilk;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div class=\\\"buttons\\\">\\n  <button>toggle</button>\\n  <button class=\\\"a\\\">toggle a</button>\\n  <button class=\\\"a b\\\">toggle a b</button>\\n  <button class=\\\"a b c\\\">toggle a b c</button>\\n  <a href=\\\"#\\\">reset</a>\\n</div>\\n<div class=\\\"wrap\\\">\\n  <div></div>\\n  <div class=\\\"b\\\"></div>\\n  <div class=\\\"a b\\\"></div>\\n  <div class=\\\"a c\\\"></div>\\n</div>\\n​\\n<script>\\nvar cls = [ \\\"\\\", \\\"a\\\", \\\"a b\\\", \\\"a b c\\\" ];\\nvar divs = $( \\\"div.wrap\\\" ).children();\\nvar appendClass = function() {\\n  divs.append(function() {\\n    return \\\"<div>\\\" + ( this.className || \\\"none\\\" ) + \\\"</div>\\\";\\n  });\\n};\\n​\\nappendClass();\\n​\\n$( \\\"button\\\" ).on( \\\"click\\\", function() {\\n  var tc = this.className || undefined;\\n  divs.toggleClass( tc );\\n  appendClass();\\n});\\n​\\n$( \\\"a\\\" ).on( \\\"click\\\", function( event ) {\\n  event.preventDefault();\\n  divs.empty().each(function( i ) {\\n    this.className = cls[ i ];\\n  });\\n  appendClass();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    toggleClass<TState extends boolean>(className_function: JQuery.TypeOrArray<string> | ((this: TElement, index: number, className: string, state: TState) => string),\\n                                        state?: TState): this;\\n    /**\\n     * Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the state argument.\\n     * @param state A boolean value to determine whether the class should be added or removed.\\n     * @see \\\\`{@link https://api.jquery.com/toggleClass/ }\\\\`\\n     * @since 1.4\\n     * @deprecated ​ Deprecated since 3.0. See \\\\`{@link https://github.com/jquery/jquery/pull/2618 }\\\\`.\\n     *\\n     * **Cause**: Calling `.toggleClass()` with no arguments, or with a single Boolean `true` or `false` argument, has been deprecated. Its behavior was poorly documented, but essentially the method saved away the current class value in a data item when the class was removed and restored the saved value when it was toggled back. If you do not believe you are specificially trying to use this form of the method, it is possible you are accidentally doing so via an inadvertent undefined value, as `.toggleClass( undefined )` toggles all classes.\\n     *\\n     * **Solution**: If this functionality is still needed, save the current full `.attr( \\\"class\\\" )` value in a data item and restore it when required.\\n     */\\n    toggleClass(state?: boolean): this;\\n    /**\\n     * Execute all handlers and behaviors attached to the matched elements for the given event type.\\n     * @param eventType_event _&#x40;param_ `eventType_event`\\n     * <br>\\n     * * `eventType` — A string containing a JavaScript event type, such as `click` or `submit`. <br>\\n     * * `event` — A \\\\`{@link https://api.jquery.com/category/events/event-object/ jQuery.Event}\\\\` object.\\n     * @param extraParameters Additional parameters to pass along to the event handler.\\n     * @see \\\\`{@link https://api.jquery.com/trigger/ }\\\\`\\n     * @since 1.0\\n     * @since 1.3\\n     * @example ​ ````Clicks to button #2 also trigger a click for button #1.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>trigger demo</title>\\n  <style>\\n  button {\\n    margin: 10px;\\n  }\\n  div {\\n    color: blue;\\n    font-weight: bold;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Button #1</button>\\n<button>Button #2</button>\\n<div><span>0</span> button #1 clicks.</div>\\n<div><span>0</span> button #2 clicks.</div>\\n​\\n<script>\\n$( \\\"button:first\\\" ).click(function() {\\n  update( $( \\\"span:first\\\" ) );\\n});\\n​\\n$( \\\"button:last\\\" ).click(function() {\\n  $( \\\"button:first\\\" ).trigger( \\\"click\\\" );\\n  update( $( \\\"span:last\\\" ) );\\n});\\n​\\nfunction update( j ) {\\n  var n = parseInt( j.text(), 10 );\\n  j.text( n + 1 );\\n}\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To submit the first form without using the submit() function, try:\\n```javascript\\n$( \\\"form:first\\\" ).trigger( \\\"submit\\\" );\\n```\\n     * @example ​ ````To submit the first form without using the submit() function, try:\\n```javascript\\nvar event = jQuery.Event( \\\"submit\\\" );\\n$( \\\"form:first\\\" ).trigger( event );\\nif ( event.isDefaultPrevented() ) {\\n  // Perform an action...\\n}\\n```\\n     * @example ​ ````To pass arbitrary data to an event:\\n```javascript\\n$( \\\"p\\\" )\\n  .click(function( event, a, b ) {\\n    // When a normal click fires, a and b are undefined\\n    // for a trigger like below a refers to \\\"foo\\\" and b refers to \\\"bar\\\"\\n  })\\n  .trigger( \\\"click\\\", [ \\\"foo\\\", \\\"bar\\\" ] );\\n```\\n     * @example ​ ````To pass arbitrary data through an event object:\\n```javascript\\nvar event = jQuery.Event( \\\"logged\\\" );\\nevent.user = \\\"foo\\\";\\nevent.pass = \\\"bar\\\";\\n$( \\\"body\\\" ).trigger( event );\\n```\\n     * @example ​ ````Alternative way to pass data through an event object:\\n```javascript\\n$( \\\"body\\\" ).trigger({\\n  type:\\\"logged\\\",\\n  user:\\\"foo\\\",\\n  pass:\\\"bar\\\"\\n});\\n```\\n     */\\n    trigger(eventType_event: string | JQuery.Event, extraParameters?: any[] | JQuery.PlainObject | string | number | boolean): this;\\n    /**\\n     * Execute all handlers attached to an element for an event.\\n     * @param eventType_event _&#x40;param_ `eventType_event`\\n     * <br>\\n     * * `eventType` — A string containing a JavaScript event type, such as `click` or `submit`. <br>\\n     * * `event` — A \\\\`{@link https://api.jquery.com/category/events/event-object/ jQuery.Event}\\\\` object.\\n     * @param extraParameters Additional parameters to pass along to the event handler.\\n     * @see \\\\`{@link https://api.jquery.com/triggerHandler/ }\\\\`\\n     * @since 1.2\\n     * @since 1.3\\n     * @example ​ ````If you called .triggerHandler() on a focus event - the browser&#39;s default focus action would not be triggered, only the event handlers bound to the focus event.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>triggerHandler demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"old\\\">.trigger( \\\"focus\\\" )</button>\\n<button id=\\\"new\\\">.triggerHandler( \\\"focus\\\" )</button><br><br>\\n​\\n<input type=\\\"text\\\" value=\\\"To Be Focused\\\">\\n​\\n<script>\\n$( \\\"#old\\\" ).click(function() {\\n  $( \\\"input\\\" ).trigger( \\\"focus\\\" );\\n});\\n$( \\\"#new\\\" ).click(function() {\\n  $( \\\"input\\\" ).triggerHandler( \\\"focus\\\" );\\n});\\n$( \\\"input\\\" ).focus(function() {\\n  $( \\\"<span>Focused!</span>\\\" ).appendTo( \\\"body\\\" ).fadeOut( 1000 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    triggerHandler(eventType_event: string | JQuery.Event, extraParameters?: any[] | JQuery.PlainObject | string | number | boolean): any;\\n    /**\\n     * Remove a previously-attached event handler from the elements.\\n     * @param event A string containing one or more DOM event types, such as \\\"click\\\" or \\\"submit,\\\" or custom event names.\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/unbind/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link off }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     * @example ​ ````Can bind and unbind events to the colored button.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>unbind demo</title>\\n  <style>\\n  button {\\n    margin: 5px;\\n  }\\n  button#theone {\\n    color: red;\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"theone\\\">Does nothing...</button>\\n<button id=\\\"bind\\\">Bind Click</button>\\n<button id=\\\"unbind\\\">Unbind Click</button>\\n<div style=\\\"display:none;\\\">Click!</div>\\n​\\n<script>\\nfunction aClick() {\\n  $( \\\"div\\\" ).show().fadeOut( \\\"slow\\\" );\\n}\\n$( \\\"#bind\\\" ).click(function() {\\n  $( \\\"#theone\\\" )\\n    .bind( \\\"click\\\", aClick )\\n    .text( \\\"Can Click!\\\" );\\n});\\n$( \\\"#unbind\\\" ).click(function() {\\n  $( \\\"#theone\\\" )\\n    .unbind( \\\"click\\\", aClick )\\n    .text( \\\"Does nothing...\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To unbind just one previously bound handler, pass the function in as the second argument:\\n```javascript\\nvar foo = function() {\\n  // Code to handle some kind of event\\n};\\n​\\n$( \\\"p\\\" ).bind( \\\"click\\\", foo ); // ... Now foo will be called when paragraphs are clicked ...\\n​\\n$( \\\"p\\\" ).unbind( \\\"click\\\", foo ); // ... foo will no longer be called.\\n```\\n     */\\n    unbind<TType extends string>(\\n        event: TType,\\n        handler: JQuery.TypeEventHandler<TElement, any, TElement, TElement, TType> |\\n                 false\\n    ): this;\\n    /**\\n     * Remove a previously-attached event handler from the elements.\\n     * @param event A string containing one or more DOM event types, such as \\\"click\\\" or \\\"submit,\\\" or custom event names.\\n     *              A jQuery.Event object.\\n     * @see \\\\`{@link https://api.jquery.com/unbind/ }\\\\`\\n     * @since 1.0\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link off }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     * @example ​ ````To unbind all events from all paragraphs, write:\\n```javascript\\n$( \\\"p\\\" ).unbind();\\n```\\n     * @example ​ ````To unbind all click events from all paragraphs, write:\\n```javascript\\n$( \\\"p\\\" ).unbind( \\\"click\\\" );\\n```\\n     */\\n    unbind(event?: string | JQuery.TriggeredEvent<TElement>): this;\\n    /**\\n     * Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.\\n     * @param selector A selector which will be used to filter the event results.\\n     * @param eventType A string containing a JavaScript event type, such as \\\"click\\\" or \\\"keydown\\\"\\n     * @param handler A function to execute each time the event is triggered.\\n     * @see \\\\`{@link https://api.jquery.com/undelegate/ }\\\\`\\n     * @since 1.4.2\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link off }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     * @example ​ ````Can bind and unbind events to the colored button.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>undelegate demo</title>\\n  <style>\\n  button {\\n    margin: 5px;\\n  }\\n  button#theone {\\n    color: red;\\n    background: yellow;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"theone\\\">Does nothing...</button>\\n<button id=\\\"bind\\\">Bind Click</button>\\n<button id=\\\"unbind\\\">Unbind Click</button>\\n<div style=\\\"display:none;\\\">Click!</div>\\n​\\n<script>\\nfunction aClick() {\\n  $( \\\"div\\\" ).show().fadeOut( \\\"slow\\\" );\\n}\\n$( \\\"#bind\\\" ).click(function() {\\n  $( \\\"body\\\" )\\n    .delegate( \\\"#theone\\\", \\\"click\\\", aClick )\\n    .find( \\\"#theone\\\" ).text( \\\"Can Click!\\\" );\\n});\\n$( \\\"#unbind\\\" ).click(function() {\\n  $( \\\"body\\\" )\\n    .undelegate( \\\"#theone\\\", \\\"click\\\", aClick )\\n    .find( \\\"#theone\\\" ).text( \\\"Does nothing...\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````To undelegate just one previously bound handler, pass the function in as the third argument:\\n```javascript\\nvar foo = function () {\\n  // Code to handle some kind of event\\n};\\n​\\n// ... Now foo will be called when paragraphs are clicked ...\\n$( \\\"body\\\" ).delegate( \\\"p\\\", \\\"click\\\", foo );\\n​\\n// ... foo will no longer be called.\\n$( \\\"body\\\" ).undelegate( \\\"p\\\", \\\"click\\\", foo );\\n```\\n     */\\n    undelegate<TType extends string>(\\n        selector: JQuery.Selector,\\n        eventType: TType,\\n        handler: JQuery.TypeEventHandler<TElement, any, any, any, TType> |\\n                 false\\n    ): this;\\n    /**\\n     * Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.\\n     * @param selector A selector which will be used to filter the event results.\\n     * @param eventType_events _&#x40;param_ `eventType_events`\\n     * <br>\\n     * * `eventType` — A string containing a JavaScript event type, such as \\\"click\\\" or \\\"keydown\\\" <br>\\n     * * `events` — An object of one or more event types and previously bound functions to unbind from them.\\n     * @see \\\\`{@link https://api.jquery.com/undelegate/ }\\\\`\\n     * @since 1.4.2\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link off }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     */\\n    undelegate(selector: JQuery.Selector,\\n               eventType_events: string |\\n                                 JQuery.TypeEventHandlers<TElement, any, any, any>): this;\\n    /**\\n     * Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.\\n     * @param namespace A selector which will be used to filter the event results.\\n     * @see \\\\`{@link https://api.jquery.com/undelegate/ }\\\\`\\n     * @since 1.4.2\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link off }\\\\`.\\n     *\\n     * **Cause**: These event binding methods have been deprecated in favor of the `.on()` and `.off()` methods which can handle both delegated and direct event binding. Although the older methods are still present in jQuery 3.0, they may be removed as early as the next major-version update.\\n     *\\n     * **Solution**: Change the method call to use `.on()` or `.off()`, the documentation for the old methods include specific instructions. In general, the `.bind()` and `.unbind()` methods can be renamed directly to `.on()` and `.off()` respectively since the argument orders are identical.\\n     * @example ​ ````To unbind all delegated events from all paragraphs, write:\\n```javascript\\n$( \\\"p\\\" ).undelegate();\\n```\\n     * @example ​ ````To unbind all delegated click events from all paragraphs, write:\\n```javascript\\n$( \\\"p\\\" ).undelegate( \\\"click\\\" );\\n```\\n     * @example ​ ````To unbind all delegated events by their namespace:\\n```javascript\\nvar foo = function() {\\n  // Code to handle some kind of event\\n};\\n​\\n// Delegate events under the \\\".whatever\\\" namespace\\n$( \\\"form\\\" ).delegate( \\\":button\\\", \\\"click.whatever\\\", foo );\\n​\\n$( \\\"form\\\" ).delegate( \\\"input[type='text'] \\\", \\\"keypress.whatever\\\", foo );\\n​\\n// Unbind all events delegated under the \\\".whatever\\\" namespace\\n$( \\\"form\\\" ).undelegate( \\\".whatever\\\" );\\n```\\n     */\\n    undelegate(namespace?: string): this;\\n    /**\\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched elements in their place.\\n     * @param selector A selector to check the parent element against. If an element's parent does not match the selector,\\n     *                 the element won't be unwrapped.\\n     * @see \\\\`{@link https://api.jquery.com/unwrap/ }\\\\`\\n     * @since 1.4\\n     * @since 3.0\\n     * @example ​ ````Wrap/unwrap a div around each of the paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>unwrap demo</title>\\n  <style>\\n  div {\\n    border: 2px solid blue;\\n  }\\n  p {\\n    background: yellow;\\n    margin: 4px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​<button>wrap/unwrap</button>\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>​\\n<script>\\nvar pTags = $( \\\"p\\\" );\\n$( \\\"button\\\" ).click(function() {\\n  if ( pTags.parent().is( \\\"div\\\" ) ) {\\n    pTags.unwrap();\\n  } else {\\n    pTags.wrap( \\\"<div></div>\\\" );\\n  }\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    unwrap(selector?: string): this;\\n    /**\\n     * Set the value of each element in the set of matched elements.\\n     * @param value_function _&#x40;param_ `value_function`\\n     * <br>\\n     * * `value` — A string of text, a number, or an array of strings corresponding to the value of each matched\\n     *             element to set as selected/checked. <br>\\n     * * `function` — A function returning the value to set. `this` is the current element. Receives the index position of\\n     *                the element in the set and the old value as arguments.\\n     * @see \\\\`{@link https://api.jquery.com/val/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @example ​ ````Set the value of an input box.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>val demo</title>\\n  <style>\\n  button {\\n    margin: 4px;\\n    cursor: pointer;\\n  }\\n  input {\\n    margin: 4px;\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>\\n  <button>Feed</button>\\n  <button>the</button>\\n  <button>Input</button>\\n</div>\\n<input type=\\\"text\\\" value=\\\"click a button\\\">\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  var text = $( this ).text();\\n  $( \\\"input\\\" ).val( text );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Use the function argument to modify the value of an input box.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>val demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Type something and then click or tab out of the input.</p>\\n<input type=\\\"text\\\" value=\\\"type something\\\">\\n​\\n<script>\\n$( \\\"input\\\" ).on( \\\"blur\\\", function() {\\n  $( this ).val(function( i, val ) {\\n    return val.toUpperCase();\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Set a single select, a multiple select, checkboxes and a radio button .\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>val demo</title>\\n  <style>\\n  body {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<select id=\\\"single\\\">\\n  <option>Single</option>\\n  <option>Single2</option>\\n</select>\\n​\\n<select id=\\\"multiple\\\" multiple=\\\"multiple\\\">\\n  <option selected=\\\"selected\\\">Multiple</option>\\n  <option>Multiple2</option>\\n  <option selected=\\\"selected\\\">Multiple3</option>\\n</select>\\n​\\n<br>\\n<input type=\\\"checkbox\\\" name=\\\"checkboxname\\\" value=\\\"check1\\\"> check1\\n<input type=\\\"checkbox\\\" name=\\\"checkboxname\\\" value=\\\"check2\\\"> check2\\n<input type=\\\"radio\\\" name=\\\"r\\\" value=\\\"radio1\\\"> radio1\\n<input type=\\\"radio\\\" name=\\\"r\\\" value=\\\"radio2\\\"> radio2\\n​\\n<script>\\n$( \\\"#single\\\" ).val( \\\"Single2\\\" );\\n$( \\\"#multiple\\\" ).val([ \\\"Multiple2\\\", \\\"Multiple3\\\" ]);\\n$( \\\"input\\\").val([ \\\"check1\\\", \\\"check2\\\", \\\"radio1\\\" ]);\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    val(value_function: string | number | string[] | ((this: TElement, index: number, value: string) => string)): this;\\n    /**\\n     * Get the current value of the first element in the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/val/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Get the single value from a single select and an array of values from a multiple select and display their values.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>val demo</title>\\n  <style>\\n  p {\\n    color: red;\\n    margin: 4px;\\n  }\\n  b {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p></p>\\n​\\n<select id=\\\"single\\\">\\n  <option>Single</option>\\n  <option>Single2</option>\\n</select>\\n​\\n<select id=\\\"multiple\\\" multiple=\\\"multiple\\\">\\n  <option selected=\\\"selected\\\">Multiple</option>\\n  <option>Multiple2</option>\\n  <option selected=\\\"selected\\\">Multiple3</option>\\n</select>\\n​\\n<script>\\nfunction displayVals() {\\n  var singleValues = $( \\\"#single\\\" ).val();\\n  var multipleValues = $( \\\"#multiple\\\" ).val() || [];\\n  // When using jQuery 3:\\n  // var multipleValues = $( \\\"#multiple\\\" ).val();\\n  $( \\\"p\\\" ).html( \\\"<b>Single:</b> \\\" + singleValues +\\n    \\\" <b>Multiple:</b> \\\" + multipleValues.join( \\\", \\\" ) );\\n}\\n​\\n$( \\\"select\\\" ).change( displayVals );\\ndisplayVals();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Find the value of an input box.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>val demo</title>\\n  <style>\\n  p {\\n    color: blue;\\n    margin: 8px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input type=\\\"text\\\" value=\\\"some text\\\">\\n<p></p>\\n​\\n<script>\\n$( \\\"input\\\" )\\n  .keyup(function() {\\n    var value = $( this ).val();\\n    $( \\\"p\\\" ).text( value );\\n  })\\n  .keyup();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    val(): string | number | string[] | undefined;\\n    /**\\n     * Set the CSS width of each element in the set of matched elements.\\n     * @param value_function _&#x40;param_ `value_function`\\n     * <br>\\n     * * `value` — An integer representing the number of pixels, or an integer along with an optional unit of measure\\n     *             appended (as a string). <br>\\n     * * `function` — A function returning the width to set. Receives the index position of the element in the set and the\\n     *                old width as arguments. Within the function, `this` refers to the current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/width/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4.1\\n     * @example ​ ````Change the width of each div the first time it is clicked (and change its color).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>width demo</title>\\n  <style>\\n  div {\\n    width: 70px;\\n    height: 50px;\\n    float: left;\\n    margin: 5px;\\n    background: red;\\n    cursor: pointer;\\n  }\\n  .mod {\\n    background: blue;\\n    cursor: default;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n<div>d</div>\\n​\\n<script>\\nvar modWidth = 50;\\n$( \\\"div\\\" ).one( \\\"click\\\", function() {\\n  $( this ).width( modWidth ).addClass( \\\"mod\\\" );\\n  modWidth -= 8;\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    width(value_function: string | number | ((this: TElement, index: number, value: number) => string | number)): this;\\n    /**\\n     * Get the current computed width for the first element in the set of matched elements.\\n     * @see \\\\`{@link https://api.jquery.com/width/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Show various widths.  Note the values are from the iframe so might be smaller than you expected.  The yellow highlight shows the iframe body.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>width demo</title>\\n  <style>\\n  body {\\n    background: yellow;\\n  }\\n  button {\\n    font-size: 12px;\\n    margin: 2px;\\n  }\\n  p {\\n    width: 150px;\\n    border: 1px red solid;\\n  }\\n  div {\\n    color: red;\\n    font-weight: bold;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"getp\\\">Get Paragraph Width</button>\\n<button id=\\\"getd\\\">Get Document Width</button>\\n<button id=\\\"getw\\\">Get Window Width</button>\\n<div>&nbsp;</div>\\n<p>\\n  Sample paragraph to test width\\n</p>\\n​\\n<script>\\nfunction showWidth( ele, w ) {\\n  $( \\\"div\\\" ).text( \\\"The width for the \\\" + ele + \\\" is \\\" + w + \\\"px.\\\" );\\n}\\n$( \\\"#getp\\\" ).click(function() {\\n  showWidth( \\\"paragraph\\\", $( \\\"p\\\" ).width() );\\n});\\n$( \\\"#getd\\\" ).click(function() {\\n  showWidth( \\\"document\\\", $( document ).width() );\\n});\\n$(\\\"#getw\\\").click(function() {\\n  showWidth( \\\"window\\\", $( window ).width() );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    width(): number | undefined;\\n    /**\\n     * Wrap an HTML structure around each element in the set of matched elements.\\n     * @param wrappingElement_function _&#x40;param_ `wrappingElement_function`\\n     * <br>\\n     * * `wrappingElement` — A selector, element, HTML string, or jQuery object specifying the structure to wrap around the\\n     *                       matched elements. When you pass a jQuery collection containing more than one element, or a selector\\n     *                       matching more than one element, the first element will be used. <br>\\n     * * `function` — A callback function returning the HTML content or jQuery object to wrap around the matched elements.\\n     *                Receives the index position of the element in the set as an argument. Within the function, `this`\\n     *                refers to the current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/wrap/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @example ​ ````Wrap a new div around all of the paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrap demo</title>\\n  <style>\\n  div {\\n    border: 2px solid blue;\\n  }\\n  p {\\n    background: yellow;\\n    margin: 4px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n​\\n<script>\\n$( \\\"p\\\" ).wrap( \\\"<div></div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Wraps a newly created tree of objects around the spans.  Notice anything in between the spans gets left out like the &lt;strong&gt; (red text) in this example.  Even the white space between spans is left out.  Click View Source to see the original html.&gt;\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrap demo</title>\\n  <style>\\n  div {\\n    border: 2px blue solid;\\n    margin: 2px;\\n    padding: 2px;\\n  }\\n  p {\\n    background: yellow;\\n    margin: 2px;\\n    padding: 2px;\\n  }\\n  strong {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<span>Span Text</span>\\n<strong>What about me?</strong>\\n<span>Another One</span>\\n​\\n<script>\\n$( \\\"span\\\" ).wrap( \\\"<div><div><p><em><b></b></em></p></div></div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Wrap a new div around all of the paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrap demo</title>\\n  <style>\\n  div {\\n    border: 2px solid blue;\\n  }\\n  p {\\n    background: yellow;\\n    margin: 4px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n​\\n<script>\\n$( \\\"p\\\" ).wrap( document.createElement( \\\"div\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Wrap a jQuery object double depth div around all of the paragraphs.  Notice it doesn&#39;t move the object but just clones it to wrap around its target.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrap demo</title>\\n  <style>\\n  div {\\n    border: 2px solid blue;\\n    margin: 2px;\\n    padding: 2px;\\n  }\\n  .doublediv {\\n    border-color: red;\\n  }\\n  p {\\n    background: yellow;\\n    margin: 4px;\\n    font-size: 14px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n<div class=\\\"doublediv\\\"><div></div></div>\\n​\\n<script>\\n$( \\\"p\\\" ).wrap( $( \\\".doublediv\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    wrap(wrappingElement_function: JQuery.Selector | JQuery.htmlString | Element | JQuery | ((this: TElement, index: number) => string | JQuery)): this;\\n    /**\\n     * Wrap an HTML structure around all elements in the set of matched elements.\\n     * @param wrappingElement_function _&#x40;param_ `wrappingElement_function`\\n     * <br>\\n     * * `wrappingElement` — A selector, element, HTML string, or jQuery object specifying the structure to wrap around the matched elements. <br>\\n     * * `function` — A callback function returning the HTML content or jQuery object to wrap around all the matched\\n     *                elements. Within the function, `this` refers to the first element in the set. **Prior to jQuery\\n     *                3.0**, the callback was incorrectly called for every element in the set and received the index\\n     *                position of the element in the set as an argument.\\n     * @see \\\\`{@link https://api.jquery.com/wrapAll/ }\\\\`\\n     * @since 1.2\\n     * @since 1.4\\n     * @example ​ ````Wrap a new div around all of the paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrapAll demo</title>\\n  <style>\\n  div {\\n    border: 2px solid blue;\\n  }\\n  p {\\n    background: yellow;\\n    margin: 4px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n​\\n<script>\\n$( \\\"p\\\" ).wrapAll( \\\"<div></div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Wraps a newly created tree of objects around the spans.  Notice anything in between the spans gets left out like the &lt;strong&gt; (red text) in this example.  Even the white space between spans is left out.  Click View Source to see the original html.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrapAll demo</title>\\n  <style>\\n  div {\\n    border: 2px blue solid;\\n    margin: 2px;\\n    padding: 2px;\\n  }\\n  p {\\n    background: yellow;\\n    margin: 2px;\\n    padding: 2px;\\n  }\\n  strong {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<span>Span Text</span>\\n<strong>What about me?</strong>\\n<span>Another One</span>\\n​\\n<script>\\n$( \\\"span\\\").wrapAll( \\\"<div><div><p><em><b></b></em></p></div></div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Wrap a new div around all of the paragraphs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrapAll demo</title>\\n  <style>\\n  div {\\n    border: 2px solid blue;\\n  }\\n  p {\\n    background: yellow;\\n    margin: 4px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n​\\n<script>\\n$( \\\"p\\\" ).wrapAll( document.createElement( \\\"div\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Wrap a jQuery object double depth div around all of the paragraphs.  Notice it doesn&#39;t move the object but just clones it to wrap around its target.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrapAll demo</title>\\n  <style>\\n  div {\\n    border: 2px solid blue;\\n    margin: 2px;\\n    padding: 2px;\\n  }\\n  .doublediv {\\n    border-color: red;\\n  }\\n  p {\\n    background: yellow;\\n    margin: 4px;\\n    font-size: 14px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n<div class=\\\"doublediv\\\"><div></div></div>\\n​\\n<script>\\n$( \\\"p\\\" ).wrapAll( $( \\\".doublediv\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    wrapAll(wrappingElement_function: JQuery.Selector | JQuery.htmlString | Element | JQuery | ((this: TElement) => string | JQuery)): this;\\n    /**\\n     * Wrap an HTML structure around the content of each element in the set of matched elements.\\n     * @param wrappingElement_function _&#x40;param_ `wrappingElement_function`\\n     * <br>\\n     * * `wrappingElement` — An HTML snippet, selector expression, jQuery object, or DOM element specifying the structure to wrap\\n     *                       around the content of the matched elements. <br>\\n     * * `function` — A callback function which generates a structure to wrap around the content of the matched elements.\\n     *                Receives the index position of the element in the set as an argument. Within the function, `this`\\n     *                refers to the current element in the set.\\n     * @see \\\\`{@link https://api.jquery.com/wrapInner/ }\\\\`\\n     * @since 1.2\\n     * @since 1.4\\n     * @example ​ ````Selects all paragraphs and wraps a bold tag around each of its contents.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrapInner demo</title>\\n  <style>\\n  p {\\n    background: #bbf;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n​\\n<script>\\n$( \\\"p\\\" ).wrapInner( \\\"<b></b>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Wraps a newly created tree of objects around the inside of the body.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrapInner demo</title>\\n  <style>\\n  div {\\n    border: 2px green solid;\\n    margin: 2px;\\n    padding: 2px;\\n  }\\n  p {\\n    background: yellow;\\n    margin: 2px;\\n    padding: 2px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nPlain old text, or is it?\\n​\\n<script>\\n$( \\\"body\\\" ).wrapInner( \\\"<div><div><p><em><b></b></em></p></div></div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Selects all paragraphs and wraps a bold tag around each of its contents.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrapInner demo</title>\\n  <style>\\n  p {\\n    background: #9f9;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n​\\n<script>\\n$( \\\"p\\\" ).wrapInner( document.createElement( \\\"b\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Selects all paragraphs and wraps a jQuery object around each of its contents.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>wrapInner demo</title>\\n  <style>\\n  p {\\n    background: #9f9;\\n  }\\n  .red {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Hello</p>\\n<p>cruel</p>\\n<p>World</p>\\n​\\n<script>\\n$( \\\"p\\\" ).wrapInner( $( \\\"<span class='red'></span>\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    wrapInner(wrappingElement_function: JQuery.Selector | JQuery.htmlString | Element | JQuery | ((this: TElement, index: number) => string | JQuery | Element)): this;\\n\\n    [n: number]: TElement;\\n}\\n\";","module.exports = \"// tslint:disable:jsdoc-format\\n// tslint:disable:max-line-length\\n// tslint:disable:no-irregular-whitespace\\n\\ninterface JQueryStatic {\\n    /**\\n     * @see \\\\`{@link https://api.jquery.com/jquery.ajax/#jQuery-ajax1 }\\\\`\\n     * @deprecated ​ Deprecated. Use \\\\`{@link ajaxSetup }\\\\`.\\n     */\\n    ajaxSettings: JQuery.AjaxSettings;\\n    Animation: JQuery.AnimationStatic;\\n    Callbacks: JQuery.CallbacksStatic;\\n    /**\\n     * Hook directly into jQuery to override how particular CSS properties are retrieved or set, normalize CSS property naming, or create custom properties.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.cssHooks/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    cssHooks: JQuery.CSSHooks;\\n    /**\\n     * An object containing all CSS properties that may be used without a unit. The .css() method uses this object to see if it may append px to unitless values.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.cssNumber/ }\\\\`\\n     * @since 1.4.3\\n     */\\n    cssNumber: JQuery.PlainObject<boolean>;\\n    Deferred: JQuery.DeferredStatic;\\n    easing: JQuery.Easings;\\n    Event: JQuery.EventStatic;\\n    /**\\n     * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/ }\\\\`\\n     */\\n    event: JQuery.EventExtensions;\\n    expr: JQuery.Selectors;\\n    // Set to HTMLElement to minimize breaks but should probably be Element.\\n    readonly fn: JQuery;\\n    fx: JQuery.Effects;\\n    /**\\n     * A Promise-like object (or \\\"thenable\\\") that resolves when the document is ready.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.ready/ }\\\\`\\n     * @since 1.8\\n     * @example ​ ````Listen for document ready using jQuery.when.\\n```javascript\\n$.when( $.ready ).then(function() {\\n  // Document is ready.\\n});\\n```\\n     * @example ​ ````Typical usage involving another promise, using jQuery.when.\\n```javascript\\n$.when(\\n  $.getJSON( \\\"ajax/test.json\\\" ),\\n  $.ready\\n).done(function( data ) {\\n  // Document is ready.\\n  // Value of test.json is passed as `data`.\\n});\\n```\\n     */\\n    ready: JQuery.Thenable<JQueryStatic>;\\n    /**\\n     * A collection of properties that represent the presence of different browser features or bugs. Intended for jQuery's internal use; specific properties may be removed when they are no longer needed internally to improve page startup performance. For your own project's feature-detection needs, we strongly recommend the use of an external library such as Modernizr instead of dependency on properties in jQuery.support.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.support/ }\\\\`\\n     * @since 1.3\\n     * @deprecated ​ Deprecated since 1.9. See \\\\`{@link https://api.jquery.com/jQuery.support/ }\\\\`.\\n     */\\n    support: JQuery.PlainObject;\\n    timers: Array<JQuery.TickFunction<any>>;\\n    Tween: JQuery.TweenStatic;\\n    valHooks: JQuery.ValHooks;\\n    // HACK: This is the factory function returned when importing jQuery without a DOM. Declaring it separately breaks using the type parameter on JQueryStatic.\\n    // HACK: The discriminator parameter handles the edge case of passing a Window object to JQueryStatic. It doesn't actually exist on the factory function.\\n    (window: Window, discriminator: boolean): JQueryStatic;\\n    /**\\n     * Creates DOM elements on the fly from the provided string of raw HTML.\\n     * @param html _&#x40;param_ `html`\\n     * <br>\\n     * * `html (ownerDocument)` — A string of HTML to create on the fly. Note that this parses HTML, not XML. <br>\\n     * * `html (attributes)` — A string defining a single, standalone, HTML element (e.g. &lt;div/&gt; or &lt;div&gt;&lt;/div&gt;).\\n     * @param ownerDocument_attributes _&#x40;param_ `ownerDocument_attributes`\\n     * <br>\\n     * * `ownerDocument` — A document in which the new elements will be created. <br>\\n     * * `attributes` — An object of attributes, events, and methods to call on the newly-created element.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery/ }\\\\`\\n     * @since 1.0\\n     * @since 1.4\\n     * @example ​ ````Create a div element (and all of its contents) dynamically and append it to the body element. Internally, an element is created and its innerHTML property set to the given markup.\\n```javascript\\n$( \\\"<div><p>Hello</p></div>\\\" ).appendTo( \\\"body\\\" )\\n```\\n     * @example ​ ````Create some DOM elements.\\n```javascript\\n$( \\\"<div/>\\\", {\\n  \\\"class\\\": \\\"test\\\",\\n  text: \\\"Click me!\\\",\\n  click: function() {\\n    $( this ).toggleClass( \\\"test\\\" );\\n  }\\n})\\n  .appendTo( \\\"body\\\" );\\n```\\n     */\\n    // tslint:disable-next-line:no-unnecessary-generics\\n    <TElement extends HTMLElement = HTMLElement>(html: JQuery.htmlString, ownerDocument_attributes?: Document | JQuery.PlainObject): JQuery<TElement>;\\n    /**\\n     * Accepts a string containing a CSS selector which is then used to match a set of elements.\\n     * @param selector A string containing a selector expression\\n     * @param context A DOM Element, Document, Selector or jQuery to use as context\\n     * @see \\\\`{@link https://api.jquery.com/jQuery/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Find all p elements that are children of a div element and apply a border to them.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>one</p>\\n<div><p>two</p></div>\\n<p>three</p>\\n​\\n<script>\\n$( \\\"div > p\\\" ).css( \\\"border\\\", \\\"1px solid gray\\\" );\\n</script>\\n</body>\\n</html>\\n```\\n     * @example ​ ````Find all inputs of type radio within the first form in the document.\\n```javascript\\n$( \\\"input:radio\\\", document.forms[ 0 ] );\\n```\\n     * @example ​ ````Find all div elements within an XML document from an Ajax response.\\n```javascript\\n$( \\\"div\\\", xml.responseXML );\\n```\\n​\\n     */\\n    // tslint:disable-next-line:no-unnecessary-generics\\n    <TElement extends Element = HTMLElement>(selector: JQuery.Selector, context?: Element | Document | JQuery | JQuery.Selector): JQuery<TElement>;\\n    /**\\n     * Return a collection of matched elements either found in the DOM based on passed argument(s) or created by passing an HTML string.\\n     * @param element A DOM element to wrap in a jQuery object.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Set the background color of the page to black.\\n```javascript\\n$( document.body ).css( \\\"background\\\", \\\"black\\\" );\\n```\\n     */\\n    // NOTE: `HTMLSelectElement` is both an Element and an Array-Like Object but jQuery treats it as an Element.\\n    (element: HTMLSelectElement): JQuery<HTMLSelectElement>;\\n    /**\\n     * Return a collection of matched elements either found in the DOM based on passed argument(s) or created by passing an HTML string.\\n     * @param element_elementArray _&#x40;param_ `element_elementArray`\\n     * <br>\\n     * * `element` — A DOM element to wrap in a jQuery object. <br>\\n     * * `elementArray` — An array containing a set of DOM elements to wrap in a jQuery object.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Set the background color of the page to black.\\n```javascript\\n$( document.body ).css( \\\"background\\\", \\\"black\\\" );\\n```\\n     * @example ​ ````Hide all the input elements within a form.\\n```javascript\\n$( myForm.elements ).hide();\\n```\\n     */\\n    <T extends Element>(element_elementArray: T | ArrayLike<T>): JQuery<T>;\\n    /**\\n     * Return a collection of matched elements either found in the DOM based on passed argument(s) or created by passing an HTML string.\\n     * @param selection An existing jQuery object to clone.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery/ }\\\\`\\n     * @since 1.0\\n     */\\n    <T>(selection: JQuery<T>): JQuery<T>;\\n    /**\\n     * Binds a function to be executed when the DOM has finished loading.\\n     * @param callback The function to execute when the DOM is ready.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Execute the function when the DOM is ready to be used.\\n```javascript\\n$(function() {\\n  // Document is ready\\n});\\n```\\n     * @example ​ ````Use both the shortcut for $(document).ready() and the argument to write failsafe jQuery code using the $ alias, without relying on the global alias.\\n```javascript\\njQuery(function( $ ) {\\n  // Your code using failsafe $ alias here...\\n});\\n```\\n     */\\n    // tslint:disable-next-line:no-unnecessary-generics unified-signatures\\n    <TElement = HTMLElement>(callback: ((this: Document, $: JQueryStatic) => void)): JQuery<TElement>;\\n    /**\\n     * Return a collection of matched elements either found in the DOM based on passed argument(s) or created by passing an HTML string.\\n     * @param object A plain object to wrap in a jQuery object.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery/ }\\\\`\\n     * @since 1.0\\n     */\\n    <T extends JQuery.PlainObject>(object: T): JQuery<T>;\\n    /**\\n     * Returns an empty jQuery set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery/ }\\\\`\\n     * @since 1.4\\n     */\\n    // tslint:disable-next-line:no-unnecessary-generics\\n    <TElement = HTMLElement>(): JQuery<TElement>;\\n    /**\\n     * Perform an asynchronous HTTP (Ajax) request.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param settings A set of key/value pairs that configure the Ajax request. All settings are optional. A default can\\n     *                 be set for any option with $.ajaxSetup(). See jQuery.ajax( settings ) below for a complete list of all settings.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.ajax/ }\\\\`\\n     * @since 1.5\\n     */\\n    ajax(url: string, settings?: JQuery.AjaxSettings): JQuery.jqXHR;\\n    /**\\n     * Perform an asynchronous HTTP (Ajax) request.\\n     * @param settings A set of key/value pairs that configure the Ajax request. All settings are optional. A default can\\n     *                 be set for any option with $.ajaxSetup().\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.ajax/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Save some data to the server and notify the user once it&#39;s complete.\\n```javascript\\n$.ajax({\\n  method: \\\"POST\\\",\\n  url: \\\"some.php\\\",\\n  data: { name: \\\"John\\\", location: \\\"Boston\\\" }\\n})\\n  .done(function( msg ) {\\n    alert( \\\"Data Saved: \\\" + msg );\\n  });\\n```\\n     * @example ​ ````Retrieve the latest version of an HTML page.\\n```javascript\\n$.ajax({\\n  url: \\\"test.html\\\",\\n  cache: false\\n})\\n  .done(function( html ) {\\n    $( \\\"#results\\\" ).append( html );\\n  });\\n```\\n     * @example ​ ````Send an xml document as data to the server. By setting the processData\\n    option to false, the automatic conversion of data to strings is prevented.\\n```javascript\\nvar xmlDocument = [create xml document];\\nvar xmlRequest = $.ajax({\\n  url: \\\"page.php\\\",\\n  processData: false,\\n  data: xmlDocument\\n});\\n​\\nxmlRequest.done( handleResponse );\\n```\\n     * @example ​ ````Send an id as data to the server, save some data to the server, and notify the user once it&#39;s complete. If the request fails, alert the user.\\n```javascript\\nvar menuId = $( \\\"ul.nav\\\" ).first().attr( \\\"id\\\" );\\nvar request = $.ajax({\\n  url: \\\"script.php\\\",\\n  method: \\\"POST\\\",\\n  data: { id : menuId },\\n  dataType: \\\"html\\\"\\n});\\n​\\nrequest.done(function( msg ) {\\n  $( \\\"#log\\\" ).html( msg );\\n});\\n​\\nrequest.fail(function( jqXHR, textStatus ) {\\n  alert( \\\"Request failed: \\\" + textStatus );\\n});\\n```\\n     * @example ​ ````Load and execute a JavaScript file.\\n```javascript\\n$.ajax({\\n  method: \\\"GET\\\",\\n  url: \\\"test.js\\\",\\n  dataType: \\\"script\\\"\\n});\\n```\\n     */\\n    ajax(settings?: JQuery.AjaxSettings): JQuery.jqXHR;\\n    /**\\n     * Handle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax().\\n     * @param dataTypes An optional string containing one or more space-separated dataTypes\\n     * @param handler A handler to set default values for future Ajax requests.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.ajaxPrefilter/ }\\\\`\\n     * @since 1.5\\n     */\\n    ajaxPrefilter(dataTypes: string,\\n                  handler: (options: JQuery.AjaxSettings, originalOptions: JQuery.AjaxSettings, jqXHR: JQuery.jqXHR) => string | void): void;\\n    /**\\n     * Handle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax().\\n     * @param handler A handler to set default values for future Ajax requests.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.ajaxPrefilter/ }\\\\`\\n     * @since 1.5\\n     */\\n    ajaxPrefilter(handler: (options: JQuery.AjaxSettings, originalOptions: JQuery.AjaxSettings, jqXHR: JQuery.jqXHR) => string | void): void;\\n    /**\\n     * Set default values for future Ajax requests. Its use is not recommended.\\n     * @param options A set of key/value pairs that configure the default Ajax request. All options are optional.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.ajaxSetup/ }\\\\`\\n     * @since 1.1\\n     * @example ​ ````Sets the defaults for Ajax requests to the url &quot;/xmlhttp/&quot;, disables global handlers and uses POST instead of GET. The following Ajax requests then sends some data without having to set anything else.\\n```javascript\\n$.ajaxSetup({\\n  url: \\\"/xmlhttp/\\\",\\n  global: false,\\n  type: \\\"POST\\\"\\n});\\n$.ajax({ data: myData });\\n```\\n     */\\n    ajaxSetup(options: JQuery.AjaxSettings): JQuery.AjaxSettings;\\n    /**\\n     * Creates an object that handles the actual transmission of Ajax data.\\n     * @param dataType A string identifying the data type to use\\n     * @param handler A handler to return the new transport object to use with the data type provided in the first argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.ajaxTransport/ }\\\\`\\n     * @since 1.5\\n     */\\n    ajaxTransport(dataType: string,\\n                  handler: (options: JQuery.AjaxSettings, originalOptions: JQuery.AjaxSettings, jqXHR: JQuery.jqXHR) => JQuery.Transport | void): void;\\n    /**\\n     * @deprecated ​ Deprecated since 3.3. Internal. See \\\\`{@link https://github.com/jquery/jquery/issues/3384 }\\\\`.\\n     */\\n    camelCase(value: string): string;\\n    cleanData(elems: ArrayLike<Element | Document | Window | JQuery.PlainObject>): void;\\n    /**\\n     * Check to see if a DOM element is a descendant of another DOM element.\\n     * @param container The DOM element that may contain the other element.\\n     * @param contained The DOM element that may be contained by (a descendant of) the other element.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.contains/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Check if an element is a descendant of another.\\n```javascript\\n$.contains( document.documentElement, document.body ); // true\\n$.contains( document.body, document.documentElement ); // false\\n```\\n     */\\n    contains(container: Element, contained: Element): boolean;\\n    css(elem: Element, name: string): any;\\n    /**\\n     * Store arbitrary data associated with the specified element. Returns the value that was set.\\n     * @param element The DOM element to associate with the data.\\n     * @param key A string naming the piece of data to set.\\n     * @param value The new data value; this can be any Javascript type except `undefined`.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.data/ }\\\\`\\n     * @since 1.2.3\\n     * @example ​ ````Get the data named &quot;blah&quot; stored at for an element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.data demo</title>\\n  <style>\\n  div {\\n    margin: 5px;\\n    background: yellow;\\n  }\\n  button {\\n    margin: 5px;\\n    font-size: 14px;\\n  }\\n  p {\\n    margin: 5px;\\n    color: blue;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>A div</div>\\n<button>Get \\\"blah\\\" from the div</button>\\n<button>Set \\\"blah\\\" to \\\"hello\\\"</button>\\n<button>Set \\\"blah\\\" to 86</button>\\n<button>Remove \\\"blah\\\" from the div</button>\\n<p>The \\\"blah\\\" value of this div is <span>?</span></p>\\n​\\n<script>\\n$( \\\"button\\\" ).click( function() {\\n  var value,\\n    div = $( \\\"div\\\" )[ 0 ];\\n  switch ( $( \\\"button\\\" ).index( this ) ) {\\n  case 0 :\\n    value = jQuery.data( div, \\\"blah\\\" );\\n    break;\\n  case 1 :\\n    jQuery.data( div, \\\"blah\\\", \\\"hello\\\" );\\n    value = \\\"Stored!\\\";\\n    break;\\n  case 2 :\\n    jQuery.data( div, \\\"blah\\\", 86 );\\n    value = \\\"Stored!\\\";\\n    break;\\n  case 3 :\\n    jQuery.removeData( div, \\\"blah\\\" );\\n    value = \\\"Removed!\\\";\\n    break;\\n  }\\n  $( \\\"span\\\" ).text( \\\"\\\" + value );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    data<T extends string | number | boolean | symbol | object | null>(element: Element | Document | Window | JQuery.PlainObject, key: string, value: T): T;\\n    /**\\n     * Returns value at named data store for the element, as set by `jQuery.data(element, name, value)`, or the full data store for the element.\\n     * @param element The DOM element to query for the data.\\n     * @param key Name of the data stored.\\n     * @param value `undefined` is not recognized as a data value. Calls such as `jQuery.data( el, \\\"name\\\", undefined )`\\n     *              will return the corresponding data for \\\"name\\\", and is therefore the same as `jQuery.data( el, \\\"name\\\" )`\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.data/ }\\\\`\\n     * @since 1.2.3\\n     */\\n    // `unified-signatures` is disabled so that behavior when passing `undefined` to `value` can be documented. Unifying the signatures\\n    // results in potential confusion for users from an unexpected parameter.\\n    // tslint:disable-next-line:unified-signatures\\n    data(element: Element | Document | Window | JQuery.PlainObject, key: string, value: undefined): any;\\n    /**\\n     * Returns value at named data store for the element, as set by `jQuery.data(element, name, value)`, or the full data store for the element.\\n     * @param element The DOM element to query for the data.\\n     * @param key Name of the data stored.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.data/ }\\\\`\\n     * @since 1.2.3\\n     * @since 1.4\\n     * @example ​ ````Store then retrieve a value from the div element.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.data demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>\\n  The values stored were\\n  <span></span>\\n  and\\n  <span></span>\\n</div>\\n​\\n<script>\\nvar div = $( \\\"div\\\" )[ 0 ];\\njQuery.data( div, \\\"test\\\", {\\n  first: 16,\\n  last: \\\"pizza!\\\"\\n});\\n$( \\\"span:first\\\" ).text( jQuery.data( div, \\\"test\\\" ).first );\\n$( \\\"span:last\\\" ).text( jQuery.data( div, \\\"test\\\" ).last );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    data(element: Element | Document | Window | JQuery.PlainObject, key?: string): any;\\n    /**\\n     * Execute the next function on the queue for the matched element.\\n     * @param element A DOM element from which to remove and execute a queued function.\\n     * @param queueName A string containing the name of the queue. Defaults to fx, the standard effects queue.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.dequeue/ }\\\\`\\n     * @since 1.3\\n     * @example ​ ````Use jQuery.dequeue() to end a custom queue function which allows the queue to keep going.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.dequeue demo</title>\\n  <style>\\n  div {\\n    margin: 3px;\\n    width: 50px;\\n    position: absolute;\\n    height: 50px;\\n    left: 10px;\\n    top: 30px;\\n    background-color: yellow;\\n  }\\n  div.red {\\n    background-color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Start</button>\\n<div></div>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function() {\\n  $( \\\"div\\\" )\\n    .animate({ left: '+=200px' }, 2000 )\\n    .animate({ top: '0px' }, 600 )\\n    .queue(function() {\\n      $( this ).toggleClass( \\\"red\\\" );\\n      $.dequeue( this );\\n    })\\n    .animate({ left:'10px', top:'30px' }, 700 );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    dequeue(element: Element, queueName?: string): void;\\n    /**\\n     * A generic iterator function, which can be used to seamlessly iterate over both objects and arrays. Arrays and array-like objects with a length property (such as a function's arguments object) are iterated by numeric index, from 0 to length-1. Other objects are iterated via their named properties.\\n     * @param array The array to iterate over.\\n     * @param callback The function that will be executed on every object.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.each/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Iterates through the array displaying each number as both a word and numeral\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.each demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  div#five {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"one\\\"></div>\\n<div id=\\\"two\\\"></div>\\n<div id=\\\"three\\\"></div>\\n<div id=\\\"four\\\"></div>\\n<div id=\\\"five\\\"></div>\\n​\\n<script>\\nvar arr = [ \\\"one\\\", \\\"two\\\", \\\"three\\\", \\\"four\\\", \\\"five\\\" ];\\nvar obj = { one: 1, two: 2, three: 3, four: 4, five: 5 };\\n​\\njQuery.each( arr, function( i, val ) {\\n  $( \\\"#\\\" + val ).text( \\\"Mine is \\\" + val + \\\".\\\" );\\n​\\n  // Will stop running after \\\"three\\\"\\n  return ( val !== \\\"three\\\" );\\n});\\n​\\njQuery.each( obj, function( i, val ) {\\n  $( \\\"#\\\" + i ).append( document.createTextNode( \\\" - \\\" + val ) );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Iterates over items in an array, accessing both the current item and its index.\\n```javascript\\n$.each( [ \\\"a\\\", \\\"b\\\", \\\"c\\\" ], function( i, l ){\\n  alert( \\\"Index #\\\" + i + \\\": \\\" + l );\\n});\\n```\\n     */\\n    each<T>(array: ArrayLike<T>, callback: (this: T, indexInArray: number, value: T) => any): ArrayLike<T>;\\n    /**\\n     * A generic iterator function, which can be used to seamlessly iterate over both objects and arrays. Arrays and array-like objects with a length property (such as a function's arguments object) are iterated by numeric index, from 0 to length-1. Other objects are iterated via their named properties.\\n     * @param obj The object to iterate over.\\n     * @param callback The function that will be executed on every object.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.each/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Iterates through the array displaying each number as both a word and numeral\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.each demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  div#five {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"one\\\"></div>\\n<div id=\\\"two\\\"></div>\\n<div id=\\\"three\\\"></div>\\n<div id=\\\"four\\\"></div>\\n<div id=\\\"five\\\"></div>\\n​\\n<script>\\nvar arr = [ \\\"one\\\", \\\"two\\\", \\\"three\\\", \\\"four\\\", \\\"five\\\" ];\\nvar obj = { one: 1, two: 2, three: 3, four: 4, five: 5 };\\n​\\njQuery.each( arr, function( i, val ) {\\n  $( \\\"#\\\" + val ).text( \\\"Mine is \\\" + val + \\\".\\\" );\\n​\\n  // Will stop running after \\\"three\\\"\\n  return ( val !== \\\"three\\\" );\\n});\\n​\\njQuery.each( obj, function( i, val ) {\\n  $( \\\"#\\\" + i ).append( document.createTextNode( \\\" - \\\" + val ) );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Iterates over the properties in an object, accessing both the current item and its key.\\n```javascript\\n$.each({ name: \\\"John\\\", lang: \\\"JS\\\" }, function( k, v ) {\\n  alert( \\\"Key: \\\" + k + \\\", Value: \\\" + v );\\n});\\n```\\n     */\\n    each<T, K extends keyof T>(obj: T, callback: (this: T[K], propertyName: K, valueOfProperty: T[K]) => any): T;\\n    /**\\n     * Takes a string and throws an exception containing it.\\n     * @param message The message to send out.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.error/ }\\\\`\\n     * @since 1.4.1\\n     * @example ​ ````Override jQuery.error for display in Firebug.\\n```javascript\\njQuery.error = console.error;\\n```\\n     */\\n    error(message: string): any;\\n    /**\\n     * Escapes any character that has a special meaning in a CSS selector.\\n     * @param selector A string containing a selector expression to escape.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.escapeSelector/ }\\\\`\\n     * @since 3.0\\n     * @example ​ ````Escape an ID containing a hash.\\n```javascript\\n$.escapeSelector( \\\"#target\\\" ); // \\\"\\\\#target\\\"\\n```\\n     * @example ​ ````Select all the elements having a class name of .box inside a div.\\n```javascript\\n$( \\\"div\\\" ).find( \\\".\\\" + $.escapeSelector( \\\".box\\\" ) );\\n```\\n     */\\n    escapeSelector(selector: JQuery.Selector): JQuery.Selector;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param deep If true, the merge becomes recursive (aka. deep copy). Passing false for this argument is not supported.\\n     * @param target The object to extend. It will receive the new properties.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param object2 An object containing additional properties to merge in.\\n     * @param object3 An object containing additional properties to merge in.\\n     * @param object4 An object containing additional properties to merge in.\\n     * @param object5 An object containing additional properties to merge in.\\n     * @param object6 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.1.4\\n     * @example ​ ````Merge two objects recursively, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1, recursively\\n$.extend( true, object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U, V, W, X, Y, Z>(deep: true, target: T, object1: U, object2: V, object3: W, object4: X, object5: Y, object6: Z): T & U & V & W & X & Y & Z;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param deep If true, the merge becomes recursive (aka. deep copy). Passing false for this argument is not supported.\\n     * @param target The object to extend. It will receive the new properties.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param object2 An object containing additional properties to merge in.\\n     * @param object3 An object containing additional properties to merge in.\\n     * @param object4 An object containing additional properties to merge in.\\n     * @param object5 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.1.4\\n     * @example ​ ````Merge two objects recursively, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1, recursively\\n$.extend( true, object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U, V, W, X, Y>(deep: true, target: T, object1: U, object2: V, object3: W, object4: X, object5: Y): T & U & V & W & X & Y;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param deep If true, the merge becomes recursive (aka. deep copy). Passing false for this argument is not supported.\\n     * @param target The object to extend. It will receive the new properties.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param object2 An object containing additional properties to merge in.\\n     * @param object3 An object containing additional properties to merge in.\\n     * @param object4 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.1.4\\n     * @example ​ ````Merge two objects recursively, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1, recursively\\n$.extend( true, object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U, V, W, X>(deep: true, target: T, object1: U, object2: V, object3: W, object4: X): T & U & V & W & X;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param deep If true, the merge becomes recursive (aka. deep copy). Passing false for this argument is not supported.\\n     * @param target The object to extend. It will receive the new properties.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param object2 An object containing additional properties to merge in.\\n     * @param object3 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.1.4\\n     * @example ​ ````Merge two objects recursively, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1, recursively\\n$.extend( true, object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U, V, W>(deep: true, target: T, object1: U, object2: V, object3: W): T & U & V & W;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param deep If true, the merge becomes recursive (aka. deep copy). Passing false for this argument is not supported.\\n     * @param target The object to extend. It will receive the new properties.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param object2 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.1.4\\n     * @example ​ ````Merge two objects recursively, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1, recursively\\n$.extend( true, object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U, V>(deep: true, target: T, object1: U, object2: V): T & U & V;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param deep If true, the merge becomes recursive (aka. deep copy). Passing false for this argument is not supported.\\n     * @param target The object to extend. It will receive the new properties.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.1.4\\n     * @example ​ ````Merge two objects recursively, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1, recursively\\n$.extend( true, object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U>(deep: true, target: T, object1: U): T & U;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param deep If true, the merge becomes recursive (aka. deep copy). Passing false for this argument is not supported.\\n     * @param target The object to extend. It will receive the new properties.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.1.4\\n     */\\n    extend<T>(deep: true, target: T): this & T;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param deep If true, the merge becomes recursive (aka. deep copy). Passing false for this argument is not supported.\\n     * @param target The object to extend. It will receive the new properties.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param objectN Additional objects containing properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.1.4\\n     * @example ​ ````Merge two objects recursively, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1, recursively\\n$.extend( true, object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend(deep: true, target: any, object1: any, ...objectN: any[]): any;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param target An object that will receive the new properties if additional objects are passed in or that will\\n     *               extend the jQuery namespace if it is the sole argument.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param object2 An object containing additional properties to merge in.\\n     * @param object3 An object containing additional properties to merge in.\\n     * @param object4 An object containing additional properties to merge in.\\n     * @param object5 An object containing additional properties to merge in.\\n     * @param object6 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Merge two objects, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1\\n$.extend( object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Merge defaults and options, without modifying the defaults. This is a common plugin development pattern.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar defaults = { validate: false, limit: 5, name: \\\"foo\\\" };\\nvar options = { validate: true, name: \\\"bar\\\" };\\n​\\n// Merge defaults and options, without modifying defaults\\nvar settings = $.extend( {}, defaults, options );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( \\\"<div><b>defaults -- </b>\\\" + JSON.stringify( defaults ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>options -- </b>\\\" + JSON.stringify( options ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>settings -- </b>\\\" + JSON.stringify( settings ) + \\\"</div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U, V, W, X, Y, Z>(target: T, object1: U, object2: V, object3: W, object4: X, object5: Y, object6: Z): T & U & V & W & X & Y & Z;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param target An object that will receive the new properties if additional objects are passed in or that will\\n     *               extend the jQuery namespace if it is the sole argument.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param object2 An object containing additional properties to merge in.\\n     * @param object3 An object containing additional properties to merge in.\\n     * @param object4 An object containing additional properties to merge in.\\n     * @param object5 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Merge two objects, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1\\n$.extend( object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Merge defaults and options, without modifying the defaults. This is a common plugin development pattern.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar defaults = { validate: false, limit: 5, name: \\\"foo\\\" };\\nvar options = { validate: true, name: \\\"bar\\\" };\\n​\\n// Merge defaults and options, without modifying defaults\\nvar settings = $.extend( {}, defaults, options );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( \\\"<div><b>defaults -- </b>\\\" + JSON.stringify( defaults ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>options -- </b>\\\" + JSON.stringify( options ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>settings -- </b>\\\" + JSON.stringify( settings ) + \\\"</div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U, V, W, X, Y>(target: T, object1: U, object2: V, object3: W, object4: X, object5: Y): T & U & V & W & X & Y;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param target An object that will receive the new properties if additional objects are passed in or that will\\n     *               extend the jQuery namespace if it is the sole argument.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param object2 An object containing additional properties to merge in.\\n     * @param object3 An object containing additional properties to merge in.\\n     * @param object4 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Merge two objects, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1\\n$.extend( object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Merge defaults and options, without modifying the defaults. This is a common plugin development pattern.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar defaults = { validate: false, limit: 5, name: \\\"foo\\\" };\\nvar options = { validate: true, name: \\\"bar\\\" };\\n​\\n// Merge defaults and options, without modifying defaults\\nvar settings = $.extend( {}, defaults, options );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( \\\"<div><b>defaults -- </b>\\\" + JSON.stringify( defaults ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>options -- </b>\\\" + JSON.stringify( options ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>settings -- </b>\\\" + JSON.stringify( settings ) + \\\"</div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U, V, W, X>(target: T, object1: U, object2: V, object3: W, object4: X): T & U & V & W & X;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param target An object that will receive the new properties if additional objects are passed in or that will\\n     *               extend the jQuery namespace if it is the sole argument.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param object2 An object containing additional properties to merge in.\\n     * @param object3 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Merge two objects, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1\\n$.extend( object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Merge defaults and options, without modifying the defaults. This is a common plugin development pattern.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar defaults = { validate: false, limit: 5, name: \\\"foo\\\" };\\nvar options = { validate: true, name: \\\"bar\\\" };\\n​\\n// Merge defaults and options, without modifying defaults\\nvar settings = $.extend( {}, defaults, options );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( \\\"<div><b>defaults -- </b>\\\" + JSON.stringify( defaults ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>options -- </b>\\\" + JSON.stringify( options ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>settings -- </b>\\\" + JSON.stringify( settings ) + \\\"</div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U, V, W>(target: T, object1: U, object2: V, object3: W): T & U & V & W;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param target An object that will receive the new properties if additional objects are passed in or that will\\n     *               extend the jQuery namespace if it is the sole argument.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param object2 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Merge two objects, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1\\n$.extend( object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Merge defaults and options, without modifying the defaults. This is a common plugin development pattern.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar defaults = { validate: false, limit: 5, name: \\\"foo\\\" };\\nvar options = { validate: true, name: \\\"bar\\\" };\\n​\\n// Merge defaults and options, without modifying defaults\\nvar settings = $.extend( {}, defaults, options );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( \\\"<div><b>defaults -- </b>\\\" + JSON.stringify( defaults ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>options -- </b>\\\" + JSON.stringify( options ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>settings -- </b>\\\" + JSON.stringify( settings ) + \\\"</div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U, V>(target: T, object1: U, object2: V): T & U & V;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param target An object that will receive the new properties if additional objects are passed in or that will\\n     *               extend the jQuery namespace if it is the sole argument.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Merge two objects, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1\\n$.extend( object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Merge defaults and options, without modifying the defaults. This is a common plugin development pattern.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar defaults = { validate: false, limit: 5, name: \\\"foo\\\" };\\nvar options = { validate: true, name: \\\"bar\\\" };\\n​\\n// Merge defaults and options, without modifying defaults\\nvar settings = $.extend( {}, defaults, options );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( \\\"<div><b>defaults -- </b>\\\" + JSON.stringify( defaults ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>options -- </b>\\\" + JSON.stringify( options ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>settings -- </b>\\\" + JSON.stringify( settings ) + \\\"</div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend<T, U>(target: T, object1: U): T & U;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param target An object that will receive the new properties if additional objects are passed in or that will\\n     *               extend the jQuery namespace if it is the sole argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.0\\n     */\\n    extend<T>(target: T): this & T;\\n    /**\\n     * Merge the contents of two or more objects together into the first object.\\n     * @param target An object that will receive the new properties if additional objects are passed in or that will\\n     *               extend the jQuery namespace if it is the sole argument.\\n     * @param object1 An object containing additional properties to merge in.\\n     * @param objectN Additional objects containing properties to merge in.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.extend/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Merge two objects, modifying the first.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar object1 = {\\n  apple: 0,\\n  banana: { weight: 52, price: 100 },\\n  cherry: 97\\n};\\nvar object2 = {\\n  banana: { price: 200 },\\n  durian: 100\\n};\\n​\\n// Merge object2 into object1\\n$.extend( object1, object2 );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( JSON.stringify( object1 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Merge defaults and options, without modifying the defaults. This is a common plugin development pattern.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.extend demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar defaults = { validate: false, limit: 5, name: \\\"foo\\\" };\\nvar options = { validate: true, name: \\\"bar\\\" };\\n​\\n// Merge defaults and options, without modifying defaults\\nvar settings = $.extend( {}, defaults, options );\\n​\\n// Assuming JSON.stringify - not available in IE<8\\n$( \\\"#log\\\" ).append( \\\"<div><b>defaults -- </b>\\\" + JSON.stringify( defaults ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>options -- </b>\\\" + JSON.stringify( options ) + \\\"</div>\\\" );\\n$( \\\"#log\\\" ).append( \\\"<div><b>settings -- </b>\\\" + JSON.stringify( settings ) + \\\"</div>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    extend(target: any, object1: any, ...objectN: any[]): any;\\n    /**\\n     * Load data from the server using a HTTP GET request.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param data A plain object or string that is sent to the server with the request.\\n     * @param success A callback function that is executed if the request succeeds. Required if `dataType` is provided,\\n     *                but you can use `null` or \\\\`{@link noop jQuery.noop}\\\\` as a placeholder.\\n     * @param dataType The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html).\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.get/ }\\\\`\\n     * @since 1.0\\n     */\\n    get(url: string,\\n        data: JQuery.PlainObject | string,\\n        success: JQuery.jqXHR.DoneCallback | null,\\n        dataType?: string): JQuery.jqXHR;\\n    /**\\n     * Load data from the server using a HTTP GET request.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param success A callback function that is executed if the request succeeds. Required if `dataType` is provided,\\n     *                but you can use `null` or \\\\`{@link noop jQuery.noop}\\\\` as a placeholder.\\n     * @param dataType The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html).\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.get/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Get the test.php page contents, which has been returned in json format (&lt;?php echo json_encode( array( &quot;name&quot;=&gt;&quot;John&quot;,&quot;time&quot;=&gt;&quot;2pm&quot; ) ); ?&gt;), and add it to the page.\\n```javascript\\n$.get( \\\"test.php\\\", function( data ) {\\n  $( \\\"body\\\" )\\n    .append( \\\"Name: \\\" + data.name ) // John\\n    .append( \\\"Time: \\\" + data.time ); //  2pm\\n}, \\\"json\\\" );\\n```\\n     */\\n    get(url: string,\\n        success: JQuery.jqXHR.DoneCallback | null,\\n        dataType: string): JQuery.jqXHR;\\n    /**\\n     * Load data from the server using a HTTP GET request.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param success_data _&#x40;param_ `success_data`\\n     * <br>\\n     * * `success` — A callback function that is executed if the request succeeds. Required if `dataType` is provided,\\n     *               but you can use `null` or \\\\`{@link noop jQuery.noop}\\\\` as a placeholder. <br>\\n     * * `data` — A plain object or string that is sent to the server with the request.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.get/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Request the test.php page and send some additional data along (while still ignoring the return results).\\n```javascript\\n$.get( \\\"test.php\\\", { name: \\\"John\\\", time: \\\"2pm\\\" } );\\n```\\n     * @example ​ ````Pass arrays of data to the server (while still ignoring the return results).\\n```javascript\\n$.get( \\\"test.php\\\", { \\\"choices[]\\\": [\\\"Jon\\\", \\\"Susan\\\"] } );\\n```\\n     * @example ​ ````Alert the results from requesting test.php (HTML or XML, depending on what was returned).\\n```javascript\\n$.get( \\\"test.php\\\", function( data ) {\\n  alert( \\\"Data Loaded: \\\" + data );\\n});\\n```\\n     * @example ​ ````Alert the results from requesting test.cgi with an additional payload of data (HTML or XML, depending on what was returned).\\n```javascript\\n$.get( \\\"test.cgi\\\", { name: \\\"John\\\", time: \\\"2pm\\\" } )\\n  .done(function( data ) {\\n    alert( \\\"Data Loaded: \\\" + data );\\n  });\\n```\\n     */\\n    get(url: string,\\n        success_data: JQuery.jqXHR.DoneCallback | JQuery.PlainObject | string): JQuery.jqXHR;\\n    /**\\n     * Load data from the server using a HTTP GET request.\\n     * @param url_settings _&#x40;param_ `url_settings`\\n     * <br>\\n     * * `url` — A string containing the URL to which the request is sent. <br>\\n     * * `settings` — A set of key/value pairs that configure the Ajax request. All properties except for `url` are\\n     *                optional. A default can be set for any option with \\\\`{@link ajaxSetup $.ajaxSetup()}\\\\`. See \\\\`{@link https://api.jquery.com/jquery.ajax/#jQuery-ajax-settings jQuery.ajax( settings )}\\\\`\\n     *                for a complete list of all settings. The type option will automatically be set to `GET`.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.get/ }\\\\`\\n     * @since 1.0\\n     * @since 1.12\\n     * @since 2.2\\n     * @example ​ ````Request the test.php page, but ignore the return results.\\n```javascript\\n$.get( \\\"test.php\\\" );\\n```\\n     */\\n    get(url_settings?: string | JQuery.UrlAjaxSettings): JQuery.jqXHR;\\n    /**\\n     * Load JSON-encoded data from the server using a GET HTTP request.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param data A plain object or string that is sent to the server with the request.\\n     * @param success A callback function that is executed if the request succeeds.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.getJSON/ }\\\\`\\n     * @since 1.0\\n     */\\n    getJSON(url: string,\\n            data: JQuery.PlainObject | string,\\n            success: JQuery.jqXHR.DoneCallback): JQuery.jqXHR;\\n    /**\\n     * Load JSON-encoded data from the server using a GET HTTP request.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param success_data _&#x40;param_ `url_settings`\\n     * <br>\\n     * * `success` — A callback function that is executed if the request succeeds. <br>\\n     * * `data` — A plain object or string that is sent to the server with the request.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.getJSON/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Loads the four most recent pictures of Mount Rainier from the Flickr JSONP API.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.getJSON demo</title>\\n  <style>\\n  img {\\n    height: 100px;\\n    float: left;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"images\\\"></div>\\n​\\n<script>\\n(function() {\\n  var flickerAPI = \\\"https://api.flickr.com/services/feeds/photos_public.gne?jsoncallback=?\\\";\\n  $.getJSON( flickerAPI, {\\n    tags: \\\"mount rainier\\\",\\n    tagmode: \\\"any\\\",\\n    format: \\\"json\\\"\\n  })\\n    .done(function( data ) {\\n      $.each( data.items, function( i, item ) {\\n        $( \\\"<img>\\\" ).attr( \\\"src\\\", item.media.m ).appendTo( \\\"#images\\\" );\\n        if ( i === 3 ) {\\n          return false;\\n        }\\n      });\\n    });\\n})();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Load the JSON data from test.js and access a name from the returned JSON data.\\n```javascript\\n$.getJSON( \\\"test.js\\\", function( json ) {\\n  console.log( \\\"JSON Data: \\\" + json.users[ 3 ].name );\\n });\\n ```\\n     * @example ​ ````Load the JSON data from test.js, passing along additional data, and access a name from the returned JSON data.\\n      If an error occurs, log an error message instead.\\n```javascript\\n$.getJSON( \\\"test.js\\\", { name: \\\"John\\\", time: \\\"2pm\\\" } )\\n  .done(function( json ) {\\n    console.log( \\\"JSON Data: \\\" + json.users[ 3 ].name );\\n  })\\n  .fail(function( jqxhr, textStatus, error ) {\\n    var err = textStatus + \\\", \\\" + error;\\n    console.log( \\\"Request Failed: \\\" + err );\\n});\\n```\\n     */\\n    getJSON(url: string,\\n            success_data?: JQuery.jqXHR.DoneCallback | JQuery.PlainObject | string): JQuery.jqXHR;\\n    /**\\n     * Load a JavaScript file from the server using a GET HTTP request, then execute it.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param success A callback function that is executed if the request succeeds.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.getScript/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Define a $.cachedScript() method that allows fetching a cached script:\\n```javascript\\njQuery.cachedScript = function( url, options ) {\\n​\\n  // Allow user to set any option except for dataType, cache, and url\\n  options = $.extend( options || {}, {\\n    dataType: \\\"script\\\",\\n    cache: true,\\n    url: url\\n  });\\n​\\n  // Use $.ajax() since it is more flexible than $.getScript\\n  // Return the jqXHR object so we can chain callbacks\\n  return jQuery.ajax( options );\\n};\\n​\\n// Usage\\n$.cachedScript( \\\"ajax/test.js\\\" ).done(function( script, textStatus ) {\\n  console.log( textStatus );\\n});\\n```\\n     * @example ​ ````Load the official jQuery Color Animation plugin dynamically and bind some color animations to occur once the new functionality is loaded.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.getScript demo</title>\\n  <style>\\n  .block {\\n     background-color: blue;\\n     width: 150px;\\n     height: 70px;\\n     margin: 10px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"go\\\">&raquo; Run</button>\\n<div class=\\\"block\\\"></div>\\n​\\n<script>\\nvar url = \\\"https://code.jquery.com/color/jquery.color.js\\\";\\n$.getScript( url, function() {\\n  $( \\\"#go\\\" ).click(function() {\\n    $( \\\".block\\\" )\\n      .animate({\\n        backgroundColor: \\\"rgb(255, 180, 180)\\\"\\n      }, 1000 )\\n      .delay( 500 )\\n      .animate({\\n        backgroundColor: \\\"olive\\\"\\n      }, 1000 )\\n      .delay( 500 )\\n      .animate({\\n        backgroundColor: \\\"#00f\\\"\\n      }, 1000 );\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    getScript(url: string,\\n              success?: JQuery.jqXHR.DoneCallback<string | undefined>): JQuery.jqXHR<string | undefined>;\\n    /**\\n     * Load a JavaScript file from the server using a GET HTTP request, then execute it.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.getScript/ }\\\\`\\n     * @since 1.12\\n     * @since 2.2\\n     */\\n    getScript(options: JQuery.UrlAjaxSettings): JQuery.jqXHR<string | undefined>;\\n    /**\\n     * Execute some JavaScript code globally.\\n     * @param code The JavaScript code to execute.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.globalEval/ }\\\\`\\n     * @since 1.0.4\\n     * @example ​ ````Execute a script in the global context.\\n```javascript\\nfunction test() {\\n  jQuery.globalEval( \\\"var newVar = true;\\\" )\\n}\\ntest();\\n// newVar === true\\n```\\n     */\\n    globalEval(code: string): void;\\n    /**\\n     * Finds the elements of an array which satisfy a filter function. The original array is not affected.\\n     * @param array The array-like object to search through.\\n     * @param funсtion The function to process each item against. The first argument to the function is the item, and the\\n     *                 second argument is the index. The function should return a Boolean value. `this` will be the global\\n     *                 window object.\\n     * @param invert If \\\"invert\\\" is false, or not provided, then the function returns an array consisting of all elements\\n     *               for which \\\"callback\\\" returns true. If \\\"invert\\\" is true, then the function returns an array\\n     *               consisting of all elements for which \\\"callback\\\" returns false.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.grep/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Filters the original array of numbers leaving that are not 5 and have an index greater than 4.  Then it removes all 9s.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.grep demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  p {\\n    color: green;\\n    margin: 0;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<p></p>\\n<span></span>\\n​\\n<script>\\nvar arr = [ 1, 9, 3, 8, 6, 1, 5, 9, 4, 7, 3, 8, 6, 9, 1 ];\\n$( \\\"div\\\" ).text( arr.join( \\\", \\\" ) );\\n​\\narr = jQuery.grep(arr, function( n, i ) {\\n  return ( n !== 5 && i > 4 );\\n});\\n$( \\\"p\\\" ).text( arr.join( \\\", \\\" ) );\\n​\\narr = jQuery.grep(arr, function( a ) {\\n  return a !== 9;\\n});\\n​\\n$( \\\"span\\\" ).text( arr.join( \\\", \\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Filter an array of numbers to include only numbers bigger then zero.\\n```javascript\\n$.grep( [ 0, 1, 2 ], function( n, i ) {\\n  return n > 0;\\n});\\n```\\n     * @example ​ ````Filter an array of numbers to include numbers that are not bigger than zero.\\n```javascript\\n$.grep( [ 0, 1, 2 ], function( n, i ) {\\n    return n > 0;\\n}, true );\\n```\\n     */\\n    grep<T>(array: ArrayLike<T>,\\n            funсtion: (elementOfArray: T, indexInArray: number) => boolean,\\n            invert?: boolean): T[];\\n    /**\\n     * Determine whether an element has any jQuery data associated with it.\\n     * @param element A DOM element to be checked for data.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.hasData/ }\\\\`\\n     * @since 1.5\\n     * @example ​ ````Set data on an element and see the results of hasData.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.hasData demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>Results: </p>\\n​\\n<script>\\nvar $p = jQuery( \\\"p\\\" ), p = $p[ 0 ];\\n$p.append( jQuery.hasData( p ) + \\\" \\\" ); // false\\n​\\n$.data( p, \\\"testing\\\", 123 );\\n$p.append( jQuery.hasData( p ) + \\\" \\\" ); // true\\n​\\n$.removeData( p, \\\"testing\\\" );\\n$p.append( jQuery.hasData( p ) + \\\" \\\" ); // false\\n​\\n$p.on( \\\"click\\\", function() {} );\\n$p.append( jQuery.hasData( p ) + \\\" \\\" ); // true\\n​\\n$p.off( \\\"click\\\" );\\n$p.append( jQuery.hasData( p ) + \\\" \\\" ); // false\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    hasData(element: Element | Document | Window | JQuery.PlainObject): boolean;\\n    /**\\n     * Holds or releases the execution of jQuery's ready event.\\n     * @param hold Indicates whether the ready hold is being requested or released\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.holdReady/ }\\\\`\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.2. See \\\\`{@link https://github.com/jquery/jquery/issues/3288 }\\\\`.\\n     *\\n     * **Cause**: The `jQuery.holdReady()` method has been deprecated due to its detrimental effect on the global performance of the page. This method can prevent all the code on the page from initializing for extended lengths of time.\\n     *\\n     * **Solution**: Rewrite the page so that it does not require all jQuery ready handlers to be delayed. This might be accomplished, for example, by late-loading only the code that requires the delay when it is safe to run. Due to the complexity of this method, jQuery Migrate does not attempt to fill the functionality. If the underlying version of jQuery used with jQuery Migrate no longer contains `jQuery.holdReady()` the code will fail shortly after this warning appears.\\n     * @example ​ ````Delay the ready event until a custom plugin has loaded.\\n```javascript\\n$.holdReady( true );\\n$.getScript( \\\"myplugin.js\\\", function() {\\n  $.holdReady( false );\\n});\\n```\\n     */\\n    holdReady(hold: boolean): void;\\n    /**\\n     * Modify and filter HTML strings passed through jQuery manipulation methods.\\n     * @param html The HTML string on which to operate.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.htmlPrefilter/ }\\\\`\\n     * @since 1.12\\n     * @since 2.2\\n     */\\n    htmlPrefilter(html: JQuery.htmlString): JQuery.htmlString;\\n    /**\\n     * Search for a specified value within an array and return its index (or -1 if not found).\\n     * @param value The value to search for.\\n     * @param array An array through which to search.\\n     * @param fromIndex The index of the array at which to begin the search. The default is 0, which will search the whole array.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.inArray/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Report the index of some elements in the array.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.inArray demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>\\\"John\\\" found at <span></span></div>\\n<div>4 found at <span></span></div>\\n<div>\\\"Karl\\\" not found, so <span></span></div>\\n<div>\\\"Pete\\\" is in the array, but not at or after index 2, so <span></span></div>\\n​\\n<script>\\nvar arr = [ 4, \\\"Pete\\\", 8, \\\"John\\\" ];\\nvar $spans = $( \\\"span\\\" );\\n$spans.eq( 0 ).text( jQuery.inArray( \\\"John\\\", arr ) );\\n$spans.eq( 1 ).text( jQuery.inArray( 4, arr ) );\\n$spans.eq( 2 ).text( jQuery.inArray( \\\"Karl\\\", arr ) );\\n$spans.eq( 3 ).text( jQuery.inArray( \\\"Pete\\\", arr, 2 ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    inArray<T>(value: T, array: T[], fromIndex?: number): number;\\n    /**\\n     * Determine whether the argument is an array.\\n     * @param obj Object to test whether or not it is an array.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.isArray/ }\\\\`\\n     * @since 1.3\\n     * @deprecated ​ Deprecated since 3.2. Use \\\\`{@link ArrayConstructor.isArray Array.isArray}\\\\`.\\n     * @example ​ ````Finds out if the parameter is an array.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.isArray demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nIs [] an Array? <b></b>\\n​\\n<script>\\n$( \\\"b\\\" ).append( \\\"\\\" + $.isArray([]) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    isArray(obj: any): obj is any[];\\n    /**\\n     * Check to see if an object is empty (contains no enumerable properties).\\n     * @param obj The object that will be checked to see if it's empty.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.isEmptyObject/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Check an object to see if it&#39;s empty.\\n```javascript\\njQuery.isEmptyObject({}); // true\\njQuery.isEmptyObject({ foo: \\\"bar\\\" }); // false\\n```\\n     */\\n    isEmptyObject(obj: any): boolean;\\n    /**\\n     * Determine if the argument passed is a JavaScript function object.\\n     * @param obj Object to test whether or not it is a function.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.isFunction/ }\\\\`\\n     * @since 1.2\\n     * @deprecated ​ Deprecated since 3.3. Use `typeof x === \\\"function\\\"`.\\n     * @example ​ ````Test a few parameter examples.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.isFunction demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n    margin: 2px;\\n    font-size: 14px;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>jQuery.isFunction( objs[ 0 ] ) = <span></span></div>\\n<div>jQuery.isFunction( objs[ 1 ] ) = <span></span></div>\\n<div>jQuery.isFunction( objs[ 2 ] ) = <span></span></div>\\n<div>jQuery.isFunction( objs[ 3 ] ) = <span></span></div>\\n<div>jQuery.isFunction( objs[ 4 ] ) = <span></span></div>\\n​\\n<script>\\nfunction stub() {}\\nvar objs = [\\n  function() {},\\n  { x:15, y:20 },\\n  null,\\n  stub,\\n  \\\"function\\\"\\n];\\n​\\njQuery.each( objs, function( i ) {\\n  var isFunc = jQuery.isFunction( objs[ i ]);\\n  $( \\\"span\\\" ).eq( i ).text( isFunc );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Finds out if the parameter is a function.\\n```javascript\\n$.isFunction(function() {});\\n```\\n     */\\n    // tslint:disable-next-line:ban-types\\n    isFunction(obj: any): obj is Function;\\n    /**\\n     * Determines whether its argument represents a JavaScript number.\\n     * @param value The value to be tested.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.isNumeric/ }\\\\`\\n     * @since 1.7\\n     * @deprecated ​ Deprecated since 3.3. Internal. See \\\\`{@link https://github.com/jquery/jquery/issues/2960 }\\\\`.\\n     * @example ​ ````Sample return values of $.isNumeric with various inputs.\\n```javascript\\n// true (numeric)\\n$.isNumeric( \\\"-10\\\" )\\n$.isNumeric( \\\"0\\\" )\\n$.isNumeric( 0xFF )\\n$.isNumeric( \\\"0xFF\\\" )\\n$.isNumeric( \\\"8e5\\\" )\\n$.isNumeric( \\\"3.1415\\\" )\\n$.isNumeric( +10 )\\n$.isNumeric( 0144 )\\n​\\n// false (non-numeric)\\n$.isNumeric( \\\"-0x42\\\" )\\n$.isNumeric( \\\"7.2acdgs\\\" )\\n$.isNumeric( \\\"\\\" )\\n$.isNumeric( {} )\\n$.isNumeric( NaN )\\n$.isNumeric( null )\\n$.isNumeric( true )\\n$.isNumeric( Infinity )\\n$.isNumeric( undefined )\\n```\\n     */\\n    isNumeric(value: any): boolean;\\n    /**\\n     * Check to see if an object is a plain object (created using \\\"{}\\\" or \\\"new Object\\\").\\n     * @param obj The object that will be checked to see if it's a plain object.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.isPlainObject/ }\\\\`\\n     * @since 1.4\\n     * @example ​ ````Check an object to see if it&#39;s a plain object.\\n```javascript\\njQuery.isPlainObject({}) // true\\njQuery.isPlainObject( \\\"test\\\" ) // false\\n```\\n     */\\n    isPlainObject(obj: any): boolean;\\n    /**\\n     * Determine whether the argument is a window.\\n     * @param obj Object to test whether or not it is a window.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.isWindow/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Internal. See \\\\`{@link https://github.com/jquery/jquery/issues/3629 }\\\\`.\\n     *\\n     * **Cause**: This method returns `true` if its argument is thought to be a `window` element. It was created for internal use and is not a reliable way of detecting `window` for public needs.\\n     *\\n     * **Solution**: Remove any use of `jQuery.isWindow()` from code. If it is truly needed it can be replaced with a check for `obj != null && obj === obj.window` which was the test used inside this method.\\n     * @example ​ ````Finds out if the parameter is a window.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.isWindow demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nIs 'window' a window? <b></b>\\n​\\n<script>\\n$( \\\"b\\\" ).append( \\\"\\\" + $.isWindow( window ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    isWindow(obj: any): obj is Window;\\n    /**\\n     * Check to see if a DOM node is within an XML document (or is an XML document).\\n     * @param node The DOM node that will be checked to see if it's in an XML document.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.isXMLDoc/ }\\\\`\\n     * @since 1.1.4\\n     * @example ​ ````Check an object to see if it&#39;s in an XML document.\\n```javascript\\njQuery.isXMLDoc( document ) // false\\njQuery.isXMLDoc( document.body ) // false\\n```\\n     */\\n    isXMLDoc(node: Node): boolean;\\n    /**\\n     * Convert an array-like object into a true JavaScript array.\\n     * @param obj Any object to turn into a native Array.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.makeArray/ }\\\\`\\n     * @since 1.2\\n     * @example ​ ````Turn a collection of HTMLElements into an Array of them.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.makeArray demo</title>\\n  <style>\\n  div {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>First</div>\\n<div>Second</div>\\n<div>Third</div>\\n<div>Fourth</div>\\n​\\n<script>\\n// Returns a NodeList\\nvar elems = document.getElementsByTagName( \\\"div\\\" );\\n// Convert the NodeList to an Array\\nvar arr = jQuery.makeArray( elems );\\n// Use an Array method on list of dom elements\\narr.reverse();\\n$( arr ).appendTo( document.body );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Turn a jQuery object into an array\\n```javascript\\nvar obj = $( \\\"li\\\" );\\nvar arr = $.makeArray( obj );\\n```\\n     */\\n    makeArray<T>(obj: ArrayLike<T>): T[];\\n    /**\\n     * Translate all items in an array or object to new array of items.\\n     * @param array The Array to translate.\\n     * @param callback The function to process each item against. The first argument to the function is the array item, the\\n     *                 second argument is the index in array The function can return any value. A returned array will be\\n     *                 flattened into the resulting array. Within the function, this refers to the global (window) object.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.map/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Use $.map() to change the values of an array.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.map demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  p {\\n    color: green;\\n    margin: 0;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div></div>\\n<p></p>\\n<span></span>\\n​\\n<script>\\nvar arr = [ \\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\" ];\\n$( \\\"div\\\" ).text( arr.join( \\\", \\\" ) );\\n​\\narr = jQuery.map( arr, function( n, i ) {\\n  return ( n.toUpperCase() + i );\\n});\\n$( \\\"p\\\" ).text( arr.join( \\\", \\\" ) );\\n​\\narr = jQuery.map( arr, function( a ) {\\n  return a + a;\\n});\\n$( \\\"span\\\" ).text( arr.join( \\\", \\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Map the original array to a new one and add 4 to each value.\\n```javascript\\n$.map( [ 0, 1, 2 ], function( n ) {\\n  return n + 4;\\n});\\n```\\n     * @example ​ ````Map the original array to a new one, adding 1 to each value if it is bigger then zero and removing it if not.\\n```javascript\\n$.map( [ 0, 1, 2 ], function( n ) {\\n  return n > 0 ? n + 1 : null;\\n});\\n```\\n     * @example ​ ````Map the original array to a new one; each element is added with its original value and the value plus one.\\n```javascript\\n$.map( [ 0, 1, 2 ], function( n ) {\\n    return [ n, n + 1 ];\\n});\\n```\\n     * @example ​ ````Map the original array to a new one; each element is squared.\\n```javascript\\n$.map( [ 0, 1, 2, 3 ], function( a ) {\\n  return a * a;\\n});\\n```\\n     * @example ​ ````Map the original array to a new one, removing numbers less than 50 by returning null and subtracting 45 from the rest.\\n```javascript\\n$.map( [ 0, 1, 52, 97 ], function( a ) {\\n  return (a > 50 ? a - 45 : null);\\n});\\n```\\n     * @example ​ ````Augment the resulting array by returning an array inside the function.\\n```javascript\\nvar array = [ 0, 1, 52, 97 ];\\narray = $.map( array, function( a, index ) {\\n  return [ a - 45, index ];\\n});\\n```\\n     */\\n    map<T, TReturn>(array: T[], callback: (this: Window, elementOfArray: T, indexInArray: number) => JQuery.TypeOrArray<TReturn> | null | undefined): TReturn[];\\n    /**\\n     * Translate all items in an array or object to new array of items.\\n     * @param obj The Object to translate.\\n     * @param callback The function to process each item against. The first argument to the function is the value; the\\n     *                 second argument is the key of the object property. The function can return any value to add to the\\n     *                 array. A returned array will be flattened into the resulting array. Within the function, this refers\\n     *                 to the global (window) object.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.map/ }\\\\`\\n     * @since 1.6\\n     * @example ​ ````Map the original object to a new array and double each value.\\n```javascript\\nvar dimensions = { width: 10, height: 15, length: 20 };\\ndimensions = $.map( dimensions, function( value, index ) {\\n  return value * 2;\\n});\\n```\\n     * @example ​ ````Map an object&#39;s keys to an array.\\n```javascript\\nvar dimensions = { width: 10, height: 15, length: 20 };\\nvar keys = $.map( dimensions, function( value, key ) {\\n  return key;\\n});\\n```\\n     */\\n    map<T, K extends keyof T, TReturn>(obj: T, callback: (this: Window, propertyOfObject: T[K], key: K) => JQuery.TypeOrArray<TReturn> | null | undefined): TReturn[];\\n    /**\\n     * Merge the contents of two arrays together into the first array.\\n     * @param first The first array-like object to merge, the elements of second added.\\n     * @param second The second array-like object to merge into the first, unaltered.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.merge/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Merges two arrays, altering the first argument.\\n```javascript\\n$.merge( [ 0, 1, 2 ], [ 2, 3, 4 ] )\\n```\\n     * @example ​ ````Merges two arrays, altering the first argument.\\n```javascript\\n$.merge( [ 3, 2, 1 ], [ 4, 3, 2 ] )\\n```\\n     * @example ​ ````Merges two arrays, but uses a copy, so the original isn&#39;t altered.\\n```javascript\\nvar first = [ \\\"a\\\", \\\"b\\\", \\\"c\\\" ];\\nvar second = [ \\\"d\\\", \\\"e\\\", \\\"f\\\" ];\\n$.merge( $.merge( [], first ), second );\\n```\\n     */\\n    merge<T, U>(first: ArrayLike<T>, second: ArrayLike<U>): Array<T | U>;\\n    /**\\n     * Relinquish jQuery's control of the $ variable.\\n     * @param removeAll A Boolean indicating whether to remove all jQuery variables from the global scope (including jQuery itself).\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.noConflict/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Map the original object that was referenced by $ back to $.\\n```javascript\\njQuery.noConflict();\\n// Do something with jQuery\\njQuery( \\\"div p\\\" ).hide();\\n// Do something with another library's $()\\n$( \\\"content\\\" ).style.display = \\\"none\\\";\\n```\\n     * @example ​ ````Revert the $ alias and then create and execute a function to provide the $ as a jQuery alias inside the function&#39;s scope. Inside the function the original $ object is not available. This works well for most plugins that don&#39;t rely on any other library.\\n```javascript\\njQuery.noConflict();\\n(function( $ ) {\\n  $(function() {\\n    // More code using $ as alias to jQuery\\n  });\\n})(jQuery);\\n​\\n// Other code using $ as an alias to the other library\\n```\\n     * @example ​ ````Create a different alias instead of jQuery to use in the rest of the script.\\n```javascript\\nvar j = jQuery.noConflict();\\n​\\n// Do something with jQuery\\nj( \\\"div p\\\" ).hide();\\n​\\n// Do something with another library's $()\\n$( \\\"content\\\" ).style.display = \\\"none\\\";\\n```\\n     * @example ​ ````Completely move jQuery to a new namespace in another object.\\n```javascript\\nvar dom = {};\\ndom.query = jQuery.noConflict( true );\\n```\\n     * @example ​ ````Load two versions of jQuery (not recommended). Then, restore jQuery&#39;s globally scoped variables to the first loaded jQuery.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.noConflict demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\">\\n  <h3>Before $.noConflict(true)</h3>\\n</div>\\n<script src=\\\"https://code.jquery.com/jquery-1.6.2.js\\\"></script>\\n​\\n<script>\\nvar $log = $( \\\"#log\\\" );\\n​\\n$log.append( \\\"2nd loaded jQuery version ($): \\\" + $.fn.jquery + \\\"<br>\\\" );\\n​\\n// Restore globally scoped jQuery variables to the first version loaded\\n// (the newer version)\\n​\\njq162 = jQuery.noConflict( true );\\n​\\n$log.append( \\\"<h3>After $.noConflict(true)</h3>\\\" );\\n$log.append( \\\"1st loaded jQuery version ($): \\\" + $.fn.jquery + \\\"<br>\\\" );\\n$log.append( \\\"2nd loaded jQuery version (jq162): \\\" + jq162.fn.jquery + \\\"<br>\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    noConflict(removeAll?: boolean): this;\\n    /**\\n     * @deprecated ​ Deprecated since 3.2.\\n     *\\n     * **Cause**: This public but never-documented method has been deprecated as of jQuery 3.2.0.\\n     *\\n     * **Solution**: Replace calls such as `jQuery.nodeName( elem, \\\"div\\\" )` with a test such as `elem.nodeName.toLowerCase() === \\\"div\\\"`.\\n     */\\n    nodeName(elem: Node, name: string): boolean;\\n    /**\\n     * An empty function.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.noop/ }\\\\`\\n     * @since 1.4\\n     */\\n    noop(): undefined;\\n    /**\\n     * Return a number representing the current time.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.now/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link DateConstructor.now Date.now}\\\\`.\\n     */\\n    now(): number;\\n    /**\\n     * Create a serialized representation of an array, a plain object, or a jQuery object suitable for use in a URL query string or Ajax request. In case a jQuery object is passed, it should contain input elements with name/value properties.\\n     * @param obj An array, a plain object, or a jQuery object to serialize.\\n     * @param traditional A Boolean indicating whether to perform a traditional \\\"shallow\\\" serialization.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.param/ }\\\\`\\n     * @since 1.2\\n     * @since 1.4\\n     * @example ​ ````Serialize a key/value object.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.param demo</title>\\n  <style>\\n  div {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"results\\\"></div>\\n​\\n<script>\\nvar params = { width:1680, height:1050 };\\nvar str = jQuery.param( params );\\n$( \\\"#results\\\" ).text( str );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Serialize a few complex objects\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.param demo</title>\\n  <style>\\n  div {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​​\\n<script>\\n// <=1.3.2:\\n$.param({ a: [ 2, 3, 4 ] }); // \\\"a=2&a=3&a=4\\\"\\n// >=1.4:\\n$.param({ a: [ 2, 3, 4 ] }); // \\\"a[]=2&a[]=3&a[]=4\\\"\\n​\\n// <=1.3.2:\\n$.param({ a: { b: 1, c: 2 }, d: [ 3, 4, { e: 5 } ] });\\n// \\\"a=[object+Object]&d=3&d=4&d=[object+Object]\\\"\\n​\\n// >=1.4:\\n$.param({ a: { b: 1, c: 2 }, d: [ 3, 4, { e: 5 } ] });\\n// \\\"a[b]=1&a[c]=2&d[]=3&d[]=4&d[2][e]=5\\\"\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    param(obj: any[] | JQuery.PlainObject | JQuery, traditional?: boolean): string;\\n    /**\\n     * Parses a string into an array of DOM nodes.\\n     * @param data HTML string to be parsed\\n     * @param context Document element to serve as the context in which the HTML fragment will be created\\n     * @param keepScripts A Boolean indicating whether to include scripts passed in the HTML string\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.parseHTML/ }\\\\`\\n     * @since 1.8\\n     */\\n    parseHTML(data: string, context: Document | null | undefined, keepScripts: boolean): JQuery.Node[];\\n    /**\\n     * Parses a string into an array of DOM nodes.\\n     * @param data HTML string to be parsed\\n     * @param context_keepScripts _&#x40;param_ `context_keepScripts`\\n     * <br>\\n     * * `context` — Document element to serve as the context in which the HTML fragment will be created <br>\\n     * * `keepScripts` — A Boolean indicating whether to include scripts passed in the HTML string\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.parseHTML/ }\\\\`\\n     * @since 1.8\\n     * @example ​ ````Create an array of DOM nodes using an HTML string and insert it into a div.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.parseHTML demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\">\\n  <h3>Content:</h3>\\n</div>\\n​\\n<script>\\nvar $log = $( \\\"#log\\\" ),\\n  str = \\\"hello, <b>my name is</b> jQuery.\\\",\\n  html = $.parseHTML( str ),\\n  nodeNames = [];\\n​\\n// Append the parsed HTML\\n$log.append( html );\\n​\\n// Gather the parsed HTML's node names\\n$.each( html, function( i, el ) {\\n  nodeNames[ i ] = \\\"<li>\\\" + el.nodeName + \\\"</li>\\\";\\n});\\n​\\n// Insert the node names\\n$log.append( \\\"<h3>Node Names:</h3>\\\" );\\n$( \\\"<ol></ol>\\\" )\\n  .append( nodeNames.join( \\\"\\\" ) )\\n  .appendTo( $log );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    parseHTML(data: string, context_keepScripts?: Document | null | boolean): JQuery.Node[];\\n    /**\\n     * Takes a well-formed JSON string and returns the resulting JavaScript value.\\n     * @param json The JSON string to parse.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.parseJSON/ }\\\\`\\n     * @since 1.4.1\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link JSON.parse }\\\\`.\\n     *\\n     * **Cause**: The `jQuery.parseJSON` method in recent jQuery is identical to the native `JSON.parse`. As of jQuery 3.0 `jQuery.parseJSON` is deprecated.\\n     *\\n     * **Solution**: Replace any use of `jQuery.parseJSON` with `JSON.parse`.\\n     * @example ​ ````Parse a JSON string.\\n```javascript\\nvar obj = jQuery.parseJSON( '{ \\\"name\\\": \\\"John\\\" }' );\\nalert( obj.name === \\\"John\\\" );\\n```\\n     */\\n    parseJSON(json: string): any;\\n    /**\\n     * Parses a string into an XML document.\\n     * @param data a well-formed XML string to be parsed\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.parseXML/ }\\\\`\\n     * @since 1.5\\n     * @example ​ ````Create a jQuery object using an XML string and obtain the value of the title node.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.parseXML demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p id=\\\"someElement\\\"></p>\\n<p id=\\\"anotherElement\\\"></p>\\n​\\n<script>\\nvar xml = \\\"<rss version='2.0'><channel><title>RSS Title</title></channel></rss>\\\",\\n  xmlDoc = $.parseXML( xml ),\\n  $xml = $( xmlDoc ),\\n  $title = $xml.find( \\\"title\\\" );\\n​\\n// Append \\\"RSS Title\\\" to #someElement\\n$( \\\"#someElement\\\" ).append( $title.text() );\\n​\\n// Change the title to \\\"XML Title\\\"\\n$title.text( \\\"XML Title\\\" );\\n​\\n// Append \\\"XML Title\\\" to #anotherElement\\n$( \\\"#anotherElement\\\" ).append( $title.text() );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    parseXML(data: string): XMLDocument;\\n    /**\\n     * Load data from the server using a HTTP POST request.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param data A plain object or string that is sent to the server with the request.\\n     * @param success A callback function that is executed if the request succeeds. Required if dataType is provided, but\\n     *                can be null in that case.\\n     * @param dataType The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html).\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.post/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Post to the test.php page and get content which has been returned in json format (&lt;?php echo json_encode(array(&quot;name&quot;=&gt;&quot;John&quot;,&quot;time&quot;=&gt;&quot;2pm&quot;)); ?&gt;).\\n```javascript\\n$.post( \\\"test.php\\\", { func: \\\"getNameAndTime\\\" }, function( data ) {\\n  console.log( data.name ); // John\\n  console.log( data.time ); // 2pm\\n}, \\\"json\\\");\\n```\\n     */\\n    post(url: string,\\n         data: JQuery.PlainObject | string,\\n         success: JQuery.jqXHR.DoneCallback | null,\\n         dataType?: string): JQuery.jqXHR;\\n    /**\\n     * Load data from the server using a HTTP POST request.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param success A callback function that is executed if the request succeeds. Required if dataType is provided, but\\n     *                can be null in that case.\\n     * @param dataType The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html).\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.post/ }\\\\`\\n     * @since 1.0\\n     */\\n    post(url: string,\\n         success: JQuery.jqXHR.DoneCallback | null,\\n         dataType: string): JQuery.jqXHR;\\n    /**\\n     * Load data from the server using a HTTP POST request.\\n     * @param url A string containing the URL to which the request is sent.\\n     * @param success_data _&#x40;param_ `success_data`\\n     * <br>\\n     * * `success` — A callback function that is executed if the request succeeds. Required if `dataType` is provided,\\n     *               but can be `null` in that case. <br>\\n     * * `data` — A plain object or string that is sent to the server with the request.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.post/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Request the test.php page and send some additional data along (while still ignoring the return results).\\n```javascript\\n$.post( \\\"test.php\\\", { name: \\\"John\\\", time: \\\"2pm\\\" } );\\n```\\n     * @example ​ ````Pass arrays of data to the server (while still ignoring the return results).\\n```javascript\\n$.post( \\\"test.php\\\", { 'choices[]': [ \\\"Jon\\\", \\\"Susan\\\" ] } );\\n```\\n     * @example ​ ````Send form data using Ajax requests\\n```javascript\\n$.post( \\\"test.php\\\", $( \\\"#testform\\\" ).serialize() );\\n```\\n     * @example ​ ````Alert the results from requesting test.php (HTML or XML, depending on what was returned).\\n```javascript\\n$.post( \\\"test.php\\\", function( data ) {\\n  alert( \\\"Data Loaded: \\\" + data );\\n});\\n```\\n     * @example ​ ````Alert the results from requesting test.php with an additional payload of data (HTML or XML, depending on what was returned).\\n```javascript\\n$.post( \\\"test.php\\\", { name: \\\"John\\\", time: \\\"2pm\\\" })\\n  .done(function( data ) {\\n    alert( \\\"Data Loaded: \\\" + data );\\n  });\\n```\\n     * @example ​ ````Post a form using Ajax and put results in a div\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.post demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<form action=\\\"/\\\" id=\\\"searchForm\\\">\\n  <input type=\\\"text\\\" name=\\\"s\\\" placeholder=\\\"Search...\\\">\\n  <input type=\\\"submit\\\" value=\\\"Search\\\">\\n</form>\\n<!-- the result of the search will be rendered inside this div -->\\n<div id=\\\"result\\\"></div>\\n​\\n<script>\\n// Attach a submit handler to the form\\n$( \\\"#searchForm\\\" ).submit(function( event ) {\\n​\\n  // Stop form from submitting normally\\n  event.preventDefault();\\n​\\n  // Get some values from elements on the page:\\n  var $form = $( this ),\\n    term = $form.find( \\\"input[name='s']\\\" ).val(),\\n    url = $form.attr( \\\"action\\\" );\\n​\\n  // Send the data using post\\n  var posting = $.post( url, { s: term } );\\n​\\n  // Put the results in a div\\n  posting.done(function( data ) {\\n    var content = $( data ).find( \\\"#content\\\" );\\n    $( \\\"#result\\\" ).empty().append( content );\\n  });\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    post(url: string,\\n         success_data: JQuery.jqXHR.DoneCallback | JQuery.PlainObject | string): JQuery.jqXHR;\\n    /**\\n     * Load data from the server using a HTTP POST request.\\n     * @param url_settings _&#x40;param_ `url_settings`\\n     * <br>\\n     * * `url` — A string containing the URL to which the request is sent. <br>\\n     * * `settings` — A set of key/value pairs that configure the Ajax request. All properties except for `url` are optional.\\n     *                A default can be set for any option with \\\\`{@link ajaxSetup $.ajaxSetup()}\\\\`. See \\\\`{@link https://api.jquery.com/jquery.ajax/#jQuery-ajax-settings jQuery.ajax( settings )}\\\\`\\n     *                for a complete list of all settings. Type will automatically be set to `POST`.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.post/ }\\\\`\\n     * @since 1.0\\n     * @since 1.12\\n     * @since 2.2\\n     * @example ​ ````Request the test.php page, but ignore the return results.\\n```javascript\\n$.post( \\\"test.php\\\" );\\n```\\n     */\\n    post(url_settings?: string | JQuery.UrlAjaxSettings): JQuery.jqXHR;\\n\\n    // region proxy\\n    // #region proxy\\n\\n    // region (funсtion, null | undefined)\\n    // #region (funсtion, null | undefined)\\n\\n    // region 0 to 7 additional arguments\\n    // #region 0 to 7 additional arguments\\n\\n    // region 0 parameters\\n    // #region 0 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F, G>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F, g: G) => TReturn,\\n                             context: null | undefined,\\n                             a: A, b: B, c: C, d: D, e: E, f: F, g: G): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F) => TReturn,\\n                          context: null | undefined,\\n                          a: A, b: B, c: C, d: D, e: E, f: F): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E>(funсtion: (a: A, b: B, c: C, d: D, e: E) => TReturn,\\n                       context: null | undefined,\\n                       a: A, b: B, c: C, d: D, e: E): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D>(funсtion: (a: A, b: B, c: C, d: D) => TReturn,\\n                    context: null | undefined,\\n                    a: A, b: B, c: C, d: D): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C>(funсtion: (a: A, b: B, c: C) => TReturn,\\n                 context: null | undefined,\\n                 a: A, b: B, c: C): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B>(funсtion: (a: A, b: B) => TReturn,\\n              context: null | undefined,\\n              a: A, b: B): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A>(funсtion: (a: A) => TReturn,\\n           context: null | undefined,\\n           a: A): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn>(funсtion: () => TReturn,\\n                   context: null | undefined): () => TReturn;\\n\\n    // #endregion\\n\\n    // region 1 parameters\\n    // #region 1 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F, G,\\n        T>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                      t: T) => TReturn,\\n           context: null | undefined,\\n           a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F,\\n        T>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F,\\n                      t: T) => TReturn,\\n           context: null | undefined,\\n           a: A, b: B, c: C, d: D, e: E, f: F): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E,\\n        T>(funсtion: (a: A, b: B, c: C, d: D, e: E,\\n                      t: T) => TReturn,\\n           context: null | undefined,\\n           a: A, b: B, c: C, d: D, e: E): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D,\\n        T>(funсtion: (a: A, b: B, c: C, d: D,\\n                      t: T) => TReturn,\\n           context: null | undefined,\\n           a: A, b: B, c: C, d: D): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C,\\n        T>(funсtion: (a: A, b: B, c: C,\\n                      t: T) => TReturn,\\n           context: null | undefined,\\n           a: A, b: B, c: C): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B,\\n        T>(funсtion: (a: A, b: B,\\n                      t: T) => TReturn,\\n           context: null | undefined,\\n           a: A, b: B): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A,\\n        T>(funсtion: (a: A,\\n                      t: T) => TReturn,\\n           context: null | undefined,\\n           a: A): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        T>(funсtion: (t: T) => TReturn,\\n           context: null | undefined): (t: T) => TReturn;\\n\\n    // #endregion\\n\\n    // region 2 parameters\\n    // #region 2 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                         t: T, u: U) => TReturn,\\n              context: null | undefined,\\n              a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F,\\n        T, U>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F,\\n                         t: T, u: U) => TReturn,\\n              context: null | undefined,\\n              a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E,\\n        T, U>(funсtion: (a: A, b: B, c: C, d: D, e: E,\\n                         t: T, u: U) => TReturn,\\n              context: null | undefined,\\n              a: A, b: B, c: C, d: D, e: E): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D,\\n        T, U>(funсtion: (a: A, b: B, c: C, d: D,\\n                         t: T, u: U) => TReturn,\\n              context: null | undefined,\\n              a: A, b: B, c: C, d: D): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C,\\n        T, U>(funсtion: (a: A, b: B, c: C,\\n                         t: T, u: U) => TReturn,\\n              context: null | undefined,\\n              a: A, b: B, c: C): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B,\\n        T, U>(funсtion: (a: A, b: B,\\n                         t: T, u: U) => TReturn,\\n              context: null | undefined,\\n              a: A, b: B): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A,\\n        T, U>(funсtion: (a: A,\\n                         t: T, u: U) => TReturn,\\n              context: null | undefined,\\n              a: A): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        T, U>(funсtion: (t: T, u: U) => TReturn,\\n              context: null | undefined): (t: T, u: U) => TReturn;\\n\\n    // #endregion\\n\\n    // region 3 parameters\\n    // #region 3 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U, V>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: null | undefined,\\n                 a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F,\\n        T, U, V>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: null | undefined,\\n                 a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E,\\n        T, U, V>(funсtion: (a: A, b: B, c: C, d: D, e: E,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: null | undefined,\\n                 a: A, b: B, c: C, d: D, e: E): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D,\\n        T, U, V>(funсtion: (a: A, b: B, c: C, d: D,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: null | undefined,\\n                 a: A, b: B, c: C, d: D): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C,\\n        T, U, V>(funсtion: (a: A, b: B, c: C,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: null | undefined,\\n                 a: A, b: B, c: C): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B,\\n        T, U, V>(funсtion: (a: A, b: B,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: null | undefined,\\n                 a: A, b: B): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A,\\n        T, U, V>(funсtion: (a: A,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: null | undefined,\\n                 a: A): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        T, U, V>(funсtion: (t: T, u: U, v: V) => TReturn,\\n                 context: null | undefined): (t: T, u: U, v: V) => TReturn;\\n\\n    // #endregion\\n\\n    // region 4 parameters\\n    // #region 4 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U, V, W>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: null | undefined,\\n                    a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F,\\n        T, U, V, W>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: null | undefined,\\n                    a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E,\\n        T, U, V, W>(funсtion: (a: A, b: B, c: C, d: D, e: E,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: null | undefined,\\n                    a: A, b: B, c: C, d: D, e: E): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D,\\n        T, U, V, W>(funсtion: (a: A, b: B, c: C, d: D,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: null | undefined,\\n                    a: A, b: B, c: C, d: D): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C,\\n        T, U, V, W>(funсtion: (a: A, b: B, c: C,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: null | undefined,\\n                    a: A, b: B, c: C): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B,\\n        T, U, V, W>(funсtion: (a: A, b: B,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: null | undefined,\\n                    a: A, b: B): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A,\\n        T, U, V, W>(funсtion: (a: A,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: null | undefined,\\n                    a: A): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        T, U, V, W>(funсtion: (t: T, u: U, v: V, w: W) => TReturn,\\n                    context: null | undefined): (t: T, u: U, v: V, w: W) => TReturn;\\n\\n    // #endregion\\n\\n    // region 5 parameters\\n    // #region 5 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U, V, W, X>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: null | undefined,\\n                       a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F,\\n        T, U, V, W, X>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: null | undefined,\\n                       a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E,\\n        T, U, V, W, X>(funсtion: (a: A, b: B, c: C, d: D, e: E,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: null | undefined,\\n                       a: A, b: B, c: C, d: D, e: E): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D,\\n        T, U, V, W, X>(funсtion: (a: A, b: B, c: C, d: D,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: null | undefined,\\n                       a: A, b: B, c: C, d: D): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C,\\n        T, U, V, W, X>(funсtion: (a: A, b: B, c: C,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: null | undefined,\\n                       a: A, b: B, c: C): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B,\\n        T, U, V, W, X>(funсtion: (a: A, b: B,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: null | undefined,\\n                       a: A, b: B): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A,\\n        T, U, V, W, X>(funсtion: (a: A,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: null | undefined,\\n                       a: A): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        T, U, V, W, X>(funсtion: (t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: null | undefined): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n\\n    // #endregion\\n\\n    // region 6 parameters\\n    // #region 6 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U, V, W, X, Y>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: null | undefined,\\n                          a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F,\\n        T, U, V, W, X, Y>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: null | undefined,\\n                          a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E,\\n        T, U, V, W, X, Y>(funсtion: (a: A, b: B, c: C, d: D, e: E,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: null | undefined,\\n                          a: A, b: B, c: C, d: D, e: E): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D,\\n        T, U, V, W, X, Y>(funсtion: (a: A, b: B, c: C, d: D,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: null | undefined,\\n                          a: A, b: B, c: C, d: D): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C,\\n        T, U, V, W, X, Y>(funсtion: (a: A, b: B, c: C,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: null | undefined,\\n                          a: A, b: B, c: C): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B,\\n        T, U, V, W, X, Y>(funсtion: (a: A, b: B,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: null | undefined,\\n                          a: A, b: B): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A,\\n        T, U, V, W, X, Y>(funсtion: (a: A,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: null | undefined,\\n                          a: A): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        T, U, V, W, X, Y>(funсtion: (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: null | undefined): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n\\n    // #endregion\\n\\n    // region 7+ parameters\\n    // #region 7+ parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U, V, W, X, Y, Z>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: null | undefined,\\n                             a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E, F,\\n        T, U, V, W, X, Y, Z>(funсtion: (a: A, b: B, c: C, d: D, e: E, f: F,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: null | undefined,\\n                             a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D, E,\\n        T, U, V, W, X, Y, Z>(funсtion: (a: A, b: B, c: C, d: D, e: E,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: null | undefined,\\n                             a: A, b: B, c: C, d: D, e: E): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C, D,\\n        T, U, V, W, X, Y, Z>(funсtion: (a: A, b: B, c: C, d: D,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: null | undefined,\\n                             a: A, b: B, c: C, d: D): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B, C,\\n        T, U, V, W, X, Y, Z>(funсtion: (a: A, b: B, c: C,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: null | undefined,\\n                             a: A, b: B, c: C): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A, B,\\n        T, U, V, W, X, Y, Z>(funсtion: (a: A, b: B,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: null | undefined,\\n                             a: A, b: B): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        A,\\n        T, U, V, W, X, Y, Z>(funсtion: (a: A,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: null | undefined,\\n                             a: A): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn,\\n        T, U, V, W, X, Y, Z>(funсtion: (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: null | undefined): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n\\n    // #endregion\\n\\n    // #endregion\\n\\n    // region 8+ additional arguments\\n    // #region 8+ additional arguments\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param additionalArguments Any number of arguments to be passed to the function referenced in the function argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.9\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     */\\n    proxy<TReturn>(funсtion: (...args: any[]) => TReturn,\\n                   context: null | undefined,\\n                   ...additionalArguments: any[]): (...args: any[]) => TReturn;\\n\\n    // #endregion\\n\\n    // #endregion\\n\\n    // region (funсtion, context)\\n    // #region (funсtion, context)\\n\\n    // region 0 to 7 additional arguments\\n    // #region 0 to 7 additional arguments\\n\\n    // region 0 parameters\\n    // #region 0 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F, G>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F, g: G) => TReturn,\\n                             context: TContext,\\n                             a: A, b: B, c: C, d: D, e: E, f: F, g: G): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F) => TReturn,\\n                          context: TContext,\\n                          a: A, b: B, c: C, d: D, e: E, f: F): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E) => TReturn,\\n                       context: TContext,\\n                       a: A, b: B, c: C, d: D, e: E): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D>(funсtion: (this: TContext, a: A, b: B, c: C, d: D) => TReturn,\\n                    context: TContext,\\n                    a: A, b: B, c: C, d: D): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C>(funсtion: (this: TContext, a: A, b: B, c: C) => TReturn,\\n                 context: TContext,\\n                 a: A, b: B, c: C): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B>(funсtion: (this: TContext, a: A, b: B) => TReturn,\\n              context: TContext,\\n              a: A, b: B): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4`\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A>(funсtion: (this: TContext, a: A) => TReturn,\\n           context: TContext,\\n           a: A): () => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn>(funсtion: (this: TContext) => TReturn,\\n                 context: TContext): () => TReturn;\\n\\n    // #endregion\\n\\n    // region 1 parameters\\n    // #region 1 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F, G,\\n        T>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                      t: T) => TReturn,\\n           context: TContext,\\n           a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F,\\n        T>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F,\\n                      t: T) => TReturn,\\n           context: TContext,\\n           a: A, b: B, c: C, d: D, e: E, f: F): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E,\\n        T>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E,\\n                      t: T) => TReturn,\\n           context: TContext,\\n           a: A, b: B, c: C, d: D, e: E): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D,\\n        T>(funсtion: (this: TContext, a: A, b: B, c: C, d: D,\\n                      t: T) => TReturn,\\n           context: TContext,\\n           a: A, b: B, c: C, d: D): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C,\\n        T>(funсtion: (this: TContext, a: A, b: B, c: C,\\n                      t: T) => TReturn,\\n           context: TContext,\\n           a: A, b: B, c: C): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B,\\n        T>(funсtion: (this: TContext, a: A, b: B,\\n                      t: T) => TReturn,\\n           context: TContext,\\n           a: A, b: B): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A,\\n        T>(funсtion: (this: TContext, a: A,\\n                      t: T) => TReturn,\\n           context: TContext,\\n           a: A): (t: T) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        T>(funсtion: (this: TContext, t: T) => TReturn,\\n           context: TContext): (t: T) => TReturn;\\n\\n    // #endregion\\n\\n    // region 2 parameters\\n    // #region 2 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                         t: T, u: U) => TReturn,\\n              context: TContext,\\n              a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F,\\n        T, U>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F,\\n                         t: T, u: U) => TReturn,\\n              context: TContext,\\n              a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E,\\n        T, U>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E,\\n                         t: T, u: U) => TReturn,\\n              context: TContext,\\n              a: A, b: B, c: C, d: D, e: E): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D,\\n        T, U>(funсtion: (this: TContext, a: A, b: B, c: C, d: D,\\n                         t: T, u: U) => TReturn,\\n              context: TContext,\\n              a: A, b: B, c: C, d: D): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C,\\n        T, U>(funсtion: (this: TContext, a: A, b: B, c: C,\\n                         t: T, u: U) => TReturn,\\n              context: TContext,\\n              a: A, b: B, c: C): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B,\\n        T, U>(funсtion: (this: TContext, a: A, b: B,\\n                         t: T, u: U) => TReturn,\\n              context: TContext,\\n              a: A, b: B): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A,\\n        T, U>(funсtion: (this: TContext, a: A,\\n                         t: T, u: U) => TReturn,\\n              context: TContext,\\n              a: A): (t: T, u: U) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        T, U>(funсtion: (this: TContext, t: T, u: U) => TReturn,\\n              context: TContext): (t: T, u: U) => TReturn;\\n\\n    // #endregion\\n\\n    // region 3 parameters\\n    // #region 3 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U, V>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: TContext,\\n                 a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F,\\n        T, U, V>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: TContext,\\n                 a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E,\\n        T, U, V>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: TContext,\\n                 a: A, b: B, c: C, d: D, e: E): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D,\\n        T, U, V>(funсtion: (this: TContext, a: A, b: B, c: C, d: D,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: TContext,\\n                 a: A, b: B, c: C, d: D): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C,\\n        T, U, V>(funсtion: (this: TContext, a: A, b: B, c: C,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: TContext,\\n                 a: A, b: B, c: C): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B,\\n        T, U, V>(funсtion: (this: TContext, a: A, b: B,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: TContext,\\n                 a: A, b: B): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A,\\n        T, U, V>(funсtion: (this: TContext, a: A,\\n                            t: T, u: U, v: V) => TReturn,\\n                 context: TContext,\\n                 a: A): (t: T, u: U, v: V) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        T, U, V>(funсtion: (this: TContext, t: T, u: U, v: V) => TReturn,\\n                 context: TContext): (t: T, u: U, v: V) => TReturn;\\n\\n    // #endregion\\n\\n    // region 4 parameters\\n    // #region 4 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U, V, W>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: TContext,\\n                    a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F,\\n        T, U, V, W>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: TContext,\\n                    a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E,\\n        T, U, V, W>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: TContext,\\n                    a: A, b: B, c: C, d: D, e: E): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D,\\n        T, U, V, W>(funсtion: (this: TContext, a: A, b: B, c: C, d: D,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: TContext,\\n                    a: A, b: B, c: C, d: D): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C,\\n        T, U, V, W>(funсtion: (this: TContext, a: A, b: B, c: C,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: TContext,\\n                    a: A, b: B, c: C): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B,\\n        T, U, V, W>(funсtion: (this: TContext, a: A, b: B,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: TContext,\\n                    a: A, b: B): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A,\\n        T, U, V, W>(funсtion: (this: TContext, a: A,\\n                               t: T, u: U, v: V, w: W) => TReturn,\\n                    context: TContext,\\n                    a: A): (t: T, u: U, v: V, w: W) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        T, U, V, W>(funсtion: (this: TContext, t: T, u: U, v: V, w: W) => TReturn,\\n                    context: TContext): (t: T, u: U, v: V, w: W) => TReturn;\\n\\n    // #endregion\\n\\n    // region 5 parameters\\n    // #region 5 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U, V, W, X>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: TContext,\\n                       a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F,\\n        T, U, V, W, X>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: TContext,\\n                       a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E,\\n        T, U, V, W, X>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: TContext,\\n                       a: A, b: B, c: C, d: D, e: E): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D,\\n        T, U, V, W, X>(funсtion: (this: TContext, a: A, b: B, c: C, d: D,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: TContext,\\n                       a: A, b: B, c: C, d: D): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C,\\n        T, U, V, W, X>(funсtion: (this: TContext, a: A, b: B, c: C,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: TContext,\\n                       a: A, b: B, c: C): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B,\\n        T, U, V, W, X>(funсtion: (this: TContext, a: A, b: B,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: TContext,\\n                       a: A, b: B): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A,\\n        T, U, V, W, X>(funсtion: (this: TContext, a: A,\\n                                  t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: TContext,\\n                       a: A): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        T, U, V, W, X>(funсtion: (this: TContext, t: T, u: U, v: V, w: W, x: X) => TReturn,\\n                       context: TContext): (t: T, u: U, v: V, w: W, x: X) => TReturn;\\n\\n    // #endregion\\n\\n    // region 6 parameters\\n    // #region 6 parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U, V, W, X, Y>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: TContext,\\n                          a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F,\\n        T, U, V, W, X, Y>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: TContext,\\n                          a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E,\\n        T, U, V, W, X, Y>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: TContext,\\n                          a: A, b: B, c: C, d: D, e: E): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D,\\n        T, U, V, W, X, Y>(funсtion: (this: TContext, a: A, b: B, c: C, d: D,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: TContext,\\n                          a: A, b: B, c: C, d: D): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C,\\n        T, U, V, W, X, Y>(funсtion: (this: TContext, a: A, b: B, c: C,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: TContext,\\n                          a: A, b: B, c: C): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B,\\n        T, U, V, W, X, Y>(funсtion: (this: TContext, a: A, b: B,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: TContext,\\n                          a: A, b: B): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A,\\n        T, U, V, W, X, Y>(funсtion: (this: TContext, a: A,\\n                                     t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: TContext,\\n                          a: A): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        T, U, V, W, X, Y>(funсtion: (this: TContext, t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn,\\n                          context: TContext): (t: T, u: U, v: V, w: W, x: X, y: Y) => TReturn;\\n\\n    // #endregion\\n\\n    // region 7+ parameters\\n    // #region 7+ parameters\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @param g An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F, G,\\n        T, U, V, W, X, Y, Z>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F, g: G,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: TContext,\\n                             a: A, b: B, c: C, d: D, e: E, f: F, g: G): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @param f An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E, F,\\n        T, U, V, W, X, Y, Z>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E, f: F,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: TContext,\\n                             a: A, b: B, c: C, d: D, e: E, f: F): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @param e An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D, E,\\n        T, U, V, W, X, Y, Z>(funсtion: (this: TContext, a: A, b: B, c: C, d: D, e: E,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: TContext,\\n                             a: A, b: B, c: C, d: D, e: E): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @param d An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C, D,\\n        T, U, V, W, X, Y, Z>(funсtion: (this: TContext, a: A, b: B, c: C, d: D,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: TContext,\\n                             a: A, b: B, c: C, d: D): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @param c An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B, C,\\n        T, U, V, W, X, Y, Z>(funсtion: (this: TContext, a: A, b: B, c: C,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: TContext,\\n                             a: A, b: B, c: C): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @param b An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A, B,\\n        T, U, V, W, X, Y, Z>(funсtion: (this: TContext, a: A, b: B,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: TContext,\\n                             a: A, b: B): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param a An argument to be passed to the function referenced in the `function` argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        A,\\n        T, U, V, W, X, Y, Z>(funсtion: (this: TContext, a: A,\\n                                        t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: TContext,\\n                             a: A): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn,\\n        T, U, V, W, X, Y, Z>(funсtion: (this: TContext, t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn,\\n                             context: TContext): (t: T, u: U, v: V, w: W, x: X, y: Y, z: Z, ...args: any[]) => TReturn;\\n\\n    // #endregion\\n\\n    // #endregion\\n\\n    // region 8+ additional arguments\\n    // #region 8+ additional arguments\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param funсtion The function whose context will be changed.\\n     * @param context The object to which the context (`this`) of the function should be set.\\n     * @param additionalArguments Any number of arguments to be passed to the function referenced in the function argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  type: \\\"zombie\\\",\\n  test: function( event ) {\\n    // Without proxy, `this` would refer to the event target\\n    // use event.target to reference that element.\\n    var element = event.target;\\n    $( element ).css( \\\"background-color\\\", \\\"red\\\" );\\n​\\n    // With proxy, `this` refers to the me object encapsulating\\n    // this function.\\n    $( \\\"#log\\\" ).append( \\\"Hello \\\" + this.type + \\\"<br>\\\" );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", this.test );\\n  }\\n};\\n​\\nvar you = {\\n  type: \\\"person\\\",\\n  test: function( event ) {\\n    $( \\\"#log\\\" ).append( this.type + \\\" \\\" );\\n  }\\n};\\n​\\n// Execute you.test() in the context of the `you` object\\n// no matter where it is called\\n// i.e. the `this` keyword will refer to `you`\\nvar youClick = $.proxy( you.test, you );\\n​\\n// attach click handlers to #test\\n$( \\\"#test\\\" )\\n  // this === \\\"zombie\\\"; handler unbound after first click\\n  .on( \\\"click\\\", $.proxy( me.test, me ) )\\n​\\n  // this === \\\"person\\\"\\n  .on( \\\"click\\\", youClick )\\n​\\n  // this === \\\"zombie\\\"\\n  .on( \\\"click\\\", $.proxy( you.test, me ) )\\n​\\n  // this === \\\"<button> element\\\"\\n  .on( \\\"click\\\", you.test );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Change the context of a function bound to the click handler,\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><button type=\\\"button\\\" id=\\\"test\\\">Test</button></p>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar me = {\\n  // I'm a dog\\n  type: \\\"dog\\\",\\n​\\n  // Note that event comes *after* one and two\\n  test: function( one, two, event ) {\\n    $( \\\"#log\\\" )\\n​\\n      // `one` maps to `you`, the 1st additional\\n      // argument in the $.proxy function call\\n      .append( \\\"<h3>Hello \\\" + one.type + \\\":</h3>\\\" )\\n​\\n      // The `this` keyword refers to `me`\\n      // (the 2nd, context, argument of $.proxy)\\n      .append( \\\"I am a \\\" + this.type + \\\", \\\" )\\n​\\n      // `two` maps to `they`, the 2nd additional\\n      // argument in the $.proxy function call\\n      .append( \\\"and they are \\\" + two.type + \\\".<br>\\\" )\\n​\\n      // The event type is \\\"click\\\"\\n      .append( \\\"Thanks for \\\" + event.type + \\\"ing.\\\" )\\n​\\n      // The clicked element is `event.target`,\\n      // and its type is \\\"button\\\"\\n      .append( \\\"the \\\" + event.target.type + \\\".\\\" );\\n  }\\n};\\n​\\nvar you = { type: \\\"cat\\\" };\\nvar they = { type: \\\"fish\\\" };\\n​\\n// Set up handler to execute me.test() in the context\\n// of `me`, with `you` and `they` as additional arguments\\nvar proxy = $.proxy( me.test, me, you, they );\\n​\\n$( \\\"#test\\\" )\\n  .on( \\\"click\\\", proxy );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext,\\n        TReturn>(funсtion: (this: TContext, ...args: any[]) => TReturn,\\n                 context: TContext,\\n                 ...additionalArguments: any[]): (...args: any[]) => TReturn;\\n\\n    // #endregion\\n\\n    // #endregion\\n\\n    // region (context, name)\\n    // #region (context, name)\\n\\n    /**\\n     * Takes a function and returns a new one that will always have a particular context.\\n     * @param context The object to which the context of the function should be set.\\n     * @param name The name of the function whose context will be changed (should be a property of the context object).\\n     * @param additionalArguments Any number of arguments to be passed to the function named in the name argument.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.proxy/ }\\\\`\\n     * @since 1.4\\n     * @since 1.6\\n     * @deprecated ​ Deprecated since 3.3. Use \\\\`{@link Function#bind }\\\\`.\\n     * @example ​ ````Enforce the context of the function using the &quot;context, function name&quot; signature. Unbind the handler after first click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.proxy demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n  <p><button id=\\\"test\\\">Test</button></p>\\n  <p id=\\\"log\\\"></p>\\n​\\n<script>\\nvar obj = {\\n  name: \\\"John\\\",\\n  test: function() {\\n    $( \\\"#log\\\" ).append( this.name );\\n    $( \\\"#test\\\" ).off( \\\"click\\\", obj.test );\\n  }\\n};\\n$( \\\"#test\\\" ).on( \\\"click\\\", jQuery.proxy( obj, \\\"test\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    proxy<TContext>(context: TContext,\\n                    name: keyof TContext,\\n                    ...additionalArguments: any[]): (...args: any[]) => any;\\n\\n    // #endregion\\n\\n    // #endregion\\n\\n    /**\\n     * Manipulate the queue of functions to be executed on the matched element.\\n     * @param element A DOM element where the array of queued functions is attached.\\n     * @param queueName A string containing the name of the queue. Defaults to fx, the standard effects queue.\\n     * @param newQueue The new function to add to the queue.\\n     *                 An array of functions to replace the current queue contents.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.queue/ }\\\\`\\n     * @since 1.3\\n     * @example ​ ````Show the length of the queue.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.queue demo</title>\\n  <style>\\n  div {\\n    margin: 3px;\\n    width: 40px;\\n    height: 40px;\\n    position: absolute;\\n    left: 0px;\\n    top: 30px;\\n    background: green;\\n    display: none;\\n  }\\n  div.newcolor {\\n    background: blue;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"show\\\">Show Length of Queue</button>\\n<span></span>\\n<div></div>\\n  ​\\n<script>\\n$( \\\"#show\\\" ).click(function() {\\n  var n = jQuery.queue( $( \\\"div\\\" )[ 0 ], \\\"fx\\\" );\\n  $( \\\"span\\\" ).text( \\\"Queue length is: \\\" + n.length );\\n});\\n​\\nfunction runIt() {\\n  $( \\\"div\\\" )\\n    .show( \\\"slow\\\" )\\n    .animate({\\n      left: \\\"+=200\\\"\\n    }, 2000 )\\n    .slideToggle( 1000 )\\n    .slideToggle( \\\"fast\\\" )\\n    .animate({\\n      left: \\\"-=200\\\"\\n    }, 1500 )\\n    .hide( \\\"slow\\\" )\\n    .show( 1200 )\\n    .slideUp( \\\"normal\\\", runIt );\\n}\\n​\\nrunIt();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Queue a custom function.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.queue demo</title>\\n  <style>\\n  div {\\n    margin: 3px;\\n    width: 40px;\\n    height: 40px;\\n    position: absolute;\\n    left: 0px;\\n    top: 30px;\\n    background: green;\\n    display: none;\\n  }\\n  div.newcolor {\\n    background: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nClick here...\\n<div></div>\\n​\\n<script>\\n$( document.body ).click(function() {\\n  var divs = $( \\\"div\\\" )\\n    .show( \\\"slow\\\" )\\n    .animate({ left: \\\"+=200\\\" }, 2000 );\\n  jQuery.queue( divs[ 0 ], \\\"fx\\\", function() {\\n    $( this ).addClass( \\\"newcolor\\\" );\\n    jQuery.dequeue( this );\\n  });\\n  divs.animate({ left: \\\"-=200\\\" }, 500 );\\n  jQuery.queue( divs[ 0 ], \\\"fx\\\", function() {\\n    $( this ).removeClass( \\\"newcolor\\\" );\\n    jQuery.dequeue( this );\\n  });\\n  divs.slideUp();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Set a queue array to delete the queue.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.queue demo</title>\\n  <style>\\n  div {\\n    margin: 3px;\\n    width: 40px;\\n    height: 40px;\\n    position: absolute;\\n    left: 0px;\\n    top: 30px;\\n    background: green;\\n    display: none;\\n  }\\n  div.newcolor {\\n    background: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button id=\\\"start\\\">Start</button>\\n<button id=\\\"stop\\\">Stop</button>\\n<div></div>\\n​\\n<script>\\n$( \\\"#start\\\" ).click(function() {\\n  var divs = $( \\\"div\\\" )\\n    .show( \\\"slow\\\" )\\n    .animate({ left: \\\"+=200\\\" }, 5000 );\\n  jQuery.queue( divs[ 0 ], \\\"fx\\\", function() {\\n    $( this ).addClass( \\\"newcolor\\\" );\\n    jQuery.dequeue( this );\\n  });\\n  divs.animate({ left: \\\"-=200\\\" }, 1500 );\\n  jQuery.queue( divs[ 0 ], \\\"fx\\\", function() {\\n    $( this ).removeClass( \\\"newcolor\\\" );\\n    jQuery.dequeue( this );\\n  });\\n  divs.slideUp();\\n});\\n$( \\\"#stop\\\" ).click(function() {\\n  jQuery.queue( $( \\\"div\\\" )[ 0 ], \\\"fx\\\", [] );\\n  $( \\\"div\\\" ).stop();\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    queue<T extends Element>(element: T, queueName?: string, newQueue?: JQuery.TypeOrArray<JQuery.QueueFunction<T>>): JQuery.Queue<T>;\\n    /**\\n     * Handles errors thrown synchronously in functions wrapped in jQuery().\\n     * @param error An error thrown in the function wrapped in jQuery().\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.readyException/ }\\\\`\\n     * @since 3.1\\n     * @example ​ ````Pass the received error to console.error.\\n```javascript\\njQuery.readyException = function( error ) {\\n  console.error( error );\\n};\\n```\\n     */\\n    readyException(error: Error): any;\\n    /**\\n     * Remove a previously-stored piece of data.\\n     * @param element A DOM element from which to remove data.\\n     * @param name A string naming the piece of data to remove.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.removeData/ }\\\\`\\n     * @since 1.2.3\\n     * @example ​ ````Set a data store for 2 names then remove one of them.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.removeData demo</title>\\n  <style>\\n  div {\\n    margin: 2px;\\n    color: blue;\\n  }\\n  span {\\n    color: red;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>value1 before creation: <span></span></div>\\n<div>value1 after creation: <span></span></div>\\n<div>value1 after removal: <span></span></div>\\n<div>value2 after removal: <span></span></div>\\n​\\n<script>\\nvar div = $( \\\"div\\\" )[ 0 ];\\n$( \\\"span:eq(0)\\\" ).text( \\\"\\\" + $( \\\"div\\\" ).data( \\\"test1\\\" ) );\\njQuery.data( div, \\\"test1\\\", \\\"VALUE-1\\\" );\\njQuery.data( div, \\\"test2\\\", \\\"VALUE-2\\\" );\\n$( \\\"span:eq(1)\\\" ).text( \\\"\\\" + jQuery.data( div, \\\"test1\\\" ) );\\njQuery.removeData( div, \\\"test1\\\" );\\n$( \\\"span:eq(2)\\\" ).text( \\\"\\\" + jQuery.data( div, \\\"test1\\\" ) );\\n$( \\\"span:eq(3)\\\" ).text( \\\"\\\" + jQuery.data( div, \\\"test2\\\" ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    removeData(element: Element | Document | Window | JQuery.PlainObject, name?: string): void;\\n    /**\\n     * Creates an object containing a set of properties ready to be used in the definition of custom animations.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing A string indicating which easing function to use for the transition.\\n     * @param complete A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.speed/ }\\\\`\\n     * @since 1.1\\n     */\\n    speed<TElement extends Element = HTMLElement>(duration: JQuery.Duration, easing: string, complete: (this: TElement) => void): JQuery.EffectsOptions<TElement>;\\n    /**\\n     * Creates an object containing a set of properties ready to be used in the definition of custom animations.\\n     * @param duration A string or number determining how long the animation will run.\\n     * @param easing_complete _&#x40;param_ `easing_complete`\\n     * <br>\\n     * * `easing` — A string indicating which easing function to use for the transition. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.speed/ }\\\\`\\n     * @since 1.0\\n     * @since 1.1\\n     */\\n    speed<TElement extends Element = HTMLElement>(duration: JQuery.Duration,\\n                                                  easing_complete: string | ((this: TElement) => void)): JQuery.EffectsOptions<TElement>;\\n    /**\\n     * Creates an object containing a set of properties ready to be used in the definition of custom animations.\\n     * @param duration_complete_settings _&#x40;param_ `duration_complete_settings`\\n     * <br>\\n     * * `duration` — A string or number determining how long the animation will run. <br>\\n     * * `complete` — A function to call once the animation is complete, called once per matched element. <br>\\n     * * `settings` —\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.speed/ }\\\\`\\n     * @since 1.0\\n     * @since 1.1\\n     */\\n    speed<TElement extends Element = HTMLElement>(duration_complete_settings?: JQuery.Duration | ((this: TElement) => void) | JQuery.SpeedSettings<TElement>): JQuery.EffectsOptions<TElement>;\\n    /**\\n     * Remove the whitespace from the beginning and end of a string.\\n     * @param str The string to trim.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.trim/ }\\\\`\\n     * @since 1.0\\n     * @example ​ ````Remove the white spaces at the start and at the end of the string.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.trim demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<pre id=\\\"original\\\"></pre>\\n<pre id=\\\"trimmed\\\"></pre>\\n​\\n<script>\\nvar str = \\\"         lots of spaces before and after         \\\";\\n$( \\\"#original\\\" ).html( \\\"Original String: '\\\" + str + \\\"'\\\" );\\n$( \\\"#trimmed\\\" ).html( \\\"$.trim()'ed: '\\\" + $.trim(str) + \\\"'\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     * @example ​ ````Remove the white spaces at the start and at the end of the string.\\n```javascript\\n$.trim(\\\"    hello, how are you?    \\\");\\n```\\n     * @example ​ ````Remove the white spaces at the start and at the end of the string.\\n```javascript\\n$.trim(\\\"    hello, how are you?    \\\");\\n```\\n     */\\n    trim(str: string): string;\\n    /**\\n     * Determine the internal JavaScript [[Class]] of an object.\\n     * @param obj Object to get the internal JavaScript [[Class]] of.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.type/ }\\\\`\\n     * @since 1.4.3\\n     * @deprecated ​ Deprecated since 3.3. See \\\\`{@link https://github.com/jquery/jquery/issues/3605 }\\\\`.\\n     * @example ​ ````Find out if the parameter is a RegExp.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.type demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\nIs it a RegExp? <b></b>\\n​\\n<script>\\n$( \\\"b\\\" ).append( \\\"\\\" + jQuery.type( /test/ ) );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    type(obj: any): 'array' | 'boolean' | 'date' | 'error' | 'function' | 'null' | 'number' | 'object' | 'regexp' | 'string' | 'symbol' | 'undefined';\\n    /**\\n     * Sorts an array of DOM elements, in place, with the duplicates removed. Note that this only works on arrays of DOM elements, not strings or numbers.\\n     * @param array The Array of DOM elements.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.unique/ }\\\\`\\n     * @since 1.1.3\\n     * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link uniqueSort }\\\\`.\\n     *\\n     * **Cause**: The fact that `jQuery.unique` sorted its results in DOM order was surprising to many who did not read the documentation carefully. As of jQuery 3.0 this function is being renamed to make it clear.\\n     *\\n     * **Solution**: Replace all uses of `jQuery.unique` with `jQuery.uniqueSort` which is the same function with a better name.\\n     * @example ​ ````Removes any duplicate elements from the array of divs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.unique demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>There are 6 divs in this document.</div>\\n<div></div>\\n<div class=\\\"dup\\\"></div>\\n<div class=\\\"dup\\\"></div>\\n<div class=\\\"dup\\\"></div>\\n<div></div>\\n​\\n<script>\\n// unique() must take a native array\\nvar divs = $( \\\"div\\\" ).get();\\n​\\n// Add 3 elements of class dup too (they are divs)\\ndivs = divs.concat( $( \\\".dup\\\" ).get() );\\n$( \\\"div:eq(1)\\\" ).text( \\\"Pre-unique there are \\\" + divs.length + \\\" elements.\\\" );\\n​\\ndivs = jQuery.unique( divs );\\n$( \\\"div:eq(2)\\\" ).text( \\\"Post-unique there are \\\" + divs.length + \\\" elements.\\\" )\\n  .css( \\\"color\\\", \\\"red\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    unique<T extends Element>(array: T[]): T[];\\n    /**\\n     * Sorts an array of DOM elements, in place, with the duplicates removed. Note that this only works on arrays of DOM elements, not strings or numbers.\\n     * @param array The Array of DOM elements.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.uniqueSort/ }\\\\`\\n     * @since 1.12\\n     * @since 2.2\\n     * @example ​ ````Removes any duplicate elements from the array of divs.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.uniqueSort demo</title>\\n  <style>\\n  div {\\n    color: blue;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>There are 6 divs in this document.</div>\\n<div></div>\\n<div class=\\\"dup\\\"></div>\\n<div class=\\\"dup\\\"></div>\\n<div class=\\\"dup\\\"></div>\\n<div></div>\\n​\\n<script>\\n// unique() must take a native array\\nvar divs = $( \\\"div\\\" ).get();\\n​\\n// Add 3 elements of class dup too (they are divs)\\ndivs = divs.concat( $( \\\".dup\\\" ).get() );\\n$( \\\"div:eq(1)\\\" ).text( \\\"Pre-unique there are \\\" + divs.length + \\\" elements.\\\" );\\n​\\ndivs = jQuery.uniqueSort( divs );\\n$( \\\"div:eq(2)\\\" ).text( \\\"Post-unique there are \\\" + divs.length + \\\" elements.\\\" )\\n  .css( \\\"color\\\", \\\"red\\\" );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n     */\\n    uniqueSort<T extends Element>(array: T[]): T[];\\n    /**\\n     * Provides a way to execute callback functions based on zero or more Thenable objects, usually Deferred objects that represent asynchronous events.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.when/ }\\\\`\\n     * @since 1.5\\n     * @example ​ ````Execute a function after two Ajax requests are successful. (See the jQuery.ajax() documentation for a complete description of success and error cases for an ajax request).\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) ).done(function( a1, a2 ) {\\n  // a1 and a2 are arguments resolved for the page1 and page2 ajax requests, respectively.\\n  // Each argument is an array with the following structure: [ data, statusText, jqXHR ]\\n  var data = a1[ 0 ] + a2[ 0 ]; // a1[ 0 ] = \\\"Whip\\\", a2[ 0 ] = \\\" It\\\"\\n  if ( /Whip It/.test( data ) ) {\\n    alert( \\\"We got what we came for!\\\" );\\n  }\\n});\\n```\\n     * @example ​ ````Execute the function myFunc when both ajax requests are successful, or myFailure if either one has an error.\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) )\\n  .then( myFunc, myFailure );\\n```\\n     */\\n    when<TR1, UR1, VR1,\\n        TJ1 = any, UJ1 = any, VJ1 = any>(\\n            deferredT: JQuery.Promise<TR1, TJ1> | JQuery.Thenable<TR1> | TR1,\\n            deferredU: JQuery.Promise<UR1, UJ1> | JQuery.Thenable<UR1> | UR1,\\n            deferredV: JQuery.Promise<VR1, VJ1> | JQuery.Thenable<VR1> | VR1,\\n    ): JQuery.Promise3<\\n        TR1, TJ1, never,\\n        UR1, UJ1, never,\\n        VR1, VJ1, never>;\\n    /**\\n     * Provides a way to execute callback functions based on zero or more Thenable objects, usually Deferred objects that represent asynchronous events.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.when/ }\\\\`\\n     * @since 1.5\\n     * @example ​ ````Execute a function after two Ajax requests are successful. (See the jQuery.ajax() documentation for a complete description of success and error cases for an ajax request).\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) ).done(function( a1, a2 ) {\\n  // a1 and a2 are arguments resolved for the page1 and page2 ajax requests, respectively.\\n  // Each argument is an array with the following structure: [ data, statusText, jqXHR ]\\n  var data = a1[ 0 ] + a2[ 0 ]; // a1[ 0 ] = \\\"Whip\\\", a2[ 0 ] = \\\" It\\\"\\n  if ( /Whip It/.test( data ) ) {\\n    alert( \\\"We got what we came for!\\\" );\\n  }\\n});\\n```\\n     * @example ​ ````Execute the function myFunc when both ajax requests are successful, or myFailure if either one has an error.\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) )\\n  .then( myFunc, myFailure );\\n```\\n     */\\n    when<TR1, UR1,\\n        TJ1 = any, UJ1 = any>(\\n            deferredT: JQuery.Promise<TR1, TJ1> | JQuery.Thenable<TR1> | TR1,\\n            deferredU: JQuery.Promise<UR1, UJ1> | JQuery.Thenable<UR1> | UR1,\\n    ): JQuery.Promise2<\\n        TR1, TJ1, never,\\n        UR1, UJ1, never>;\\n    /**\\n     * Provides a way to execute callback functions based on zero or more Thenable objects, usually Deferred objects that represent asynchronous events.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.when/ }\\\\`\\n     * @since 1.5\\n     * @example ​ ````Execute a function after two Ajax requests are successful. (See the jQuery.ajax() documentation for a complete description of success and error cases for an ajax request).\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) ).done(function( a1, a2 ) {\\n  // a1 and a2 are arguments resolved for the page1 and page2 ajax requests, respectively.\\n  // Each argument is an array with the following structure: [ data, statusText, jqXHR ]\\n  var data = a1[ 0 ] + a2[ 0 ]; // a1[ 0 ] = \\\"Whip\\\", a2[ 0 ] = \\\" It\\\"\\n  if ( /Whip It/.test( data ) ) {\\n    alert( \\\"We got what we came for!\\\" );\\n  }\\n});\\n```\\n     * @example ​ ````Execute the function myFunc when both ajax requests are successful, or myFailure if either one has an error.\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) )\\n  .then( myFunc, myFailure );\\n```\\n     */\\n    when<TR1, TJ1,\\n        TR2, TJ2,\\n        TR3 = never, TJ3 = never>(\\n            deferredT: JQuery.Promise3<TR1, TJ1, any, TR2, TJ2, any, TR3, TJ3, any> |\\n                       JQuery.Promise2<TR1, TJ1, any, TR2, TJ2, any>\\n    ): JQuery.Promise3<\\n        TR1, TJ1, never,\\n        TR2, TJ2, never,\\n        TR3, TJ3, never>;\\n    /**\\n     * Provides a way to execute callback functions based on zero or more Thenable objects, usually Deferred objects that represent asynchronous events.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.when/ }\\\\`\\n     * @since 1.5\\n     * @example ​ ````Execute a function after two Ajax requests are successful. (See the jQuery.ajax() documentation for a complete description of success and error cases for an ajax request).\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) ).done(function( a1, a2 ) {\\n  // a1 and a2 are arguments resolved for the page1 and page2 ajax requests, respectively.\\n  // Each argument is an array with the following structure: [ data, statusText, jqXHR ]\\n  var data = a1[ 0 ] + a2[ 0 ]; // a1[ 0 ] = \\\"Whip\\\", a2[ 0 ] = \\\" It\\\"\\n  if ( /Whip It/.test( data ) ) {\\n    alert( \\\"We got what we came for!\\\" );\\n  }\\n});\\n```\\n     * @example ​ ````Execute the function myFunc when both ajax requests are successful, or myFailure if either one has an error.\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) )\\n  .then( myFunc, myFailure );\\n```\\n     */\\n    when<TR1, TJ1 = any>(deferred: JQuery.Promise<TR1, TJ1> | JQuery.Thenable<TR1> | TR1): JQuery.Promise<TR1, TJ1, never>;\\n    /**\\n     * Provides a way to execute callback functions based on zero or more Thenable objects, usually Deferred objects that represent asynchronous events.\\n     * @param deferreds Zero or more Thenable objects.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.when/ }\\\\`\\n     * @since 1.5\\n     * @example ​ ````Execute a function after two Ajax requests are successful. (See the jQuery.ajax() documentation for a complete description of success and error cases for an ajax request).\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) ).done(function( a1, a2 ) {\\n  // a1 and a2 are arguments resolved for the page1 and page2 ajax requests, respectively.\\n  // Each argument is an array with the following structure: [ data, statusText, jqXHR ]\\n  var data = a1[ 0 ] + a2[ 0 ]; // a1[ 0 ] = \\\"Whip\\\", a2[ 0 ] = \\\" It\\\"\\n  if ( /Whip It/.test( data ) ) {\\n    alert( \\\"We got what we came for!\\\" );\\n  }\\n});\\n```\\n     * @example ​ ````Execute the function myFunc when both ajax requests are successful, or myFailure if either one has an error.\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) )\\n  .then( myFunc, myFailure );\\n```\\n     */\\n    when<TR1 = never, TJ1 = never>(...deferreds: Array<JQuery.Promise<TR1, TJ1> | JQuery.Thenable<TR1> | TR1>): JQuery.Promise<TR1, TJ1, never>;\\n    /**\\n     * Provides a way to execute callback functions based on zero or more Thenable objects, usually Deferred objects that represent asynchronous events.\\n     * @param deferreds Zero or more Thenable objects.\\n     * @see \\\\`{@link https://api.jquery.com/jQuery.when/ }\\\\`\\n     * @since 1.5\\n     * @example ​ ````Execute a function after two Ajax requests are successful. (See the jQuery.ajax() documentation for a complete description of success and error cases for an ajax request).\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) ).done(function( a1, a2 ) {\\n  // a1 and a2 are arguments resolved for the page1 and page2 ajax requests, respectively.\\n  // Each argument is an array with the following structure: [ data, statusText, jqXHR ]\\n  var data = a1[ 0 ] + a2[ 0 ]; // a1[ 0 ] = \\\"Whip\\\", a2[ 0 ] = \\\" It\\\"\\n  if ( /Whip It/.test( data ) ) {\\n    alert( \\\"We got what we came for!\\\" );\\n  }\\n});\\n```\\n     * @example ​ ````Execute the function myFunc when both ajax requests are successful, or myFailure if either one has an error.\\n```javascript\\n$.when( $.ajax( \\\"/page1.php\\\" ), $.ajax( \\\"/page2.php\\\" ) )\\n  .then( myFunc, myFailure );\\n```\\n     */\\n    when(...deferreds: any[]): JQuery.Promise<any, any, never>;\\n}\\n\";","module.exports = \"// tslint:disable:no-irregular-whitespace\\n\\n// tslint:disable-next-line:no-empty-interface\\ninterface JQueryCallback extends JQuery.Callbacks { }\\ninterface JQueryDeferred<T> extends JQuery.Deferred<T> { }\\n// tslint:disable-next-line:no-empty-interface\\ninterface JQueryEventConstructor extends JQuery.EventStatic { }\\ninterface JQueryDeferred<T> extends JQuery.Deferred<T> { }\\n// tslint:disable-next-line:no-empty-interface\\ninterface JQueryAjaxSettings extends JQuery.AjaxSettings { }\\ninterface JQueryAnimationOptions extends JQuery.EffectsOptions<Element> { }\\n// tslint:disable-next-line:no-empty-interface\\ninterface JQueryCoordinates extends JQuery.Coordinates { }\\ninterface JQueryGenericPromise<T> extends JQuery.Thenable<T> { }\\n// tslint:disable-next-line:no-empty-interface\\ninterface JQueryXHR extends JQuery.jqXHR { }\\ninterface JQueryPromise<T> extends JQuery.Promise<T> { }\\n// tslint:disable-next-line:no-empty-interface\\ninterface JQuerySerializeArrayElement extends JQuery.NameValuePair { }\\n\\n/**\\n * @deprecated ​ Deprecated since 1.9. See \\\\`{@link https://api.jquery.com/jQuery.support/ }\\\\`.\\n */\\n// tslint:disable-next-line:no-empty-interface\\ninterface JQuerySupport extends JQuery.PlainObject { }\\n\\n// Legacy types that are not represented in the current type definitions are marked deprecated.\\n\\n/**\\n * @deprecated ​ Deprecated. Use \\\\`{@link JQuery.Deferred.Callback }\\\\` or \\\\`{@link JQuery.Deferred.CallbackBase }\\\\`.\\n */\\ninterface JQueryPromiseCallback<T> {\\n    // tslint:disable-next-line:callable-types\\n    (value?: T, ...args: any[]): void;\\n}\\n/**\\n * @deprecated ​ Deprecated. Use \\\\`{@link JQueryStatic.param JQueryStatic&#91;'param'&#93;}\\\\`.\\n */\\ninterface JQueryParam {\\n    /**\\n     * Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.\\n     * @param obj An array or object to serialize.\\n     * @param traditional A Boolean indicating whether to perform a traditional \\\"shallow\\\" serialization.\\n     */\\n    // tslint:disable-next-line:callable-types\\n    (obj: any, traditional?: boolean): string;\\n}\\n/**\\n * @deprecated ​ Deprecated. Use \\\\`{@link JQuery.Event }\\\\`.\\n */\\ninterface BaseJQueryEventObject extends Event {\\n    /**\\n     * The current DOM element within the event bubbling phase.\\n     * @see \\\\`{@link https://api.jquery.com/event.currentTarget/ }\\\\`\\n     */\\n    currentTarget: Element;\\n    /**\\n     * An optional object of data passed to an event method when the current executing handler is bound.\\n     * @see \\\\`{@link https://api.jquery.com/event.data/ }\\\\`\\n     */\\n    data: any;\\n    /**\\n     * The element where the currently-called jQuery event handler was attached.\\n     * @see \\\\`{@link https://api.jquery.com/event.delegateTarget/ }\\\\`\\n     */\\n    delegateTarget: Element;\\n    /**\\n     * Returns whether event.preventDefault() was ever called on this event object.\\n     * @see \\\\`{@link https://api.jquery.com/event.isDefaultPrevented/ }\\\\`\\n     */\\n    isDefaultPrevented(): boolean;\\n    /**\\n     * Returns whether event.stopImmediatePropagation() was ever called on this event object.\\n     * @see \\\\`{@link https://api.jquery.com/event.isImmediatePropagationStopped/ }\\\\`\\n     */\\n    isImmediatePropagationStopped(): boolean;\\n    /**\\n     * Returns whether event.stopPropagation() was ever called on this event object.\\n     * @see \\\\`{@link https://api.jquery.com/event.isPropagationStopped/ }\\\\`\\n     */\\n    isPropagationStopped(): boolean;\\n    /**\\n     * The namespace specified when the event was triggered.\\n     * @see \\\\`{@link https://api.jquery.com/event.namespace/ }\\\\`\\n     */\\n    namespace: string;\\n    /**\\n     * The browser's original Event object.\\n     * @see \\\\`{@link https://api.jquery.com/category/events/event-object/ }\\\\`\\n     */\\n    originalEvent: Event;\\n    /**\\n     * If this method is called, the default action of the event will not be triggered.\\n     * @see \\\\`{@link https://api.jquery.com/event.preventDefault/ }\\\\`\\n     */\\n    preventDefault(): any;\\n    /**\\n     * The other DOM element involved in the event, if any.\\n     * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n     */\\n    relatedTarget: Element;\\n    /**\\n     * The last value returned by an event handler that was triggered by this event, unless the value was undefined.\\n     * @see \\\\`{@link https://api.jquery.com/event.result/ }\\\\`\\n     */\\n    result: any;\\n    /**\\n     * Keeps the rest of the handlers from being executed and prevents the event from bubbling up the DOM tree.\\n     * @see \\\\`{@link https://api.jquery.com/event.stopImmediatePropagation/ }\\\\`\\n     */\\n    stopImmediatePropagation(): void;\\n    /**\\n     * Prevents the event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event.\\n     * @see \\\\`{@link https://api.jquery.com/event.stopPropagation/ }\\\\`\\n     */\\n    stopPropagation(): void;\\n    /**\\n     * The DOM element that initiated the event.\\n     * @see \\\\`{@link https://api.jquery.com/event.target/ }\\\\`\\n     */\\n    target: Element;\\n    /**\\n     * The mouse position relative to the left edge of the document.\\n     * @see \\\\`{@link https://api.jquery.com/event.pageX/ }\\\\`\\n     */\\n    pageX: number;\\n    /**\\n     * The mouse position relative to the top edge of the document.\\n     * @see \\\\`{@link https://api.jquery.com/event.pageY/ }\\\\`\\n     */\\n    pageY: number;\\n    /**\\n     * For key or mouse events, this property indicates the specific key or button that was pressed.\\n     * @see \\\\`{@link https://api.jquery.com/event.which/ }\\\\`\\n     */\\n    which: number;\\n    /**\\n     * Indicates whether the META key was pressed when the event fired.\\n     * @see \\\\`{@link https://api.jquery.com/event.metaKey/ }\\\\`\\n     */\\n    metaKey: boolean;\\n}\\n/**\\n * @deprecated ​ Deprecated. Use \\\\`{@link JQuery.Event }\\\\`.\\n */\\ninterface JQueryInputEventObject extends BaseJQueryEventObject {\\n    altKey: boolean;\\n    ctrlKey: boolean;\\n    metaKey: boolean;\\n    shiftKey: boolean;\\n}\\n/**\\n * @deprecated ​ Deprecated. Use \\\\`{@link JQuery.Event }\\\\`.\\n */\\ninterface JQueryMouseEventObject extends JQueryInputEventObject {\\n    button: number;\\n    clientX: number;\\n    clientY: number;\\n    offsetX: number;\\n    offsetY: number;\\n    pageX: number;\\n    pageY: number;\\n    screenX: number;\\n    screenY: number;\\n}\\n/**\\n * @deprecated ​ Deprecated. Use \\\\`{@link JQuery.Event }\\\\`.\\n */\\ninterface JQueryKeyEventObject extends JQueryInputEventObject {\\n    /** @deprecated */\\n    char: string;\\n    /** @deprecated */\\n    charCode: number;\\n    key: string;\\n    /** @deprecated */\\n    keyCode: number;\\n}\\n/**\\n * @deprecated ​ Deprecated. Use \\\\`{@link JQuery.Event }\\\\`.\\n */\\ninterface JQueryEventObject extends BaseJQueryEventObject, JQueryInputEventObject, JQueryMouseEventObject, JQueryKeyEventObject { }\\n/**\\n * @deprecated ​ Deprecated.\\n */\\ninterface JQueryPromiseOperator<T, U> {\\n    // tslint:disable-next-line:callable-types\\n    (callback1: JQuery.TypeOrArray<JQueryPromiseCallback<T>>,\\n     ...callbacksN: Array<JQuery.TypeOrArray<JQueryPromiseCallback<any>>>): JQueryPromise<U>;\\n}\\n/**\\n * @deprecated ​ Deprecated. Internal. See \\\\`{@link https://github.com/jquery/api.jquery.com/issues/912 }\\\\`.\\n */\\ninterface JQueryEasingFunction {\\n    // tslint:disable-next-line:callable-types\\n    (percent: number): number;\\n}\\n/**\\n * @deprecated ​ Deprecated. Internal. See \\\\`{@link https://github.com/jquery/api.jquery.com/issues/912 }\\\\`.\\n */\\ninterface JQueryEasingFunctions {\\n    [name: string]: JQueryEasingFunction;\\n    linear: JQueryEasingFunction;\\n    swing: JQueryEasingFunction;\\n}\\n\";","module.exports = \"// tslint:disable:jsdoc-format\\n// tslint:disable:max-line-length\\n// tslint:disable:no-irregular-whitespace\\n\\ndeclare namespace JQuery {\\n    type TypeOrArray<T> = T | T[];\\n    type Node = Element | Text | Comment | DocumentFragment;\\n\\n    /**\\n     * A string is designated htmlString in jQuery documentation when it is used to represent one or more DOM elements, typically to be created and inserted in the document. When passed as an argument of the jQuery() function, the string is identified as HTML if it starts with <tag ... >) and is parsed as such until the final > character. Prior to jQuery 1.9, a string was considered to be HTML if it contained <tag ... > anywhere within the string.\\n     */\\n    type htmlString = string;\\n    /**\\n     * A selector is used in jQuery to select DOM elements from a DOM document. That document is, in most cases, the DOM document present in all browsers, but can also be an XML document received via Ajax.\\n     */\\n    type Selector = string;\\n\\n    /**\\n     * The PlainObject type is a JavaScript object containing zero or more key-value pairs. The plain object is, in other words, an Object object. It is designated \\\"plain\\\" in jQuery documentation to distinguish it from other kinds of JavaScript objects: for example, null, user-defined arrays, and host objects such as document, all of which have a typeof value of \\\"object.\\\"\\n     *\\n     * **Note**: The type declaration of PlainObject is imprecise. It includes host objects and user-defined arrays which do not match jQuery's definition.\\n     */\\n    interface PlainObject<T = any> {\\n        [key: string]: T;\\n    }\\n\\n    interface Selectors extends Sizzle.Selectors {\\n        /**\\n         * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link Selectors#pseudos }\\\\`.\\n         *\\n         * **Cause**: The standard way to add new custom selectors through jQuery is `jQuery.expr.pseudos`. These two other aliases are deprecated, although they still work as of jQuery 3.0.\\n         *\\n         * **Solution**: Rename any of the older usage to `jQuery.expr.pseudos`. The functionality is identical.\\n         */\\n        ':': Sizzle.Selectors.PseudoFunctions;\\n        /**\\n         * @deprecated ​ Deprecated since 3.0. Use \\\\`{@link Selectors#pseudos }\\\\`.\\n         *\\n         * **Cause**: The standard way to add new custom selectors through jQuery is `jQuery.expr.pseudos`. These two other aliases are deprecated, although they still work as of jQuery 3.0.\\n         *\\n         * **Solution**: Rename any of the older usage to `jQuery.expr.pseudos`. The functionality is identical.\\n         */\\n        filter: Sizzle.Selectors.FilterFunctions;\\n    }\\n\\n    // region Ajax\\n    // #region Ajax\\n\\n    interface AjaxSettings<TContext = any> extends Ajax.AjaxSettingsBase<TContext> {\\n        /**\\n         * A string containing the URL to which the request is sent.\\n         */\\n        url?: string;\\n    }\\n\\n    interface UrlAjaxSettings<TContext = any> extends Ajax.AjaxSettingsBase<TContext> {\\n        /**\\n         * A string containing the URL to which the request is sent.\\n         */\\n        url: string;\\n    }\\n\\n    namespace Ajax {\\n        type SuccessTextStatus = 'success' | 'notmodified' | 'nocontent';\\n        type ErrorTextStatus = 'timeout' | 'error' | 'abort' | 'parsererror';\\n        type TextStatus = SuccessTextStatus | ErrorTextStatus;\\n\\n        type SuccessCallback<TContext> = (this: TContext, data: any, textStatus: SuccessTextStatus, jqXHR: jqXHR) => void;\\n\\n        type ErrorCallback<TContext> = (this: TContext, jqXHR: jqXHR, textStatus: ErrorTextStatus, errorThrown: string) => void;\\n\\n        type CompleteCallback<TContext> = (this: TContext, jqXHR: jqXHR, textStatus: TextStatus) => void;\\n\\n        /**\\n         * @see \\\\`{@link https://api.jquery.com/jquery.ajax/#jQuery-ajax-settings }\\\\`\\n         */\\n        interface AjaxSettingsBase<TContext> {\\n            /**\\n             * A set of key/value pairs that map a given dataType to its MIME type, which gets sent in the Accept request header. This header tells the server what kind of response it will accept in return.\\n             */\\n            accepts?: PlainObject<string>;\\n            /**\\n             * By default, all requests are sent asynchronously (i.e. this is set to true by default). If you need synchronous requests, set this option to false. Cross-domain requests and dataType: \\\"jsonp\\\" requests do not support synchronous operation. Note that synchronous requests may temporarily lock the browser, disabling any actions while the request is active. As of jQuery 1.8, the use of async: false with jqXHR ($.Deferred) is deprecated; you must use the success/error/complete callback options instead of the corresponding methods of the jqXHR object such as jqXHR.done().\\n             */\\n            async?: boolean;\\n            /**\\n             * A pre-request callback function that can be used to modify the jqXHR (in jQuery 1.4.x, XMLHTTPRequest) object before it is sent. Use this to set custom headers, etc. The jqXHR and settings objects are passed as arguments. This is an Ajax Event. Returning false in the beforeSend function will cancel the request. As of jQuery 1.5, the beforeSend option will be called regardless of the type of request.\\n             */\\n            beforeSend?(this: TContext, jqXHR: jqXHR, settings: this): false | void;\\n            /**\\n             * If set to false, it will force requested pages not to be cached by the browser. Note: Setting cache to false will only work correctly with HEAD and GET requests. It works by appending \\\"_={timestamp}\\\" to the GET parameters. The parameter is not needed for other types of requests, except in IE8 when a POST is made to a URL that has already been requested by a GET.\\n             */\\n            cache?: boolean;\\n            /**\\n             * A function to be called when the request finishes (after success and error callbacks are executed). The function gets passed two arguments: The jqXHR (in jQuery 1.4.x, XMLHTTPRequest) object and a string categorizing the status of the request (\\\"success\\\", \\\"notmodified\\\", \\\"nocontent\\\", \\\"error\\\", \\\"timeout\\\", \\\"abort\\\", or \\\"parsererror\\\"). As of jQuery 1.5, the complete setting can accept an array of functions. Each function will be called in turn. This is an Ajax Event.\\n             */\\n            complete?: TypeOrArray<CompleteCallback<TContext>>;\\n            /**\\n             * An object of string/regular-expression pairs that determine how jQuery will parse the response, given its content type.\\n             */\\n            contents?: PlainObject<RegExp>;\\n            /**\\n             * When sending data to the server, use this content type. Default is \\\"application/x-www-form-urlencoded; charset=UTF-8\\\", which is fine for most cases. If you explicitly pass in a content-type to $.ajax(), then it is always sent to the server (even if no data is sent). As of jQuery 1.6 you can pass false to tell jQuery to not set any content type header. Note: The W3C XMLHttpRequest specification dictates that the charset is always UTF-8; specifying another charset will not force the browser to change the encoding. Note: For cross-domain requests, setting the content type to anything other than application/x-www-form-urlencoded, multipart/form-data, or text/plain will trigger the browser to send a preflight OPTIONS request to the server.\\n             */\\n            contentType?: string | false;\\n            /**\\n             * This object will be the context of all Ajax-related callbacks. By default, the context is an object that represents the Ajax settings used in the call ($.ajaxSettings merged with the settings passed to $.ajax).\\n             */\\n            context?: TContext;\\n            /**\\n             * An object containing dataType-to-dataType converters. Each converter's value is a function that returns the transformed value of the response.\\n             */\\n            converters?: PlainObject<((value: any) => any) | true>;\\n            /**\\n             * If you wish to force a crossDomain request (such as JSONP) on the same domain, set the value of crossDomain to true. This allows, for example, server-side redirection to another domain.\\n             */\\n            crossDomain?: boolean;\\n            /**\\n             * Data to be sent to the server. It is converted to a query string, if not already a string. It's appended to the url for GET-requests. See processData option to prevent this automatic processing. Object must be Key/Value pairs. If value is an Array, jQuery serializes multiple values with same key based on the value of the traditional setting (described below).\\n             */\\n            data?: PlainObject | string;\\n            /**\\n             * A function to be used to handle the raw response data of XMLHttpRequest. This is a pre-filtering function to sanitize the response. You should return the sanitized data. The function accepts two arguments: The raw data returned from the server and the 'dataType' parameter.\\n             */\\n            dataFilter?(data: string, type: string): any;\\n            /**\\n             * The type of data that you're expecting back from the server. If none is specified, jQuery will try to infer it based on the MIME type of the response (an XML MIME type will yield XML, in 1.4 JSON will yield a JavaScript object, in 1.4 script will execute the script, and anything else will be returned as a string). The available types (and the result passed as the first argument to your success callback) are:\\n             *\\n             * \\\"xml\\\": Returns a XML document that can be processed via jQuery.\\n             *\\n             * \\\"html\\\": Returns HTML as plain text; included script tags are evaluated when inserted in the DOM.\\n             *\\n             * \\\"script\\\": Evaluates the response as JavaScript and returns it as plain text. Disables caching by appending a query string parameter, _=[TIMESTAMP], to the URL unless the cache option is set to true. Note: This will turn POSTs into GETs for remote-domain requests.\\n             *\\n             * \\\"json\\\": Evaluates the response as JSON and returns a JavaScript object. Cross-domain \\\"json\\\" requests are converted to \\\"jsonp\\\" unless the request includes jsonp: false in its request options. The JSON data is parsed in a strict manner; any malformed JSON is rejected and a parse error is thrown. As of jQuery 1.9, an empty response is also rejected; the server should return a response of null or {} instead. (See json.org for more information on proper JSON formatting.)\\n             *\\n             * \\\"jsonp\\\": Loads in a JSON block using JSONP. Adds an extra \\\"?callback=?\\\" to the end of your URL to specify the callback. Disables caching by appending a query string parameter, \\\"_=[TIMESTAMP]\\\", to the URL unless the cache option is set to true.\\n             *\\n             * \\\"text\\\": A plain text string.\\n             *\\n             * multiple, space-separated values: As of jQuery 1.5, jQuery can convert a dataType from what it received in the Content-Type header to what you require. For example, if you want a text response to be treated as XML, use \\\"text xml\\\" for the dataType. You can also make a JSONP request, have it received as text, and interpreted by jQuery as XML: \\\"jsonp text xml\\\". Similarly, a shorthand string such as \\\"jsonp xml\\\" will first attempt to convert from jsonp to xml, and, failing that, convert from jsonp to text, and then from text to xml.\\n             */\\n            dataType?: 'xml' | 'html' | 'script' | 'json' | 'jsonp' | 'text' | string;\\n            /**\\n             * The MIME type of content that is used to submit the form to the server. Possible values are:\\n             *\\n             * \\\"application/x-www-form-urlencoded\\\": The initial default type.\\n             *\\n             * \\\"multipart/form-data\\\": The type that allows file <input> element(s) to upload file data.\\n             *\\n             * \\\"text/plain\\\": A type introduced in HTML5.\\n             */\\n            enctype?: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain';\\n            /**\\n             * A function to be called if the request fails. The function receives three arguments: The jqXHR (in jQuery 1.4.x, XMLHttpRequest) object, a string describing the type of error that occurred and an optional exception object, if one occurred. Possible values for the second argument (besides null) are \\\"timeout\\\", \\\"error\\\", \\\"abort\\\", and \\\"parsererror\\\". When an HTTP error occurs, errorThrown receives the textual portion of the HTTP status, such as \\\"Not Found\\\" or \\\"Internal Server Error.\\\" As of jQuery 1.5, the error setting can accept an array of functions. Each function will be called in turn. Note: This handler is not called for cross-domain script and cross-domain JSONP requests. This is an Ajax Event.\\n             */\\n            error?: TypeOrArray<ErrorCallback<TContext>>;\\n            /**\\n             * Whether to trigger global Ajax event handlers for this request. The default is true. Set to false to prevent the global handlers like ajaxStart or ajaxStop from being triggered. This can be used to control various Ajax Events.\\n             */\\n            global?: boolean;\\n            /**\\n             * An object of additional header key/value pairs to send along with requests using the XMLHttpRequest transport. The header X-Requested-With: XMLHttpRequest is always added, but its default XMLHttpRequest value can be changed here. Values in the headers setting can also be overwritten from within the beforeSend function.\\n             */\\n            headers?: PlainObject<string | null | undefined>;\\n            /**\\n             * Allow the request to be successful only if the response has changed since the last request. This is done by checking the Last-Modified header. Default value is false, ignoring the header. In jQuery 1.4 this technique also checks the 'etag' specified by the server to catch unmodified data.\\n             */\\n            ifModified?: boolean;\\n            /**\\n             * Allow the current environment to be recognized as \\\"local,\\\" (e.g. the filesystem), even if jQuery does not recognize it as such by default. The following protocols are currently recognized as local: file, *-extension, and widget. If the isLocal setting needs modification, it is recommended to do so once in the $.ajaxSetup() method.\\n             */\\n            isLocal?: boolean;\\n            /**\\n             * Override the callback function name in a JSONP request. This value will be used instead of 'callback' in the 'callback=?' part of the query string in the url. So {jsonp:'onJSONPLoad'} would result in 'onJSONPLoad=?' passed to the server. As of jQuery 1.5, setting the jsonp option to false prevents jQuery from adding the \\\"?callback\\\" string to the URL or attempting to use \\\"=?\\\" for transformation. In this case, you should also explicitly set the jsonpCallback setting. For example, { jsonp: false, jsonpCallback: \\\"callbackName\\\" }. If you don't trust the target of your Ajax requests, consider setting the jsonp property to false for security reasons.\\n             */\\n            jsonp?: string | false;\\n            /**\\n             * Specify the callback function name for a JSONP request. This value will be used instead of the random name automatically generated by jQuery. It is preferable to let jQuery generate a unique name as it'll make it easier to manage the requests and provide callbacks and error handling. You may want to specify the callback when you want to enable better browser caching of GET requests. As of jQuery 1.5, you can also use a function for this setting, in which case the value of jsonpCallback is set to the return value of that function.\\n             */\\n            jsonpCallback?: string | ((this: TContext) => string);\\n            /**\\n             * The HTTP method to use for the request (e.g. \\\"POST\\\", \\\"GET\\\", \\\"PUT\\\").\\n             */\\n            method?: string;\\n            /**\\n             * A mime type to override the XHR mime type.\\n             */\\n            mimeType?: string;\\n            /**\\n             * A password to be used with XMLHttpRequest in response to an HTTP access authentication request.\\n             */\\n            password?: string;\\n            /**\\n             * By default, data passed in to the data option as an object (technically, anything other than a string) will be processed and transformed into a query string, fitting to the default content-type \\\"application/x-www-form-urlencoded\\\". If you want to send a DOMDocument, or other non-processed data, set this option to false.\\n             */\\n            processData?: boolean;\\n            /**\\n             * Only applies when the \\\"script\\\" transport is used (e.g., cross-domain requests with \\\"jsonp\\\" or \\\"script\\\" dataType and \\\"GET\\\" type). Sets the charset attribute on the script tag used in the request. Used when the character set on the local page is not the same as the one on the remote script.\\n             */\\n            scriptCharset?: string;\\n            /**\\n             * An object of numeric HTTP codes and functions to be called when the response has the corresponding code.\\n             *\\n             * If the request is successful, the status code functions take the same parameters as the success callback; if it results in an error (including 3xx redirect), they take the same parameters as the error callback.\\n             */\\n            statusCode?: StatusCodeCallbacks<TContext>;\\n            /**\\n             * A function to be called if the request succeeds. The function gets passed three arguments: The data returned from the server, formatted according to the dataType parameter or the dataFilter callback function, if specified; a string describing the status; and the jqXHR (in jQuery 1.4.x, XMLHttpRequest) object. As of jQuery 1.5, the success setting can accept an array of functions. Each function will be called in turn. This is an Ajax Event.\\n             */\\n            success?: TypeOrArray<SuccessCallback<TContext>>;\\n            /**\\n             * Set a timeout (in milliseconds) for the request. A value of 0 means there will be no timeout. This will override any global timeout set with $.ajaxSetup(). The timeout period starts at the point the $.ajax call is made; if several other requests are in progress and the browser has no connections available, it is possible for a request to time out before it can be sent. In jQuery 1.4.x and below, the XMLHttpRequest object will be in an invalid state if the request times out; accessing any object members may throw an exception. In Firefox 3.0+ only, script and JSONP requests cannot be cancelled by a timeout; the script will run even if it arrives after the timeout period.\\n             */\\n            timeout?: number;\\n            /**\\n             * Set this to true if you wish to use the traditional style of param serialization.\\n             */\\n            traditional?: boolean;\\n            /**\\n             * An alias for method. You should use type if you're using versions of jQuery prior to 1.9.0.\\n             */\\n            type?: string;\\n            /**\\n             * A username to be used with XMLHttpRequest in response to an HTTP access authentication request.\\n             */\\n            username?: string;\\n            // ActiveXObject requires \\\"lib\\\": [\\\"scripthost\\\"] which consumers would also require\\n            /**\\n             * Callback for creating the XMLHttpRequest object. Defaults to the ActiveXObject when available (IE), the XMLHttpRequest otherwise. Override to provide your own implementation for XMLHttpRequest or enhancements to the factory.\\n             */\\n            xhr?(): XMLHttpRequest;\\n            /**\\n             * An object of fieldName-fieldValue pairs to set on the native XHR object.\\n             *\\n             * In jQuery 1.5, the withCredentials property was not propagated to the native XHR and thus CORS requests requiring it would ignore this flag. For this reason, we recommend using jQuery 1.5.1+ should you require the use of it.\\n             */\\n            xhrFields?: XHRFields;\\n        }\\n\\n        // region StatusCodeCallbacks\\n        // #region StatusCodeCallbacks\\n\\n        type StatusCodeCallbacks<TContext> = {\\n            // region Success Status Codes\\n            // #region Success Status Codes\\n\\n            // jQuery treats 2xx and 304 status codes as a success\\n\\n            200?: SuccessCallback<TContext>;\\n            201?: SuccessCallback<TContext>;\\n            202?: SuccessCallback<TContext>;\\n            203?: SuccessCallback<TContext>;\\n            204?: SuccessCallback<TContext>;\\n            205?: SuccessCallback<TContext>;\\n            206?: SuccessCallback<TContext>;\\n            207?: SuccessCallback<TContext>;\\n            208?: SuccessCallback<TContext>;\\n            209?: SuccessCallback<TContext>;\\n            210?: SuccessCallback<TContext>;\\n            211?: SuccessCallback<TContext>;\\n            212?: SuccessCallback<TContext>;\\n            213?: SuccessCallback<TContext>;\\n            214?: SuccessCallback<TContext>;\\n            215?: SuccessCallback<TContext>;\\n            216?: SuccessCallback<TContext>;\\n            217?: SuccessCallback<TContext>;\\n            218?: SuccessCallback<TContext>;\\n            219?: SuccessCallback<TContext>;\\n            220?: SuccessCallback<TContext>;\\n            221?: SuccessCallback<TContext>;\\n            222?: SuccessCallback<TContext>;\\n            223?: SuccessCallback<TContext>;\\n            224?: SuccessCallback<TContext>;\\n            225?: SuccessCallback<TContext>;\\n            226?: SuccessCallback<TContext>;\\n            227?: SuccessCallback<TContext>;\\n            228?: SuccessCallback<TContext>;\\n            229?: SuccessCallback<TContext>;\\n            230?: SuccessCallback<TContext>;\\n            231?: SuccessCallback<TContext>;\\n            232?: SuccessCallback<TContext>;\\n            233?: SuccessCallback<TContext>;\\n            234?: SuccessCallback<TContext>;\\n            235?: SuccessCallback<TContext>;\\n            236?: SuccessCallback<TContext>;\\n            237?: SuccessCallback<TContext>;\\n            238?: SuccessCallback<TContext>;\\n            239?: SuccessCallback<TContext>;\\n            240?: SuccessCallback<TContext>;\\n            241?: SuccessCallback<TContext>;\\n            242?: SuccessCallback<TContext>;\\n            243?: SuccessCallback<TContext>;\\n            244?: SuccessCallback<TContext>;\\n            245?: SuccessCallback<TContext>;\\n            246?: SuccessCallback<TContext>;\\n            247?: SuccessCallback<TContext>;\\n            248?: SuccessCallback<TContext>;\\n            249?: SuccessCallback<TContext>;\\n            250?: SuccessCallback<TContext>;\\n            251?: SuccessCallback<TContext>;\\n            252?: SuccessCallback<TContext>;\\n            253?: SuccessCallback<TContext>;\\n            254?: SuccessCallback<TContext>;\\n            255?: SuccessCallback<TContext>;\\n            256?: SuccessCallback<TContext>;\\n            257?: SuccessCallback<TContext>;\\n            258?: SuccessCallback<TContext>;\\n            259?: SuccessCallback<TContext>;\\n            260?: SuccessCallback<TContext>;\\n            261?: SuccessCallback<TContext>;\\n            262?: SuccessCallback<TContext>;\\n            263?: SuccessCallback<TContext>;\\n            264?: SuccessCallback<TContext>;\\n            265?: SuccessCallback<TContext>;\\n            266?: SuccessCallback<TContext>;\\n            267?: SuccessCallback<TContext>;\\n            268?: SuccessCallback<TContext>;\\n            269?: SuccessCallback<TContext>;\\n            270?: SuccessCallback<TContext>;\\n            271?: SuccessCallback<TContext>;\\n            272?: SuccessCallback<TContext>;\\n            273?: SuccessCallback<TContext>;\\n            274?: SuccessCallback<TContext>;\\n            275?: SuccessCallback<TContext>;\\n            276?: SuccessCallback<TContext>;\\n            277?: SuccessCallback<TContext>;\\n            278?: SuccessCallback<TContext>;\\n            279?: SuccessCallback<TContext>;\\n            280?: SuccessCallback<TContext>;\\n            281?: SuccessCallback<TContext>;\\n            282?: SuccessCallback<TContext>;\\n            283?: SuccessCallback<TContext>;\\n            284?: SuccessCallback<TContext>;\\n            285?: SuccessCallback<TContext>;\\n            286?: SuccessCallback<TContext>;\\n            287?: SuccessCallback<TContext>;\\n            288?: SuccessCallback<TContext>;\\n            289?: SuccessCallback<TContext>;\\n            290?: SuccessCallback<TContext>;\\n            291?: SuccessCallback<TContext>;\\n            292?: SuccessCallback<TContext>;\\n            293?: SuccessCallback<TContext>;\\n            294?: SuccessCallback<TContext>;\\n            295?: SuccessCallback<TContext>;\\n            296?: SuccessCallback<TContext>;\\n            297?: SuccessCallback<TContext>;\\n            298?: SuccessCallback<TContext>;\\n            299?: SuccessCallback<TContext>;\\n            304?: SuccessCallback<TContext>;\\n\\n            // #endregion\\n\\n            // region Error Status Codes\\n            // #region Error Status Codes\\n\\n            300?: ErrorCallback<TContext>;\\n            301?: ErrorCallback<TContext>;\\n            302?: ErrorCallback<TContext>;\\n            303?: ErrorCallback<TContext>;\\n            305?: ErrorCallback<TContext>;\\n            306?: ErrorCallback<TContext>;\\n            307?: ErrorCallback<TContext>;\\n            308?: ErrorCallback<TContext>;\\n            309?: ErrorCallback<TContext>;\\n            310?: ErrorCallback<TContext>;\\n            311?: ErrorCallback<TContext>;\\n            312?: ErrorCallback<TContext>;\\n            313?: ErrorCallback<TContext>;\\n            314?: ErrorCallback<TContext>;\\n            315?: ErrorCallback<TContext>;\\n            316?: ErrorCallback<TContext>;\\n            317?: ErrorCallback<TContext>;\\n            318?: ErrorCallback<TContext>;\\n            319?: ErrorCallback<TContext>;\\n            320?: ErrorCallback<TContext>;\\n            321?: ErrorCallback<TContext>;\\n            322?: ErrorCallback<TContext>;\\n            323?: ErrorCallback<TContext>;\\n            324?: ErrorCallback<TContext>;\\n            325?: ErrorCallback<TContext>;\\n            326?: ErrorCallback<TContext>;\\n            327?: ErrorCallback<TContext>;\\n            328?: ErrorCallback<TContext>;\\n            329?: ErrorCallback<TContext>;\\n            330?: ErrorCallback<TContext>;\\n            331?: ErrorCallback<TContext>;\\n            332?: ErrorCallback<TContext>;\\n            333?: ErrorCallback<TContext>;\\n            334?: ErrorCallback<TContext>;\\n            335?: ErrorCallback<TContext>;\\n            336?: ErrorCallback<TContext>;\\n            337?: ErrorCallback<TContext>;\\n            338?: ErrorCallback<TContext>;\\n            339?: ErrorCallback<TContext>;\\n            340?: ErrorCallback<TContext>;\\n            341?: ErrorCallback<TContext>;\\n            342?: ErrorCallback<TContext>;\\n            343?: ErrorCallback<TContext>;\\n            344?: ErrorCallback<TContext>;\\n            345?: ErrorCallback<TContext>;\\n            346?: ErrorCallback<TContext>;\\n            347?: ErrorCallback<TContext>;\\n            348?: ErrorCallback<TContext>;\\n            349?: ErrorCallback<TContext>;\\n            350?: ErrorCallback<TContext>;\\n            351?: ErrorCallback<TContext>;\\n            352?: ErrorCallback<TContext>;\\n            353?: ErrorCallback<TContext>;\\n            354?: ErrorCallback<TContext>;\\n            355?: ErrorCallback<TContext>;\\n            356?: ErrorCallback<TContext>;\\n            357?: ErrorCallback<TContext>;\\n            358?: ErrorCallback<TContext>;\\n            359?: ErrorCallback<TContext>;\\n            360?: ErrorCallback<TContext>;\\n            361?: ErrorCallback<TContext>;\\n            362?: ErrorCallback<TContext>;\\n            363?: ErrorCallback<TContext>;\\n            364?: ErrorCallback<TContext>;\\n            365?: ErrorCallback<TContext>;\\n            366?: ErrorCallback<TContext>;\\n            367?: ErrorCallback<TContext>;\\n            368?: ErrorCallback<TContext>;\\n            369?: ErrorCallback<TContext>;\\n            370?: ErrorCallback<TContext>;\\n            371?: ErrorCallback<TContext>;\\n            372?: ErrorCallback<TContext>;\\n            373?: ErrorCallback<TContext>;\\n            374?: ErrorCallback<TContext>;\\n            375?: ErrorCallback<TContext>;\\n            376?: ErrorCallback<TContext>;\\n            377?: ErrorCallback<TContext>;\\n            378?: ErrorCallback<TContext>;\\n            379?: ErrorCallback<TContext>;\\n            380?: ErrorCallback<TContext>;\\n            381?: ErrorCallback<TContext>;\\n            382?: ErrorCallback<TContext>;\\n            383?: ErrorCallback<TContext>;\\n            384?: ErrorCallback<TContext>;\\n            385?: ErrorCallback<TContext>;\\n            386?: ErrorCallback<TContext>;\\n            387?: ErrorCallback<TContext>;\\n            388?: ErrorCallback<TContext>;\\n            389?: ErrorCallback<TContext>;\\n            390?: ErrorCallback<TContext>;\\n            391?: ErrorCallback<TContext>;\\n            392?: ErrorCallback<TContext>;\\n            393?: ErrorCallback<TContext>;\\n            394?: ErrorCallback<TContext>;\\n            395?: ErrorCallback<TContext>;\\n            396?: ErrorCallback<TContext>;\\n            397?: ErrorCallback<TContext>;\\n            398?: ErrorCallback<TContext>;\\n            399?: ErrorCallback<TContext>;\\n            400?: ErrorCallback<TContext>;\\n            401?: ErrorCallback<TContext>;\\n            402?: ErrorCallback<TContext>;\\n            403?: ErrorCallback<TContext>;\\n            404?: ErrorCallback<TContext>;\\n            405?: ErrorCallback<TContext>;\\n            406?: ErrorCallback<TContext>;\\n            407?: ErrorCallback<TContext>;\\n            408?: ErrorCallback<TContext>;\\n            409?: ErrorCallback<TContext>;\\n            410?: ErrorCallback<TContext>;\\n            411?: ErrorCallback<TContext>;\\n            412?: ErrorCallback<TContext>;\\n            413?: ErrorCallback<TContext>;\\n            414?: ErrorCallback<TContext>;\\n            415?: ErrorCallback<TContext>;\\n            416?: ErrorCallback<TContext>;\\n            417?: ErrorCallback<TContext>;\\n            418?: ErrorCallback<TContext>;\\n            419?: ErrorCallback<TContext>;\\n            420?: ErrorCallback<TContext>;\\n            421?: ErrorCallback<TContext>;\\n            422?: ErrorCallback<TContext>;\\n            423?: ErrorCallback<TContext>;\\n            424?: ErrorCallback<TContext>;\\n            425?: ErrorCallback<TContext>;\\n            426?: ErrorCallback<TContext>;\\n            427?: ErrorCallback<TContext>;\\n            428?: ErrorCallback<TContext>;\\n            429?: ErrorCallback<TContext>;\\n            430?: ErrorCallback<TContext>;\\n            431?: ErrorCallback<TContext>;\\n            432?: ErrorCallback<TContext>;\\n            433?: ErrorCallback<TContext>;\\n            434?: ErrorCallback<TContext>;\\n            435?: ErrorCallback<TContext>;\\n            436?: ErrorCallback<TContext>;\\n            437?: ErrorCallback<TContext>;\\n            438?: ErrorCallback<TContext>;\\n            439?: ErrorCallback<TContext>;\\n            440?: ErrorCallback<TContext>;\\n            441?: ErrorCallback<TContext>;\\n            442?: ErrorCallback<TContext>;\\n            443?: ErrorCallback<TContext>;\\n            444?: ErrorCallback<TContext>;\\n            445?: ErrorCallback<TContext>;\\n            446?: ErrorCallback<TContext>;\\n            447?: ErrorCallback<TContext>;\\n            448?: ErrorCallback<TContext>;\\n            449?: ErrorCallback<TContext>;\\n            450?: ErrorCallback<TContext>;\\n            451?: ErrorCallback<TContext>;\\n            452?: ErrorCallback<TContext>;\\n            453?: ErrorCallback<TContext>;\\n            454?: ErrorCallback<TContext>;\\n            455?: ErrorCallback<TContext>;\\n            456?: ErrorCallback<TContext>;\\n            457?: ErrorCallback<TContext>;\\n            458?: ErrorCallback<TContext>;\\n            459?: ErrorCallback<TContext>;\\n            460?: ErrorCallback<TContext>;\\n            461?: ErrorCallback<TContext>;\\n            462?: ErrorCallback<TContext>;\\n            463?: ErrorCallback<TContext>;\\n            464?: ErrorCallback<TContext>;\\n            465?: ErrorCallback<TContext>;\\n            466?: ErrorCallback<TContext>;\\n            467?: ErrorCallback<TContext>;\\n            468?: ErrorCallback<TContext>;\\n            469?: ErrorCallback<TContext>;\\n            470?: ErrorCallback<TContext>;\\n            471?: ErrorCallback<TContext>;\\n            472?: ErrorCallback<TContext>;\\n            473?: ErrorCallback<TContext>;\\n            474?: ErrorCallback<TContext>;\\n            475?: ErrorCallback<TContext>;\\n            476?: ErrorCallback<TContext>;\\n            477?: ErrorCallback<TContext>;\\n            478?: ErrorCallback<TContext>;\\n            479?: ErrorCallback<TContext>;\\n            480?: ErrorCallback<TContext>;\\n            481?: ErrorCallback<TContext>;\\n            482?: ErrorCallback<TContext>;\\n            483?: ErrorCallback<TContext>;\\n            484?: ErrorCallback<TContext>;\\n            485?: ErrorCallback<TContext>;\\n            486?: ErrorCallback<TContext>;\\n            487?: ErrorCallback<TContext>;\\n            488?: ErrorCallback<TContext>;\\n            489?: ErrorCallback<TContext>;\\n            490?: ErrorCallback<TContext>;\\n            491?: ErrorCallback<TContext>;\\n            492?: ErrorCallback<TContext>;\\n            493?: ErrorCallback<TContext>;\\n            494?: ErrorCallback<TContext>;\\n            495?: ErrorCallback<TContext>;\\n            496?: ErrorCallback<TContext>;\\n            497?: ErrorCallback<TContext>;\\n            498?: ErrorCallback<TContext>;\\n            499?: ErrorCallback<TContext>;\\n            500?: ErrorCallback<TContext>;\\n            501?: ErrorCallback<TContext>;\\n            502?: ErrorCallback<TContext>;\\n            503?: ErrorCallback<TContext>;\\n            504?: ErrorCallback<TContext>;\\n            505?: ErrorCallback<TContext>;\\n            506?: ErrorCallback<TContext>;\\n            507?: ErrorCallback<TContext>;\\n            508?: ErrorCallback<TContext>;\\n            509?: ErrorCallback<TContext>;\\n            510?: ErrorCallback<TContext>;\\n            511?: ErrorCallback<TContext>;\\n            512?: ErrorCallback<TContext>;\\n            513?: ErrorCallback<TContext>;\\n            514?: ErrorCallback<TContext>;\\n            515?: ErrorCallback<TContext>;\\n            516?: ErrorCallback<TContext>;\\n            517?: ErrorCallback<TContext>;\\n            518?: ErrorCallback<TContext>;\\n            519?: ErrorCallback<TContext>;\\n            520?: ErrorCallback<TContext>;\\n            521?: ErrorCallback<TContext>;\\n            522?: ErrorCallback<TContext>;\\n            523?: ErrorCallback<TContext>;\\n            524?: ErrorCallback<TContext>;\\n            525?: ErrorCallback<TContext>;\\n            526?: ErrorCallback<TContext>;\\n            527?: ErrorCallback<TContext>;\\n            528?: ErrorCallback<TContext>;\\n            529?: ErrorCallback<TContext>;\\n            530?: ErrorCallback<TContext>;\\n            531?: ErrorCallback<TContext>;\\n            532?: ErrorCallback<TContext>;\\n            533?: ErrorCallback<TContext>;\\n            534?: ErrorCallback<TContext>;\\n            535?: ErrorCallback<TContext>;\\n            536?: ErrorCallback<TContext>;\\n            537?: ErrorCallback<TContext>;\\n            538?: ErrorCallback<TContext>;\\n            539?: ErrorCallback<TContext>;\\n            540?: ErrorCallback<TContext>;\\n            541?: ErrorCallback<TContext>;\\n            542?: ErrorCallback<TContext>;\\n            543?: ErrorCallback<TContext>;\\n            544?: ErrorCallback<TContext>;\\n            545?: ErrorCallback<TContext>;\\n            546?: ErrorCallback<TContext>;\\n            547?: ErrorCallback<TContext>;\\n            548?: ErrorCallback<TContext>;\\n            549?: ErrorCallback<TContext>;\\n            550?: ErrorCallback<TContext>;\\n            551?: ErrorCallback<TContext>;\\n            552?: ErrorCallback<TContext>;\\n            553?: ErrorCallback<TContext>;\\n            554?: ErrorCallback<TContext>;\\n            555?: ErrorCallback<TContext>;\\n            556?: ErrorCallback<TContext>;\\n            557?: ErrorCallback<TContext>;\\n            558?: ErrorCallback<TContext>;\\n            559?: ErrorCallback<TContext>;\\n            560?: ErrorCallback<TContext>;\\n            561?: ErrorCallback<TContext>;\\n            562?: ErrorCallback<TContext>;\\n            563?: ErrorCallback<TContext>;\\n            564?: ErrorCallback<TContext>;\\n            565?: ErrorCallback<TContext>;\\n            566?: ErrorCallback<TContext>;\\n            567?: ErrorCallback<TContext>;\\n            568?: ErrorCallback<TContext>;\\n            569?: ErrorCallback<TContext>;\\n            570?: ErrorCallback<TContext>;\\n            571?: ErrorCallback<TContext>;\\n            572?: ErrorCallback<TContext>;\\n            573?: ErrorCallback<TContext>;\\n            574?: ErrorCallback<TContext>;\\n            575?: ErrorCallback<TContext>;\\n            576?: ErrorCallback<TContext>;\\n            577?: ErrorCallback<TContext>;\\n            578?: ErrorCallback<TContext>;\\n            579?: ErrorCallback<TContext>;\\n            580?: ErrorCallback<TContext>;\\n            581?: ErrorCallback<TContext>;\\n            582?: ErrorCallback<TContext>;\\n            583?: ErrorCallback<TContext>;\\n            584?: ErrorCallback<TContext>;\\n            585?: ErrorCallback<TContext>;\\n            586?: ErrorCallback<TContext>;\\n            587?: ErrorCallback<TContext>;\\n            588?: ErrorCallback<TContext>;\\n            589?: ErrorCallback<TContext>;\\n            590?: ErrorCallback<TContext>;\\n            591?: ErrorCallback<TContext>;\\n            592?: ErrorCallback<TContext>;\\n            593?: ErrorCallback<TContext>;\\n            594?: ErrorCallback<TContext>;\\n            595?: ErrorCallback<TContext>;\\n            596?: ErrorCallback<TContext>;\\n            597?: ErrorCallback<TContext>;\\n            598?: ErrorCallback<TContext>;\\n            599?: ErrorCallback<TContext>;\\n\\n            // #endregion\\n        } & {\\n            // Status codes not listed require type annotations when defining the callback\\n            [index: number]: SuccessCallback<TContext> | ErrorCallback<TContext>;\\n        };\\n\\n        // #endregion\\n\\n        // Writable properties on XMLHttpRequest\\n        interface XHRFields extends Partial<Pick<XMLHttpRequest, 'onreadystatechange' | 'responseType' | 'timeout' | 'withCredentials'>> {\\n            msCaching?: string;\\n        }\\n    }\\n\\n    interface Transport {\\n        send(headers: PlainObject, completeCallback: Transport.SuccessCallback): void;\\n        abort(): void;\\n    }\\n\\n    namespace Transport {\\n        type SuccessCallback = (status: number, statusText: Ajax.TextStatus, responses?: PlainObject, headers?: string) => void;\\n    }\\n\\n    /**\\n     * @see \\\\`{@link https://api.jquery.com/jquery.ajax/#jqXHR }\\\\`\\n     */\\n    interface jqXHR<TResolve = any> extends Promise3<TResolve, jqXHR<TResolve>, never,\\n        Ajax.SuccessTextStatus, Ajax.ErrorTextStatus, never,\\n        jqXHR<TResolve>, string, never>,\\n        Pick<XMLHttpRequest, 'abort' | 'getAllResponseHeaders' | 'getResponseHeader' | 'overrideMimeType' | 'readyState' | 'responseText' |\\n            'setRequestHeader' | 'status' | 'statusText'>,\\n        Partial<Pick<XMLHttpRequest, 'responseXML'>> {\\n        responseJSON?: any;\\n        abort(statusText?: string): void;\\n\\n        /**\\n         * Determine the current state of a Deferred object.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.state/ }\\\\`\\n         * @since 1.7\\n         */\\n        state(): 'pending' | 'resolved' | 'rejected';\\n        statusCode(map: Ajax.StatusCodeCallbacks<any>): void;\\n    }\\n\\n    namespace jqXHR {\\n        interface DoneCallback<TResolve = any, TjqXHR = jqXHR<TResolve>> extends Deferred.Callback3<TResolve, Ajax.SuccessTextStatus, TjqXHR> { }\\n\\n        interface FailCallback<TjqXHR> extends Deferred.Callback3<TjqXHR, Ajax.ErrorTextStatus, string> { }\\n\\n        interface AlwaysCallback<TResolve = any, TjqXHR = jqXHR<TResolve>> extends Deferred.Callback3<TResolve | TjqXHR, Ajax.TextStatus, TjqXHR | string> { }\\n    }\\n\\n    // #endregion\\n\\n    // region Callbacks\\n    // #region Callbacks\\n\\n    interface CallbacksStatic {\\n        /**\\n         * A multi-purpose callbacks list object that provides a powerful way to manage callback lists.\\n         * @param flags An optional list of space-separated flags that change how the callback list behaves.\\n         * @see \\\\`{@link https://api.jquery.com/jQuery.Callbacks/ }\\\\`\\n         * @since 1.7\\n         */\\n        // tslint:disable-next-line:ban-types callable-types no-unnecessary-generics\\n        <T extends Function>(flags?: string): Callbacks<T>;\\n    }\\n\\n    // tslint:disable-next-line:ban-types\\n    interface Callbacks<T extends Function = Function> {\\n        /**\\n         * Add a callback or a collection of callbacks to a callback list.\\n         * @param callback A function, or array of functions, that are to be added to the callback list.\\n         * @param callbacks A function, or array of functions, that are to be added to the callback list.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.add/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.add() to add new callbacks to a callback list:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar foo = function( value ) {\\n  console.log( \\\"foo: \\\" + value );\\n};\\n​\\n// Another function to also be added to the list\\nvar bar = function( value ) {\\n  console.log( \\\"bar: \\\" + value );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the function \\\"foo\\\" to the list\\ncallbacks.add( foo );\\n​\\n// Fire the items on the list\\ncallbacks.fire( \\\"hello\\\" );\\n// Outputs: \\\"foo: hello\\\"\\n​\\n// Add the function \\\"bar\\\" to the list\\ncallbacks.add( bar );\\n​\\n// Fire the items on the list again\\ncallbacks.fire( \\\"world\\\" );\\n​\\n// Outputs:\\n// \\\"foo: world\\\"\\n// \\\"bar: world\\\"\\n```\\n         */\\n        add(callback: TypeOrArray<T>, ...callbacks: Array<TypeOrArray<T>>): this;\\n        /**\\n         * Disable a callback list from doing anything more.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.disable/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.disable() to disable further calls to a callback list:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar foo = function( value ) {\\n  console.log( value );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the above function to the list\\ncallbacks.add( foo );\\n​\\n// Fire the items on the list\\ncallbacks.fire( \\\"foo\\\" );\\n// Outputs: foo\\n​\\n// Disable further calls being possible\\ncallbacks.disable();\\n​\\n// Attempt to fire with \\\"foobar\\\" as an argument\\ncallbacks.fire( \\\"foobar\\\" );\\n// foobar isn't output\\n```\\n         */\\n        disable(): this;\\n        /**\\n         * Determine if the callbacks list has been disabled.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.disabled/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.disabled() to determine if the callbacks list has been disabled:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar foo = function( value ) {\\n  console.log( \\\"foo:\\\" + value );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the logging function to the callback list\\ncallbacks.add( foo );\\n​\\n// Fire the items on the list, passing an argument\\ncallbacks.fire( \\\"hello\\\" );\\n// Outputs \\\"foo: hello\\\"\\n​\\n// Disable the callbacks list\\ncallbacks.disable();\\n​\\n// Test the disabled state of the list\\nconsole.log ( callbacks.disabled() );\\n// Outputs: true\\n```\\n         */\\n        disabled(): boolean;\\n        /**\\n         * Remove all of the callbacks from a list.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.empty/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.empty() to empty a list of callbacks:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar foo = function( value1, value2 ) {\\n  console.log( \\\"foo: \\\" + value1 + \\\",\\\" + value2 );\\n};\\n​\\n// Another function to also be added to the list\\nvar bar = function( value1, value2 ) {\\n  console.log( \\\"bar: \\\" + value1 + \\\",\\\" + value2 );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the two functions\\ncallbacks.add( foo );\\ncallbacks.add( bar );\\n​\\n// Empty the callbacks list\\ncallbacks.empty();\\n​\\n// Check to ensure all callbacks have been removed\\nconsole.log( callbacks.has( foo ) );\\n// false\\nconsole.log( callbacks.has( bar ) );\\n// false\\n```\\n         */\\n        empty(): this;\\n        /**\\n         * Call all of the callbacks with the given arguments.\\n         * @param args The argument or list of arguments to pass back to the callback list.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.fire/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.fire() to invoke the callbacks in a list with any arguments that have been passed:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar foo = function( value ) {\\n  console.log( \\\"foo:\\\" + value );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the function \\\"foo\\\" to the list\\ncallbacks.add( foo );\\n​\\n// Fire the items on the list\\ncallbacks.fire( \\\"hello\\\" ); // Outputs: \\\"foo: hello\\\"\\ncallbacks.fire( \\\"world\\\" ); // Outputs: \\\"foo: world\\\"\\n​\\n// Add another function to the list\\nvar bar = function( value ){\\n  console.log( \\\"bar:\\\" + value );\\n};\\n​\\n// Add this function to the list\\ncallbacks.add( bar );\\n​\\n// Fire the items on the list again\\ncallbacks.fire( \\\"hello again\\\" );\\n// Outputs:\\n// \\\"foo: hello again\\\"\\n// \\\"bar: hello again\\\"\\n```\\n         */\\n        fire(...args: any[]): this;\\n        /**\\n         * Determine if the callbacks have already been called at least once.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.fired/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.fired() to determine if the callbacks in a list have been called at least once:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar foo = function( value ) {\\n  console.log( \\\"foo:\\\" + value );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the function \\\"foo\\\" to the list\\ncallbacks.add( foo );\\n​\\n// Fire the items on the list\\ncallbacks.fire( \\\"hello\\\" ); // Outputs: \\\"foo: hello\\\"\\ncallbacks.fire( \\\"world\\\" ); // Outputs: \\\"foo: world\\\"\\n​\\n// Test to establish if the callbacks have been called\\nconsole.log( callbacks.fired() );\\n```\\n         */\\n        fired(): boolean;\\n        /**\\n         * Call all callbacks in a list with the given context and arguments.\\n         * @param context A reference to the context in which the callbacks in the list should be fired.\\n         * @param args An argument, or array of arguments, to pass to the callbacks in the list.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.fireWith/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.fireWith() to fire a list of callbacks with a specific context and an array of arguments:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar log = function( value1, value2 ) {\\n  console.log( \\\"Received: \\\" + value1 + \\\",\\\" + value2 );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the log method to the callbacks list\\ncallbacks.add( log );\\n​\\n// Fire the callbacks on the list using the context \\\"window\\\"\\n// and an arguments array\\n​\\ncallbacks.fireWith( window, [ \\\"foo\\\",\\\"bar\\\" ] );\\n// Outputs: \\\"Received: foo, bar\\\"\\n```\\n         */\\n        fireWith(context: object, args?: ArrayLike<any>): this;\\n        /**\\n         * Determine whether or not the list has any callbacks attached. If a callback is provided as an argument, determine whether it is in a list.\\n         * @param callback The callback to search for.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.has/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.has() to check if a callback list contains a specific callback:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar foo = function( value1, value2 ) {\\n  console.log( \\\"Received: \\\" + value1 + \\\",\\\" + value2 );\\n};\\n​\\n// A second function which will not be added to the list\\nvar bar = function( value1, value2 ) {\\n  console.log( \\\"foobar\\\" );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the log method to the callbacks list\\ncallbacks.add( foo );\\n​\\n// Determine which callbacks are in the list\\nconsole.log( callbacks.has( foo ) );\\n// true\\nconsole.log( callbacks.has( bar ) );\\n// false\\n```\\n         */\\n        has(callback?: T): boolean;\\n        /**\\n         * Lock a callback list in its current state.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.lock/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.lock() to lock a callback list to avoid further changes being made to the list state:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar foo = function( value ) {\\n  console.log( \\\"foo:\\\" + value );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the logging function to the callback list\\ncallbacks.add( foo );\\n​\\n// Fire the items on the list, passing an argument\\ncallbacks.fire( \\\"hello\\\" );\\n// Outputs \\\"foo: hello\\\"\\n​\\n// Lock the callbacks list\\ncallbacks.lock();\\n​\\n// Try firing the items again\\ncallbacks.fire( \\\"world\\\" );\\n​\\n// As the list was locked, no items were called,\\n// so \\\"world\\\" isn't logged\\n```\\n         * @example ​ ````Use callbacks.lock() to lock a callback list with &quot;memory,&quot; and then resume using the list:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>callbacks.lock demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n// Simple function for logging results\\nvar log = function( value ) {\\n  $( \\\"#log\\\" ).append( \\\"<p>\\\" + value + \\\"</p>\\\" );\\n};\\n​\\n// Two sample functions to be added to a callbacks list\\nvar foo = function( value ) {\\n  log( \\\"foo: \\\" + value );\\n};\\nvar bar = function( value ) {\\n  log( \\\"bar: \\\" + value );\\n};\\n​\\n// Create the callbacks object with the \\\"memory\\\" flag\\nvar callbacks = $.Callbacks( \\\"memory\\\" );\\n​\\n// Add the foo logging function to the callback list\\ncallbacks.add( foo );\\n​\\n// Fire the items on the list, passing an argument\\ncallbacks.fire( \\\"hello\\\" );\\n// Outputs \\\"foo: hello\\\"\\n​\\n// Lock the callbacks list\\ncallbacks.lock();\\n​\\n// Try firing the items again\\ncallbacks.fire( \\\"world\\\" );\\n// As the list was locked, no items were called,\\n// so \\\"foo: world\\\" isn't logged\\n​\\n// Add the foo function to the callback list again\\ncallbacks.add( foo );\\n​\\n// Try firing the items again\\ncallbacks.fire( \\\"silentArgument\\\" );\\n// Outputs \\\"foo: hello\\\" because the argument value was stored in memory\\n​\\n// Add the bar function to the callback list\\ncallbacks.add( bar );\\n​\\ncallbacks.fire( \\\"youHadMeAtHello\\\" );\\n// Outputs \\\"bar: hello\\\" because the list is still locked,\\n// and the argument value is still stored in memory\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        lock(): this;\\n        /**\\n         * Determine if the callbacks list has been locked.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.locked/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.locked() to determine the lock-state of a callback list:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar foo = function( value ) {\\n  console.log( \\\"foo: \\\" + value );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the logging function to the callback list\\ncallbacks.add( foo );\\n​\\n// Fire the items on the list, passing an argument\\ncallbacks.fire( \\\"hello\\\" );\\n// Outputs \\\"foo: hello\\\"\\n​\\n// Lock the callbacks list\\ncallbacks.lock();\\n​\\n// Test the lock-state of the list\\nconsole.log ( callbacks.locked() );\\n// true\\n```\\n         */\\n        locked(): boolean;\\n        /**\\n         * Remove a callback or a collection of callbacks from a callback list.\\n         * @param callbacks A function, or array of functions, that are to be removed from the callback list.\\n         * @see \\\\`{@link https://api.jquery.com/callbacks.remove/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````Use callbacks.remove() to remove callbacks from a callback list:\\n```javascript\\n// A sample logging function to be added to a callbacks list\\nvar foo = function( value ) {\\n  console.log( \\\"foo: \\\" + value );\\n};\\n​\\nvar callbacks = $.Callbacks();\\n​\\n// Add the function \\\"foo\\\" to the list\\ncallbacks.add( foo );\\n​\\n// Fire the items on the list\\ncallbacks.fire( \\\"hello\\\" );\\n// Outputs: \\\"foo: hello\\\"\\n​\\n// Remove \\\"foo\\\" from the callback list\\ncallbacks.remove( foo );\\n​\\n// Fire the items on the list again\\ncallbacks.fire( \\\"world\\\" );\\n​\\n// Nothing output as \\\"foo\\\" is no longer in the list\\n```\\n         */\\n        remove(...callbacks: T[]): this;\\n    }\\n\\n    // #endregion\\n\\n    // region CSS hooks\\n    // #region CSS hooks\\n\\n    // Workaround for TypeScript 2.3 which does not have support for weak types handling.\\n    type CSSHook<TElement> =\\n        Partial<_CSSHook<TElement>> & (\\n            Pick<_CSSHook<TElement>, 'get'> |\\n            Pick<_CSSHook<TElement>, 'set'>\\n        );\\n\\n    interface _CSSHook<TElement> {\\n        get(elem: TElement, computed: any, extra: any): any;\\n        set(elem: TElement, value: any): void;\\n    }\\n\\n    interface CSSHooks {\\n        // Set to HTMLElement to minimize breaks but should probably be Element.\\n        [propertyName: string]: CSSHook<HTMLElement>;\\n    }\\n\\n    // #endregion\\n\\n    // region Deferred\\n    // #region Deferred\\n\\n    /**\\n     * Any object that has a then method.\\n     */\\n    interface Thenable<T> extends PromiseLike<T> { }\\n\\n    // NOTE: This is a private copy of the global Promise interface. It is used by JQuery.PromiseBase to indicate compatibility with other Promise implementations.\\n    //       The global Promise interface cannot be used directly as it may be modified, as in the case of @types/bluebird-global.\\n    /**\\n     * Represents the completion of an asynchronous operation\\n     */\\n    interface _Promise<T> {\\n        readonly [Symbol.toStringTag]: \\\"Promise\\\";\\n        /**\\n         * Attaches callbacks for the resolution and/or rejection of the Promise.\\n         * @param onfulfilled The callback to execute when the Promise is resolved.\\n         * @param onrejected The callback to execute when the Promise is rejected.\\n         * @returns A Promise for the completion of which ever callback is executed.\\n         */\\n        then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\\n                                             onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null): _Promise<TResult1 | TResult2>;\\n        /**\\n         * Attaches a callback for only the rejection of the Promise.\\n         * @param onrejected The callback to execute when the Promise is rejected.\\n         * @returns A Promise for the completion of the callback.\\n         */\\n        catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null): _Promise<T | TResult>;\\n    }\\n\\n    // Type parameter guide\\n    // --------------------\\n    // Each type parameter represents a parameter in one of the three possible callbacks.\\n    //\\n    // The first letter indicates which position the parameter is in.\\n    //\\n    // T = A = 1st position\\n    // U = B = 2nd position\\n    // V = C = 3rd position\\n    // S = R = rest position\\n    //\\n    // The second letter indicates which whether it is a [R]esolve, Re[J]ect, or [N]otify value.\\n    //\\n    // The third letter indicates whether the value is returned in the [D]one filter, [F]ail filter, or [P]rogress filter.\\n\\n    /**\\n     * This object provides a subset of the methods of the Deferred object (then, done, fail, always, pipe, progress, state and promise) to prevent users from changing the state of the Deferred.\\n     * @see \\\\`{@link https://api.jquery.com/Types/#Promise }\\\\`\\n     */\\n    interface PromiseBase<TR, TJ, TN,\\n        UR, UJ, UN,\\n        VR, VJ, VN,\\n        SR, SJ, SN> extends _Promise<TR>, PromiseLike<TR> {\\n        /**\\n         * Add handlers to be called when the Deferred object is either resolved or rejected.\\n         * @param alwaysCallback A function, or array of functions, that is called when the Deferred is resolved or rejected.\\n         * @param alwaysCallbacks Optional additional functions, or arrays of functions, that are called when the Deferred is resolved or rejected.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.always/ }\\\\`\\n         * @since 1.6\\n         * @example ​ ````Since the jQuery.get() method returns a jqXHR object, which is derived from a Deferred object, we can attach a callback for both success and error using the deferred.always() method.\\n```javascript\\n$.get( \\\"test.php\\\" ).always(function() {\\n  alert( \\\"$.get completed with success or error callback arguments\\\" );\\n});\\n```\\n         */\\n        always(alwaysCallback: TypeOrArray<Deferred.CallbackBase<TR | TJ, UR | UJ, VR | VJ, SR | SJ>>,\\n               ...alwaysCallbacks: Array<TypeOrArray<Deferred.CallbackBase<TR | TJ, UR | UJ, VR | VJ, SR | SJ>>>): this;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved.\\n         * @param doneCallback A function, or array of functions, that are called when the Deferred is resolved.\\n         * @param doneCallbacks Optional additional functions, or arrays of functions, that are called when the Deferred is resolved.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.done/ }\\\\`\\n         * @since 1.5\\n         * @example ​ ````Since the jQuery.get method returns a jqXHR object, which is derived from a Deferred object, we can attach a success callback using the .done() method.\\n```javascript\\n$.get( \\\"test.php\\\" ).done(function() {\\n  alert( \\\"$.get succeeded\\\" );\\n});\\n```\\n         * @example ​ ````Resolve a Deferred object when the user clicks a button, triggering a number of callback functions:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>deferred.done demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Go</button>\\n<p>Ready...</p>\\n​\\n<script>\\n// 3 functions to call when the Deferred object is resolved\\nfunction fn1() {\\n  $( \\\"p\\\" ).append( \\\" 1 \\\" );\\n}\\nfunction fn2() {\\n  $( \\\"p\\\" ).append( \\\" 2 \\\" );\\n}\\nfunction fn3( n ) {\\n  $( \\\"p\\\" ).append( n + \\\" 3 \\\" + n );\\n}\\n​\\n// Create a deferred object\\nvar dfd = $.Deferred();\\n​\\n// Add handlers to be called when dfd is resolved\\ndfd\\n// .done() can take any number of functions or arrays of functions\\n  .done( [ fn1, fn2 ], fn3, [ fn2, fn1 ] )\\n// We can chain done methods, too\\n  .done(function( n ) {\\n    $( \\\"p\\\" ).append( n + \\\" we're done.\\\" );\\n  });\\n​\\n// Resolve the Deferred object when the button is clicked\\n$( \\\"button\\\" ).on( \\\"click\\\", function() {\\n  dfd.resolve( \\\"and\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        done(doneCallback: TypeOrArray<Deferred.CallbackBase<TR, UR, VR, SR>>,\\n             ...doneCallbacks: Array<TypeOrArray<Deferred.CallbackBase<TR, UR, VR, SR>>>): this;\\n        /**\\n         * Add handlers to be called when the Deferred object is rejected.\\n         * @param failCallback A function, or array of functions, that are called when the Deferred is rejected.\\n         * @param failCallbacks Optional additional functions, or arrays of functions, that are called when the Deferred is rejected.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.fail/ }\\\\`\\n         * @since 1.5\\n         * @example ​ ````Since the jQuery.get method returns a jqXHR object, which is derived from a Deferred, you can attach a success and failure callback using the deferred.done() and deferred.fail() methods.\\n```javascript\\n$.get( \\\"test.php\\\" )\\n  .done(function() {\\n    alert( \\\"$.get succeeded\\\" );\\n  })\\n  .fail(function() {\\n    alert( \\\"$.get failed!\\\" );\\n  });\\n```\\n         */\\n        fail(failCallback: TypeOrArray<Deferred.CallbackBase<TJ, UJ, VJ, SJ>>,\\n             ...failCallbacks: Array<TypeOrArray<Deferred.CallbackBase<TJ, UJ, VJ, SJ>>>): this;\\n        /**\\n         * Add handlers to be called when the Deferred object generates progress notifications.\\n         * @param progressCallback A function, or array of functions, to be called when the Deferred generates progress notifications.\\n         * @param progressCallbacks Optional additional functions, or arrays of functions, to be called when the Deferred generates\\n         *                          progress notifications.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.progress/ }\\\\`\\n         * @since 1.7\\n         */\\n        progress(progressCallback: TypeOrArray<Deferred.CallbackBase<TN, UN, VN, SN>>,\\n                 ...progressCallbacks: Array<TypeOrArray<Deferred.CallbackBase<TN, UN, VN, SN>>>): this;\\n        /**\\n         * Return a Deferred's Promise object.\\n         * @param target Object onto which the promise methods have to be attached\\n         * @see \\\\`{@link https://api.jquery.com/deferred.promise/ }\\\\`\\n         * @since 1.5\\n         * @example ​ ````Create a Deferred and set two timer-based functions to either resolve or reject the Deferred after a random interval. Whichever one fires first &quot;wins&quot; and will call one of the callbacks. The second timeout has no effect since the Deferred is already complete (in a resolved or rejected state) from the first timeout action. Also set a timer-based progress notification function, and call a progress handler that adds &quot;working...&quot; to the document body.\\n```javascript\\nfunction asyncEvent() {\\n  var dfd = jQuery.Deferred();\\n​\\n  // Resolve after a random interval\\n  setTimeout(function() {\\n    dfd.resolve( \\\"hurray\\\" );\\n  }, Math.floor( 400 + Math.random() * 2000 ) );\\n​\\n  // Reject after a random interval\\n  setTimeout(function() {\\n    dfd.reject( \\\"sorry\\\" );\\n  }, Math.floor( 400 + Math.random() * 2000 ) );\\n​\\n  // Show a \\\"working...\\\" message every half-second\\n  setTimeout(function working() {\\n    if ( dfd.state() === \\\"pending\\\" ) {\\n      dfd.notify( \\\"working... \\\" );\\n      setTimeout( working, 500 );\\n    }\\n  }, 1 );\\n​\\n  // Return the Promise so caller can't change the Deferred\\n  return dfd.promise();\\n}\\n​\\n// Attach a done, fail, and progress handler for the asyncEvent\\n$.when( asyncEvent() ).then(\\n  function( status ) {\\n    alert( status + \\\", things are going well\\\" );\\n  },\\n  function( status ) {\\n    alert( status + \\\", you fail this time\\\" );\\n  },\\n  function( status ) {\\n    $( \\\"body\\\" ).append( status );\\n  }\\n);\\n```\\n         */\\n        promise<TTarget extends object>(target: TTarget): this & TTarget;\\n        /**\\n         * Return a Deferred's Promise object.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.promise/ }\\\\`\\n         * @since 1.5\\n         * @example ​ ````Use the target argument to promote an existing object to a Promise:\\n```javascript\\n// Existing object\\nvar obj = {\\n    hello: function( name ) {\\n      alert( \\\"Hello \\\" + name );\\n    }\\n  },\\n  // Create a Deferred\\n  defer = $.Deferred();\\n​\\n// Set object as a promise\\ndefer.promise( obj );\\n​\\n// Resolve the deferred\\ndefer.resolve( \\\"John\\\" );\\n​\\n// Use the object as a Promise\\nobj.done(function( name ) {\\n  obj.hello( name ); // Will alert \\\"Hello John\\\"\\n}).hello( \\\"Karl\\\" ); // Will alert \\\"Hello Karl\\\"\\n```\\n         */\\n        promise(): this;\\n        /**\\n         * Determine the current state of a Deferred object.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.state/ }\\\\`\\n         * @since 1.7\\n         */\\n        state(): 'pending' | 'resolved' | 'rejected';\\n\\n        // region pipe\\n        // #region pipe\\n\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter resolve value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe(function( value ) {\\n    return value * 2;\\n  });\\n​\\ndefer.resolve( 5 );\\nfiltered.done(function( value ) {\\n  alert( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n});\\n```\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: (t: TR, u: UR, v: VR, ...s: SR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: (t: TJ, u: UJ, v: VJ, ...s: SJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<AJF> | AJF,\\n                progressFilter: (t: TN, u: UN, v: VN, ...s: SN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARD | ARF | ARP, AJD | AJF | AJP, AND | ANF | ANP,\\n            BRD | BRF | BRP, BJD | BJF | BJP, BND | BNF | BNP,\\n            CRD | CRF | CRP, CJD | CJF | CJP, CND | CNF | CNP,\\n            RRD | RRF | RRP, RJD | RJF | RJP, RND | RNF | RNP>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: null,\\n                failFilter: (t: TJ, u: UJ, v: VJ, ...s: SJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<AJF> | AJF,\\n                progressFilter: (t: TN, u: UN, v: VN, ...s: SN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARF | ARP, AJF | AJP, ANF | ANP,\\n            BRF | BRP, BJF | BJP, BNF | BNP,\\n            CRF | CRP, CJF | CJP, CNF | CNP,\\n            RRF | RRP, RJF | RJP, RNF | RNP>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter resolve value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe(function( value ) {\\n    return value * 2;\\n  });\\n​\\ndefer.resolve( 5 );\\nfiltered.done(function( value ) {\\n  alert( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: (t: TR, u: UR, v: VR, ...s: SR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: null,\\n                progressFilter: (t: TN, u: UN, v: VN, ...s: SN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARD | ARP, AJD | AJP, AND | ANP,\\n            BRD | BRP, BJD | BJP, BND | BNP,\\n            CRD | CRP, CJD | CJP, CND | CNP,\\n            RRD | RRP, RJD | RJP, RND | RNP>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: null,\\n                failFilter: null,\\n                progressFilter?: (t: TN, u: UN, v: VN, ...s: SN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARP, AJP, ANP,\\n            BRP, BJP, BNP,\\n            CRP, CJP, CNP,\\n            RRP, RJP, RNP>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter resolve value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe(function( value ) {\\n    return value * 2;\\n  });\\n​\\ndefer.resolve( 5 );\\nfiltered.done(function( value ) {\\n  alert( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n});\\n```\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never>(\\n                doneFilter: (t: TR, u: UR, v: VR, ...s: SR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: (t: TJ, u: UJ, v: VJ, ...s: SJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<AJF> | AJF,\\n                progressFilter?: null): PromiseBase<ARD | ARF, AJD | AJF, AND | ANF,\\n            BRD | BRF, BJD | BJF, BND | BNF,\\n            CRD | CRF, CJD | CJF, CND | CNF,\\n            RRD | RRF, RJD | RJF, RND | RNF>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never>(\\n                doneFilter: null,\\n                failFilter: (t: TJ, u: UJ, v: VJ, ...s: SJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<AJF> | AJF,\\n                progressFilter?: null): PromiseBase<ARF, AJF, ANF,\\n            BRF, BJF, BNF,\\n            CRF, CJF, CNF,\\n            RRF, RJF, RNF>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter resolve value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe(function( value ) {\\n    return value * 2;\\n  });\\n​\\ndefer.resolve( 5 );\\nfiltered.done(function( value ) {\\n  alert( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never>(\\n                doneFilter: (t: TR, u: UR, v: VR, ...s: SR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter?: null,\\n                progressFilter?: null): PromiseBase<ARD, AJD, AND,\\n            BRD, BJD, BND,\\n            CRD, CJD, CND,\\n            RRD, RJD, RND>;\\n\\n        // #endregion\\n\\n        // region then\\n        // #region then\\n\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Since the jQuery.get method returns a jqXHR object, which is derived from a Deferred object, we can attach handlers using the .then method.\\n```javascript\\n$.get( \\\"test.php\\\" ).then(\\n  function() {\\n    alert( \\\"$.get succeeded\\\" );\\n  }, function() {\\n    alert( \\\"$.get failed!\\\" );\\n  }\\n);\\n```\\n         * @example ​ ````Filter the resolve value:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>deferred.then demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Filter Resolve</button>\\n<p></p>\\n​\\n<script>\\nvar filterResolve = function() {\\n  var defer = $.Deferred(),\\n    filtered = defer.then(function( value ) {\\n      return value * 2;\\n    });\\n​\\n  defer.resolve( 5 );\\n  filtered.done(function( value ) {\\n    $( \\\"p\\\" ).html( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n  });\\n};\\n​\\n$( \\\"button\\\" ).on( \\\"click\\\", filterResolve );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.then( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: (t: TR, u: UR, v: VR, ...s: SR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: (t: TJ, u: UJ, v: VJ, ...s: SJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<ARF> | ARF,\\n                progressFilter: (t: TN, u: UN, v: VN, ...s: SN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARD | ARF | ARP, AJD | AJF | AJP, AND | ANF | ANP,\\n            BRD | BRF | BRP, BJD | BJF | BJP, BND | BNF | BNP,\\n            CRD | CRF | CRP, CJD | CJF | CJP, CND | CNF | CNP,\\n            RRD | RRF | RRP, RJD | RJF | RJP, RND | RNF | RNP>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.then( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: null,\\n                failFilter: (t: TJ, u: UJ, v: VJ, ...s: SJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<ARF> | ARF,\\n                progressFilter: (t: TN, u: UN, v: VN, ...s: SN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARF | ARP, AJF | AJP, ANF | ANP,\\n            BRF | BRP, BJF | BJP, BNF | BNP,\\n            CRF | CRP, CJF | CJP, CNF | CNP,\\n            RRF | RRP, RJF | RJP, RNF | RNP>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Filter the resolve value:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>deferred.then demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Filter Resolve</button>\\n<p></p>\\n​\\n<script>\\nvar filterResolve = function() {\\n  var defer = $.Deferred(),\\n    filtered = defer.then(function( value ) {\\n      return value * 2;\\n    });\\n​\\n  defer.resolve( 5 );\\n  filtered.done(function( value ) {\\n    $( \\\"p\\\" ).html( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n  });\\n};\\n​\\n$( \\\"button\\\" ).on( \\\"click\\\", filterResolve );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: (t: TR, u: UR, v: VR, ...s: SR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: null,\\n                progressFilter: (t: TN, u: UN, v: VN, ...s: SN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARD | ARP, AJD | AJP, AND | ANP,\\n            BRD | BRP, BJD | BJP, BND | BNP,\\n            CRD | CRP, CJD | CJP, CND | CNP,\\n            RRD | RRP, RJD | RJP, RND | RNP>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: null,\\n                failFilter: null,\\n                progressFilter?: (t: TN, u: UN, v: VN, ...s: SN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARP, AJP, ANP,\\n            BRP, BJP, BNP,\\n            CRP, CJP, CNP,\\n            RRP, RJP, RNP>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Since the jQuery.get method returns a jqXHR object, which is derived from a Deferred object, we can attach handlers using the .then method.\\n```javascript\\n$.get( \\\"test.php\\\" ).then(\\n  function() {\\n    alert( \\\"$.get succeeded\\\" );\\n  }, function() {\\n    alert( \\\"$.get failed!\\\" );\\n  }\\n);\\n```\\n         * @example ​ ````Filter the resolve value:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>deferred.then demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Filter Resolve</button>\\n<p></p>\\n​\\n<script>\\nvar filterResolve = function() {\\n  var defer = $.Deferred(),\\n    filtered = defer.then(function( value ) {\\n      return value * 2;\\n    });\\n​\\n  defer.resolve( 5 );\\n  filtered.done(function( value ) {\\n    $( \\\"p\\\" ).html( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n  });\\n};\\n​\\n$( \\\"button\\\" ).on( \\\"click\\\", filterResolve );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.then( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never>(\\n                doneFilter: (t: TR, u: UR, v: VR, ...s: SR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: (t: TJ, u: UJ, v: VJ, ...s: SJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<ARF> | ARF,\\n                progressFilter?: null): PromiseBase<ARD | ARF, AJD | AJF, AND | ANF,\\n            BRD | BRF, BJD | BJF, BND | BNF,\\n            CRD | CRF, CJD | CJF, CND | CNF,\\n            RRD | RRF, RJD | RJF, RND | RNF>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.then( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never>(\\n                doneFilter: null,\\n                failFilter: (t: TJ, u: UJ, v: VJ, ...s: SJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<ARF> | ARF,\\n                progressFilter?: null): PromiseBase<ARF, AJF, ANF,\\n            BRF, BJF, BNF,\\n            CRF, CJF, CNF,\\n            RRF, RJF, RNF>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Filter the resolve value:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>deferred.then demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Filter Resolve</button>\\n<p></p>\\n​\\n<script>\\nvar filterResolve = function() {\\n  var defer = $.Deferred(),\\n    filtered = defer.then(function( value ) {\\n      return value * 2;\\n    });\\n​\\n  defer.resolve( 5 );\\n  filtered.done(function( value ) {\\n    $( \\\"p\\\" ).html( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n  });\\n};\\n​\\n$( \\\"button\\\" ).on( \\\"click\\\", filterResolve );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never>(\\n                doneFilter: (t: TR, u: UR, v: VR, ...s: SR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter?: null,\\n                progressFilter?: null): PromiseBase<ARD, AJD, AND,\\n            BRD, BJD, BND,\\n            CRD, CJD, CND,\\n            RRD, RJD, RND>;\\n\\n        // #endregion\\n\\n        /**\\n         * Add handlers to be called when the Deferred object is rejected.\\n         * @param failFilter A function that is called when the Deferred is rejected.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.catch/ }\\\\`\\n         * @since 3.0\\n         * @example ​ ````Since the jQuery.get method returns a jqXHR object, which is derived from a Deferred object, we can rejection handlers using the .catch method.\\n```javascript\\n$.get( \\\"test.php\\\" )\\n  .then( function() {\\n    alert( \\\"$.get succeeded\\\" );\\n  } )\\n  .catch( function() {\\n    alert( \\\"$.get failed!\\\" );\\n  } );\\n```\\n         */\\n        catch<ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never>(\\n                failFilter?: ((t: TJ, u: UJ, v: VJ, ...s: SJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<ARF> | ARF) | null): PromiseBase<ARF, AJF, ANF,\\n            BRF, BJF, BNF,\\n            CRF, CJF, CNF,\\n            RRF, RJF, RNF>;\\n    }\\n\\n    /**\\n     * This object provides a subset of the methods of the Deferred object (then, done, fail, always, pipe, progress, state and promise) to prevent users from changing the state of the Deferred.\\n     * @see \\\\`{@link https://api.jquery.com/Types/#Promise }\\\\`\\n     */\\n    interface Promise3<TR, TJ, TN,\\n        UR, UJ, UN,\\n        VR, VJ, VN> extends PromiseBase<TR, TJ, TN,\\n        UR, UJ, UN,\\n        VR, VJ, VN,\\n        never, never, never> { }\\n\\n    /**\\n     * This object provides a subset of the methods of the Deferred object (then, done, fail, always, pipe, progress, state and promise) to prevent users from changing the state of the Deferred.\\n     * @see \\\\`{@link https://api.jquery.com/Types/#Promise }\\\\`\\n     */\\n    interface Promise2<TR, TJ, TN,\\n        UR, UJ, UN> extends PromiseBase<TR, TJ, TN,\\n        UR, UJ, UN,\\n        never, never, never,\\n        never, never, never> { }\\n\\n    /**\\n     * This object provides a subset of the methods of the Deferred object (then, done, fail, always, pipe, progress, state and promise) to prevent users from changing the state of the Deferred.\\n     * @see \\\\`{@link https://api.jquery.com/Types/#Promise }\\\\`\\n     */\\n    interface Promise<TR, TJ = any, TN = any> extends PromiseBase<TR, TJ, TN,\\n        TR, TJ, TN,\\n        TR, TJ, TN,\\n        TR, TJ, TN> { }\\n\\n    interface DeferredStatic {\\n        // https://jquery.com/upgrade-guide/3.0/#callback-exit\\n        exceptionHook: any;\\n        /**\\n         * A factory function that returns a chainable utility object with methods to register multiple callbacks into callback queues, invoke callback queues, and relay the success or failure state of any synchronous or asynchronous function.\\n         * @param beforeStart A function that is called just before the constructor returns.\\n         * @see \\\\`{@link https://api.jquery.com/jQuery.Deferred/ }\\\\`\\n         * @since 1.5\\n         */\\n        <TR = any, TJ = any, TN = any>(beforeStart?: (this: Deferred<TR, TJ, TN>, deferred: Deferred<TR, TJ, TN>) => void): Deferred<TR, TJ, TN>;\\n    }\\n\\n    interface Deferred<TR, TJ = any, TN = any> {\\n        /**\\n         * Call the progressCallbacks on a Deferred object with the given args.\\n         * @param args Optional arguments that are passed to the progressCallbacks.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.notify/ }\\\\`\\n         * @since 1.7\\n         */\\n        notify(...args: TN[]): this;\\n        /**\\n         * Call the progressCallbacks on a Deferred object with the given context and args.\\n         * @param context Context passed to the progressCallbacks as the this object.\\n         * @param args An optional array of arguments that are passed to the progressCallbacks.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.notifyWith/ }\\\\`\\n         * @since 1.7\\n         */\\n        notifyWith(context: object, args?: ArrayLike<TN>): this;\\n        /**\\n         * Reject a Deferred object and call any failCallbacks with the given args.\\n         * @param args Optional arguments that are passed to the failCallbacks.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.reject/ }\\\\`\\n         * @since 1.5\\n         */\\n        reject(...args: TJ[]): this;\\n        /**\\n         * Reject a Deferred object and call any failCallbacks with the given context and args.\\n         * @param context Context passed to the failCallbacks as the this object.\\n         * @param args An optional array of arguments that are passed to the failCallbacks.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.rejectWith/ }\\\\`\\n         * @since 1.5\\n         */\\n        rejectWith(context: object, args?: ArrayLike<TJ>): this;\\n        /**\\n         * Resolve a Deferred object and call any doneCallbacks with the given args.\\n         * @param args Optional arguments that are passed to the doneCallbacks.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.resolve/ }\\\\`\\n         * @since 1.5\\n         */\\n        resolve(...args: TR[]): this;\\n        /**\\n         * Resolve a Deferred object and call any doneCallbacks with the given context and args.\\n         * @param context Context passed to the doneCallbacks as the this object.\\n         * @param args An optional array of arguments that are passed to the doneCallbacks.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.resolveWith/ }\\\\`\\n         * @since 1.5\\n         */\\n        resolveWith(context: object, args?: ArrayLike<TR>): this;\\n\\n        /**\\n         * Add handlers to be called when the Deferred object is either resolved or rejected.\\n         * @param alwaysCallback A function, or array of functions, that is called when the Deferred is resolved or rejected.\\n         * @param alwaysCallbacks Optional additional functions, or arrays of functions, that are called when the Deferred is resolved or rejected.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.always/ }\\\\`\\n         * @since 1.6\\n         * @example ​ ````Since the jQuery.get() method returns a jqXHR object, which is derived from a Deferred object, we can attach a callback for both success and error using the deferred.always() method.\\n```javascript\\n$.get( \\\"test.php\\\" ).always(function() {\\n  alert( \\\"$.get completed with success or error callback arguments\\\" );\\n});\\n```\\n         */\\n        always(alwaysCallback: TypeOrArray<Deferred.Callback<TR | TJ>>,\\n               ...alwaysCallbacks: Array<TypeOrArray<Deferred.Callback<TR | TJ>>>): this;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved.\\n         * @param doneCallback A function, or array of functions, that are called when the Deferred is resolved.\\n         * @param doneCallbacks Optional additional functions, or arrays of functions, that are called when the Deferred is resolved.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.done/ }\\\\`\\n         * @since 1.5\\n         * @example ​ ````Since the jQuery.get method returns a jqXHR object, which is derived from a Deferred object, we can attach a success callback using the .done() method.\\n```javascript\\n$.get( \\\"test.php\\\" ).done(function() {\\n  alert( \\\"$.get succeeded\\\" );\\n});\\n```\\n         * @example ​ ````Resolve a Deferred object when the user clicks a button, triggering a number of callback functions:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>deferred.done demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Go</button>\\n<p>Ready...</p>\\n​\\n<script>\\n// 3 functions to call when the Deferred object is resolved\\nfunction fn1() {\\n  $( \\\"p\\\" ).append( \\\" 1 \\\" );\\n}\\nfunction fn2() {\\n  $( \\\"p\\\" ).append( \\\" 2 \\\" );\\n}\\nfunction fn3( n ) {\\n  $( \\\"p\\\" ).append( n + \\\" 3 \\\" + n );\\n}\\n​\\n// Create a deferred object\\nvar dfd = $.Deferred();\\n​\\n// Add handlers to be called when dfd is resolved\\ndfd\\n// .done() can take any number of functions or arrays of functions\\n  .done( [ fn1, fn2 ], fn3, [ fn2, fn1 ] )\\n// We can chain done methods, too\\n  .done(function( n ) {\\n    $( \\\"p\\\" ).append( n + \\\" we're done.\\\" );\\n  });\\n​\\n// Resolve the Deferred object when the button is clicked\\n$( \\\"button\\\" ).on( \\\"click\\\", function() {\\n  dfd.resolve( \\\"and\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        done(doneCallback: TypeOrArray<Deferred.Callback<TR>>,\\n             ...doneCallbacks: Array<TypeOrArray<Deferred.Callback<TR>>>): this;\\n        /**\\n         * Add handlers to be called when the Deferred object is rejected.\\n         * @param failCallback A function, or array of functions, that are called when the Deferred is rejected.\\n         * @param failCallbacks Optional additional functions, or arrays of functions, that are called when the Deferred is rejected.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.fail/ }\\\\`\\n         * @since 1.5\\n         * @example ​ ````Since the jQuery.get method returns a jqXHR object, which is derived from a Deferred, you can attach a success and failure callback using the deferred.done() and deferred.fail() methods.\\n```javascript\\n$.get( \\\"test.php\\\" )\\n  .done(function() {\\n    alert( \\\"$.get succeeded\\\" );\\n  })\\n  .fail(function() {\\n    alert( \\\"$.get failed!\\\" );\\n  });\\n```\\n         */\\n        fail(failCallback: TypeOrArray<Deferred.Callback<TJ>>,\\n             ...failCallbacks: Array<TypeOrArray<Deferred.Callback<TJ>>>): this;\\n        /**\\n         * Add handlers to be called when the Deferred object generates progress notifications.\\n         * @param progressCallback A function, or array of functions, to be called when the Deferred generates progress notifications.\\n         * @param progressCallbacks Optional additional functions, or arrays of functions, to be called when the Deferred generates\\n         *                          progress notifications.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.progress/ }\\\\`\\n         * @since 1.7\\n         */\\n        progress(progressCallback: TypeOrArray<Deferred.Callback<TN>>,\\n                 ...progressCallbacks: Array<TypeOrArray<Deferred.Callback<TN>>>): this;\\n        /**\\n         * Return a Deferred's Promise object.\\n         * @param target Object onto which the promise methods have to be attached\\n         * @see \\\\`{@link https://api.jquery.com/deferred.promise/ }\\\\`\\n         * @since 1.5\\n         * @example ​ ````Use the target argument to promote an existing object to a Promise:\\n```javascript\\n// Existing object\\nvar obj = {\\n    hello: function( name ) {\\n      alert( \\\"Hello \\\" + name );\\n    }\\n  },\\n  // Create a Deferred\\n  defer = $.Deferred();\\n​\\n// Set object as a promise\\ndefer.promise( obj );\\n​\\n// Resolve the deferred\\ndefer.resolve( \\\"John\\\" );\\n​\\n// Use the object as a Promise\\nobj.done(function( name ) {\\n  obj.hello( name ); // Will alert \\\"Hello John\\\"\\n}).hello( \\\"Karl\\\" ); // Will alert \\\"Hello Karl\\\"\\n```\\n         */\\n        promise<TTarget extends object>(target: TTarget): Promise<TR, TJ, TN> & TTarget;\\n        /**\\n         * Return a Deferred's Promise object.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.promise/ }\\\\`\\n         * @since 1.5\\n         * @example ​ ````Create a Deferred and set two timer-based functions to either resolve or reject the Deferred after a random interval. Whichever one fires first &quot;wins&quot; and will call one of the callbacks. The second timeout has no effect since the Deferred is already complete (in a resolved or rejected state) from the first timeout action. Also set a timer-based progress notification function, and call a progress handler that adds &quot;working...&quot; to the document body.\\n```javascript\\nfunction asyncEvent() {\\n  var dfd = jQuery.Deferred();\\n​\\n  // Resolve after a random interval\\n  setTimeout(function() {\\n    dfd.resolve( \\\"hurray\\\" );\\n  }, Math.floor( 400 + Math.random() * 2000 ) );\\n​\\n  // Reject after a random interval\\n  setTimeout(function() {\\n    dfd.reject( \\\"sorry\\\" );\\n  }, Math.floor( 400 + Math.random() * 2000 ) );\\n​\\n  // Show a \\\"working...\\\" message every half-second\\n  setTimeout(function working() {\\n    if ( dfd.state() === \\\"pending\\\" ) {\\n      dfd.notify( \\\"working... \\\" );\\n      setTimeout( working, 500 );\\n    }\\n  }, 1 );\\n​\\n  // Return the Promise so caller can't change the Deferred\\n  return dfd.promise();\\n}\\n​\\n// Attach a done, fail, and progress handler for the asyncEvent\\n$.when( asyncEvent() ).then(\\n  function( status ) {\\n    alert( status + \\\", things are going well\\\" );\\n  },\\n  function( status ) {\\n    alert( status + \\\", you fail this time\\\" );\\n  },\\n  function( status ) {\\n    $( \\\"body\\\" ).append( status );\\n  }\\n);\\n```\\n         */\\n        promise(): Promise<TR, TJ, TN>;\\n        /**\\n         * Determine the current state of a Deferred object.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.state/ }\\\\`\\n         * @since 1.7\\n         */\\n        state(): 'pending' | 'resolved' | 'rejected';\\n\\n        // region pipe\\n        // #region pipe\\n\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter resolve value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe(function( value ) {\\n    return value * 2;\\n  });\\n​\\ndefer.resolve( 5 );\\nfiltered.done(function( value ) {\\n  alert( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n});\\n```\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: (...t: TR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: (...t: TJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<AJF> | AJF,\\n                progressFilter: (...t: TN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARD | ARF | ARP, AJD | AJF | AJP, AND | ANF | ANP,\\n            BRD | BRF | BRP, BJD | BJF | BJP, BND | BNF | BNP,\\n            CRD | CRF | CRP, CJD | CJF | CJP, CND | CNF | CNP,\\n            RRD | RRF | RRP, RJD | RJF | RJP, RND | RNF | RNP>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: null,\\n                failFilter: (...t: TJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<AJF> | AJF,\\n                progressFilter: (...t: TN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARF | ARP, AJF | AJP, ANF | ANP,\\n            BRF | BRP, BJF | BJP, BNF | BNP,\\n            CRF | CRP, CJF | CJP, CNF | CNP,\\n            RRF | RRP, RJF | RJP, RNF | RNP>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter resolve value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe(function( value ) {\\n    return value * 2;\\n  });\\n​\\ndefer.resolve( 5 );\\nfiltered.done(function( value ) {\\n  alert( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: (...t: TR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: null,\\n                progressFilter: (...t: TN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARD | ARP, AJD | AJP, AND | ANP,\\n            BRD | BRP, BJD | BJP, BND | BNP,\\n            CRD | CRP, CJD | CJP, CND | CNP,\\n            RRD | RRP, RJD | RJP, RND | RNP>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: null,\\n                failFilter: null,\\n                progressFilter?: (...t: TN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARP, AJP, ANP,\\n            BRP, BJP, BNP,\\n            CRP, CJP, CNP,\\n            RRP, RJP, RNP>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter resolve value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe(function( value ) {\\n    return value * 2;\\n  });\\n​\\ndefer.resolve( 5 );\\nfiltered.done(function( value ) {\\n  alert( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n});\\n```\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never>(\\n                doneFilter: (...t: TR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: (...t: TJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<AJF> | AJF,\\n                progressFilter?: null): PromiseBase<ARD | ARF, AJD | AJF, AND | ANF,\\n            BRD | BRF, BJD | BJF, BND | BNF,\\n            CRD | CRF, CJD | CJF, CND | CNF,\\n            RRD | RRF, RJD | RJF, RND | RNF>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never>(\\n                doneFilter: null,\\n                failFilter: (...t: TJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<AJF> | AJF,\\n                progressFilter?: null): PromiseBase<ARF, AJF, ANF,\\n            BRF, BJF, BNF,\\n            CRF, CJF, CNF,\\n            RRF, RJF, RNF>;\\n        /**\\n         * Utility method to filter and/or chain Deferreds.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.pipe/ }\\\\`\\n         * @since 1.6\\n         * @since 1.7\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link then }\\\\`.\\n         *\\n         * **Cause**: The `.pipe()` method on a `jQuery.Deferred` object was deprecated as of jQuery 1.8, when the `.then()` method was changed to perform the same function.\\n         *\\n         * **Solution**: In most cases it is sufficient to change all occurrences of `.pipe()` to `.then()`. Ensure that you aren't relying on context/state propagation (e.g., using `this`) or synchronous callback invocation, which were dropped from `.then()` for Promises/A+ interoperability as of jQuery 3.0.\\n         * @example ​ ````Filter resolve value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.pipe(function( value ) {\\n    return value * 2;\\n  });\\n​\\ndefer.resolve( 5 );\\nfiltered.done(function( value ) {\\n  alert( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.pipe(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        pipe<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never>(\\n                doneFilter: (...t: TR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter?: null,\\n                progressFilter?: null): PromiseBase<ARD, AJD, AND,\\n            BRD, BJD, BND,\\n            CRD, CJD, CND,\\n            RRD, RJD, RND>;\\n\\n        // #endregion\\n\\n        // region then\\n        // #region then\\n\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter A function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Since the jQuery.get method returns a jqXHR object, which is derived from a Deferred object, we can attach handlers using the .then method.\\n```javascript\\n$.get( \\\"test.php\\\" ).then(\\n  function() {\\n    alert( \\\"$.get succeeded\\\" );\\n  }, function() {\\n    alert( \\\"$.get failed!\\\" );\\n  }\\n);\\n```\\n         * @example ​ ````Filter the resolve value:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>deferred.then demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Filter Resolve</button>\\n<p></p>\\n​\\n<script>\\nvar filterResolve = function() {\\n  var defer = $.Deferred(),\\n    filtered = defer.then(function( value ) {\\n      return value * 2;\\n    });\\n​\\n  defer.resolve( 5 );\\n  filtered.done(function( value ) {\\n    $( \\\"p\\\" ).html( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n  });\\n};\\n​\\n$( \\\"button\\\" ).on( \\\"click\\\", filterResolve );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.then( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: (...t: TR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: (...t: TJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<ARF> | ARF,\\n                progressFilter: (...t: TN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARD | ARF | ARP, AJD | AJF | AJP, AND | ANF | ANP,\\n            BRD | BRF | BRP, BJD | BJF | BJP, BND | BNF | BNP,\\n            CRD | CRF | CRP, CJD | CJF | CJP, CND | CNF | CNP,\\n            RRD | RRF | RRP, RJD | RJF | RJP, RND | RNF | RNP>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter A function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.then( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: null,\\n                failFilter: (...t: TJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<ARF> | ARF,\\n                progressFilter: (...t: TN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARF | ARP, AJF | AJP, ANF | ANP,\\n            BRF | BRP, BJF | BJP, BNF | BNP,\\n            CRF | CRP, CJF | CJP, CNF | CNP,\\n            RRF | RRP, RJF | RJP, RNF | RNP>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter A function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Filter the resolve value:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>deferred.then demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Filter Resolve</button>\\n<p></p>\\n​\\n<script>\\nvar filterResolve = function() {\\n  var defer = $.Deferred(),\\n    filtered = defer.then(function( value ) {\\n      return value * 2;\\n    });\\n​\\n  defer.resolve( 5 );\\n  filtered.done(function( value ) {\\n    $( \\\"p\\\" ).html( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n  });\\n};\\n​\\n$( \\\"button\\\" ).on( \\\"click\\\", filterResolve );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: (...t: TR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: null,\\n                progressFilter: (...t: TN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARD | ARP, AJD | AJP, AND | ANP,\\n            BRD | BRP, BJD | BJP, BND | BNP,\\n            CRD | CRP, CJD | CJP, CND | CNP,\\n            RRD | RRP, RJD | RJP, RND | RNP>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter A function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARP = never, AJP = never, ANP = never,\\n            BRP = never, BJP = never, BNP = never,\\n            CRP = never, CJP = never, CNP = never,\\n            RRP = never, RJP = never, RNP = never>(\\n                doneFilter: null,\\n                failFilter: null,\\n                progressFilter?: (...t: TN[]) => PromiseBase<ARP, AJP, ANP,\\n                    BRP, BJP, BNP,\\n                    CRP, CJP, CNP,\\n                    RRP, RJP, RNP> | Thenable<ANP> | ANP): PromiseBase<ARP, AJP, ANP,\\n            BRP, BJP, BNP,\\n            CRP, CJP, CNP,\\n            RRP, RJP, RNP>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Since the jQuery.get method returns a jqXHR object, which is derived from a Deferred object, we can attach handlers using the .then method.\\n```javascript\\n$.get( \\\"test.php\\\" ).then(\\n  function() {\\n    alert( \\\"$.get succeeded\\\" );\\n  }, function() {\\n    alert( \\\"$.get failed!\\\" );\\n  }\\n);\\n```\\n         * @example ​ ````Filter the resolve value:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>deferred.then demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Filter Resolve</button>\\n<p></p>\\n​\\n<script>\\nvar filterResolve = function() {\\n  var defer = $.Deferred(),\\n    filtered = defer.then(function( value ) {\\n      return value * 2;\\n    });\\n​\\n  defer.resolve( 5 );\\n  filtered.done(function( value ) {\\n    $( \\\"p\\\" ).html( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n  });\\n};\\n​\\n$( \\\"button\\\" ).on( \\\"click\\\", filterResolve );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.then( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never,\\n            ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never>(\\n                doneFilter: (...t: TR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter: (...t: TJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<ARF> | ARF,\\n                progressFilter?: null): PromiseBase<ARD | ARF, AJD | AJF, AND | ANF,\\n            BRD | BRF, BJD | BJF, BND | BNF,\\n            CRD | CRF, CJD | CJF, CND | CNF,\\n            RRD | RRF, RJD | RJF, RND | RNF>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Filter reject value:\\n```javascript\\nvar defer = $.Deferred(),\\n  filtered = defer.then( null, function( value ) {\\n    return value * 3;\\n  });\\n​\\ndefer.reject( 6 );\\nfiltered.fail(function( value ) {\\n  alert( \\\"Value is ( 3*6 = ) 18: \\\" + value );\\n});\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never>(\\n                doneFilter: null,\\n                failFilter: (...t: TJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<ARF> | ARF,\\n                progressFilter?: null): PromiseBase<ARF, AJF, ANF,\\n            BRF, BJF, BNF,\\n            CRF, CJF, CNF,\\n            RRF, RJF, RNF>;\\n        /**\\n         * Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.\\n         * @param doneFilter An optional function that is called when the Deferred is resolved.\\n         * @param failFilter An optional function that is called when the Deferred is rejected.\\n         * @param progressFilter An optional function that is called when progress notifications are sent to the Deferred.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.then/ }\\\\`\\n         * @since 1.8\\n         * @example ​ ````Filter the resolve value:\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>deferred.then demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>Filter Resolve</button>\\n<p></p>\\n​\\n<script>\\nvar filterResolve = function() {\\n  var defer = $.Deferred(),\\n    filtered = defer.then(function( value ) {\\n      return value * 2;\\n    });\\n​\\n  defer.resolve( 5 );\\n  filtered.done(function( value ) {\\n    $( \\\"p\\\" ).html( \\\"Value is ( 2*5 = ) 10: \\\" + value );\\n  });\\n};\\n​\\n$( \\\"button\\\" ).on( \\\"click\\\", filterResolve );\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Chain tasks:\\n```javascript\\nvar request = $.ajax( url, { dataType: \\\"json\\\" } ),\\n  chained = request.then(function( data ) {\\n    return $.ajax( url2, { data: { user: data.userId } } );\\n  });\\n​\\nchained.done(function( data ) {\\n  // data retrieved from url2 as provided by the first request\\n});\\n```\\n         */\\n        then<ARD = never, AJD = never, AND = never,\\n            BRD = never, BJD = never, BND = never,\\n            CRD = never, CJD = never, CND = never,\\n            RRD = never, RJD = never, RND = never>(\\n                doneFilter: (...t: TR[]) => PromiseBase<ARD, AJD, AND,\\n                    BRD, BJD, BND,\\n                    CRD, CJD, CND,\\n                    RRD, RJD, RND> | Thenable<ARD> | ARD,\\n                failFilter?: null,\\n                progressFilter?: null): PromiseBase<ARD, AJD, AND,\\n            BRD, BJD, BND,\\n            CRD, CJD, CND,\\n            RRD, RJD, RND>;\\n\\n        // #endregion\\n\\n        /**\\n         * Add handlers to be called when the Deferred object is rejected.\\n         * @param failFilter A function that is called when the Deferred is rejected.\\n         * @see \\\\`{@link https://api.jquery.com/deferred.catch/ }\\\\`\\n         * @since 3.0\\n         * @example ​ ````Since the jQuery.get method returns a jqXHR object, which is derived from a Deferred object, we can rejection handlers using the .catch method.\\n```javascript\\n$.get( \\\"test.php\\\" )\\n  .then( function() {\\n    alert( \\\"$.get succeeded\\\" );\\n  } )\\n  .catch( function() {\\n    alert( \\\"$.get failed!\\\" );\\n  } );\\n```\\n         */\\n        catch<ARF = never, AJF = never, ANF = never,\\n            BRF = never, BJF = never, BNF = never,\\n            CRF = never, CJF = never, CNF = never,\\n            RRF = never, RJF = never, RNF = never>(\\n                failFilter?: ((...t: TJ[]) => PromiseBase<ARF, AJF, ANF,\\n                    BRF, BJF, BNF,\\n                    CRF, CJF, CNF,\\n                    RRF, RJF, RNF> | Thenable<ARF> | ARF) | null): PromiseBase<ARF, AJF, ANF,\\n            BRF, BJF, BNF,\\n            CRF, CJF, CNF,\\n            RRF, RJF, RNF>;\\n    }\\n\\n    namespace Deferred {\\n        type CallbackBase<T, U, V, R> = (t: T, u: U, v: V, ...r: R[]) => void;\\n\\n        interface Callback3<T, U, V> extends CallbackBase<T, U, V, never> { }\\n\\n        type Callback<T> = (...args: T[]) => void;\\n\\n        /**\\n         * @deprecated ​ Deprecated. Use \\\\`{@link Callback }\\\\`.\\n         */\\n        interface DoneCallback<TResolve> extends Callback<TResolve> { }\\n\\n        /**\\n         * @deprecated ​ Deprecated. Use \\\\`{@link Callback }\\\\`.\\n         */\\n        interface FailCallback<TReject> extends Callback<TReject> { }\\n\\n        /**\\n         * @deprecated ​ Deprecated. Use \\\\`{@link Callback }\\\\`.\\n         */\\n        interface AlwaysCallback<TResolve, TReject> extends Callback<TResolve | TReject> { }\\n\\n        /**\\n         * @deprecated ​ Deprecated. Use \\\\`{@link Callback }\\\\`.\\n         */\\n        interface ProgressCallback<TNotify> extends Callback<TNotify> { }\\n    }\\n\\n    // #endregion\\n\\n    // region Effects\\n    // #region Effects\\n\\n    type Duration = number | 'fast' | 'slow';\\n\\n    /**\\n     * @see \\\\`{@link https://api.jquery.com/animate/#animate-properties-options }\\\\`\\n     */\\n    interface EffectsOptions<TElement> extends PlainObject {\\n        /**\\n         * A function to be called when the animation on an element completes or stops without completing (its Promise object is either resolved or rejected).\\n         */\\n        always?(this: TElement, animation: Animation<TElement>, jumpedToEnd: boolean): void;\\n        /**\\n         * A function that is called once the animation on an element is complete.\\n         */\\n        complete?(this: TElement): void;\\n        /**\\n         * A function to be called when the animation on an element completes (its Promise object is resolved).\\n         */\\n        done?(this: TElement, animation: Animation<TElement>, jumpedToEnd: boolean): void;\\n        /**\\n         * A string or number determining how long the animation will run.\\n         */\\n        duration?: Duration;\\n        /**\\n         * A string indicating which easing function to use for the transition.\\n         */\\n        easing?: string;\\n        /**\\n         * A function to be called when the animation on an element fails to complete (its Promise object is rejected).\\n         */\\n        fail?(this: TElement, animation: Animation<TElement>, jumpedToEnd: boolean): void;\\n        /**\\n         * A function to be called after each step of the animation, only once per animated element regardless of the number of animated properties.\\n         */\\n        progress?(this: TElement, animation: Animation<TElement>, progress: number, remainingMs: number): void;\\n        /**\\n         * A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. As of jQuery 1.7, the queue option can also accept a string, in which case the animation is added to the queue represented by that string. When a custom queue name is used the animation does not automatically start; you must call .dequeue(\\\"queuename\\\") to start it.\\n         */\\n        queue?: boolean | string;\\n        /**\\n         * An object containing one or more of the CSS properties defined by the properties argument and their corresponding easing functions.\\n         */\\n        specialEasing?: PlainObject<string>;\\n        /**\\n         * A function to call when the animation on an element begins.\\n         */\\n        start?(this: TElement, animation: Animation<TElement>): void;\\n        /**\\n         * A function to be called for each animated property of each animated element. This function provides an opportunity to modify the Tween object to change the value of the property before it is set.\\n         */\\n        step?(this: TElement, now: number, tween: Tween<TElement>): void;\\n    }\\n\\n    // region Animation\\n    // #region Animation\\n\\n    /**\\n     * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n     * @since 1.8\\n     */\\n    interface AnimationStatic {\\n        /**\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        <TElement>(element: TElement, props: PlainObject, opts: EffectsOptions<TElement>): Animation<TElement>;\\n        /**\\n         * During the initial setup, `jQuery.Animation` will call any callbacks that have been registered through `jQuery.Animation.prefilter( function( element, props, opts ) )`.\\n         * @param callback The prefilter will have `this` set to an animation object, and you can modify any of the `props` or\\n         *                 `opts` however you need. The prefilter _may_ return its own promise which also implements `stop()`,\\n         *                 in which case, processing of prefilters stops. If the prefilter is not trying to override the animation\\n         *                 entirely, it should return `undefined` or some other falsy value.\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#prefilters }\\\\`\\n         * @since 1.8\\n         */\\n        prefilter<TElement>(\\n            callback: (this: Animation<TElement>, element: TElement, props: PlainObject, opts: EffectsOptions<TElement>) => Animation<TElement> | _Falsy | void,\\n            prepend?: boolean\\n        ): void;\\n        /**\\n         * A \\\"Tweener\\\" is a function responsible for creating a tween object, and you might want to override these if you want to implement complex values ( like a clip/transform array matrix ) in a single property.\\n         *\\n         * You can override the default process for creating a tween in order to provide your own tween object by using `jQuery.Animation.tweener( props, callback( prop, value ) )`.\\n         * @param props A space separated list of properties to be passed to your tweener, or `\\\"*\\\"` if it should be called\\n         *              for all properties.\\n         * @param callback The callback will be called with `this` being an `Animation` object. The tweener function will\\n         *                 generally start with `var tween = this.createTween( prop, value );`, but doesn't nessecarily need to\\n         *                 use the `jQuery.Tween()` factory.\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweeners }\\\\`\\n         * @since 1.8\\n         */\\n        tweener(props: string, callback: Tweener<any>): void;\\n    }\\n\\n    /**\\n     * The promise will be resolved when the animation reaches its end, and rejected when terminated early. The context of callbacks attached to the promise will be the element, and the arguments will be the `Animation` object and a boolean `jumpedToEnd` which when true means the animation was stopped with `gotoEnd`, when `undefined` the animation completed naturally.\\n     * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n     * @since 1.8\\n     */\\n    interface Animation<TElement> extends Promise3<\\n        Animation<TElement>, Animation<TElement>, Animation<TElement>,\\n        true | undefined, false, number,\\n        never, never, number\\n    > {\\n        /**\\n         * The duration specified in ms\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        duration: number;\\n        /**\\n         * The element being animatied\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        elem: TElement;\\n        /**\\n         * The final value of each property animating\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        props: PlainObject;\\n        /**\\n         * The animation options\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        opts: EffectsOptions<TElement>;\\n        /**\\n         * The original properties before being filtered\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        originalProps: PlainObject;\\n        /**\\n         * The original options before being filtered\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        originalOpts: EffectsOptions<TElement>;\\n        /**\\n         * The numeric value of `new Date()` when the animation began\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        startTime: number;\\n        /**\\n         * The animations tweens.\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        tweens: Array<Tween<TElement>>;\\n        /**\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        createTween(propName: string, finalValue: number): Tween<TElement>;\\n        /**\\n         * Stops the animation early, optionally going to the end.\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#animation-factory }\\\\`\\n         * @since 1.8\\n         */\\n        stop(gotoEnd: boolean): this;\\n    }\\n\\n    /**\\n     * A \\\"Tweener\\\" is a function responsible for creating a tween object, and you might want to override these if you want to implement complex values ( like a clip/transform array matrix ) in a single property.\\n     * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweeners }\\\\`\\n     * @since 1.8\\n     */\\n    type Tweener<TElement> = (this: Animation<TElement>, propName: string, finalValue: number) => Tween<TElement>;\\n\\n    /**\\n     * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n     * @since 1.8\\n     */\\n    interface TweenStatic {\\n        /**\\n         * `jQuery.Tween.propHooks[ prop ]` is a hook point that replaces `jQuery.fx.step[ prop ]` (which is being deprecated.) These hooks are used by the tween to get and set values on elements.\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tween-hooks }\\\\`\\n         * @since 1.8\\n         * @example\\n```javascript\\njQuery.Tween.propHooks[ property ] = {\\n    get: function( tween ) {\\n         // get tween.prop from tween.elem and return it\\n    },\\n    set: function( tween ) {\\n         // set tween.prop on tween.elem to tween.now + tween.unit\\n    }\\n}\\n```\\n         */\\n        propHooks: PropHooks;\\n        /**\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        <TElement>(elem: TElement, options: EffectsOptions<TElement>, prop: string, end: number, easing?: string, unit?: string): Tween<TElement>;\\n    }\\n\\n    /**\\n     * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n     * @since 1.8\\n     */\\n    // This should be a class but doesn't work correctly under the JQuery namespace. Tween should be an inner class of jQuery.\\n    interface Tween<TElement> {\\n        /**\\n         * The easing used\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        easing: string;\\n        /**\\n         * The element being animated\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        elem: TElement;\\n        /**\\n         * The ending value of the tween\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        end: number;\\n        /**\\n         * The current value of the tween\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        now: number;\\n        /**\\n         * A reference to the animation options\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        options: EffectsOptions<TElement>;\\n        // Undocumented. Is this intended to be public?\\n        pos?: number;\\n        /**\\n         * The property being animated\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        prop: string;\\n        /**\\n         * The starting value of the tween\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        start: number;\\n        /**\\n         * The CSS unit for the tween\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        unit: string;\\n        /**\\n         * Reads the current value for property from the element\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        cur(): any;\\n        /**\\n         * Updates the value for the property on the animated elemd.\\n         * @param progress A number from 0 to 1.\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tweens }\\\\`\\n         * @since 1.8\\n         */\\n        run(progress: number): this;\\n    }\\n\\n    /**\\n     * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tween-hooks }\\\\`\\n     * @since 1.8\\n     */\\n    // Workaround for TypeScript 2.3 which does not have support for weak types handling.\\n    type PropHook<TElement> = {\\n        /**\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tween-hooks }\\\\`\\n         * @since 1.8\\n         */\\n        get(tween: Tween<TElement>): any;\\n    } | {\\n        /**\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tween-hooks }\\\\`\\n         * @since 1.8\\n         */\\n        set(tween: Tween<TElement>): void;\\n    } | {\\n        [key: string]: never;\\n    };\\n\\n    /**\\n     * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#tween-hooks }\\\\`\\n     * @since 1.8\\n     */\\n    interface PropHooks {\\n        [property: string]: PropHook<Node>;\\n    }\\n\\n    // #endregion\\n\\n    // region Easing\\n    // #region Easing\\n\\n    type EasingMethod = (percent: number) => number;\\n\\n    interface Easings {\\n        [name: string]: EasingMethod;\\n    }\\n\\n    // #endregion\\n\\n    // region Effects (fx)\\n    // #region Effects (fx)\\n\\n    interface Effects {\\n        /**\\n         * The rate (in milliseconds) at which animations fire.\\n         * @see \\\\`{@link https://api.jquery.com/jQuery.fx.interval/ }\\\\`\\n         * @since 1.4.3\\n         * @deprecated ​ Deprecated since 3.0. See \\\\`{@link https://api.jquery.com/jQuery.fx.interval/ }\\\\`.\\n         *\\n         * **Cause**: As of jQuery 3.0 the `jQuery.fx.interval` property can be used to change the animation interval only on browsers that do not support the `window.requestAnimationFrame()` method. That is currently only Internet Explorer 9 and the Android Browser. Once support is dropped for these browsers, the property will serve no purpose and it will be removed.\\n         *\\n         * **Solution**: Find and remove code that changes or uses `jQuery.fx.interval`. If the value is being used by code in your page or a plugin, the code may be making assumptions that are no longer valid. The default value of `jQuery.fx.interval` is `13` (milliseconds), which could be used instead of accessing this property.\\n         * @example ​ ````Cause all animations to run with less frames.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.fx.interval demo</title>\\n  <style>\\n  div {\\n    width: 50px;\\n    height: 30px;\\n    margin: 5px;\\n    float: left;\\n    background: green;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p><input type=\\\"button\\\" value=\\\"Run\\\"></p>\\n<div></div>\\n​\\n<script>\\njQuery.fx.interval = 100;\\n$( \\\"input\\\" ).click(function() {\\n  $( \\\"div\\\" ).toggle( 3000 );\\n});\\n</script>\\n</body>\\n</html>\\n```\\n        */\\n        interval: number;\\n        /**\\n         * Globally disable all animations.\\n         * @see \\\\`{@link https://api.jquery.com/jQuery.fx.off/ }\\\\`\\n         * @since 1.3\\n         * @example ​ ````Toggle animation on and off\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>jQuery.fx.off demo</title>\\n  <style>\\n  div {\\n    width: 50px;\\n    height: 30px;\\n    margin: 5px;\\n    float: left;\\n    background: green;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input type=\\\"button\\\" value=\\\"Run\\\">\\n<button>Toggle fx</button>\\n<div></div>\\n​\\n<script>\\nvar toggleFx = function() {\\n  $.fx.off = !$.fx.off;\\n};\\ntoggleFx();\\n$( \\\"button\\\" ).click( toggleFx );\\n$( \\\"input\\\" ).click(function() {\\n  $( \\\"div\\\" ).toggle( \\\"slow\\\" );\\n});\\n</script>\\n</body>\\n</html>\\n```\\n        */\\n        off: boolean;\\n        /**\\n         * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link Tween.propHooks jQuery.Tween.propHooks}\\\\`.\\n         *\\n         * `jQuery.fx.step` functions are being replaced by `jQuery.Tween.propHooks` and may eventually be removed, but are still supported via the default tween propHook.\\n         */\\n        step: PlainObject<AnimationHook<Node>>;\\n        /**\\n         * _overridable_ Clears up the `setInterval`\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#plugging-in-a-different-timer-loop }\\\\`\\n         * @since 1.8\\n         */\\n        stop(): void;\\n        /**\\n         * Calls `.run()` on each object in the `jQuery.timers` array, removing it from the array if `.run()` returns a falsy value. Calls `jQuery.fx.stop()` whenever there are no timers remaining.\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#plugging-in-a-different-timer-loop }\\\\`\\n         * @since 1.8\\n         */\\n        tick(): void;\\n        /**\\n         * _overridable_ Creates a `setInterval` if one doesn't already exist, and pushes `tickFunction` to the `jQuery.timers` array. `tickFunction` should also have `anim`, `elem`, and `queue` properties that reference the animation object, animated element, and queue option to facilitate `jQuery.fn.stop()`\\n         *\\n         * By overriding `fx.timer` and `fx.stop` you should be able to implement any animation tick behaviour you desire. (like using `requestAnimationFrame` instead of `setTimeout`.)\\n         *\\n         * There is an example of overriding the timer loop in \\\\`{@link https://github.com/gnarf37/jquery-requestAnimationFrame jquery.requestAnimationFrame}\\\\`\\n         * @see \\\\`{@link https://gist.github.com/gnarf/54829d408993526fe475#plugging-in-a-different-timer-loop }\\\\`\\n         * @since 1.8\\n         */\\n        timer(tickFunction: TickFunction<any>): void;\\n    }\\n\\n    /**\\n     * @deprecated ​ Deprecated since 1.8. Use \\\\`{@link Tween.propHooks jQuery.Tween.propHooks}\\\\`.\\n     *\\n     * `jQuery.fx.step` functions are being replaced by `jQuery.Tween.propHooks` and may eventually be removed, but are still supported via the default tween propHook.\\n     */\\n    type AnimationHook<TElement> = (fx: Tween<TElement>) => void;\\n\\n    interface TickFunction<TElement> {\\n        anim: Animation<TElement>;\\n        elem: TElement;\\n        queue: boolean | string;\\n        (): any;\\n    }\\n\\n    // #endregion\\n\\n    // region Queue\\n    // #region Queue\\n\\n    // TODO: Is the first element always a string or is that specific to the 'fx' queue?\\n    type Queue<TElement> = { 0: string; } & Array<QueueFunction<TElement>>;\\n\\n    type QueueFunction<TElement> = (this: TElement, next: () => void) => void;\\n\\n    // #endregion\\n\\n    // region Speed\\n    // #region Speed\\n\\n    // Workaround for TypeScript 2.3 which does not have support for weak types handling.\\n    type SpeedSettings<TElement> = {\\n        /**\\n         * A string or number determining how long the animation will run.\\n         */\\n        duration: Duration;\\n    } | {\\n        /**\\n         * A string indicating which easing function to use for the transition.\\n         */\\n        easing: string;\\n    } | {\\n        /**\\n         * A function to call once the animation is complete.\\n         */\\n        complete(this: TElement): void;\\n    } | {\\n        [key: string]: never;\\n    };\\n\\n    // #endregion\\n\\n    // #endregion\\n\\n    // region Events\\n    // #region Events\\n\\n    // region Event\\n    // #region Event\\n\\n    // This should be a class but doesn't work correctly under the JQuery namespace. Event should be an inner class of jQuery.\\n\\n    /**\\n     * jQuery's event system normalizes the event object according to W3C standards. The event object is guaranteed to be passed to the event handler (no checks for window.event required). It normalizes the target, relatedTarget, which, metaKey and pageX/Y properties and provides both stopPropagation() and preventDefault() methods.\\n     *\\n     * Those properties are all documented, and accompanied by examples, on the \\\\`{@link http://api.jquery.com/category/events/event-object/ Event object}\\\\` page.\\n     *\\n     * The standard events in the Document Object Model are: `blur`, `focus`, `load`, `resize`, `scroll`, `unload`, `beforeunload`, `click`, `dblclick`, `mousedown`, `mouseup`, `mousemove`, `mouseover`, `mouseout`, `mouseenter`, `mouseleave`, `change`, `select`, `submit`, `keydown`, `keypress`, and `keyup`. Since the DOM event names have predefined meanings for some elements, using them for other purposes is not recommended. jQuery's event model can trigger an event by any name on an element, and it is propagated up the DOM tree to which that element belongs, if any.\\n     * @see \\\\`{@link https://api.jquery.com/category/events/event-object/ }\\\\`\\n     */\\n    interface EventStatic {\\n        /**\\n         * The jQuery.Event constructor is exposed and can be used when calling trigger. The new operator is optional.\\n         *\\n         * Check \\\\`{@link https://api.jquery.com/trigger/ trigger}\\\\`'s documentation to see how to combine it with your own event object.\\n         * @see \\\\`{@link https://api.jquery.com/category/events/event-object/ }\\\\`\\n         * @since 1.6\\n         * @example\\n```javascript\\n//Create a new jQuery.Event object without the \\\"new\\\" operator.\\nvar e = jQuery.Event( \\\"click\\\" );\\n​\\n// trigger an artificial click event\\njQuery( \\\"body\\\" ).trigger( e );\\n```\\n         * @example\\n```javascript\\n// Create a new jQuery.Event object with specified event properties.\\nvar e = jQuery.Event( \\\"keydown\\\", { keyCode: 64 } );\\n​\\n// trigger an artificial keydown event with keyCode 64\\njQuery( \\\"body\\\" ).trigger( e );\\n```\\n         */\\n        <T extends object>(event: string, properties?: T): Event & T;\\n        /**\\n         * The jQuery.Event constructor is exposed and can be used when calling trigger. The new operator is optional.\\n         *\\n         * Check \\\\`{@link https://api.jquery.com/trigger/ trigger}\\\\`'s documentation to see how to combine it with your own event object.\\n         * @see \\\\`{@link https://api.jquery.com/category/events/event-object/ }\\\\`\\n         * @since 1.6\\n         * @example\\n```javascript\\n//Create a new jQuery.Event object without the \\\"new\\\" operator.\\nvar e = jQuery.Event( \\\"click\\\" );\\n​\\n// trigger an artificial click event\\njQuery( \\\"body\\\" ).trigger( e );\\n```\\n         * @example\\n```javascript\\n// Create a new jQuery.Event object with specified event properties.\\nvar e = jQuery.Event( \\\"keydown\\\", { keyCode: 64 } );\\n​\\n// trigger an artificial keydown event with keyCode 64\\njQuery( \\\"body\\\" ).trigger( e );\\n```\\n         */\\n        new <T extends object>(event: string, properties?: T): Event & T;\\n    }\\n\\n    /**\\n     * jQuery's event system normalizes the event object according to W3C standards. The event object is guaranteed to be passed to the event handler (no checks for window.event required). It normalizes the target, relatedTarget, which, metaKey and pageX/Y properties and provides both stopPropagation() and preventDefault() methods.\\n     *\\n     * Those properties are all documented, and accompanied by examples, on the \\\\`{@link http://api.jquery.com/category/events/event-object/ Event object}\\\\` page.\\n     *\\n     * The standard events in the Document Object Model are: `blur`, `focus`, `load`, `resize`, `scroll`, `unload`, `beforeunload`, `click`, `dblclick`, `mousedown`, `mouseup`, `mousemove`, `mouseover`, `mouseout`, `mouseenter`, `mouseleave`, `change`, `select`, `submit`, `keydown`, `keypress`, and `keyup`. Since the DOM event names have predefined meanings for some elements, using them for other purposes is not recommended. jQuery's event model can trigger an event by any name on an element, and it is propagated up the DOM tree to which that element belongs, if any.\\n     * @see \\\\`{@link https://api.jquery.com/category/events/event-object/ }\\\\`\\n     * @see \\\\`{@link TriggeredEvent }\\\\`\\n     */\\n    interface Event {\\n        // region Copied properties\\n        // #region Copied properties\\n\\n        // Event\\n\\n        bubbles: boolean | undefined;\\n        cancelable: boolean | undefined;\\n        eventPhase: number | undefined;\\n\\n        // UIEvent\\n\\n        detail: number | undefined;\\n        view: Window | undefined;\\n\\n        // MouseEvent\\n\\n        button: number | undefined;\\n        buttons: number | undefined;\\n        clientX: number | undefined;\\n        clientY: number | undefined;\\n        offsetX: number | undefined;\\n        offsetY: number | undefined;\\n        /**\\n         * The mouse position relative to the left edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageX/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageX demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageX: number | undefined;\\n        /**\\n         * The mouse position relative to the top edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageY/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageY demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageY: number | undefined;\\n        screenX: number | undefined;\\n        screenY: number | undefined;\\n        /** @deprecated */\\n        toElement: Element | undefined;\\n\\n        // PointerEvent\\n\\n        pointerId: number | undefined;\\n        pointerType: string | undefined;\\n\\n        // KeyboardEvent\\n\\n        /** @deprecated */\\n        char: string | undefined;\\n        /** @deprecated */\\n        charCode: number | undefined;\\n        key: string | undefined;\\n        /** @deprecated */\\n        keyCode: number | undefined;\\n\\n        // TouchEvent\\n\\n        changedTouches: TouchList | undefined;\\n        targetTouches: TouchList | undefined;\\n        touches: TouchList | undefined;\\n\\n        // MouseEvent, KeyboardEvent\\n\\n        /**\\n         * For key or mouse events, this property indicates the specific key or button that was pressed.\\n         * @see \\\\`{@link https://api.jquery.com/event.which/ }\\\\`\\n         * @since 1.1.3\\n         * @deprecated ​ Deprecated since 3.3. See \\\\`{@link https://github.com/jquery/api.jquery.com/issues/821 }\\\\`.\\n         * @example ​ ````Log which key was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"type something\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"keydown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Log which mouse button was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"click here\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"mousedown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        which: number | undefined;\\n\\n        // MouseEvent, KeyboardEvent, TouchEvent\\n\\n        altKey: boolean | undefined;\\n        ctrlKey: boolean | undefined;\\n        /**\\n         * Indicates whether the META key was pressed when the event fired.\\n         * @see \\\\`{@link https://api.jquery.com/event.metaKey/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Determine whether the META key was pressed when the event fired.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.metaKey demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button value=\\\"Test\\\" name=\\\"Test\\\" id=\\\"checkMetaKey\\\">Click me!</button>\\n<div id=\\\"display\\\"></div>\\n​\\n<script>\\n$( \\\"#checkMetaKey\\\" ).click(function( event ) {\\n  $( \\\"#display\\\" ).text( event.metaKey );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        metaKey: boolean | undefined;\\n        shiftKey: boolean | undefined;\\n\\n        // #endregion\\n\\n        /**\\n         * The difference in milliseconds between the time the browser created the event and January 1, 1970.\\n         * @see \\\\`{@link https://api.jquery.com/event.timeStamp/ }\\\\`\\n         * @since 1.2.6\\n         * @example ​ ````Display the time since the click handler last executed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.timeStamp demo</title>\\n  <style>\\n  div {\\n    height: 100px;\\n    width: 300px;\\n    margin: 10px;\\n    background-color: #ffd;\\n    overflow: auto;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div>Click.</div>\\n​\\n<script>\\nvar last, diff;\\n$( \\\"div\\\" ).click(function( event ) {\\n  if ( last ) {\\n    diff = event.timeStamp - last;\\n    $( \\\"div\\\" ).append( \\\"time since last event: \\\" + diff + \\\"<br>\\\" );\\n  } else {\\n    $( \\\"div\\\" ).append( \\\"Click again.<br>\\\" );\\n  }\\n  last = event.timeStamp;\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        timeStamp: number;\\n        /**\\n         * Describes the nature of the event.\\n         * @see \\\\`{@link https://api.jquery.com/event.type/ }\\\\`\\n         * @since 1.0\\n         * @example ​ ````On all anchor clicks, alert the event type.\\n```javascript\\n$( \\\"a\\\" ).click(function( event ) {\\n  alert( event.type ); // \\\"click\\\"\\n});\\n```\\n         */\\n        type: string;\\n        /**\\n         * Returns whether event.preventDefault() was ever called on this event object.\\n         * @see \\\\`{@link https://api.jquery.com/event.isDefaultPrevented/ }\\\\`\\n         * @since 1.3\\n         * @example ​ ````Checks whether event.preventDefault() was called.\\n```javascript\\n$( \\\"a\\\" ).click(function( event ) {\\n  alert( event.isDefaultPrevented() ); // false\\n  event.preventDefault();\\n  alert( event.isDefaultPrevented() ); // true\\n});\\n```\\n         */\\n        isDefaultPrevented(): boolean;\\n        /**\\n         * Returns whether event.stopImmediatePropagation() was ever called on this event object.\\n         * @see \\\\`{@link https://api.jquery.com/event.isImmediatePropagationStopped/ }\\\\`\\n         * @since 1.3\\n         * @example ​ ````Checks whether event.stopImmediatePropagation() was called.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.isImmediatePropagationStopped demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>click me</button>\\n<div id=\\\"stop-log\\\"></div>\\n  ​\\n<script>\\nfunction immediatePropStopped( event ) {\\n  var msg = \\\"\\\";\\n  if ( event.isImmediatePropagationStopped() ) {\\n    msg = \\\"called\\\";\\n  } else {\\n    msg = \\\"not called\\\";\\n  }\\n  $( \\\"#stop-log\\\" ).append( \\\"<div>\\\" + msg + \\\"</div>\\\" );\\n}\\n​\\n$( \\\"button\\\" ).click(function( event ) {\\n  immediatePropStopped( event );\\n  event.stopImmediatePropagation();\\n  immediatePropStopped( event );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        isImmediatePropagationStopped(): boolean;\\n        /**\\n         * Returns whether event.stopPropagation() was ever called on this event object.\\n         * @see \\\\`{@link https://api.jquery.com/event.isPropagationStopped/ }\\\\`\\n         * @since 1.3\\n         * @example ​ ````Checks whether event.stopPropagation() was called\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.isPropagationStopped demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>click me</button>\\n<div id=\\\"stop-log\\\"></div>\\n  ​\\n<script>\\nfunction propStopped( event ) {\\n  var msg = \\\"\\\";\\n  if ( event.isPropagationStopped() ) {\\n    msg = \\\"called\\\";\\n  } else {\\n    msg = \\\"not called\\\";\\n  }\\n  $( \\\"#stop-log\\\" ).append( \\\"<div>\\\" + msg + \\\"</div>\\\" );\\n}\\n​\\n$( \\\"button\\\" ).click(function(event) {\\n  propStopped( event );\\n  event.stopPropagation();\\n  propStopped( event );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        isPropagationStopped(): boolean;\\n        /**\\n         * If this method is called, the default action of the event will not be triggered.\\n         * @see \\\\`{@link https://api.jquery.com/event.preventDefault/ }\\\\`\\n         * @since 1.0\\n         * @example ​ ````Cancel the default action (navigation) of the click.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.preventDefault demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<a href=\\\"https://jquery.com\\\">default click action is prevented</a>\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"a\\\" ).click(function( event ) {\\n  event.preventDefault();\\n  $( \\\"<div>\\\" )\\n    .append( \\\"default \\\" + event.type + \\\" prevented\\\" )\\n    .appendTo( \\\"#log\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        preventDefault(): void;\\n        /**\\n         * Keeps the rest of the handlers from being executed and prevents the event from bubbling up the DOM tree.\\n         * @see \\\\`{@link https://api.jquery.com/event.stopImmediatePropagation/ }\\\\`\\n         * @since 1.3\\n         * @example ​ ````Prevents other event handlers from being called.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.stopImmediatePropagation demo</title>\\n  <style>\\n  p {\\n    height: 30px;\\n    width: 150px;\\n    background-color: #ccf;\\n  }\\n  div {\\n    height: 30px;\\n    width: 150px;\\n    background-color: #cfc;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<p>paragraph</p>\\n<div>division</div>\\n​\\n<script>\\n$( \\\"p\\\" ).click(function( event ) {\\n  event.stopImmediatePropagation();\\n});\\n$( \\\"p\\\" ).click(function( event ) {\\n  // This function won't be executed\\n  $( this ).css( \\\"background-color\\\", \\\"#f00\\\" );\\n});\\n$( \\\"div\\\" ).click(function( event ) {\\n  // This function will be executed\\n  $( this ).css( \\\"background-color\\\", \\\"#f00\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        stopImmediatePropagation(): void;\\n        /**\\n         * Prevents the event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event.\\n         * @see \\\\`{@link https://api.jquery.com/event.stopPropagation/ }\\\\`\\n         * @since 1.0\\n         * @example ​ ````Kill the bubbling on the click event.\\n```javascript\\n$( \\\"p\\\" ).click(function( event ) {\\n  event.stopPropagation();\\n  // Do something\\n});\\n```\\n         */\\n        stopPropagation(): void;\\n    }\\n\\n    // #endregion\\n\\n    /**\\n     * Base type for jQuery events that have been triggered (including events triggered on plain objects).\\n     */\\n    interface TriggeredEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends Event {\\n        /**\\n         * The current DOM element within the event bubbling phase.\\n         * @see \\\\`{@link https://api.jquery.com/event.currentTarget/ }\\\\`\\n         * @since 1.3\\n         * @example ​ ````Alert that currentTarget matches the `this` keyword.\\n```javascript\\n$( \\\"p\\\" ).click(function( event ) {\\n  alert( event.currentTarget === this ); // true\\n});\\n```\\n        */\\n        currentTarget: TCurrentTarget;\\n        /**\\n         * The element where the currently-called jQuery event handler was attached.\\n         * @see \\\\`{@link https://api.jquery.com/event.delegateTarget/ }\\\\`\\n         * @since 1.7\\n         * @example ​ ````When a button in any box class is clicked, change the box&#39;s background color to red.\\n```javascript\\n$( \\\".box\\\" ).on( \\\"click\\\", \\\"button\\\", function( event ) {\\n  $( event.delegateTarget ).css( \\\"background-color\\\", \\\"red\\\" );\\n});\\n```\\n        */\\n        delegateTarget: TDelegateTarget;\\n        /**\\n         * The DOM element that initiated the event.\\n         * @see \\\\`{@link https://api.jquery.com/event.target/ }\\\\`\\n         * @since 1.0\\n         * @example ​ ````Display the tag&#39;s name on click\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.target demo</title>\\n  <style>\\n  span, strong, p {\\n    padding: 8px;\\n    display: block;\\n    border: 1px solid #999;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n<div>\\n  <p>\\n    <strong><span>click</span></strong>\\n  </p>\\n</div>\\n​\\n<script>\\n$( \\\"body\\\" ).click(function( event ) {\\n  $( \\\"#log\\\" ).html( \\\"clicked: \\\" + event.target.nodeName );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Implements a simple event delegation: The click handler is added to an unordered list, and the children of its li children are hidden. Clicking one of the li children toggles (see toggle()) their children.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.target demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<ul>\\n  <li>item 1\\n    <ul>\\n      <li>sub item 1-a</li>\\n      <li>sub item 1-b</li>\\n    </ul>\\n  </li>\\n  <li>item 2\\n    <ul>\\n      <li>sub item 2-a</li>\\n      <li>sub item 2-b</li>\\n    </ul>\\n  </li>\\n</ul>\\n​\\n<script>\\nfunction handler( event ) {\\n  var target = $( event.target );\\n  if ( target.is( \\\"li\\\" ) ) {\\n    target.children().toggle();\\n  }\\n}\\n$( \\\"ul\\\" ).click( handler ).find( \\\"ul\\\" ).hide();\\n</script>\\n​\\n</body>\\n</html>\\n```\\n        */\\n        target: TTarget;\\n\\n        /**\\n         * An optional object of data passed to an event method when the current executing handler is bound.\\n         * @see \\\\`{@link https://api.jquery.com/event.data/ }\\\\`\\n         * @since 1.1\\n         * @example ​ ````Within a for loop, pass the value of i to the .on() method so that the current iteration&#39;s value is preserved.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.data demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button> 0 </button>\\n<button> 1 </button>\\n<button> 2 </button>\\n<button> 3 </button>\\n<button> 4 </button>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\nvar logDiv = $( \\\"#log\\\" );\\n​\\nfor ( var i = 0; i < 5; i++ ) {\\n  $( \\\"button\\\" ).eq( i ).on( \\\"click\\\", { value: i }, function( event ) {\\n    var msgs = [\\n      \\\"button = \\\" + $( this ).index(),\\n      \\\"event.data.value = \\\" + event.data.value,\\n      \\\"i = \\\" + i\\n    ];\\n    logDiv.append( msgs.join( \\\", \\\" ) + \\\"<br>\\\" );\\n  });\\n}\\n</script>\\n​\\n</body>\\n</html>\\n```\\n        */\\n        data: TData;\\n\\n        /**\\n         * The namespace specified when the event was triggered.\\n         * @see \\\\`{@link https://api.jquery.com/event.namespace/ }\\\\`\\n         * @since 1.4.3\\n         * @example ​ ````Determine the event namespace used.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.namespace demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>display event.namespace</button>\\n<p></p>\\n​\\n<script>\\n$( \\\"p\\\" ).on( \\\"test.something\\\", function( event ) {\\n  alert( event.namespace );\\n});\\n$( \\\"button\\\" ).click(function( event ) {\\n  $( \\\"p\\\" ).trigger( \\\"test.something\\\" );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        namespace?: string;\\n        originalEvent?: _Event;\\n        /**\\n         * The last value returned by an event handler that was triggered by this event, unless the value was undefined.\\n         * @see \\\\`{@link https://api.jquery.com/event.result/ }\\\\`\\n         * @since 1.3\\n         * @example ​ ````Display previous handler&#39;s return value\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.result demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button>display event.result</button>\\n<p></p>\\n​\\n<script>\\n$( \\\"button\\\" ).click(function( event ) {\\n  return \\\"hey\\\";\\n});\\n$( \\\"button\\\" ).click(function( event ) {\\n  $( \\\"p\\\" ).html( event.result );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        result?: any;\\n    }\\n\\n    // region Event\\n    // #region Event\\n\\n    interface EventBase<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends TriggeredEvent<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n```javascript\\n$( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n});\\n```\\n        */\\n        relatedTarget?: undefined;\\n\\n        // Event\\n\\n        bubbles: boolean;\\n        cancelable: boolean;\\n        eventPhase: number;\\n\\n        // UIEvent\\n\\n        detail: undefined;\\n        view: undefined;\\n\\n        // MouseEvent\\n\\n        button: undefined;\\n        buttons: undefined;\\n        clientX: undefined;\\n        clientY: undefined;\\n        offsetX: undefined;\\n        offsetY: undefined;\\n        /**\\n         * The mouse position relative to the left edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageX/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageX demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageX: undefined;\\n        /**\\n         * The mouse position relative to the top edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageY/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageY demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageY: undefined;\\n        screenX: undefined;\\n        screenY: undefined;\\n        /** @deprecated */\\n        toElement: undefined;\\n\\n        // PointerEvent\\n\\n        pointerId: undefined;\\n        pointerType: undefined;\\n\\n        // KeyboardEvent\\n\\n        /** @deprecated */\\n        char: undefined;\\n        /** @deprecated */\\n        charCode: undefined;\\n        key: undefined;\\n        /** @deprecated */\\n        keyCode: undefined;\\n\\n        // TouchEvent\\n\\n        changedTouches: undefined;\\n        targetTouches: undefined;\\n        touches: undefined;\\n\\n        // MouseEvent, KeyboardEvent\\n\\n        /**\\n         * For key or mouse events, this property indicates the specific key or button that was pressed.\\n         * @see \\\\`{@link https://api.jquery.com/event.which/ }\\\\`\\n         * @since 1.1.3\\n         * @deprecated ​ Deprecated since 3.3. See \\\\`{@link https://github.com/jquery/api.jquery.com/issues/821 }\\\\`.\\n         * @example ​ ````Log which key was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"type something\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"keydown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Log which mouse button was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"click here\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"mousedown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        which: undefined;\\n\\n        // MouseEvent, KeyboardEvent, TouchEvent\\n\\n        altKey: undefined;\\n        ctrlKey: undefined;\\n        /**\\n         * Indicates whether the META key was pressed when the event fired.\\n         * @see \\\\`{@link https://api.jquery.com/event.metaKey/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Determine whether the META key was pressed when the event fired.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.metaKey demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button value=\\\"Test\\\" name=\\\"Test\\\" id=\\\"checkMetaKey\\\">Click me!</button>\\n<div id=\\\"display\\\"></div>\\n​\\n<script>\\n$( \\\"#checkMetaKey\\\" ).click(function( event ) {\\n  $( \\\"#display\\\" ).text( event.metaKey );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        metaKey: undefined;\\n        shiftKey: undefined;\\n\\n        originalEvent?: _Event;\\n    }\\n\\n    interface ChangeEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends EventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'change';\\n    }\\n\\n    interface ResizeEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends EventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'resize';\\n    }\\n\\n    interface ScrollEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends EventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'scroll';\\n    }\\n\\n    interface SelectEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends EventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'select';\\n    }\\n\\n    interface SubmitEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends EventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'submit';\\n    }\\n\\n    // #endregion\\n\\n    // region UIEvent\\n    // #region UIEvent\\n\\n    interface UIEventBase<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends TriggeredEvent<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        // Event\\n\\n        bubbles: boolean;\\n        cancelable: boolean;\\n        eventPhase: number;\\n\\n        // UIEvent\\n\\n        detail: number;\\n        view: Window;\\n\\n        originalEvent?: _UIEvent;\\n    }\\n\\n    // region MouseEvent\\n    // #region MouseEvent\\n\\n    interface MouseEventBase<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends UIEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n```javascript\\n$( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n});\\n```\\n        */\\n        relatedTarget?: EventTarget | null;\\n\\n        // MouseEvent\\n\\n        button: number;\\n        buttons: number;\\n        clientX: number;\\n        clientY: number;\\n        offsetX: number;\\n        offsetY: number;\\n        /**\\n         * The mouse position relative to the left edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageX/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageX demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageX: number;\\n        /**\\n         * The mouse position relative to the top edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageY/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageY demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageY: number;\\n        screenX: number;\\n        screenY: number;\\n        /** @deprecated */\\n        toElement: Element;\\n\\n        // PointerEvent\\n\\n        pointerId: undefined;\\n        pointerType: undefined;\\n\\n        // KeyboardEvent\\n\\n        /** @deprecated */\\n        char: undefined;\\n        /** @deprecated */\\n        charCode: undefined;\\n        key: undefined;\\n        /** @deprecated */\\n        keyCode: undefined;\\n\\n        // TouchEvent\\n\\n        changedTouches: undefined;\\n        targetTouches: undefined;\\n        touches: undefined;\\n\\n        // MouseEvent, KeyboardEvent\\n\\n        /**\\n         * For key or mouse events, this property indicates the specific key or button that was pressed.\\n         * @see \\\\`{@link https://api.jquery.com/event.which/ }\\\\`\\n         * @since 1.1.3\\n         * @deprecated ​ Deprecated since 3.3. See \\\\`{@link https://github.com/jquery/api.jquery.com/issues/821 }\\\\`.\\n         * @example ​ ````Log which key was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"type something\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"keydown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Log which mouse button was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"click here\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"mousedown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        which: number;\\n\\n        // MouseEvent, KeyboardEvent, TouchEvent\\n\\n        altKey: boolean;\\n        ctrlKey: boolean;\\n        /**\\n         * Indicates whether the META key was pressed when the event fired.\\n         * @see \\\\`{@link https://api.jquery.com/event.metaKey/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Determine whether the META key was pressed when the event fired.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.metaKey demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button value=\\\"Test\\\" name=\\\"Test\\\" id=\\\"checkMetaKey\\\">Click me!</button>\\n<div id=\\\"display\\\"></div>\\n​\\n<script>\\n$( \\\"#checkMetaKey\\\" ).click(function( event ) {\\n  $( \\\"#display\\\" ).text( event.metaKey );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        metaKey: boolean;\\n        shiftKey: boolean;\\n\\n        originalEvent?: _MouseEvent;\\n    }\\n\\n    interface ClickEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends MouseEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n ```javascript\\n $( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n });\\n ```\\n        */\\n        relatedTarget?: null;\\n\\n        type: 'click';\\n    }\\n\\n    interface ContextMenuEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends MouseEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n ```javascript\\n $( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n });\\n ```\\n        */\\n        relatedTarget?: null;\\n\\n        type: 'contextmenu';\\n    }\\n\\n    interface DoubleClickEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends MouseEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n ```javascript\\n $( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n });\\n ```\\n        */\\n        relatedTarget?: null;\\n\\n        type: 'dblclick';\\n    }\\n\\n    interface MouseDownEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends MouseEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n ```javascript\\n $( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n });\\n ```\\n        */\\n        relatedTarget?: null;\\n\\n        type: 'mousedown';\\n    }\\n\\n    interface MouseEnterEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends MouseEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        // Special handling by jQuery.\\n        type: 'mouseover';\\n    }\\n\\n    interface MouseLeaveEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends MouseEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        // Special handling by jQuery.\\n        type: 'mouseout';\\n    }\\n\\n    interface MouseMoveEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends MouseEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n ```javascript\\n $( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n });\\n ```\\n        */\\n        relatedTarget?: null;\\n\\n        type: 'mousemove';\\n    }\\n\\n    interface MouseOutEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends MouseEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'mouseout';\\n    }\\n\\n    interface MouseOverEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends MouseEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'mouseover';\\n    }\\n\\n    interface MouseUpEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends MouseEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n ```javascript\\n $( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n });\\n ```\\n        */\\n        relatedTarget?: null;\\n\\n        type: 'mouseup';\\n    }\\n\\n    // region DragEvent\\n    // #region DragEvent\\n\\n    interface DragEventBase<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends UIEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        originalEvent?: _DragEvent;\\n    }\\n\\n    interface DragEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends DragEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'drag';\\n    }\\n\\n    interface DragEndEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends DragEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'dragend';\\n    }\\n\\n    interface DragEnterEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends DragEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'dragenter';\\n    }\\n\\n    interface DragExitEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends DragEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'dragexit';\\n    }\\n\\n    interface DragLeaveEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends DragEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'dragleave';\\n    }\\n\\n    interface DragOverEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends DragEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'dragover';\\n    }\\n\\n    interface DragStartEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends DragEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'dragstart';\\n    }\\n\\n    interface DropEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends DragEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'drop';\\n    }\\n\\n    // #endregion\\n\\n    // #endregion\\n\\n    // region KeyboardEvent\\n    // #region KeyboardEvent\\n\\n    interface KeyboardEventBase<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends UIEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n```javascript\\n$( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n});\\n```\\n        */\\n        relatedTarget?: undefined;\\n\\n        // MouseEvent\\n\\n        button: undefined;\\n        buttons: undefined;\\n        clientX: undefined;\\n        clientY: undefined;\\n        offsetX: undefined;\\n        offsetY: undefined;\\n        /**\\n         * The mouse position relative to the left edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageX/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageX demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageX: undefined;\\n        /**\\n         * The mouse position relative to the top edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageY/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageY demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageY: undefined;\\n        screenX: undefined;\\n        screenY: undefined;\\n        /** @deprecated */\\n        toElement: undefined;\\n\\n        // PointerEvent\\n\\n        pointerId: undefined;\\n        pointerType: undefined;\\n\\n        // KeyboardEvent\\n\\n        /** @deprecated */\\n        char: string | undefined;\\n        /** @deprecated */\\n        charCode: number;\\n        key: string;\\n        /** @deprecated */\\n        keyCode: number;\\n\\n        // TouchEvent\\n\\n        changedTouches: undefined;\\n        targetTouches: undefined;\\n        touches: undefined;\\n\\n        // MouseEvent, KeyboardEvent\\n\\n        /**\\n         * For key or mouse events, this property indicates the specific key or button that was pressed.\\n         * @see \\\\`{@link https://api.jquery.com/event.which/ }\\\\`\\n         * @since 1.1.3\\n         * @deprecated ​ Deprecated since 3.3. See \\\\`{@link https://github.com/jquery/api.jquery.com/issues/821 }\\\\`.\\n         * @example ​ ````Log which key was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"type something\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"keydown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Log which mouse button was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"click here\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"mousedown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        which: number;\\n\\n        // MouseEvent, KeyboardEvent, TouchEvent\\n\\n        altKey: boolean;\\n        ctrlKey: boolean;\\n        /**\\n         * Indicates whether the META key was pressed when the event fired.\\n         * @see \\\\`{@link https://api.jquery.com/event.metaKey/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Determine whether the META key was pressed when the event fired.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.metaKey demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button value=\\\"Test\\\" name=\\\"Test\\\" id=\\\"checkMetaKey\\\">Click me!</button>\\n<div id=\\\"display\\\"></div>\\n​\\n<script>\\n$( \\\"#checkMetaKey\\\" ).click(function( event ) {\\n  $( \\\"#display\\\" ).text( event.metaKey );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        metaKey: boolean;\\n        shiftKey: boolean;\\n\\n        originalEvent?: _KeyboardEvent;\\n    }\\n\\n    interface KeyDownEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends KeyboardEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'keydown';\\n    }\\n\\n    interface KeyPressEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends KeyboardEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'keypress';\\n    }\\n\\n    interface KeyUpEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends KeyboardEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'keyup';\\n    }\\n\\n    // #endregion\\n\\n    // region TouchEvent\\n    // #region TouchEvent\\n\\n    interface TouchEventBase<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends UIEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n```javascript\\n$( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n});\\n```\\n        */\\n        relatedTarget?: undefined;\\n\\n        // MouseEvent\\n\\n        button: undefined;\\n        buttons: undefined;\\n        clientX: undefined;\\n        clientY: undefined;\\n        offsetX: undefined;\\n        offsetY: undefined;\\n        /**\\n         * The mouse position relative to the left edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageX/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageX demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageX: undefined;\\n        /**\\n         * The mouse position relative to the top edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageY/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageY demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageY: undefined;\\n        screenX: undefined;\\n        screenY: undefined;\\n        /** @deprecated */\\n        toElement: undefined;\\n\\n        // PointerEvent\\n\\n        pointerId: undefined;\\n        pointerType: undefined;\\n\\n        // KeyboardEvent\\n\\n        /** @deprecated */\\n        char: undefined;\\n        /** @deprecated */\\n        charCode: undefined;\\n        key: undefined;\\n        /** @deprecated */\\n        keyCode: undefined;\\n\\n        // TouchEvent\\n\\n        changedTouches: TouchList;\\n        targetTouches: TouchList;\\n        touches: TouchList;\\n\\n        // MouseEvent, KeyboardEvent\\n\\n        /**\\n         * For key or mouse events, this property indicates the specific key or button that was pressed.\\n         * @see \\\\`{@link https://api.jquery.com/event.which/ }\\\\`\\n         * @since 1.1.3\\n         * @deprecated ​ Deprecated since 3.3. See \\\\`{@link https://github.com/jquery/api.jquery.com/issues/821 }\\\\`.\\n         * @example ​ ````Log which key was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"type something\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"keydown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Log which mouse button was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"click here\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"mousedown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        which: undefined;\\n\\n        // MouseEvent, KeyboardEvent, TouchEvent\\n\\n        altKey: boolean;\\n        ctrlKey: boolean;\\n        /**\\n         * Indicates whether the META key was pressed when the event fired.\\n         * @see \\\\`{@link https://api.jquery.com/event.metaKey/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Determine whether the META key was pressed when the event fired.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.metaKey demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button value=\\\"Test\\\" name=\\\"Test\\\" id=\\\"checkMetaKey\\\">Click me!</button>\\n<div id=\\\"display\\\"></div>\\n​\\n<script>\\n$( \\\"#checkMetaKey\\\" ).click(function( event ) {\\n  $( \\\"#display\\\" ).text( event.metaKey );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        metaKey: boolean;\\n        shiftKey: boolean;\\n\\n        originalEvent?: _TouchEvent;\\n    }\\n\\n    interface TouchCancelEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends TouchEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'touchcancel';\\n    }\\n\\n    interface TouchEndEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends TouchEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'touchend';\\n    }\\n\\n    interface TouchMoveEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends TouchEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'touchmove';\\n    }\\n\\n    interface TouchStartEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends TouchEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'touchstart';\\n    }\\n\\n    // #endregion\\n\\n    // region FocusEvent\\n    // #region FocusEvent\\n\\n    interface FocusEventBase<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends UIEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        /**\\n         * The other DOM element involved in the event, if any.\\n         * @see \\\\`{@link https://api.jquery.com/event.relatedTarget/ }\\\\`\\n         * @since 1.1.4\\n         * @example ​ ````On mouseout of anchors, alert the element type being entered.\\n```javascript\\n$( \\\"a\\\" ).mouseout(function( event ) {\\n  alert( event.relatedTarget.nodeName ); // \\\"DIV\\\"\\n});\\n```\\n        */\\n        relatedTarget?: EventTarget | null;\\n\\n        // MouseEvent\\n\\n        button: undefined;\\n        buttons: undefined;\\n        clientX: undefined;\\n        clientY: undefined;\\n        offsetX: undefined;\\n        offsetY: undefined;\\n        /**\\n         * The mouse position relative to the left edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageX/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageX demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageX: undefined;\\n        /**\\n         * The mouse position relative to the top edge of the document.\\n         * @see \\\\`{@link https://api.jquery.com/event.pageY/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Show the mouse position relative to the left and top edges of the document (within this iframe).\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.pageY demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( document ).on( \\\"mousemove\\\", function( event ) {\\n  $( \\\"#log\\\" ).text( \\\"pageX: \\\" + event.pageX + \\\", pageY: \\\" + event.pageY );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        pageY: undefined;\\n        screenX: undefined;\\n        screenY: undefined;\\n        /** @deprecated */\\n        toElement: undefined;\\n\\n        // PointerEvent\\n\\n        pointerId: undefined;\\n        pointerType: undefined;\\n\\n        // KeyboardEvent\\n\\n        /** @deprecated */\\n        char: undefined;\\n        /** @deprecated */\\n        charCode: undefined;\\n        key: undefined;\\n        /** @deprecated */\\n        keyCode: undefined;\\n\\n        // TouchEvent\\n\\n        changedTouches: undefined;\\n        targetTouches: undefined;\\n        touches: undefined;\\n\\n        // MouseEvent, KeyboardEvent\\n\\n        /**\\n         * For key or mouse events, this property indicates the specific key or button that was pressed.\\n         * @see \\\\`{@link https://api.jquery.com/event.which/ }\\\\`\\n         * @since 1.1.3\\n         * @deprecated ​ Deprecated since 3.3. See \\\\`{@link https://github.com/jquery/api.jquery.com/issues/821 }\\\\`.\\n         * @example ​ ````Log which key was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"type something\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"keydown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         * @example ​ ````Log which mouse button was depressed.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.which demo</title>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<input id=\\\"whichkey\\\" value=\\\"click here\\\">\\n<div id=\\\"log\\\"></div>\\n​\\n<script>\\n$( \\\"#whichkey\\\" ).on( \\\"mousedown\\\", function( event ) {\\n  $( \\\"#log\\\" ).html( event.type + \\\": \\\" +  event.which );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        which: undefined;\\n\\n        // MouseEvent, KeyboardEvent, TouchEvent\\n\\n        altKey: undefined;\\n        ctrlKey: undefined;\\n        /**\\n         * Indicates whether the META key was pressed when the event fired.\\n         * @see \\\\`{@link https://api.jquery.com/event.metaKey/ }\\\\`\\n         * @since 1.0.4\\n         * @example ​ ````Determine whether the META key was pressed when the event fired.\\n```html\\n<!doctype html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <title>event.metaKey demo</title>\\n  <style>\\n  body {\\n    background-color: #eef;\\n  }\\n  div {\\n    padding: 20px;\\n  }\\n  </style>\\n  <script src=\\\"https://code.jquery.com/jquery-3.3.1.js\\\"></script>\\n</head>\\n<body>\\n​\\n<button value=\\\"Test\\\" name=\\\"Test\\\" id=\\\"checkMetaKey\\\">Click me!</button>\\n<div id=\\\"display\\\"></div>\\n​\\n<script>\\n$( \\\"#checkMetaKey\\\" ).click(function( event ) {\\n  $( \\\"#display\\\" ).text( event.metaKey );\\n});\\n</script>\\n​\\n</body>\\n</html>\\n```\\n         */\\n        metaKey: undefined;\\n        shiftKey: undefined;\\n\\n        originalEvent?: _FocusEvent;\\n    }\\n\\n    interface BlurEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends FocusEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'blur';\\n    }\\n\\n    interface FocusEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends FocusEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'focus';\\n    }\\n\\n    interface FocusInEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends FocusEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'focusin';\\n    }\\n\\n    interface FocusOutEvent<\\n        TDelegateTarget = any,\\n        TData = any,\\n        TCurrentTarget = any,\\n        TTarget = any\\n    > extends FocusEventBase<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        type: 'focusout';\\n    }\\n\\n    // #endregion\\n\\n    // #endregion\\n\\n    interface TypeToTriggeredEventMap<\\n        TDelegateTarget,\\n        TData,\\n        TCurrentTarget,\\n        TTarget\\n    > {\\n        // Event\\n\\n        change: ChangeEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        resize: ResizeEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        scroll: ScrollEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        select: SelectEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        submit: SubmitEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n\\n        // UIEvent\\n\\n        // MouseEvent\\n\\n        click: ClickEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        contextmenu: ContextMenuEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        dblclick: DoubleClickEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        mousedown: MouseDownEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        mouseenter: MouseEnterEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        mouseleave: MouseLeaveEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        mousemove: MouseMoveEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        mouseout: MouseOutEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        mouseover: MouseOverEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        mouseup: MouseUpEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n\\n        // DragEvent\\n\\n        drag: DragEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        dragend: DragEndEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        dragenter: DragEnterEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        dragexit: DragExitEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        dragleave: DragLeaveEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        dragover: DragOverEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        dragstart: DragStartEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        drop: DropEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n\\n        // KeyboardEvent\\n\\n        keydown: KeyDownEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        keypress: KeyPressEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        keyup: KeyUpEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n\\n        // TouchEvent\\n\\n        touchcancel: TouchCancelEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        touchend: TouchEndEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        touchmove: TouchMoveEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        touchstart: TouchStartEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n\\n        // FocusEvent\\n\\n        blur: BlurEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        focus: FocusEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        focusin: FocusInEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n        focusout: FocusOutEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n\\n        [type: string]: TriggeredEvent<TDelegateTarget, TData, TCurrentTarget, TTarget>;\\n    }\\n\\n    // Extra parameters can be passed from trigger()\\n    type EventHandlerBase<TContext, T> = (this: TContext, t: T, ...args: any[]) => any;\\n\\n    type EventHandler<\\n        TCurrentTarget,\\n        TData = undefined\\n    > = EventHandlerBase<TCurrentTarget, TriggeredEvent<TCurrentTarget, TData>>;\\n\\n    type TypeEventHandler<\\n        TDelegateTarget,\\n        TData,\\n        TCurrentTarget,\\n        TTarget,\\n        TType extends keyof TypeToTriggeredEventMap<TDelegateTarget, TData, TCurrentTarget, TTarget>\\n    > = EventHandlerBase<TCurrentTarget, TypeToTriggeredEventMap<TDelegateTarget, TData, TCurrentTarget, TTarget>[TType]>;\\n\\n    interface TypeEventHandlers<\\n        TDelegateTarget,\\n        TData,\\n        TCurrentTarget,\\n        TTarget\\n    > extends _TypeEventHandlers<TDelegateTarget, TData, TCurrentTarget, TTarget> {\\n        // No idea why it's necessary to include `object` in the union but otherwise TypeScript complains that\\n        // derived types of Event are not assignable to Event.\\n        [type: string]: TypeEventHandler<TDelegateTarget, TData, TCurrentTarget, TTarget, string> |\\n                        false |\\n                        undefined |\\n                        object;\\n    }\\n\\n    type _TypeEventHandlers<\\n        TDelegateTarget,\\n        TData,\\n        TCurrentTarget,\\n        TTarget\\n    > = {\\n        [TType in keyof TypeToTriggeredEventMap<TDelegateTarget, TData, TCurrentTarget, TTarget>]?:\\n            TypeEventHandler<TDelegateTarget, TData, TCurrentTarget, TTarget, TType> |\\n            false |\\n            object;\\n    };\\n\\n    // region Event extensions\\n    // #region Event extensions\\n\\n    interface EventExtensions {\\n        /**\\n         * The jQuery special event hooks are a set of per-event-name functions and properties that allow code to control the behavior of event processing within jQuery. The mechanism is similar to `fixHooks` in that the special event information is stored in `jQuery.event.special.NAME`, where `NAME` is the name of the special event. Event names are case sensitive.\\n         *\\n         * As with `fixHooks`, the special event hooks design assumes it will be very rare that two unrelated pieces of code want to process the same event name. Special event authors who need to modify events with existing hooks will need to take precautions to avoid introducing unwanted side-effects by clobbering those hooks.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#special-event-hooks }\\\\`\\n         */\\n        special: SpecialEventHooks;\\n    }\\n\\n    // region Special event hooks\\n    // #region Special event hooks\\n\\n    /**\\n     * The jQuery special event hooks are a set of per-event-name functions and properties that allow code to control the behavior of event processing within jQuery. The mechanism is similar to `fixHooks` in that the special event information is stored in `jQuery.event.special.NAME`, where `NAME` is the name of the special event. Event names are case sensitive.\\n     *\\n     * As with `fixHooks`, the special event hooks design assumes it will be very rare that two unrelated pieces of code want to process the same event name. Special event authors who need to modify events with existing hooks will need to take precautions to avoid introducing unwanted side-effects by clobbering those hooks.\\n     * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#special-event-hooks }\\\\`\\n     */\\n    // Workaround for TypeScript 2.3 which does not have support for weak types handling.\\n    type SpecialEventHook<TTarget, TData> = {\\n        /**\\n         * Indicates whether this event type should be bubbled when the `.trigger()` method is called; by default it is `false`, meaning that a triggered event will bubble to the element's parents up to the document (if attached to a document) and then to the window. Note that defining `noBubble` on an event will effectively prevent that event from being used for delegated events with `.trigger()`.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#nobubble-boolean }\\\\`\\n         */\\n        noBubble: boolean;\\n    } | {\\n        /**\\n         * When defined, these string properties specify that a special event should be handled like another event type until the event is delivered. The `bindType` is used if the event is attached directly, and the `delegateType` is used for delegated events. These types are generally DOM event types, and _should not_ be a special event themselves.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#bindtype-string-delegatetype-string }\\\\`\\n         */\\n        bindType: string;\\n    } | {\\n        /**\\n         * When defined, these string properties specify that a special event should be handled like another event type until the event is delivered. The `bindType` is used if the event is attached directly, and the `delegateType` is used for delegated events. These types are generally DOM event types, and _should not_ be a special event themselves.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#bindtype-string-delegatetype-string }\\\\`\\n         */\\n        delegateType: string;\\n    } | {\\n        /**\\n         * The setup hook is called the first time an event of a particular type is attached to an element; this provides the hook an opportunity to do processing that will apply to all events of this type on this element. The `this` keyword will be a reference to the element where the event is being attached and `eventHandle` is jQuery's event handler function. In most cases the `namespaces` argument should not be used, since it only represents the namespaces of the _first_ event being attached; subsequent events may not have this same namespaces.\\n         *\\n         * This hook can perform whatever processing it desires, including attaching its own event handlers to the element or to other elements and recording setup information on the element using the `jQuery.data()` method. If the setup hook wants jQuery to add a browser event (via `addEventListener` or `attachEvent`, depending on browser) it should return `false`. In all other cases, jQuery will not add the browser event, but will continue all its other bookkeeping for the event. This would be appropriate, for example, if the event was never fired by the browser but invoked by `.trigger()`. To attach the jQuery event handler in the setup hook, use the `eventHandle` argument.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#setup-function-data-object-namespaces-eventhandle-function }\\\\`\\n         */\\n        setup(this: TTarget, data: TData, namespaces: string, eventHandle: EventHandler<TTarget, TData>): void | false;\\n    } | {\\n        /**\\n         * The teardown hook is called when the final event of a particular type is removed from an element. The `this` keyword will be a reference to the element where the event is being cleaned up. This hook should return `false` if it wants jQuery to remove the event from the browser's event system (via `removeEventListener` or `detachEvent`). In most cases, the setup and teardown hooks should return the same value.\\n         *\\n         * If the setup hook attached event handlers or added data to an element through a mechanism such as `jQuery.data()`, the teardown hook should reverse the process and remove them. jQuery will generally remove the data and events when an element is totally removed from the document, but failing to remove data or events on teardown will cause a memory leak if the element stays in the document.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#teardown-function }\\\\`\\n         */\\n        teardown(this: TTarget): void | false;\\n    } | {\\n        /**\\n         * Each time an event handler is added to an element through an API such as `.on()`, jQuery calls this hook. The `this` keyword will be the element to which the event handler is being added, and the `handleObj` argument is as described in the section above. The return value of this hook is ignored.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#add-function-handleobj }\\\\`\\n         */\\n        add(this: TTarget, handleObj: HandleObject<TTarget, TData>): void;\\n    } | {\\n        /**\\n         * When an event handler is removed from an element using an API such as `.off()`, this hook is called. The `this` keyword will be the element where the handler is being removed, and the `handleObj` argument is as described in the section above. The return value of this hook is ignored.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#remove-function-handleobj }\\\\`\\n         */\\n        remove(this: TTarget, handleObj: HandleObject<TTarget, TData>): void;\\n    } | {\\n        /**\\n         * Called when the `.trigger()` or `.triggerHandler()` methods are used to trigger an event for the special type from code, as opposed to events that originate from within the browser. The `this` keyword will be the element being triggered, and the event argument will be a `jQuery.Event` object constructed from the caller's input. At minimum, the event type, data, namespace, and target properties are set on the event. The data argument represents additional data passed by `.trigger()` if present.\\n         *\\n         * The trigger hook is called early in the process of triggering an event, just after the `jQuery.Event` object is constructed and before any handlers have been called. It can process the triggered event in any way, for example by calling `event.stopPropagation()` or `event.preventDefault()` before returning. If the hook returns `false`, jQuery does not perform any further event triggering actions and returns immediately. Otherwise, it performs the normal trigger processing, calling any event handlers for the element and bubbling the event (unless propagation is stopped in advance or `noBubble` was specified for the special event) to call event handlers attached to parent elements.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#trigger-function-event-jquery-event-data-object }\\\\`\\n         */\\n        trigger(this: TTarget, event: Event, data: TData): void | false;\\n    } | {\\n        /**\\n         * When the `.trigger()` method finishes running all the event handlers for an event, it also looks for and runs any method on the target object by the same name unless of the handlers called `event.preventDefault()`. So, `.trigger( \\\"submit\\\" )` will execute the `submit()` method on the element if one exists. When a `_default` hook is specified, the hook is called just prior to checking for and executing the element's default method. If this hook returns the value `false` the element's default method will be called; otherwise it is not.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#_default-function-event-jquery-event-data-object }\\\\`\\n         */\\n        _default(event: TriggeredEvent<TTarget, TData>, data: TData): void | false;\\n    } | {\\n        /**\\n         * jQuery calls a handle hook when the event has occurred and jQuery would normally call the user's event handler specified by `.on()` or another event binding method. If the hook exists, jQuery calls it _instead_ of that event handler, passing it the event and any data passed from `.trigger()` if it was not a native event. The `this` keyword is the DOM element being handled, and `event.handleObj` property has the detailed event information.\\n         *\\n         * Based in the information it has, the handle hook should decide whether to call the original handler function which is in `event.handleObj.handler`. It can modify information in the event object before calling the original handler, but _must restore_ that data before returning or subsequent unrelated event handlers may act unpredictably. In most cases, the handle hook should return the result of the original handler, but that is at the discretion of the hook. The handle hook is unique in that it is the only special event function hook that is called under its original special event name when the type is mapped using `bindType` and `delegateType`. For that reason, it is almost always an error to have anything other than a handle hook present if the special event defines a `bindType` and `delegateType`, since those other hooks will never be called.\\n         * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#handle-function-event-jquery-event-data-object }\\\\`\\n         */\\n        handle(this: TTarget, event: TriggeredEvent<TTarget, TData> & { handleObj: HandleObject<TTarget, TData>; }, ...data: TData[]): void;\\n    } | {\\n        preDispatch(this: TTarget, event: Event): false | void;\\n    } | {\\n        postDispatch(this: TTarget, event: Event): void;\\n    } | {\\n        [key: string]: never;\\n    };\\n\\n    interface SpecialEventHooks {\\n        [event: string]: SpecialEventHook<EventTarget, any>;\\n    }\\n\\n    /**\\n     * Many of the special event hook functions below are passed a `handleObj` object that provides more information about the event, how it was attached, and its current state. This object and its contents should be treated as read-only data, and only the properties below are documented for use by special event handlers.\\n     * @see \\\\`{@link https://learn.jquery.com/events/event-extensions/#the-handleobj-object }\\\\`\\n     */\\n    interface HandleObject<TTarget, TData> {\\n        /**\\n         * The type of event, such as `\\\"click\\\"`. When special event mapping is used via `bindType` or `delegateType`, this will be the mapped type.\\n         */\\n        readonly type: string;\\n        /**\\n         * The original type name regardless of whether it was mapped via `bindType` or `delegateType`. So when a \\\"pushy\\\" event is mapped to \\\"click\\\" its `origType` would be \\\"pushy\\\".\\n         */\\n        readonly origType: string;\\n        /**\\n         * Namespace(s), if any, provided when the event was attached, such as `\\\"myPlugin\\\"`. When multiple namespaces are given, they are separated by periods and sorted in ascending alphabetical order. If no namespaces are provided, this property is an empty string.\\n         */\\n        readonly namespace: string;\\n        /**\\n         * For delegated events, this is the selector used to filter descendant elements and determine if the handler should be called. For directly bound events, this property is `null`.\\n         */\\n        readonly selector: string | undefined | null;\\n        /**\\n         * The data, if any, passed to jQuery during event binding, e.g. `{ myData: 42 }`. If the data argument was omitted or `undefined`, this property is `undefined` as well.\\n         */\\n        readonly data: TData;\\n        /**\\n         * Event handler function passed to jQuery during event binding. If `false` was passed during event binding, the handler refers to a single shared function that simply returns `false`.\\n         */\\n        readonly handler: EventHandler<TTarget, TData>;\\n    }\\n\\n    // #endregion\\n\\n    // #endregion\\n\\n    // #endregion\\n\\n    interface NameValuePair {\\n        name: string;\\n        value: string;\\n    }\\n\\n    // region Coordinates\\n    // #region Coordinates\\n\\n    interface Coordinates {\\n        left: number;\\n        top: number;\\n    }\\n\\n    // Workaround for TypeScript 2.3 which does not have support for weak types handling.\\n    type CoordinatesPartial =\\n        Pick<Coordinates, 'left'> |\\n        Pick<Coordinates, 'top'> |\\n        { [key: string]: never; };\\n\\n    // #endregion\\n\\n    // region Val hooks\\n    // #region Val hooks\\n\\n    // Workaround for TypeScript 2.3 which does not have support for weak types handling.\\n    type ValHook<TElement> = {\\n        get(elem: TElement): any;\\n    } | {\\n        set(elem: TElement, value: any): any;\\n    } | {\\n        [key: string]: never;\\n    };\\n\\n    interface ValHooks {\\n        // Set to HTMLElement to minimize breaks but should probably be Element.\\n        [nodeName: string]: ValHook<HTMLElement>;\\n    }\\n\\n    // #endregion\\n\\n    type _Falsy = false | null | undefined | 0 | '' | typeof document.all;\\n}\\n\\ndeclare const jQuery: JQueryStatic;\\ndeclare const $: JQueryStatic;\\n\\ntype _Event = Event;\\ntype _UIEvent = UIEvent;\\ntype _MouseEvent = MouseEvent;\\ntype _DragEvent = DragEvent;\\ntype _KeyboardEvent = KeyboardEvent;\\ntype _TouchEvent = TouchEvent;\\ntype _FocusEvent = FocusEvent;\\n\\n// region ES5 compatibility\\n// #region ES5 compatibility\\n\\n// Forward declaration of `Iterable<T>`.\\n// tslint:disable-next-line:no-empty-interface\\ninterface Iterable<T> { }\\n\\ninterface SymbolConstructor {\\n    /**\\n     * A String value that is used in the creation of the default string description of an object.\\n     * Called by the built-in method Object.prototype.toString.\\n     */\\n    readonly toStringTag: symbol;\\n}\\n\\ndeclare var Symbol: SymbolConstructor;\\n\\n// #endregion\\n\";","module.exports = \"// Type definitions for Microsoft SharePoint: 2016.1\\n// Project: https://msdn.microsoft.com/en-us/library/office/jj193034.aspx\\n// Definitions by: Stanislav Vyshchepan <https://github.com/gandjustas>\\n//                 Andrey Markeev <https://github.com/andrei-markeev>\\n//                 Tero Arvola <https://github.com/teroarvola>\\n//                 Dennis George <https://github.com/dennispg>\\n//                 SPWizard01 <https://github.com/SPWizard01>\\n//                 Vitaliy Kotlyarov <https://github.com/betlgtu>\\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\\n// TypeScript Version: 2.5\\n\\n/// <reference types=\\\"microsoft-ajax\\\" />\\n\\ndeclare var _spBodyOnLoadFunctions: Array<() => void>;\\ndeclare var _spBodyOnLoadFunctionNames: string[];\\ndeclare var _spBodyOnLoadCalled: boolean;\\ndeclare function ExecuteOrDelayUntilBodyLoaded(initFunc: () => void): void;\\ndeclare function ExecuteOrDelayUntilScriptLoaded(func: () => void, depScriptFileName: string): boolean;\\ndeclare function ExecuteOrDelayUntilEventNotified(func: (...args: any[]) => void, eventName: string): boolean;\\ndeclare function SelectRibbonTab(tabId: string, force: boolean);\\ndeclare function AttachEvent<K extends keyof HTMLElementEventMap>(type: K, eventFunc: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, el: GlobalEventHandlers);\\ndeclare function CancelEvent(e: Event): boolean;\\ndeclare function encodeScriptQuote(str: string): string;\\ndeclare function StAttrQuote(st: string): string;\\ndeclare function STSScriptEncode(str: string): string;\\ndeclare function STSScriptEncodeWithQuote(str: string): string;\\ndeclare function ToggleDeveloperDashboard(): void;\\ndeclare function ToggleTrace(): void;\\ndeclare function NotifyEventAndExecuteWaitingJobs(eventName: string): void;\\ndeclare function NotifyScriptLoadedAndExecuteWaitingJobs(scriptFileName: string): void;\\ndeclare function NotifyBodyLoadedAndExecuteWaitingJobs(): void;\\ndeclare enum StatusPriority {\\n    red,\\n    yellow,\\n    green,\\n    blue\\n}\\ndeclare const L_Language_Text: string;\\ndeclare const L_ClickOnce1_text: string;\\ndeclare const L_STSRecycleConfirm_Text: string;\\ndeclare const L_STSRecycleConfirm1_Text: string;\\ndeclare const L_STSRecycleConfirm2_Text: string;\\ndeclare const L_STSDelConfirm_Text: string;\\ndeclare const L_STSDelConfirm1_Text: string;\\ndeclare const L_STSDelConfirm2_Text: string;\\ndeclare const L_NewDocLibTb1_Text: string;\\ndeclare const L_NewDocLibTb2_Text: string;\\ndeclare const L_CheckoutConfirm: string;\\ndeclare const L_DiscardCheckoutConfirm: string;\\ndeclare const L_NewFormLibTb1_Text: string;\\ndeclare const L_NewFormLibTb2_Text: string;\\ndeclare const L_ConfirmCheckout_Text: string;\\ndeclare const L_MustCheckout_Text: string;\\ndeclare const L_CheckOutRetry_Text: string;\\ndeclare const L_CannotEditPropertyForLocalCopy_Text: string;\\ndeclare const L_CannotEditPropertyCheckout_Text: string;\\ndeclare const L_NewFormClickOnce1_Text: string;\\ndeclare const L_EnterValidCopyDest_Text: string;\\ndeclare const L_ConfirmUnlinkCopy_Text: string;\\ndeclare const L_CopyingOfflineVersionWarning_Text: string;\\ndeclare const L_Loading_Text: string;\\ndeclare const L_Loading_Error_Text: string;\\ndeclare const L_Inplview_PageNotYetSaved: string;\\ndeclare const L_WarnkOnce_text: string;\\ndeclare const L_WebFoldersRequired_Text: string;\\ndeclare const L_WebFoldersError_Text: string;\\ndeclare const L_NoExplorerView_Text: string;\\ndeclare const L_WikiWebPartNoClosedOrUploaded: string;\\ndeclare const L_AccessibleMenu_Text: string;\\ndeclare const L_SubMenu_Text: string;\\ndeclare const L_NewBlogPost_Text: string;\\ndeclare const L_NewBlogPostFailed_Text: string;\\ndeclare const recycleBinEnabled: number;\\ndeclare const cascadeDeleteWarningMessage: string;\\ndeclare const bIsFileDialogView: boolean;\\ndeclare var Strings: any;\\ndeclare const enum Sods {\\n    missing = 1,\\n    loading = 2,\\n    pending = 3,\\n    loaded = 4,\\n    error = 5\\n}\\n\\ndeclare function GetThemedImageUrl(image: string): string;\\ndeclare function $urlHtmlEncodeString(string: string): string;\\ndeclare var SPClientRenderer: SPClientRenderer;\\ndeclare var MSOWebPartPageFormName: string;\\ndeclare var HP: HP;\\n\\ninterface SPClientRenderer {\\n    AddCallStackInfoToErrors: boolean;\\n    AddPostRenderCallback: (context: any, callback: () => void) => void;\\n    CoreRender: () => void;\\n    GlobalDebugMode: boolean;\\n    IsDebugMode: () => boolean;\\n    ParseTemplateString: (template: string) => () => string;\\n    ParseTemplateStringWorker: (template: string) => () => string;\\n    Render: () => void;\\n    RenderCore: () => void;\\n    RenderErrors: boolean;\\n    RenderReplace: () => void;\\n    ReplaceUrlTokens: (url: string) => () => string;\\n    _ExecuteRenderCallbacks: () => void;\\n    _ExecuteRenderCallbacksWorker: () => void;\\n}\\n\\ninterface HPIds {\\n    close: string;\\n    follow: string;\\n    post: string;\\n    title: string;\\n    fileType: string;\\n    size: string;\\n    header: string;\\n    body: string;\\n    actions: string;\\n    viewsLifeTime: string;\\n    viewsRecent: string;\\n    inner: string;\\n    content: string;\\n    arrowBorder: string;\\n    arrow: string;\\n    modifiedDate: string;\\n    author: string;\\n    viewDuplicates: string;\\n    parentLink: string;\\n    send: string;\\n    openClient: string;\\n    open: string;\\n    preview: string;\\n    dimensions: string;\\n    dateCreated: string;\\n    viewer: string;\\n    sectionName: string;\\n    siteLogo: string;\\n    siteDescription: string;\\n    noData: string;\\n    summary: string;\\n    peopleSkills: string;\\n    peoplePastProjects: string;\\n    peopleInterests: string;\\n    peopleSchools: string;\\n    peopleSummary: string;\\n    peopleMemberships: string;\\n}\\n\\ninterface HP {\\n    Close: () => void;\\n    CommonActions: string;\\n    CommonBody: string;\\n    CommonHeader: string;\\n    Follow: () => void;\\n    GetAuthorsHtml: () => string;\\n    GetBodySectionContent: () => string;\\n    GetBodySectionHeading: () => string;\\n    GetEmailLink: (title: string, path: string, client: string, url: string) => string;\\n    GetFriendlyNameForFileType: (fileType: any) => string;\\n    GetNowDateTimeDifference: () => string;\\n    GetPeopleFollowingControl: () => string;\\n    Hide: () => void;\\n    Init: () => void;\\n    InitPostLoad: () => void;\\n    IsNumeric: () => boolean;\\n    Resize: () => void;\\n    SetPreviewOnHideCallback: () => void;\\n    SetWidth: (width: number) => void;\\n    Show: () => void;\\n    ViewDuplicates: () => boolean;\\n    getDateString: () => string;\\n    getStringFromDate: () => string;\\n    ids: HPIds;\\n    loadSiteViewer: (id: string, idinner: string, idviewer: string, path: string, idglass: string) => void;\\n    loadViewer: (id: string, idinner: string, idviewer: string, idpreview: string, embedUrl: string, previewUrl: string) => void;\\n    postActionEventName: string;\\n}\\n\\ninterface Sod {\\n    url: string;\\n    key: string;\\n    loaded: boolean;\\n    depkeys?: string[];\\n    state: Sods;\\n    qfn?: any[];\\n    reset?: boolean;\\n}\\n\\ndeclare var _v_dictSod: { [address: string]: Sod };\\ndeclare namespace SP {\\n    interface SOD {\\n        execute(fileName: string, functionName: string, ...args: any[]): void;\\n        executeFunc(fileName: string, typeName: string, fn: () => void): void;\\n        executeOrDelayUntilEventNotified(func: (...args: any[]) => void, eventName: string): boolean;\\n        executeOrDelayUntilScriptLoaded(func: () => void, depScriptFileName: string): boolean;\\n        notifyScriptLoadedAndExecuteWaitingJobs(scriptFileName: string): void;\\n        notifyEventAndExecuteWaitingJobs(eventName: string, args?: any[]): void;\\n        registerSod(fileName: string, url: string): void;\\n        registerSodDep(fileName: string, dependentFileName: string): void;\\n        loadMultiple(keys: string[], fn: () => void, bSync?: boolean): void;\\n        delayUntilEventNotified(func: (...args: any[]) => void, eventName: string): void;\\n\\n        get_prefetch(): boolean;\\n        set_prefetch(value: boolean): void;\\n\\n        get_ribbonImagePrefetchEnabled(): boolean;\\n        set_ribbonImagePrefetchEnabled(value: boolean): void;\\n    }\\n\\n    let SOD: SOD;\\n\\n    enum ListLevelPermissionMask {\\n        viewListItems, // : 1,\\n        insertListItems, // : 2,\\n        editListItems, // : 4,\\n        deleteListItems, // : 8,\\n        approveItems, // : 16,\\n        openItems, // : 32,\\n        viewVersions, // : 64,\\n        deleteVersions, // : 128,\\n        breakCheckout, // : 256,\\n        managePersonalViews, // : 512,\\n        manageLists // : 2048\\n    }\\n\\n    class HtmlBuilder {\\n        constructor();\\n        addAttribute(name: string, value: string): void;\\n        addCssClass(cssClassName: string): void;\\n        addCommunitiesCssClass(cssClassName: string): void;\\n        renderBeginTag(tagName: string): void;\\n        renderEndTag(): void;\\n        write(s: string): void;\\n        writeEncoded(s: string): void;\\n        toString(): string;\\n    }\\n\\n    class ScriptHelpers {\\n        static disableWebpartSelection(context: SPClientTemplates.RenderContext): void;\\n        static getDocumentQueryPairs(): { [index: string]: string; };\\n        static getFieldFromSchema(schema: SPClientTemplates.ListSchema, fieldName: string): SPClientTemplates.FieldSchema;\\n        static getLayoutsPageUrl(pageName: string, webServerRelativeUrl: string): string;\\n        static getListLevelPermissionMask(jsonItem: string): number;\\n        static getTextAreaElementValue(textAreaElement: HTMLTextAreaElement): string;\\n        static getUrlQueryPairs(docUrl: string): { [index: string]: string; };\\n        static getUserFieldProperty(item: ListItem, fieldName: string, propertyName: string): any;\\n        static hasPermission(listPermissionMask: number, listPermission: ListLevelPermissionMask): boolean;\\n        static newGuid(): SP.Guid;\\n        static isNullOrEmptyString(str: string): boolean;\\n        static isNullOrUndefined(obj: any): boolean;\\n        static isNullOrUndefinedOrEmpty(str: string): boolean;\\n        static isUndefined(obj: any): boolean;\\n        static replaceOrAddQueryString(url: string, key: string, value: string): string;\\n        static removeHtml(str: string): string;\\n        static removeStyleChildren(element: HTMLElement): void;\\n        static removeHtmlAndTrimStringWithEllipsis(str: string, maxLength: number): string;\\n        static setTextAreaElementValue(textAreaElement: HTMLTextAreaElement, newValue: string): void;\\n        static truncateToInt(n: number): number;\\n        static urlCombine(path1: string, path2: string): string;\\n        static resizeImageToSquareLength(imgElement: HTMLImageElement, squareLength: number): void;\\n    }\\n\\n    class PageContextInfo {\\n        constructor();\\n        static get_siteServerRelativeUrl(): string;\\n        static get_webServerRelativeUrl(): string;\\n        static get_webAbsoluteUrl(): string;\\n        static get_serverRequestPath(): string;\\n        static get_siteAbsoluteUrl(): string;\\n        static get_webTitle(): string;\\n        static get_tenantAppVersion(): string;\\n        static get_isAppWeb(): boolean;\\n        static get_webLogoUrl(): string;\\n        static get_webLanguage(): number;\\n        static get_currentLanguage(): number;\\n        static get_pageItemId(): number;\\n        static get_pageListId(): string;\\n        static get_webPermMasks(): { High: number; Low: number; };\\n        static get_currentCultureName(): string;\\n        static get_currentUICultureName(): string;\\n        static get_clientServerTimeDelta(): number;\\n        static get_userLoginName(): string;\\n        static get_webTemplate(): string;\\n        static get_pagePersonalizationScope(): string;\\n    }\\n    class ContextPermissions {\\n        has(perm: number): boolean;\\n        hasPermissions(high: number, low: number): boolean;\\n        fromJson(json: { High: number; Low: number; }): void;\\n    }\\n\\n    namespace ListOperation {\\n        namespace ViewOperation {\\n            function getSelectedView(): string;\\n            function navigateUp(viewId: string): void;\\n            function refreshView(viewId: string): void;\\n        }\\n        namespace Selection {\\n            function selectListItem(iid: string, bSelect: boolean): void;\\n            function getSelectedItems(): Array<{ id: number; fsObjType: FileSystemObjectType; }>;\\n            function getSelectedList(): string;\\n            function getSelectedView(): string;\\n            function navigateUp(viewId: string): void;\\n            function deselectAllListItems(iid: string): void;\\n        }\\n        namespace Overrides {\\n            function overrideDeleteConfirmation(listId: string, overrideText: string): void;\\n        }\\n    }\\n}\\n\\n/** Register function to rerun on partial update in MDS-enabled site.*/\\ndeclare function RegisterModuleInit(scriptFileName: string, initFunc: () => void): void;\\n\\n/** Provides access to url and query string parts.*/\\ndeclare class JSRequest {\\n    /** Query string parts.*/\\n    static QueryString: { [parameter: string]: string; };\\n\\n    /** initializes class.*/\\n    static EnsureSetup(): void;\\n\\n    /** Current file name (after last '/' in url).*/\\n    static FileName: string;\\n\\n    /** Current file path (before last '/' in url).*/\\n    static PathName: string;\\n}\\n\\ninterface _spPageContextInfo {\\n    alertsEnabled: boolean; // true\\n    allowSilverlightPrompt: string; // \\\"True\\\"\\n    blockDownloadsExperienceEnabled: boolean; // true\\n    canUserCreateMicrosoftForm: boolean; // true\\n    cdnPrefix: string; // \\\"static.sharepointonline.com/bld\\\"\\n    clientServerTimeDelta: number; // -182\\n    CorrelationId: string; // \\\"6161f99d-10e5-4000-ad30-1016270fe31d\\\"\\n    crossDomainPhotosEnabled: boolean; // true\\n    currentCultureName: string; // \\\"ru-RU\\\"\\n    currentLanguage: number; // 1049\\n    currentUICultureName: string; // \\\"ru-RU\\\"\\n    disableAppViews: boolean; // true\\n    disableFlows: boolean; // true\\n    env: string; // \\\"prod\\\"\\n    farmLabel: string; // \\\"US_4_Content\\\"\\n    formDigestValue: string; // \\\"0x5F3FE84E7EE9089C7D11DCDAFFB9E69CF8241E68B9EF071FA92CD419E878AC4F7C16E34696EFA667EFD0712FC1DF4945DDC0D09B5D23153A698A727AF076B5DE,07 Jun 2017 18:55:22 -0000\\\"\\n    formDigestTimeoutSeconds: number; // 1800\\n    groupColor: string; // \\\"#d40ac7\\\"\\n    groupHasHomepage: boolean; // true\\n    groupId: string; //\\n    guestsEnabled: boolean; // true\\n    hasManageWebPermissions: boolean; // true\\n    isAnonymousGuestUser: boolean; // true\\n    isAppWeb: boolean; // true\\n    isExternalGuestUser: boolean; // true\\n    isNoScriptEnabled: boolean; // true\\n    isSiteAdmin: boolean; // true\\n    isSPO: boolean; // true\\n    isTenantDevSite: boolean; // true\\n    isWebWelcomePage: boolean; // true\\n    layoutsUrl: string;  // \\\"_layouts/15\\\"\\n    listBaseTemplate: number; // 119\\n    listId: string; // \\\"{06ee6d96-f27f-4160-b6bb-c18f187b18a7}\\\"\\n    listPermsMask: { High: number; Low: number; };\\n    listTitle: string; // \\\"Site Pages\\\"\\n    listUrl: string; // \\\"/sites/site/list\\\"\\n    maximumFileSize: number; // 15360\\n    openInClient: boolean; // true\\n    pageListId: string;  // \\\"{06ee6d96-f27f-4160-b6bb-c18f187b18a7}\\\"\\n    pageItemId: number;\\n    pagePermsMask: { High: number; Low: number; };\\n    pagePersonalizationScope: string; // 1\\n    PreviewFeaturesEnabled: boolean; // true\\n    preferUserTimeZone: boolean; // false\\n    ProfileUrl: string; // \\\"https://tenant-my.sharepoint.com/person.aspx\\\"\\n    PublishingFeatureOn: boolean; // true\\n    RecycleBinItemCount: number; // -1\\n    serverRedirectedUrl: string;\\n    serverRequestPath: string; // \\\"/SPTypeScript/Lists/ConditionalFormattingTasksList/AllItems.aspx\\\"\\n    serverTime: string; // \\\"2017-06-07T18:55:22.3499459Z\\\"\\n    siteAbsoluteUrl: string; // \\\"https:// gandjustas-7b20d3715e8ed4.sharepoint.com\\\"\\n    siteClassification: string; //\\n    siteClientTag: string; // \\\"0$$15.0.4454.1021\\\"\\n    siteColor: string; // \\\"#d40ac7\\\"\\n    siteId: string; // \\\"{3e09a056-f68f-44a3-8e0f-ff2c123b82cb}\\\"\\n    sitePagesEnabled: boolean; // true\\n    siteServerRelativeUrl: string; // \\\"/\\\"\\n    siteSubscriptionId: string; // 4eedf5f3-f71f-4e73-82ee-e19081363c8c\\n    supportPoundStorePath: boolean; // true\\n    supportPercentStorePath: boolean; // true\\n    systemUserKey: string; // \\\"i:0h.f|membership|10033fff84e7cb2b@live.com\\\"\\n    tenantAppVersion: string; // \\\"0\\\"\\n    themeCacheToken: string; // \\\"/sites/site::0:16.0.6525.1206\\\"\\n    themedCssFolderUrl: string;\\n    themedImageFileNames: string;\\n    updateFormDigestPageLoaded: string; // \\\"2017-06-07T18:55:25.821Z\\\"\\n    userDisplayName: string; // \\\"John Doe\\\"\\n    userEmail: string; // \\\"john.doe@fabrikam.onmicrosoft.com\\\"\\n    userId: number; // 12\\n    userLoginName: string; // \\\"john.doe@fabrikam.onmicrosoft.com\\\"\\n    userPrincipalName: string;\\n    viewOnlyExperienceEnabled: boolean; // true\\n    viewId: string; // \\\"{06ee6d96-f27f-4160-b6bb-c18f187b18a7}\\\"\\n    webAbsoluteUrl: string; // \\\"https:// gandjustas-7b20d3715e8ed4.sharepoint.com/SPTypeScript\\\"\\n    webDescription: string; // \\\"Some description\\\"\\n    webId: string; // \\\"{06ee6d96-f27f-4160-b6bb-c18f187b18a7}\\\"\\n    webLanguage: number; // 1049\\n    webLogoUrl: string; // \\\"/_layouts/15/images/siteIcon.png?rev=23\\\"\\n    webPermMasks: { High: number; Low: number; };\\n    webServerRelativeUrl: string; // \\\"/SPTypeScript\\\"\\n    webTemplate: string; // \\\"17\\\"\\n    webTitle: string; // \\\"SPTypeScript\\\"\\n    webUIVersion: number; // 15\\n}\\ndeclare var _spPageContextInfo: _spPageContextInfo;\\n\\ninterface _spFriendlyUrlPageContextInfo {\\n    termId: string;\\n    termSetId: string;\\n    termStoreId: string;\\n    title: string;\\n}\\ndeclare var _spFriendlyUrlPageContextInfo: _spFriendlyUrlPageContextInfo;\\n\\ndeclare function STSHtmlEncode(value: string): string;\\ndeclare function STSHtmlDecode(value: string): string;\\n\\ndeclare function AddEvtHandler(element: HTMLElement, event: string, func: EventListener): void;\\n\\n/** Gets query string parameter */\\ndeclare function GetUrlKeyValue(key: string): string;\\n\\ndeclare class AjaxNavigate {\\n    update(url: string, updateParts: { [name: string]: string | number }, fullNavigate: boolean, anchorName: string): void;\\n    add_navigate(handler: (obj: any, eventArgs: any) => void): void;\\n    remove_navigate(handler: (obj: any, eventArgs: any) => void): void;\\n    submit(formToSubmit: HTMLFormElement): void;\\n    getParam(paramName: string): string;\\n    getSavedFormAction(): string;\\n    get_href(): string;\\n    get_hash(): string;\\n    get_search(): string;\\n    convertMDSURLtoRegularURL(mdsPath: string): string;\\n}\\n\\ndeclare var ajaxNavigate: AjaxNavigate;\\n\\ndeclare class Browseris {\\n    firefox: boolean;\\n    firefox36up: boolean;\\n    firefox3up: boolean;\\n    firefox4up: boolean;\\n    ie: boolean;\\n    ie55up: boolean;\\n    ie5up: boolean;\\n    ie7down: boolean;\\n    ie8down: boolean;\\n    ie9down: boolean;\\n    ie8standard: boolean;\\n    ie8standardUp: boolean;\\n    ie9standardUp: boolean;\\n    ipad: boolean;\\n    windowsphone: boolean;\\n    chrome: boolean;\\n    chrome7up: boolean;\\n    chrome8up: boolean;\\n    chrome9up: boolean;\\n    iever: boolean;\\n    mac: boolean;\\n    major: boolean;\\n    msTouch: boolean;\\n    isTouch: boolean;\\n    nav: boolean;\\n    nav6: boolean;\\n    nav6up: boolean;\\n    nav7up: boolean;\\n    osver: boolean;\\n    safari: boolean;\\n    safari125up: boolean;\\n    safari3up: boolean;\\n    verIEFull: boolean;\\n    w3c: boolean;\\n    webKit: boolean;\\n    win: boolean;\\n    win8AppHost: boolean;\\n    win32: boolean;\\n    win64bit: boolean;\\n    winnt: boolean;\\n    armProcessor: boolean;\\n}\\n\\ndeclare var browseris: Browseris;\\n\\ninterface ContextInfo extends SPClientTemplates.RenderContext {\\n    AllowGridMode: boolean;\\n    BasePermissions: any;\\n    BaseViewID: any;\\n    CascadeDeleteWarningMessage: string;\\n    ContentTypesEnabled: boolean;\\n    CurrentSelectedItems: boolean;\\n    CurrentUserId: number;\\n    CurrentUserIsSiteAdmin: boolean;\\n    EnableMinorVersions: boolean;\\n    ExternalDataList: boolean;\\n    HasRelatedCascadeLists: boolean;\\n    HttpPath: string;\\n    HttpRoot: string;\\n    LastSelectableRowIdx: number;\\n    LastSelectedItemIID: number;\\n    LastRowIndexSelected: number;\\n    RowFocusTimerID: number;\\n    ListTitle: string;\\n    ListData: any; // SPClientTemplates.ListData_InView | SPClientTemplates.ListData_InForm\\n    ListSchema: SPClientTemplates.ListSchema;\\n    ModerationStatus: number;\\n    PortalUrl: string;\\n    RecycleBinEnabled: number;\\n    SelectAllCbx: HTMLElement;\\n    SendToLocationName: string;\\n    SendToLocationUrl: string;\\n    SiteTitle: string;\\n    StateInitDone: boolean;\\n    TableCbxFocusHandler(instance: any, eventArgs: any): void;\\n    TableMouseoverHandler(instance: any, eventArgs: any): void;\\n    TotalListItems: number;\\n    WorkflowsAssociated: boolean;\\n    clvp: any;\\n    ctxId: number;\\n    ctxType: any;\\n    dictSel: any;\\n    displayFormUrl: string;\\n    editFormUrl: string;\\n    imagesPath: string;\\n    inGridMode: boolean;\\n    inGridFullRender: boolean;\\n    isForceCheckout: boolean;\\n    isModerated: boolean;\\n    isPortalTemplate: boolean;\\n    isVersions: boolean;\\n    isWebEditorPreview: boolean;\\n    leavingGridMode: boolean;\\n    loadingAsyncData: boolean;\\n    listBaseType: number;\\n    listName: string;\\n    listTemplate: string;\\n    listUrlDir: string;\\n    newFormUrl: string;\\n    onRefreshFailed(context: any, requrest: any, response: any): void;\\n    overrideDeleteConfirmation: string;\\n    overrideFilterQstring: string;\\n    recursiveView: boolean;\\n    rootFolderForDisplay: string;\\n    serverUrl: string;\\n    verEnabled: boolean;\\n    view: string;\\n    queryString: string;\\n    IsClientRendering: boolean;\\n    wpq: string;\\n    rootFolder: string;\\n    IsAppWeb: boolean;\\n    NewWOPIDocumentEnabled: boolean;\\n    NewWOPIDocumentUrl: string;\\n    AllowCreateFolder: boolean;\\n    CanShareLinkForNewDocument: boolean;\\n    noGroupCollapse: boolean;\\n    SiteTemplateId: number;\\n    ExcludeFromOfflineClient: boolean;\\n}\\n\\ndeclare function GetCurrentCtx(): ContextInfo;\\ndeclare function SetFullScreenMode(fullscreen: boolean): void;\\ndeclare namespace SP {\\n    enum RequestExecutorErrors {\\n        requestAbortedOrTimedout,\\n        unexpectedResponse,\\n        httpError,\\n        noAppWeb,\\n        domainDoesNotMatch,\\n        noTrustedOrigins,\\n        iFrameLoadError\\n    }\\n\\n    class RequestExecutor {\\n        constructor(url: string, options?: any);\\n        get_formDigestHandlingEnabled(): boolean;\\n        set_formDigestHandlingEnabled(value: boolean): void;\\n        get_iFrameSourceUrl(): string;\\n        set_iFrameSourceUrl(value: string): void;\\n        executeAsync(requestInfo: RequestInfo): void;\\n        attemptLogin(returnUrl: string, success: (response: ResponseInfo) => void, error?: (response: ResponseInfo, error: RequestExecutorErrors, statusText: string) => void): void;\\n    }\\n\\n    interface RequestInfo {\\n        url: string;\\n        method?: string;\\n        headers?: { [key: string]: string; };\\n        /** Can be string or bytearray depending on binaryStringRequestBody field */\\n        body?: string | Uint8Array;\\n        binaryStringRequestBody?: boolean;\\n\\n        /** Currently need fix to get ginary response. Details: http:// techmikael.blogspot.ru/2013/07/how-to-copy-files-between-sites-using.html */\\n        binaryStringResponseBody?: boolean;\\n        timeout?: number;\\n        success?(response: ResponseInfo): void;\\n        error?(response: ResponseInfo, error: RequestExecutorErrors, statusText: string): void;\\n        state?: any;\\n    }\\n\\n    interface ResponseInfo {\\n        statusCode?: number;\\n        statusText?: string;\\n        responseAvailable: boolean;\\n        allResponseHeaders?: string;\\n        headers?: { [key: string]: string; };\\n        contentType?: string;\\n        /** Can be string or bytearray depending on request.binaryStringResponseBody field */\\n        body?: string | Uint8Array;\\n        state?: any;\\n    }\\n\\n    class ProxyWebRequestExecutor extends Sys.Net.WebRequestExecutor {\\n        constructor(url: string, options?: any);\\n    }\\n\\n    class ProxyWebRequestExecutorFactory implements SP.IWebRequestExecutorFactory {\\n        constructor(url: string, options?: any);\\n        createWebRequestExecutor(): ProxyWebRequestExecutor;\\n    }\\n}\\n\\ninterface MQuery {\\n    (selector: string, context?: any): MQueryResultSetElements;\\n    (objectOrElement: MQueryResultSetElements | HTMLElement | HTMLElement[]): MQueryResultSetElements;\\n    <T>(object?: MQueryResultSet<T> | T | T[]): MQueryResultSet<T>;\\n\\n    throttle<T extends (...args: any[]) => any>(fn: T, interval: number, shouldOverrideThrottle: boolean): T;\\n\\n    extend(target: any, ...objs: any[]): any;\\n    extend(deep: boolean, target: any, ...objs: any[]): any;\\n\\n    makeArray<T>(obj: any): any[];\\n\\n    isDefined(obj: any): boolean;\\n    isNotNull(obj: any): boolean;\\n    isUndefined(obj: any): boolean;\\n    isNull(obj: any): boolean;\\n    isUndefinedOrNull(obj: any): boolean;\\n    isDefinedAndNotNull(obj: any): boolean;\\n    isString(obj: any): boolean;\\n    isBoolean(obj: any): boolean;\\n    isFunction(obj: any): boolean;\\n    isArray(obj: any): boolean;\\n    isNode(obj: any): boolean;\\n    isElement(obj: any): boolean;\\n    isMQueryResultSet(obj: any): boolean;\\n    isNumber(obj: any): boolean;\\n    isObject(obj: any): boolean;\\n    isEmptyObject(obj: any): boolean;\\n\\n    ready(callback: () => void): void;\\n    contains(container: HTMLElement, contained: HTMLElement): boolean;\\n\\n    proxy(fn: (...args: any[]) => any, context: any, ...args: any[]): (...args: any[]) => any;\\n    proxy(context: any, name: string, ...args: any[]): any;\\n\\n    every<T>(obj: T[] | MQueryResultSet<T>, fn: (elementOfArray: T, indexInArray?: number) => boolean, context?: any): boolean;\\n    some<T>(obj: T[] | MQueryResultSet<T>, fn: (elementOfArray: T, indexInArray?: number) => boolean, context?: any): boolean;\\n\\n    filter<T>(obj: T[], fn: (elementOfArray: T, indexInArray?: number) => boolean, context?: any): T[];\\n    filter<T>(obj: MQueryResultSet<T>, fn: (elementOfArray: T, indexInArray?: number) => boolean, context?: any): MQueryResultSet<T>;\\n\\n    forEach<T>(obj: T[] | MQueryResultSet<T>, fn: (elementOfArray: T, indexInArray?: number) => void, context?: any): void;\\n\\n    map<T, U>(array: T[], callback: (elementOfArray: T, indexInArray?: number) => U): U[];\\n    map<T, U>(array: MQueryResultSet<T>, callback: (elementOfArray: T, indexInArray?: number) => U): MQueryResultSet<U>;\\n\\n    indexOf<T>(obj: T[], object: T, startIndex?: number): number;\\n    lastIndexOf<T>(obj: T[], object: T, startIndex?: number): number;\\n\\n    data(element: HTMLElement, key?: string, value?: any): any;\\n\\n    removeData(element: HTMLElement, name?: string): MQueryResultSetElements;\\n    hasData(element: HTMLElement): boolean;\\n}\\n\\ninterface MQueryResultSetElements extends MQueryResultSet<HTMLElement> {\\n    append(node: HTMLElement | MQueryResultSetElements | string): MQueryResultSetElements;\\n\\n    bind(eventType: string, handler: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    unbind(eventType: string, handler: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    trigger(eventType: string): MQueryResultSetElements;\\n    one(eventType: string, handler: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n\\n    detach(): MQueryResultSetElements;\\n\\n    find(selector: string): MQueryResultSetElements;\\n    closest(selector: string, context?: any): MQueryResultSetElements;\\n    offset(): { left: number; top: number; };\\n    offset(coordinates: { left: any; top: any; }): MQueryResultSetElements;\\n\\n    filter(selector: string): MQueryResultSetElements;\\n    filter(fn: (elementOfArray: HTMLElement, indexInArray?: number) => boolean, context?: any): MQueryResultSetElements;\\n\\n    not(selector: string): MQueryResultSetElements;\\n\\n    parent(selector?: string): MQueryResultSetElements;\\n\\n    offsetParent(selector?: string): MQueryResultSetElements;\\n\\n    parents(selector?: string): MQueryResultSetElements;\\n    parentsUntil(selectorOrElement?: string | HTMLElement, filter?: string): MQueryResultSetElements;\\n\\n    position(): { top: number; left: number; };\\n\\n    attr(attributeName: string): string;\\n    attr(attributeName: string, valueOrDelegate: any): MQueryResultSetElements;\\n    attr(map: { [key: string]: any; }): MQueryResultSetElements;\\n    // tslint:disable-next-line: unified-signatures\\n    attr(attributeName: string, func: (index: number, attr: any) => any): MQueryResultSetElements;\\n\\n    addClass(classNames: string): MQueryResultSetElements;\\n    removeClass(classNames: string): MQueryResultSetElements;\\n\\n    css(propertyName: string | string[]): string;\\n    css(properties: any): MQueryResultSetElements;\\n    css(propertyName: any | string, value: any): MQueryResultSetElements;\\n\\n    remove(selector?: string): MQueryResultSetElements;\\n    children(selector?: string): MQueryResultSetElements;\\n    empty(): MQueryResultSetElements;\\n    first(): MQueryResultSetElements;\\n\\n    data(key: string, value: any): MQueryResultSetElements;\\n    data(obj: { [key: string]: any; }): MQueryResultSetElements;\\n    data(key: string): any;\\n\\n    removeData(key: string): MQueryResultSetElements;\\n\\n    map(callback?: (elementOfArray: HTMLElement, indexInArray: number) => any): MQueryResultSetElements;\\n\\n    blur(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    change(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    click(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    dblclick(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    error(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    focus(handler: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    focusin(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    focusout(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    keydown(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    keypress(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    keyup(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    load(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    mousedown(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    mouseenter(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    mouseleave(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    mousemove(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    mouseout(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    mouseover(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    mouseup(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    resize(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    scroll(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    select(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    submit(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n    unload(handler?: (eventObject: MQueryEvent) => any): MQueryResultSetElements;\\n}\\n\\ninterface MQueryResultSet<T> {\\n    [index: number]: T;\\n    contains(contained: T): boolean;\\n\\n    filter(fn: (elementOfArray: T, indexInArray?: number) => boolean, context?: any): MQueryResultSet<T>;\\n    every(fn: (elementOfArray: T, indexInArray?: number) => boolean, context?: any): boolean;\\n    some(fn: (elementOfArray: T, indexInArray?: number) => boolean, context?: any): boolean;\\n    map(callback: (elementOfArray: T, indexInArray?: number) => any): MQueryResultSet<T>;\\n    forEach(fn: (elementOfArray: T, indexInArray?: number) => void, context?: any): void;\\n    indexOf(object: any, startIndex?: number): number;\\n    lastIndexOf(object: any, startIndex?: number): number;\\n}\\n\\ninterface MQueryEvent extends Event {\\n    altKey: boolean;\\n    attrChange: number;\\n    attrName: string;\\n    bubbles: boolean;\\n    button: number;\\n    cancelable: boolean;\\n    ctrlKey: boolean;\\n    defaultPrevented: boolean;\\n    detail: number;\\n    eventPhase: number;\\n    newValue: string;\\n    prevValue: string;\\n    relatedNode: HTMLElement;\\n    screenX: number;\\n    screenY: number;\\n    shiftKey: boolean;\\n    view: any;\\n}\\n\\ndeclare var m$: MQuery;\\ndeclare class CalloutActionOptions {\\n    /** Text for the action link */\\n    text: string;\\n    tooltip: string;\\n    disabledTooltip: string;\\n    /** Callback that is executed when the action link is clicked.\\n        @param event Standard javascript event object\\n        @param action The action object */\\n    onClickCallback: (event: Event, action: CalloutAction) => any;\\n    /** Callback which returns if the action link is enabled */\\n    isEnabledCallback: (action: CalloutAction) => boolean;\\n    /** Callback which returns if the action link is visible */\\n    isVisibleCallback: (action: CalloutAction) => boolean;\\n    /** Submenu entries for the action. If defined, the action link click will popup the specified menu. */\\n    menuEntries: CalloutActionMenuEntry[];\\n}\\n\\n/** Defines a callout action menu entry */\\ndeclare class CalloutActionMenuEntry {\\n    /** Creates a callout action menu entry\\n        @param text Text to be displayed as the menu item text\\n        @param onClickCallback Callback that will be fired when the item is clicked\\n        @param wzISrc Url of the icon\\n        @param wzIAlt Alternative text for the icon image\\n        @param wzISeq Sequence for the menu item\\n        @param wzDesc Description of the menu item */\\n    constructor(\\n        text: string,\\n        onClickCallback: (actionMenuEntry: CalloutActionMenuEntry, actionMenuEntryIndex: number) => void,\\n        wzISrc: string,\\n        wzIAlt: string,\\n        wzISeq: number,\\n        wzDesc: string);\\n}\\n\\ndeclare class CalloutActionMenu {\\n    constructor(actionsId: any);\\n    addAction(action: CalloutAction): void;\\n    getActions(): CalloutAction[];\\n    render(): void;\\n    refreshActions(): void;\\n    calculateActionWidth(): void;\\n}\\n\\ndeclare class CalloutAction {\\n    constructor(options: CalloutActionOptions);\\n    getText(): string;\\n    getToolTop(): string;\\n    getDisabledToolTip(): string;\\n    getOnClickCallback(event: any, action: CalloutAction): any;\\n    getIsDisabledCallback(action: CalloutAction): boolean;\\n    getIsVisibleCallback(action: CalloutAction): boolean;\\n    getIsMenu(): boolean;\\n    getMenuEntries(): CalloutActionMenuEntry[];\\n    render(): void;\\n    isEnabled(): boolean;\\n    isVisible(): boolean;\\n    set(options: CalloutActionOptions): void;\\n}\\n\\ndeclare class Callout {\\n    /** Sets options for the callout. Not all options can be changed for the callout after its creation. */\\n    set(options: CalloutOptions): any;\\n    /** Adds event handler to the callout.\\n        @param eventName one of the following: \\\"opened\\\", \\\"opening\\\", \\\"closing\\\", \\\"closed\\\" */\\n    addEventCallback(eventName: string, callback: (callout: Callout) => void): void;\\n    /** Returns the launch point element of the callout. */\\n    getLaunchPoint(): HTMLElement;\\n    /** Returns the ID of the callout. */\\n    getID(): string;\\n    /** Returns the title of the callout. */\\n    getTitle(): string;\\n    /** Returns the contents of the callout. */\\n    getContent(): string;\\n    /** Returns the content element of the callout. */\\n    getContentElement(): HTMLElement;\\n    /** Returns the bounding element defined for the callout during its creation. */\\n    getBoundingBox(): HTMLElement;\\n    /** Returns the content width defined for the callout during its creation. */\\n    getContentWidth(): number;\\n    /** Returns the object that represents open behaivor defined for the callout during its creation. */\\n    getOpenOptions(): CalloutOpenOptions;\\n    /** Returns the beak orientation defined for the callout during its creation. */\\n    getBeakOrientation(): string;\\n    /** Returns the position algorithm function defined for the callout during its creation. */\\n    getPositionAlgorithm(): any;\\n    /** Specifies wherever callout is in \\\"Opened\\\" state */\\n    isOpen(): boolean;\\n    /** Specifies wherever callout is in \\\"Opening\\\" state */\\n    isOpening(): boolean;\\n    /** Specifies wherever callout is in \\\"Opened\\\" or \\\"Opening\\\" state */\\n    isOpenOrOpening(): boolean;\\n    /** Specifies wherever callout is in \\\"Closing\\\" state */\\n    isClosing(): boolean;\\n    /** Specifies wherever callout is in \\\"Closed\\\" state */\\n    isClosed(): boolean;\\n    /** Returns the callout actions menu */\\n    getActionMenu(): CalloutActionMenu;\\n    /** Adds a link to the actions panel in the bottom part of the callout window */\\n    addAction(action: CalloutAction): void;\\n    /** Re-renders the actions menu. Call after the actions menu is changed. */\\n    refreshActions(): void;\\n    /** Display the callout. Animation can be used only for IE9+ */\\n    open(useAnimation: boolean): void;\\n    /** Hide the callout. Animation can be used only for IE9+ */\\n    close(useAnimation: boolean): void;\\n    /** Display if hidden, hide if shown. */\\n    toggle(): void;\\n    /** Do not call this directly. Instead, use CalloutManager.remove */\\n    destroy(): void;\\n}\\n\\ndeclare class CalloutOpenOptions {\\n    /** HTML event name, e.g. \\\"click\\\" */\\n    event: string;\\n    /** Callout will be closed on blur */\\n    closeCalloutOnBlur: boolean;\\n    /** Close button will be shown within the callout window */\\n    showCloseButton: boolean;\\n}\\n\\ndeclare class CalloutOptions {\\n    /** Some unique id for the callout. */\\n    ID: string;\\n    /** Element on that the callout is shown. */\\n    launchPoint: HTMLElement;\\n    /** One of the following: \\\"topBottom\\\" (default) or \\\"leftRight\\\". */\\n    beakOrientation: string;\\n    /** String (HTML allowed) that represents contents of the callout window. */\\n    content: string;\\n    /** Title for the callout */\\n    title: string;\\n    /** HTML element that represents contents of the callout window. */\\n    contentElement: HTMLElement;\\n    /** If defined, callout will be inscribed into the bounding element. */\\n    boundingBox: HTMLElement;\\n    /** Content element's width in pixels. By default = 350. */\\n    contentWidth: number;\\n    /** Defines opening behavior */\\n    openOptions: CalloutOpenOptions;\\n    /** Fires after the callout is rendered but before it is positioned and shown */\\n    onOpeningCallback: (callout: Callout) => void;\\n    /** Fires right after the callout is shown */\\n    onOpenedCallback: (callout: Callout) => void;\\n    /** Fires right before the callout is closed */\\n    onClosingCallback: (callout: Callout) => void;\\n    /** Fires right after the callout is closed */\\n    onClosedCallback: (callout: Callout) => void;\\n    /** Sets the position of the callout during its opening phase. For an example of a position algorithm function, please explore defaultPositionAlgorithm function from the callout.debug.js file */\\n    positionAlgorithm: (callout: Callout) => void;\\n}\\n\\ndeclare class CalloutManager {\\n    /** Creates a new callout */\\n    static createNew(options: CalloutOptions): Callout;\\n    /** Checks if callout with specified ID already exists. If it doesn't, creates it, otherwise returns the existing one. */\\n    static createNewIfNecessary(options: CalloutOptions): Callout;\\n    /** Detaches callout from the launch point and destroys it. */\\n    static remove(callout: Callout): void;\\n    /** Searches for a callout associated with the specified launch point. Throws error if not found. */\\n    static getFromLaunchPoint(launchPoint: HTMLElement): Callout;\\n    /** Searches for a callout associated with the specified launch point. Returns null if not found. */\\n    static getFromLaunchPointIfExists(launchPoint: HTMLElement): Callout;\\n    /** Gets the first launch point within the specified ancestor element, and returns true if the associated with it callout is opened or opening.\\n        If the launch point is not found or the callout is hidden, returns false. */\\n    static containsOneCalloutOpen(ancestor: HTMLElement): boolean;\\n    /** Finds the closest launch point based on the specified descendant element, and returns callout associated with the launch point. */\\n    static getFromCalloutDescendant(descendant: HTMLElement): Callout;\\n    /** Perform some action for each callout on the page. */\\n    static forEach(callback: (callout: Callout) => void): void;\\n    /** Closes all callouts on the page */\\n    static closeAll(): boolean;\\n    /** Returns true if at least one of the defined on page callouts is opened. */\\n    static isAtLeastOneCalloutOpen(): boolean;\\n    /** Returns true if at least one of the defined on page callouts is opened or opening. */\\n    static isAtLeastOneCalloutOn(): boolean;\\n}\\n\\ndeclare namespace SPClientTemplates {\\n    enum FileSystemObjectType {\\n        Invalid,\\n        File,\\n        Folder,\\n        Web\\n    }\\n    enum ChoiceFormatType {\\n        Dropdown,\\n        Radio\\n    }\\n\\n    enum ClientControlMode {\\n        Invalid,\\n        DisplayForm,\\n        EditForm,\\n        NewForm,\\n        View\\n    }\\n\\n    enum RichTextMode {\\n        Compatible,\\n        FullHtml,\\n        HtmlAsXml,\\n        ThemeHtml\\n    }\\n    enum UrlFormatType {\\n        Hyperlink,\\n        Image\\n    }\\n\\n    enum DateTimeDisplayFormat {\\n        DateOnly,\\n        DateTime,\\n        TimeOnly\\n    }\\n\\n    enum DateTimeCalendarType {\\n        None,\\n        Gregorian,\\n        Japan,\\n        Taiwan,\\n        Korea,\\n        Hijri,\\n        Thai,\\n        Hebrew,\\n        GregorianMEFrench,\\n        GregorianArabic,\\n        GregorianXLITEnglish,\\n        GregorianXLITFrench,\\n        KoreaJapanLunar,\\n        ChineseLunar,\\n        SakaEra,\\n        UmAlQura\\n    }\\n    enum UserSelectionMode {\\n        PeopleOnly,\\n        PeopleAndGroups\\n    }\\n\\n    /** Represents schema for a Choice field in list form or in list view in grid mode */\\n    interface FieldSchema_InForm_Choice extends FieldSchema_InForm {\\n        /** List of choices for this field. */\\n        Choices: string[];\\n        /** Display format for the choice field */\\n        FormatType: ChoiceFormatType;\\n    }\\n    /** Represents schema for a Lookup field in list form or in list view in grid mode */\\n    interface FieldSchema_InForm_Lookup extends FieldSchema_InForm {\\n        /** Specifies if the field allows multiple values */\\n        AllowMultipleValues: boolean;\\n        /** Returns base url for a list display form, e.g. \\\"http:// portal/web/_layouts/15/listform.aspx?PageType=4\\\"\\n            You must add \\\"ListId\\\" (Guid of the list) and \\\"ID\\\" (integer Id of the item) parameters in order to use this Url */\\n        BaseDisplayFormUrl: string;\\n        /** Indicates if the field is a dependent lookup */\\n        DependentLookup: boolean;\\n        /** Indicates wherever the lookup list is throttled (contains more items than value of the \\\"List Throttle Limit\\\" setting). */\\n        Throttled: boolean;\\n        /** Returns string representation of a number that represents the current value for the \\\"List Throttle Limit\\\" web application setting.\\n            Only appears if Throttled property is true, i.e. the target lookup list is throttled. */\\n        MaxQueryResult: string;\\n        /** List of choices for this field. */\\n        Choices: Array<{ LookupId: number; LookupValue: string; }>;\\n        /** Number of choices. Appears only for Lookup field. */\\n        ChoiceCount: number;\\n\\n        LookupListId: string;\\n    }\\n    /** Represents schema for a DateTime field in list form or in list view in grid mode */\\n    interface FieldSchema_InForm_DateTime extends FieldSchema_InForm {\\n        /** Type of calendar to use */\\n        CalendarType: DateTimeCalendarType;\\n        /** Display format for DateTime field. */\\n        DisplayFormat: DateTimeDisplayFormat;\\n        /** Indicates wherever current user regional settings specify to display week numbers in day or week views of a calendar.\\n            Only appears for DateTime fields. */\\n        ShowWeekNumber: boolean;\\n        TimeSeparator: string;\\n        TimeZoneDifference: string;\\n        FirstDayOfWeek: number;\\n        FirstWeekOfYear: number;\\n        HijriAdjustment: number;\\n        WorkWeek: string;\\n        LocaleId: string;\\n        LanguageId: string;\\n        MinJDay: number;\\n        MaxJDay: number;\\n        HoursMode24: boolean;\\n        HoursOptions: string[];\\n    }\\n    /** Represents schema for a DateTime field in list form or in list view in grid mode */\\n    interface FieldSchema_InForm_Geolocation extends FieldSchema_InForm {\\n        BingMapsKey: string;\\n        IsBingMapBlockedInCurrentRegion: boolean;\\n    }\\n    /** Represents schema for a Choice field in list form or in list view in grid mode */\\n    interface FieldSchema_InForm_MultiChoice extends FieldSchema_InForm {\\n        /** List of choices for this field. */\\n        MultiChoices: string[];\\n        /** Indicates wherever fill-in choice is allowed */\\n        FillInChoice: boolean;\\n    }\\n    /** Represents schema for a Choice field in list form or in list view in grid mode */\\n    interface FieldSchema_InForm_MultiLineText extends FieldSchema_InForm {\\n        /** Specifies whether rich text formatting can be used in the field */\\n        RichText: boolean;\\n        /** Changes are appended to the existing text. */\\n        AppendOnly: boolean;\\n        /** Rich text mode for the field */\\n        RichTextMode: RichTextMode;\\n        /** Number of lines configured to display */\\n        NumberOfLines: number;\\n        /** A boolean value that specifies whether hyperlinks can be used in this fields. */\\n        AllowHyperlink: boolean;\\n        /** WebPartAdderId for the ScriptEditorWebPart */\\n        ScriptEditorAdderId: string;\\n    }\\n    /** Represents schema for a Number field in list form or in list view in grid mode */\\n    interface FieldSchema_InForm_Number extends FieldSchema_InForm {\\n        ShowAsPercentage: boolean;\\n    }\\n    /** Represents schema for a Number field in list form or in list view in grid mode */\\n    interface FieldSchema_InForm_Text extends FieldSchema_InForm {\\n        MaxLength: number;\\n    }\\n    /** Represents schema for a Number field in list form or in list view in grid mode */\\n    interface FieldSchema_InForm_Url extends FieldSchema_InForm {\\n        DisplayFormat: UrlFormatType;\\n    }\\n    /** Represents schema for a Number field in list form or in list view in grid mode */\\n    interface FieldSchema_InForm_User extends FieldSchema_InForm {\\n        Presence: boolean;\\n        WithPicture: boolean;\\n        DefaultRender: boolean;\\n        WithPictureDetail: boolean;\\n        /** Server relative Url for ~site/_layouts/listform.aspx */\\n        ListFormUrl: string;\\n        /** Server relative Url for ~site/_layouts/userdisp.aspx */\\n        UserDisplayUrl: string;\\n        EntitySeparator: string;\\n        PictureOnly: boolean;\\n        PictureSize: string;\\n    }\\n\\n    interface FieldSchema {\\n        /** Specifies if the field can be edited while list view is in the Grid mode */\\n        AllowGridEditing: boolean;\\n        /** String representation of the field type, e.g. \\\"Lookup\\\". Same as SPField.TypeAsString */\\n        FieldType: string;\\n        /** Internal name of the field */\\n        Name: string;\\n        /** For OOTB fields, returns the type of field. For \\\"UserMulti\\\" returns \\\"User\\\", for \\\"LookupMulti\\\" returns \\\"Lookup\\\".\\n            For custom field types, returns base type of the field. */\\n        Type: string;\\n    }\\n\\n    /** Represents field schema in Grid mode and on list forms.\\n            Consider casting objects of this type to more specific field types, e.g. FieldSchemaInForm_Lookup */\\n    interface FieldSchema_InForm extends FieldSchema {\\n        /** Description for this field. */\\n        Description: string;\\n        /** Direction of the reading order for the field. */\\n        Direction: string;\\n        /** Indicates whether the field is hidden */\\n        Hidden: boolean;\\n        /** Guid of the field */\\n        Id: string;\\n        /** Specifies Input Method Editor (IME) mode bias to use for the field.\\n            The IME enables conversion of keystrokes between languages when one writing system has more characters than can be encoded for the given keyboard. */\\n        IMEMode: any;\\n        /** Specifies if the field is read only */\\n        ReadOnlyField: boolean;\\n        /** Specifies wherever field requires values */\\n        Required: boolean;\\n        RestrictedMode: boolean;\\n        /** Title of the field */\\n        Title: string;\\n        /** If SPFarm.Local.UseMinWidthForHtmlPicker is true, UseMinWidth will be set to true. Undefined in other cases. */\\n        UseMinWidth: boolean;\\n    }\\n\\n    interface ListSchema {\\n        Field: FieldSchema[];\\n    }\\n\\n    interface ListSchema_InForm extends ListSchema {\\n        Field: FieldSchema_InForm[];\\n    }\\n    interface ListData_InForm {\\n        Items: Item[];\\n    }\\n    interface RenderContext_FieldInForm extends RenderContext_Form {\\n        CurrentGroupIdx: number;\\n        CurrentGroup: Group;\\n        CurrentItems: Item[];\\n        CurrentFieldSchema: FieldSchema_InForm;\\n        CurrentFieldValue: any;\\n    }\\n    interface RenderContext_Form extends RenderContext {\\n        CurrentItem: Item;\\n        FieldControlModes: { [fieldInternalName: string]: ClientControlMode; };\\n        FormContext: ClientFormContext;\\n        FormUniqueId: string;\\n        ListData: ListData_InForm;\\n        ListSchema: ListSchema_InForm;\\n        CSRCustomLayout?: boolean;\\n    }\\n\\n    interface FieldSchema_InView_LookupField extends FieldSchema_InView {\\n        /** Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        AllowMultipleValues: string;\\n        /** Target lookup list display form URL, including PageType and List attributes. */\\n        DispFormUrl: string;\\n        /** Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        HasPrefix: string;\\n    }\\n    interface FieldSchema_InView_UserField extends FieldSchema_InView {\\n        /** Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        AllowMultipleValues: string;\\n        /** Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        ImnHeader: string;\\n        /** Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        HasPrefix: string;\\n        /** Either \\\"1\\\" or \\\"0\\\" */\\n        HasUserLink: string;\\n        /** Either \\\"1\\\" or \\\"0\\\" */\\n        DefaultRender: string;\\n    }\\n    /** Represents field schema in a list view. */\\n    interface FieldSchema_InView extends FieldSchema {\\n        /** Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        CalloutMenu: string;\\n        ClassInfo: string; // e.g. \\\"Menu\\\"\\n        css: string;\\n        DisplayName: string;\\n        /** Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        Explicit: string;\\n        fieldRenderer: any;\\n        FieldTitle: string;\\n        /** Indicates whether the field can be filtered. Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        Filterable: string;\\n        /** Set to \\\"TRUE\\\" for fields that comply to the following Xpath query:\\n            ViewFields/FieldRef[@Explicit='TRUE'] | Query/GroupBy/FieldRef[not(@Name=ViewFields/FieldRef/@Name)] */\\n        GroupField: string;\\n        /** Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        GridActiveAndReadOnly: string;\\n        /** Guid of the field */\\n        ID: string;\\n        /** Specifies if the field contains list item menu.\\n            Corresponds to ViewFields/FieldRef/@ListItemMenu attribute. Either \\\"TRUE\\\" or \\\"FALSE\\\" and might be missing. */\\n        listItemMenu: string;\\n        RealFieldName: string;\\n        /** Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        ReadOnly: string;\\n        ResultType: string;\\n        /** Indicates whether the field can be sorted. Either \\\"TRUE\\\" or \\\"FALSE\\\" */\\n        Sortable: string;\\n    }\\n    interface ListSchema_InView extends ListSchema {\\n        /** Key-value object that represents all aggregations defined for the view.\\n            Key specifies the field internal name, and value specifies the type of the aggregation. */\\n        Aggregate: { [name: string]: string; };\\n        /** Either \\\"TRUE\\\" or false (for grouping) */\\n        Collapse: string;\\n        /** Specifies whether to open items in a client application (\\\"1\\\") or in browser (\\\"0\\\"). */\\n        DefaultItemOpen: string;\\n        Direction: string;\\n        /** Either \\\"0\\\" or \\\"1\\\" */\\n        EffectivePresenceEnabled: string;\\n        /** If in grid mode (context.inGridMode == true), cast to FieldSchema_InForm[], otherwise cast to FieldSchema_InView[] */\\n        FieldSortParam: string;\\n        Filter: any;\\n        /** Either \\\"0\\\" or \\\"1\\\" */\\n        ForceCheckout: string;\\n        /** Internal name for the first group by field, if any */\\n        group1: string;\\n        /** Internal name for the second group by field, if any */\\n        group2: string;\\n        /** \\\"1\\\" if the view contains \\\"Title\\\" field, otherwise not defined. */\\n        HasTitle: string;\\n        HttpVDir: string;\\n        /** Either \\\"0\\\" or \\\"1\\\" */\\n        InplaceSearchEnabled: string;\\n        /** Either \\\"0\\\" or \\\"1\\\" */\\n        IsDocLib: string;\\n        /** e.g. \\\"1033\\\" */\\n        LCID: string;\\n        /** Either \\\"0\\\" or \\\"1\\\" */\\n        ListRight_AddListItems: string;\\n        NoListItem: string;\\n        NoListItemHowTo: string;\\n        /** Server-relative path to the current page */\\n        PagePath: string;\\n        /** Internal name of the field inside which the hierarchy buttons are displayed */\\n        ParentHierarchyDisplayField: string;\\n        PresenceAlt: string;\\n        /** Represents SPList.RootFolder.Properties. Exists only if SPList.FetchPropertyBagForListView property is set to true. */\\n        PropertyBag: { [key: string]: string; };\\n        /** Either \\\"True\\\" or \\\"False\\\" */\\n        RenderSaveAsNewViewButton: string;\\n        /** Either \\\"True\\\" or \\\"False\\\" */\\n        RenderViewSelectorPivotMenu: string;\\n        /** Either \\\"True\\\" or \\\"False\\\" */\\n        RenderViewSelectorPivotMenuAsync: string;\\n        /** Query string parameters that specify GUID of the current view and the current root folder */\\n        RootFolderParam: string;\\n        SelectedID: string; // number\\n        ShowWebPart: string;\\n        /** Either \\\"1\\\" or undefined. */\\n        StrikeThroughOnCompletedEnabled: string;\\n        /** Either \\\"0\\\" or \\\"1\\\" */\\n        TabularView: string;\\n        Toolbar: string;\\n        UIVersion: string; // number\\n        Userid: string; // number\\n        UserVanilla: any;\\n        /** Server relative path to \\\"/_layouts/userdisp.aspx\\\" in the current web */\\n        UserDispUrl: string;\\n        /** Either \\\"1\\\" or \\\"\\\" */\\n        UseParentHierarchy: string;\\n        /** Guid of the view */\\n        View: string;\\n        /** JSON string */\\n        ViewSelectorPivotMenuOptions: string;\\n        /** Query string parameters that specify current root folder (RootFolder) and folder content type id (FolderCTID) */\\n        ViewSelector_ViewParameters: string;\\n    }\\n    interface ListData_InView {\\n        FilterLink: string;\\n        FilterFields: string;\\n        FirstRow: number;\\n        /** Either \\\"0\\\" or \\\"1\\\" */\\n        ForceNoHierarchy: string;\\n        HierarchyHasIndention: string;\\n        /** Link to the previous page (not defined if not available) */\\n        PrevHref: string;\\n        /** Link to the next page  (not defined if not available) */\\n        NextHref: string;\\n        SortField: string;\\n        SortDir: string;\\n        LastRow: number;\\n        Row: Item[];\\n    }\\n    interface RenderContext_GroupInView extends RenderContext_InView {\\n        CurrentGroupIdx: number;\\n        CurrentGroup: Group;\\n        CurrentItems: Item[];\\n    }\\n    interface RenderContext_InView extends RenderContext {\\n        AllowCreateFolder: boolean;\\n        AllowGridMode: boolean;\\n        BasePermissions: { [PermissionName: string]: boolean; }; // SP.BasePermissions?\\n        bInitialRender: boolean;\\n        CanShareLinkForNewDocument: boolean;\\n        CascadeDeleteWarningMessage: string;\\n        clvp: HTMLElement; // not in View\\n        ContentTypesEnabled: boolean;\\n        ctxId: number;\\n        ctxType: any; // not in View\\n        CurrentUserId: number;\\n        CurrentUserIsSiteAdmin: boolean;\\n        LastSelectedItemIID: any;\\n        dictSel: any;\\n        /** Absolute path for the list display form */\\n        displayFormUrl: string;\\n        /** Absolute path for the list edit form */\\n        editFormUrl: string;\\n        EnableMinorVersions: boolean;\\n        ExternalDataList: boolean;\\n        enteringGridMode: boolean;\\n        existingServerFilterHash: any;\\n        HasRelatedCascadeLists: number;\\n        heroId: string; // e.g. \\\"idHomePageNewItem\\\"\\n        HttpPath: string;\\n        HttpRoot: string;\\n        imagesPath: string;\\n        inGridFullRender: any; // not in View\\n        inGridMode: boolean;\\n        IsAppWeb: boolean;\\n        IsClientRendering: boolean;\\n        isForceCheckout: boolean;\\n        isModerated: boolean;\\n        isPortalTemplate: any;\\n        isWebEditorPreview: number;\\n        isVersions: number;\\n        isXslView: boolean;\\n        LastRowIndexSelected: any; // not in View\\n        LastSelectableRowIdx: any;\\n        LastSelectedItemId: any; // not in View\\n        leavingGridMode: boolean;\\n        listBaseType: number;\\n        ListData: ListData_InView;\\n        ListDataJSONItemsKey: string; // =\\\"Row\\\"\\n        /** Guid of the list */\\n        listName: string;\\n        ListSchema: ListSchema_InView;\\n        listTemplate: string;\\n        ListTitle: string;\\n        listUrlDir: string;\\n        loadingAsyncData: boolean;\\n        ModerationStatus: number;\\n        NavigateForFormsPages: boolean;\\n        /** Absolute path for the list new form */\\n        newFormUrl: string;\\n        NewWOPIDocumentEnabled: any;\\n        NewWOPIDocumentUrl: any;\\n        noGroupCollapse: boolean;\\n        OfficialFileName: string;\\n        OfficialFileNames: string;\\n        overrideDeleteConfirmation: string; // not in View\\n        overrideFilterQstring: string; // not in View\\n        PortalUrl: string;\\n        queryString: any;\\n        recursiveView: boolean;\\n        /** either 1 or 0 */\\n        RecycleBinEnabled: number;\\n        RegionalSettingsTimeZoneBias: string;\\n        rootFolder: string;\\n        rootFolderForDisplay: any;\\n        RowFocusTimerID: any;\\n        SelectAllCbx: any;\\n        SendToLocationName: string;\\n        SendToLocationUrl: string;\\n        serverUrl: any;\\n        SiteTitle: string;\\n        StateInitDone: boolean;\\n        TableCbxFocusHandler: any;\\n        TableMouseOverHandler: any;\\n        TotalListItems: number;\\n        verEnabled: number;\\n        /** Guid of the view. */\\n        view: string;\\n        viewTitle: string;\\n        WorkflowAssociated: boolean;\\n        wpq: string;\\n        WriteSecurity: string;\\n    }\\n    interface RenderContext_ItemInView extends RenderContext_InView {\\n        CurrentItem: Item;\\n        CurrentItemIdx: number;\\n    }\\n    interface RenderContext_FieldInView extends RenderContext_ItemInView {\\n        /** If in grid mode (context.inGridMode == true), cast to FieldSchema_InForm, otherwise cast to FieldSchema_InView */\\n        CurrentFieldSchema: FieldSchema_InForm | FieldSchema_InView;\\n        CurrentFieldValue: any;\\n        FieldControlsModes: { [fieldInternalName: string]: ClientControlMode; };\\n        FormContext: ClientFormContext;\\n        FormUniqueId: string;\\n    }\\n\\n    interface Item {\\n        [fieldInternalName: string]: any;\\n    }\\n    interface Group {\\n        Items: Item[];\\n    }\\n    type RenderCallback = (ctx: RenderContext) => void;\\n\\n    interface RenderContext {\\n        BaseViewID?: number;\\n        ControlMode?: ClientControlMode;\\n        CurrentCultureName?: string;\\n        CurrentLanguage?: number;\\n        CurrentSelectedItems?: any;\\n        CurrentUICultureName?: string;\\n        ListTemplateType?: number;\\n        OnPostRender?: RenderCallback | RenderCallback[];\\n        OnPreRender?: RenderCallback | RenderCallback[];\\n        onRefreshFailed?: any;\\n        RenderBody?(renderContext: RenderContext): string;\\n        RenderFieldByName?(renderContext: RenderContext, fieldName: string): string;\\n        RenderFields?(renderContext: RenderContext): string;\\n        RenderFooter?(renderContext: RenderContext): string;\\n        RenderGroups?(renderContext: RenderContext): string;\\n        RenderHeader?(renderContext: RenderContext): string;\\n        RenderItems?(renderContext: RenderContext): string;\\n        RenderView?(renderContext: RenderContext): string;\\n        SiteClientTag?: string;\\n        Templates?: Templates;\\n    }\\n\\n    /** Must return null in order to fall back to a more common template or to a system default template */\\n    type SingleTemplateCallback = (renderContext: RenderContext_InView) => string;\\n\\n    /** Must return null in order to fall back to a more common template or to a system default template */\\n    type GroupCallback = (renderContext: RenderContext_GroupInView) => string;\\n\\n    /** Must return null in order to fall back to a more common template or to a system default template */\\n    type ItemCallback = (renderContext: RenderContext) => string;\\n\\n    /** Must return null in order to fall back to a more common template or to a system default template */\\n    type FieldCallback = (renderContext: RenderContext) => string;\\n\\n    /** Must return null in order to fall back to a more common template or to a system default template */\\n    type FieldInFormCallback = (renderContext: RenderContext_FieldInForm) => string;\\n\\n    /** Must return null in order to fall back to a more common template or to a system default template */\\n    type FieldInViewCallback = (renderContext: RenderContext_FieldInView) => string;\\n\\n    interface FieldTemplateOverrides {\\n        /** Defines templates for rendering the field on a display form. */\\n        DisplayForm?: FieldInFormCallback;\\n        /** Defines templates for rendering the field on an edit form. */\\n        EditForm?: FieldInFormCallback;\\n        /** Defines templates for rendering the field on a new form. */\\n        NewForm?: FieldInFormCallback;\\n        /** Defines templates for rendering the field on a list view. */\\n        View?: FieldInViewCallback;\\n    }\\n\\n    interface FieldTemplates {\\n        [fieldInternalName: string]: FieldCallback;\\n    }\\n\\n    interface Templates {\\n        View?: RenderCallback | string; // TODO: determine appropriate context type and purpose of this template\\n        Body?: RenderCallback | string; // TODO: determine appropriate context type and purpose of this template\\n        /** Defines templates for rendering groups (aggregations). */\\n        Group?: GroupCallback | string;\\n        /** Defines templates for list items rendering. */\\n        Item?: ItemCallback | string;\\n        /** Defines template for rendering list view header.\\n            Can be either string or SingleTemplateCallback */\\n        Header?: SingleTemplateCallback | string;\\n        /** Defines template for rendering list view footer.\\n            Can be either string or SingleTemplateCallback */\\n        Footer?: SingleTemplateCallback | string;\\n        /** Defines templates for fields rendering. The field is specified by it's internal name. */\\n        Fields?: FieldTemplates;\\n    }\\n\\n    interface FieldTemplateMap {\\n        [fieldInternalName: string]: FieldTemplateOverrides;\\n    }\\n\\n    interface TemplateOverrides {\\n        View?: RenderCallback | string; // TODO: determine appropriate context type and purpose of this template\\n        Body?: RenderCallback | string; // TODO: determine appropriate context type and purpose of this template\\n        /** Defines templates for rendering groups (aggregations). */\\n        Group?: GroupCallback | string;\\n        /** Defines templates for list items rendering. */\\n        Item?: ItemCallback | string;\\n        /** Defines template for rendering list view header.\\n            Can be either string or SingleTemplateCallback */\\n        Header?: SingleTemplateCallback | string;\\n        /** Defines template for rendering list view footer.\\n            Can be either string or SingleTemplateCallback */\\n        Footer?: SingleTemplateCallback | string;\\n        /** Defines templates for fields rendering. The field is specified by it's internal name. */\\n        Fields?: FieldTemplateMap;\\n    }\\n    interface TemplateOverridesOptions {\\n        /** Template overrides */\\n        Templates?: TemplateOverrides;\\n\\n        /** Callbacks called before rendering starts. Can be function (ctx: RenderContext) => void or array of functions.*/\\n        OnPreRender?: RenderCallback | RenderCallback[];\\n\\n        /** Callbacks called after rendered html inserted into DOM. Can be function (ctx: RenderContext) => void or array of functions.*/\\n        OnPostRender?: RenderCallback | RenderCallback[];\\n\\n        /** View style (SPView.StyleID) for which the templates should be applied.\\n            If not defined, the templates will be applied only to default view style. */\\n        ViewStyle?: number;\\n        /** List template type (SPList.BaseTemplate) for which the template should be applied.\\n            If not defined, the templates will be applied to all lists. */\\n        ListTemplateType?: number;\\n        /** Base view ID (SPView.BaseViewID) for which the template should be applied.\\n            If not defined, the templates will be applied to all views. */\\n        BaseViewID?: number | string;\\n    }\\n    class TemplateManager {\\n        static RegisterTemplateOverrides(renderCtx: TemplateOverridesOptions): void;\\n        static GetTemplates(renderCtx: RenderContext): Templates;\\n    }\\n\\n    interface ClientUserValue {\\n        lookupId: number;\\n        lookupValue: string;\\n        displayStr: string;\\n        email: string;\\n        sip: string;\\n        title: string;\\n        picture: string;\\n        department: string;\\n        jobTitle: string;\\n    }\\n    interface ClientLookupValue {\\n        LookupId: number;\\n        LookupValue: string;\\n    }\\n    interface ClientUrlValue {\\n        URL: string;\\n        Description: string;\\n    }\\n    class Utility {\\n        static ComputeRegisterTypeInfo(renderCtx: TemplateOverridesOptions): any;\\n        static ControlModeToString(mode: SPClientTemplates.ClientControlMode): string;\\n        static FileSystemObjectTypeToString(fileSystemObjectType: SPClientTemplates.FileSystemObjectType): string;\\n        static ChoiceFormatTypeToString(fileSystemObjectType: SPClientTemplates.ChoiceFormatType): string;\\n        static RichTextModeToString(fileSystemObjectType: SPClientTemplates.RichTextMode): string;\\n        static IsValidControlMode(mode: number): boolean;\\n        /** Removes leading and trailing spaces */\\n        static Trim(str: string): string;\\n        /** Creates SP.ClientContext based on the specified Web URL. If the SP.Runtime.js script is not loaded, returns null */\\n        static InitContext(webUrl: string): SP.ClientContext;\\n        static GetControlOptions(control: HTMLElement): any;\\n        static TryParseInitialUserValue(userStr: string): ClientUserValue[];\\n        /** Tries to resolve user names from string. Pushes either ClientUserValue (if resolved successfully) or original string (if not) to the resulting array. */\\n        static TryParseUserControlValue(userStr: string, separator: string): any[];\\n        static GetPropertiesFromPageContextInfo(context: RenderContext): void;\\n        /** Replaces tokens \\\"~site/\\\", \\\"~sitecollection/\\\", \\\"~sitecollectionmasterpagegallery\\\", \\\"{lcid}\\\", \\\"{locale}\\\" and \\\"{siteclienttag}\\\" with appropriate context values */\\n        static ReplaceUrlTokens(tokenUrl: string): string;\\n        static ParseLookupValue(valueStr: string): ClientLookupValue;\\n        static ParseMultiLookupValues(valueStr: string): ClientLookupValue[];\\n        /** Represents lookup values array in some strange format */\\n        static BuildLookupValuesAsString(choiceArray: ClientLookupValue[], isMultiLookup: boolean, setGroupDesc: boolean): string;\\n        static ParseURLValue(value: string): ClientUrlValue;\\n        static GetFormContextForCurrentField(context: RenderContext_Form): ClientFormContext;\\n        /** Returns \\\";#\\\" */\\n        static UserLookupDelimitString: string;\\n        /** Returns \\\";#\\\" */\\n        static UserMultiValueDelimitString: string;\\n    }\\n\\n    class ClientFormContext {\\n        fieldValue: any;\\n        fieldSchema: SPClientTemplates.FieldSchema_InForm;\\n        fieldName: string;\\n        controlMode: number;\\n        webAttributes: {\\n            AllowScriptableWebParts: boolean;\\n            CurrentUserId: number;\\n            EffectivePresenceEnabled: boolean;\\n            LCID: string;\\n            PermissionCustomizePages: boolean;\\n            WebUrl: string;\\n        };\\n        itemAttributes: {\\n            ExternalListItem: boolean;\\n            FsObjType: number;\\n            Id: number;\\n            Url: string;\\n        };\\n        listAttributes: {\\n            BaseType: number;\\n            DefaultItemOpen: number;\\n            Direction: string;\\n            EnableVesioning: boolean;\\n            Id: string;\\n        };\\n        registerInitCallback(fieldname: string, callback: () => void): void;\\n        registerFocusCallback(fieldname: string, callback: () => void): void;\\n        registerValidationErrorCallback(fieldname: string, callback: (error: any) => void): void;\\n        registerGetValueCallback(fieldname: string, callback: () => any): void;\\n        updateControlValue(fieldname: string, value: any): void;\\n        registerClientValidator(fieldname: string, validator: SPClientForms.ClientValidation.ValidatorSet): void;\\n        registerHasValueChangedCallback(fieldname: string, callback: (eventArg?: any) => void): void;\\n    }\\n}\\n\\ndeclare function GenerateIID(renderCtx: SPClientTemplates.RenderContext_ItemInView): string;\\ndeclare function GenerateIIDForListItem(renderCtx: SPClientTemplates.RenderContext_InView, listItem: SPClientTemplates.Item): string;\\n\\ndeclare function SPFormControl_AppendValidationErrorMessage(nodeId: string, errorResult: any): void;\\ndeclare function CoreRender(template: any, context: any): string;\\n\\ndeclare namespace SPClientForms {\\n    namespace ClientValidation {\\n        class ValidationResult {\\n            constructor(hasErrors: boolean, errorMsg: string);\\n        }\\n\\n        class ValidatorSet {\\n            RegisterValidator(validator: IValidator): void;\\n        }\\n        // tslint:disable-next-line: interface-name\\n        interface IValidator {\\n            Validate(value: any): ValidationResult;\\n        }\\n\\n        class RequiredValidator implements IValidator {\\n            Validate(value: any): ValidationResult;\\n        }\\n\\n        class RequiredFileValidator implements IValidator {\\n            Validate(value: any): ValidationResult;\\n        }\\n\\n        class RequiredRichTextValidator implements IValidator {\\n            Validate(value: any): ValidationResult;\\n        }\\n\\n        class MaxLengthUrlValidator implements IValidator {\\n            Validate(value: any): ValidationResult;\\n        }\\n    }\\n\\n    enum FormManagerEvents {\\n        Event_OnControlValueChanged, // : 1,\\n        Event_OnControlInitializedCallback, // : 2,\\n        Event_OnControlFocusSetCallback, // : 3,\\n        Event_GetControlValueCallback, // : 4,\\n        Event_OnControlValidationError, // : 5,\\n        Event_RegisterControlValidator, // : 6,\\n        Event_GetHasValueChangedCallback // : 7\\n    }\\n\\n    class ClientForm {\\n        constructor(qualifier: string);\\n        RenderClientForm(): void;\\n        SubmitClientForm(): boolean;\\n        NotifyControlEvent(eventName: FormManagerEvents, fldName: string, eventArg: any): void;\\n    }\\n\\n    class ClientFormManager {\\n        static GetClientForm(qualifier: string): ClientForm;\\n        static RegisterClientForm(qualifier: string): void;\\n        static SubmitClientForm(qualifier: string): boolean;\\n    }\\n}\\n\\ndeclare class SPMgr {\\n    NewGroup(listItem: { [name: string]: any }, fieldName: string): boolean;\\n    RenderHeader(renderCtx: SPClientTemplates.RenderContext, field: SPClientTemplates.FieldSchema): string;\\n    RenderField(renderCtx: SPClientTemplates.RenderContext, field: SPClientTemplates.FieldSchema, listItem: { [name: string]: any }, listSchema: SPClientTemplates.ListSchema): string;\\n    RenderFieldByName(renderCtx: SPClientTemplates.RenderContext, fieldName: string, listItem: { [name: string]: any }, listSchema: SPClientTemplates.ListSchema): string;\\n}\\n\\ndeclare var spMgr: SPMgr;\\n\\ndeclare function SPField_FormDisplay_Default(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPField_FormDisplay_DefaultNoEncode(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPField_FormDisplay_Empty(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldText_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldNumber_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldBoolean_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldNote_Display(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldNote_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldFile_Display(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldFile_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldChoice_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldChoice_Dropdown_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldChoice_Radio_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldMultiChoice_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldDateTime_Display(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldDateTime_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldUrl_Display(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldUrl_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldUser_Display(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldUserMulti_Display(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPClientPeoplePickerCSRTemplate(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldLookup_Display(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldLookup_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldLookupMulti_Edit(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\ndeclare function SPFieldAttachments_Default(ctx: SPClientTemplates.RenderContext_FieldInForm): string;\\n\\ndeclare namespace SPAnimation {\\n    enum Attribute {\\n        PositionX,\\n        PositionY,\\n        Height,\\n        Width,\\n        Opacity\\n    }\\n\\n    enum ID {\\n        Basic_Show,\\n        Basic_SlowShow,\\n        Basic_Fade,\\n        Basic_Move,\\n        Basic_Size,\\n        Content_SlideInFadeInRight,\\n        Content_SlideInFadeInRightInc,\\n        Content_SlideOutFadeOutRight,\\n        Content_SlideInFadeInLeft,\\n        Content_SlideInFadeInLeftInc,\\n        SmallObject_SlideInFadeInTop,\\n        SmallObject_SlideInFadeInLeft,\\n        Test_Instant,\\n        Test_Hold,\\n        Basic_Opacity,\\n        Basic_QuickShow,\\n        Basic_QuickFade,\\n        Content_SlideInFadeInGeneric,\\n        Basic_StrikeThrough,\\n        SmallObject_SlideInFadeInBottom,\\n        SmallObject_SlideOutFadeOutBottom,\\n        Basic_QuickSize\\n    }\\n\\n    class Settings {\\n        static DisableAnimation(): void;\\n        static DisableSessionAnimation(): void;\\n        static IsAnimationEnabled(): boolean;\\n    }\\n\\n    class State {\\n        SetAttribute(attributeId: Attribute, value: number): void;\\n        GetAttribute(attributeId: Attribute): number;\\n        GetDataIndex(attributeId: Attribute): number;\\n    }\\n\\n    class Object {\\n        constructor(animationID: ID, delay: number, element: HTMLElement | HTMLElement[], finalState: State, finishFunc?: (data: any) => void, data?: any);\\n        RunAnimation(): void;\\n    }\\n}\\n\\ndeclare namespace SPAnimationUtility {\\n    class BasicAnimator {\\n        static FadeIn(element: HTMLElement, finishFunc?: (data: any) => void, data?: any): void;\\n        static FadeOut(element: HTMLElement, finishFunc?: (data: any) => void, data?: any): void;\\n        static Move(element: HTMLElement, posX: number, posY: number, finishFunc?: (data: any) => void, data?: any): void;\\n        static StrikeThrough(element: HTMLElement, strikeThroughWidth: number, finishFunc?: (data: any) => void, data?: any): void;\\n        static Resize(element: HTMLElement, newHeight: number, newWidth: number, finishFunc?: (data: any) => void, data?: any): void;\\n        static CommonResize(element: HTMLElement, newHeight: number, newWidth: number, finishFunc: (data: any) => void, data: any, animationId: SPAnimation.ID): void;\\n        static QuickResize(element: HTMLElement, newHeight: number, newWidth: number, finishFunc?: (data: any) => void, data?: any): void;\\n        static ResizeContainerAndFillContent(element: HTMLElement, newHeight: number, newWidth: number, finishFunc: () => void, fAddToEnd: boolean): void;\\n        static GetWindowScrollPosition(): { x: number; y: number; };\\n        static GetLeftOffset(element: HTMLElement): number;\\n        static GetTopOffset(element: HTMLElement): number;\\n        static GetRightOffset(element: HTMLElement): number;\\n        static PositionElement(element: HTMLElement, topValue: number, leftValue: number, heightValue: number, widthValue: number): void;\\n        static PositionAbsolute(element: HTMLElement): void;\\n        static PositionRelative(element: HTMLElement): void;\\n        static PositionRelativeExact(element: HTMLElement, topValue: number, leftValue: number, heightValue: number, widthValue: number): void;\\n        static PositionAbsoluteExact(element: HTMLElement, topValue: number, leftValue: number, heightValue: number, widthValue: number): void;\\n        static IsPositioned(element: HTMLElement): boolean;\\n    }\\n}\\n\\n// tslint:disable-next-line: interface-name\\ninterface IEnumerator<T> {\\n    get_current(): T;\\n    moveNext(): boolean;\\n    reset(): void;\\n}\\n\\n// tslint:disable-next-line: interface-name\\ninterface IEnumerable<T> {\\n    getEnumerator(): IEnumerator<T>;\\n}\\n\\ndeclare namespace SP {\\n    class ScriptUtility {\\n        static isNullOrEmptyString(str: string): boolean;\\n        static isNullOrUndefined(obj: any): boolean;\\n        static isUndefined(obj: any): boolean;\\n        static truncateToInt(n: number): number;\\n    }\\n    class Guid {\\n        constructor(guidText: string);\\n        static get_empty(): SP.Guid;\\n        static newGuid(): SP.Guid;\\n        static isValid(uuid: string): boolean;\\n        toString(format?: string): string;\\n        equals(uuid: SP.Guid): boolean;\\n        ToSerialized(): string;\\n    }\\n    /** Specifies permissions that are used to define user roles. Represents SPBasePermissions class. */\\n    enum PermissionKind {\\n        /** Has no permissions on the Web site. Not available through the user interface. */\\n        emptyMask,\\n        /** View items in lists, documents in document libraries, and view Web discussion comments. */\\n        viewListItems,\\n        /** Add items to lists, add documents to document libraries, and add Web discussion comments. */\\n        addListItems,\\n        /** Edit items in lists, edit documents in document libraries, edit Web discussion comments in documents, and customize Web Part Pages in document libraries. */\\n        editListItems,\\n        /** Delete items from a list, documents from a document library, and Web discussion comments in documents. */\\n        deleteListItems,\\n        /** Approve a minor version of a list item or document. */\\n        approveItems,\\n        /** View the source of documents with server-side file handlers. */\\n        openItems,\\n        /** View past versions of a list item or document. */\\n        viewVersions,\\n        /** Delete past versions of a list item or document. */\\n        deleteVersions,\\n        /** Discard or check in a document which is checked out to another user. */\\n        cancelCheckout,\\n        /** Create, change, and delete personal views of lists. */\\n        managePersonalViews,\\n        /** Create and delete lists, add or remove columns in a list, and add or remove public views of a list. */\\n        manageLists,\\n        /** View forms, views, and application pages, and enumerate lists. */\\n        viewFormPages,\\n        /** Make content of a list or document library retrieveable for anonymous users through SharePoint search. The list permissions in the site do not change.  */\\n        anonymousSearchAccessList,\\n        /** Allow users to open a Web site, list, or folder to access items inside that container. */\\n        open,\\n        /** View pages in a Web site. */\\n        viewPages,\\n        /** Add, change, or delete HTML pages or Web Part Pages, and edit the Web site using a SharePoint Foundation?compatible editor. */\\n        addAndCustomizePages,\\n        /** Apply a theme or borders to the entire Web site. */\\n        applyThemeAndBorder,\\n        /** Apply a style sheet (.css file) to the Web site. */\\n        applyStyleSheets,\\n        /** View reports on Web site usage. */\\n        viewUsageData,\\n        /** Create a Web site using Self-Service Site Creation. */\\n        createSSCSite,\\n        /** Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.  */\\n        manageSubwebs,\\n        /** Create a group of users that can be used anywhere within the site collection. */\\n        createGroups,\\n        /** Create and change permission levels on the Web site and assign permissions to users and groups. */\\n        managePermissions,\\n        /** Enumerate files and folders in a Web site using Microsoft Office SharePoint Designer 2007 and WebDAV interfaces. */\\n        browseDirectories,\\n        /** View information about users of the Web site. */\\n        browseUserInfo,\\n        /** Add or remove personal Web Parts on a Web Part Page. */\\n        addDelPrivateWebParts,\\n        /** Update Web Parts to display personalized information. */\\n        updatePersonalWebParts,\\n        /** Grant the ability to perform all administration tasks for the Web site as well as manage content. Activate, deactivate, or edit properties of Web site scoped Features through the object model or through the user interface (UI). When granted on the root Web site of a site collection, activate, deactivate, or edit properties of site collection scoped Features through the object model. To browse to the Site Collection Features page and activate or deactivate site collection scoped Features through the UI, you must be a site collection administrator. */\\n        manageWeb,\\n        /** Content of lists and document libraries in the Web site will be retrieveable for anonymous users through SharePoint search if the list or document library has AnonymousSearchAccessList set.  */\\n        anonymousSearchAccessWebLists,\\n        /** Use features that launch client applications; otherwise, users must work on documents locally and upload changes.  */\\n        useClientIntegration,\\n        /** Use SOAP, WebDAV, or Microsoft Office SharePoint Designer 2007 interfaces to access the Web site. */\\n        useRemoteAPIs,\\n        /** Manage alerts for all users of the Web site. */\\n        manageAlerts,\\n        /** Create e-mail alerts. */\\n        createAlerts,\\n        /** Allows a user to change their user information, such as adding a picture. */\\n        editMyUserInfo,\\n        /** Enumerate permissions on the Web site, list, folder, document, or list item. */\\n        enumeratePermissions,\\n        /** Has all permissions on the Web site. Not available through the user interface. */\\n        fullMask,\\n    }\\n\\n    class BaseCollection<T> implements IEnumerable<T> {\\n        getEnumerator(): IEnumerator<T>;\\n        get_count(): number;\\n        itemAtIndex(index: number): T;\\n        constructor();\\n    }\\n    // tslint:disable-next-line: interface-name\\n    interface IFromJson {\\n        fromJson(initValue: any): void;\\n        customFromJson(initValue: any): boolean;\\n    }\\n    class Base64EncodedByteArray {\\n        constructor(base64Str?: string);\\n        get_length(): number;\\n        toBase64String(): string;\\n        append(b: any): void;\\n        getByteAt(index: number): any;\\n        setByteAt(index: number, b: any): void;\\n    }\\n    class ConditionalScopeBase {\\n        startScope(): any;\\n        startIfTrue(): any;\\n        startIfFalse(): any;\\n        get_testResult(): boolean;\\n        fromJson(initValue: any): void;\\n        customFromJson(initValue: any): boolean;\\n    }\\n    class ClientObjectPropertyConditionalScope extends SP.ConditionalScopeBase {\\n        constructor(clientObject: SP.ClientObject, propertyName: string, comparisonOperator: string, valueToCompare: any, allowAllActions?: boolean);\\n    }\\n    // class ClientResult {\\n    //    get_value(): any;\\n    //    setValue(value: any): void;\\n    //    constructor();\\n    // }\\n    class ClientResult<T> {\\n        get_value(): T;\\n        setValue(value: T): void;\\n        constructor();\\n    }\\n    class BooleanResult {\\n        get_value(): boolean;\\n        constructor();\\n    }\\n    class CharResult {\\n        get_value(): any;\\n        constructor();\\n    }\\n    class IntResult {\\n        get_value(): number;\\n        constructor();\\n    }\\n    class DoubleResult {\\n        get_value(): number;\\n        constructor();\\n    }\\n    class StringResult {\\n        get_value(): string;\\n        constructor();\\n    }\\n    class DateTimeResult {\\n        get_value(): Date;\\n        constructor();\\n    }\\n    class GuidResult {\\n        get_value(): SP.Guid;\\n        constructor();\\n    }\\n    class JsonObjectResult {\\n        get_value(): any;\\n        constructor();\\n    }\\n    class ClientDictionaryResultHandler<T> {\\n        constructor(dict: SP.ClientResult<T>);\\n    }\\n    class ClientUtility {\\n        static urlPathEncodeForXmlHttpRequest(url: string): string;\\n        static getOrCreateObjectPathForConstructor(context: SP.ClientRuntimeContext, typeId: string, args: any[]): SP.ObjectPath;\\n    }\\n    class XElement {\\n        get_name(): string;\\n        set_name(value: string): void;\\n        get_attributes(): any;\\n        set_attributes(value: any): void;\\n        get_children(): any;\\n        set_children(value: any): void;\\n        constructor();\\n    }\\n    class ClientXElement {\\n        get_element(): SP.XElement;\\n        set_element(value: SP.XElement): void;\\n        constructor();\\n    }\\n    class ClientXDocument {\\n        get_root(): SP.XElement;\\n        set_root(value: SP.XElement): void;\\n        constructor();\\n    }\\n    class DataConvert {\\n        static writePropertiesToXml(writer: SP.XmlWriter, obj: any, propNames: string[], serializationContext: SP.SerializationContext): void;\\n        static populateDictionaryFromObject(dict: any, parentNode: any): void;\\n        static fixupTypes(context: SP.ClientRuntimeContext, dict: any): void;\\n        static populateArray(context: SP.ClientRuntimeContext, dest: any, jsonArrayFromServer: any): void;\\n        static fixupType(context: SP.ClientRuntimeContext, obj: any): any;\\n        static writeDictionaryToXml(writer: SP.XmlWriter, dict: any, topLevelElementTagName: string, keys: any, serializationContext: SP.SerializationContext): void;\\n        static writeValueToXmlElement(writer: SP.XmlWriter, objValue: any, serializationContext: SP.SerializationContext): void;\\n        static invokeSetProperty(obj: any, propName: string, propValue: any): void;\\n        static invokeGetProperty(obj: any, propName: string): any;\\n        static specifyDateTimeKind(datetime: Date, kind: SP.DateTimeKind): void;\\n        static getDateTimeKind(datetime: Date): SP.DateTimeKind;\\n        static createUnspecifiedDateTime(year: number, month: number, day: number, hour: number, minute: number, second: number, milliseconds: number): Date;\\n        static createUtcDateTime(milliseconds: number): Date;\\n        static createLocalDateTime(milliseconds: number): Date;\\n    }\\n\\n    // tslint:disable-next-line: interface-name\\n    interface IWebRequestExecutorFactory {\\n        createWebRequestExecutor(): Sys.Net.WebRequestExecutor;\\n    }\\n    class PageRequestFailedEventArgs extends Sys.EventArgs {\\n        get_executor(): Sys.Net.WebRequestExecutor;\\n        get_errorMessage(): string;\\n        get_isErrorPage(): boolean;\\n    }\\n    class PageRequestSucceededEventArgs extends Sys.EventArgs {\\n        get_executor(): Sys.Net.WebRequestExecutor;\\n    }\\n    class PageRequest {\\n        get_request(): Sys.Net.WebRequest;\\n        get_url(): string;\\n        set_url(value: string): void;\\n        get_expectedContentType(): string;\\n        set_expectedContentType(value: string): void;\\n        post(body: string): void;\\n        get(): void;\\n        static doPost(url: string, body: string, expectedContentType: string, succeededHandler: (sender: any, args: SP.PageRequestSucceededEventArgs) => void, failedHandler: (sender: any, args: SP.PageRequestFailedEventArgs) => void): void;\\n        static doGet(url: string, expectedContentType: string, succeededHandler: (sender: any, args: SP.PageRequestSucceededEventArgs) => void, failedHandler: (sender: any, args: SP.PageRequestFailedEventArgs) => void): void;\\n        add_succeeded(value: (sender: any, args: SP.PageRequestSucceededEventArgs) => void): void;\\n        remove_succeeded(value: (sender: any, args: SP.PageRequestSucceededEventArgs) => void): void;\\n        add_failed(value: (sender: any, args: SP.PageRequestFailedEventArgs) => void): void;\\n        remove_failed(value: (sender: any, args: SP.PageRequestFailedEventArgs) => void): void;\\n        constructor();\\n    }\\n    class ResResources {\\n        static getString(resourceId: string, args: any[]): string;\\n    }\\n    /** Defines a writer that provides a set of methods to append text in XML format. Use the static SP.XmlWriter.create(sb) Method to create an SP.XmlWriter object with the Sys.StringBuilder object you pass in. */\\n    class XmlWriter {\\n        /** Creates a new instance of the XmlWriter class with the specified string builder. */\\n        static create(sb: Sys.StringBuilder): SP.XmlWriter;\\n        /** Appends a start element tag with the specified name in XML format to the object?s string builder. */\\n        writeStartElement(tagName: string): void;\\n        /** Appends an element with the specified tag name and value in XML format to the string builder. */\\n        writeElementString(tagName: string, value: string): void;\\n        /** Appends an end element tag in XML format to the object?s string builder. This method appends the end element tag ?/>? if the start element tag is not closed; otherwise, it appends a full end element tag ?</tagName>? to the string builder. */\\n        writeEndElement(): void;\\n        /** Appends an attribute with the specified name and value in XML format to the object?s string builder. */\\n        writeAttributeString(localName: string, value: string): void;\\n        /** This method only appends the name of the attribute. You can append the value of the attribute by calling the SP.XmlWriter.writeString(value) Method, and close the attribute by calling the SP.XmlWriter.writeEndAttribute() Method. */\\n        writeStartAttribute(localName: string): void;\\n        /** Appends an end of an attribute in XML format to the object?s string builder. */\\n        writeEndAttribute(): void;\\n        /** Appends the specified value for an element tag or attribute to the object?s string builder. */\\n        writeString(value: string): void;\\n        /** Appends the specified text to the object?s string builder. */\\n        writeRaw(xml: string): void;\\n        /** This member is reserved for internal use and is not intended to be used directly from your code. */\\n        close(): void;\\n    }\\n\\n    class ClientConstants {\\n        static AddExpandoFieldTypeSuffix: string;\\n        static Actions: string;\\n        static ApplicationName: string;\\n        static Body: string;\\n        static CatchScope: string;\\n        static ChildItemQuery: string;\\n        static ChildItems: string;\\n        static ConditionalScope: string;\\n        static Constructor: string;\\n        static Context: string;\\n        static ErrorInfo: string;\\n        static ErrorMessage: string;\\n        static ErrorStackTrace: string;\\n        static ErrorCode: string;\\n        static ErrorTypeName: string;\\n        static ErrorValue: string;\\n        static ErrorDetails: string;\\n        static ErrorTraceCorrelationId: string;\\n        static ExceptionHandlingScope: string;\\n        static ExceptionHandlingScopeSimple: string;\\n        static QueryableExpression: string;\\n        static FinallyScope: string;\\n        static HasException: string;\\n        static Id: string;\\n        static Identity: string;\\n        static IfFalseScope: string;\\n        static IfTrueScope: string;\\n        static IsNull: string;\\n        static LibraryVersion: string;\\n        static TraceCorrelationId: string;\\n        static Count: string;\\n        static Method: string;\\n        static Methods: string;\\n        static Name: string;\\n        static Object: string;\\n        static ObjectPathId: string;\\n        static ObjectPath: string;\\n        static ObjectPaths: string;\\n        static ObjectType: string;\\n        static ObjectIdentity: string;\\n        static ObjectIdentityQuery: string;\\n        static ObjectVersion: string;\\n        static Parameter: string;\\n        static Parameters: string;\\n        static ParentId: string;\\n        static Processed: string;\\n        static Property: string;\\n        static Properties: string;\\n        static Query: string;\\n        static QueryResult: string;\\n        static Request: string;\\n        static Results: string;\\n        static ScalarProperty: string;\\n        static SchemaVersion: string;\\n        static ScopeId: string;\\n        static SelectAll: string;\\n        static SelectAllProperties: string;\\n        static SetProperty: string;\\n        static SetStaticProperty: string;\\n        static StaticMethod: string;\\n        static StaticProperty: string;\\n        static SuffixChar: string;\\n        static SuffixByte: string;\\n        static SuffixInt16: string;\\n        static SuffixUInt16: string;\\n        static SuffixInt32: string;\\n        static SuffixUInt32: string;\\n        static SuffixInt64: string;\\n        static SuffixUInt64: string;\\n        static SuffixSingle: string;\\n        static SuffixDouble: string;\\n        static SuffixDecimal: string;\\n        static SuffixTimeSpan: string;\\n        static SuffixArray: string;\\n        static Test: string;\\n        static TryScope: string;\\n        static Type: string;\\n        static TypeId: string;\\n        static Update: string;\\n        static Version: string;\\n        static XmlElementName: string;\\n        static XmlElementAttributes: string;\\n        static XmlElementChildren: string;\\n        static XmlNamespace: string;\\n        static FieldValuesMethodName: string;\\n        static RequestTokenHeader: string;\\n        static FormDigestHeader: string;\\n        static useWebLanguageHeader: string;\\n        static useWebLanguageHeaderValue: string;\\n        static ClientTagHeader: string;\\n        static TraceCorrelationIdRequestHeader: string;\\n        static TraceCorrelationIdResponseHeader: string;\\n        static greaterThan: string;\\n        static lessThan: string;\\n        static equal: string;\\n        static notEqual: string;\\n        static greaterThanOrEqual: string;\\n        static lessThanOrEqual: string;\\n        static andAlso: string;\\n        static orElse: string;\\n        static not: string;\\n        static expressionParameter: string;\\n        static expressionProperty: string;\\n        static expressionStaticProperty: string;\\n        static expressionMethod: string;\\n        static expressionStaticMethod: string;\\n        static expressionConstant: string;\\n        static expressionConvert: string;\\n        static expressionTypeIs: string;\\n        static ofType: string;\\n        static take: string;\\n        static where: string;\\n        static orderBy: string;\\n        static orderByDescending: string;\\n        static thenBy: string;\\n        static thenByDescending: string;\\n        static queryableObject: string;\\n        static ServiceFileName: string;\\n        static ServiceMethodName: string;\\n        static fluidApplicationInitParamUrl: string;\\n        static fluidApplicationInitParamViaUrl: string;\\n        static fluidApplicationInitParamRequestToken: string;\\n        static fluidApplicationInitParamFormDigestTimeoutSeconds: string;\\n        static fluidApplicationInitParamFormDigest: string;\\n    }\\n    class ClientSchemaVersions {\\n        static version14: string;\\n        static version15: string;\\n        static currentVersion: string;\\n    }\\n    class ClientErrorCodes {\\n        static genericError: number;\\n        static accessDenied: number;\\n        static docAlreadyExists: number;\\n        static versionConflict: number;\\n        static listItemDeleted: number;\\n        static invalidFieldValue: number;\\n        static notSupported: number;\\n        static redirect: number;\\n        static notSupportedRequestVersion: number;\\n        static fieldValueFailedValidation: number;\\n        static itemValueFailedValidation: number;\\n    }\\n    class ClientAction {\\n        get_id(): number;\\n        get_path(): SP.ObjectPath;\\n        get_name(): string;\\n    }\\n    class ClientActionSetProperty extends SP.ClientAction {\\n        constructor(obj: SP.ClientObject, propName: string, propValue: any);\\n    }\\n    class ClientActionSetStaticProperty extends SP.ClientAction {\\n        constructor(context: SP.ClientRuntimeContext, typeId: string, propName: string, propValue: any);\\n    }\\n    class ClientActionInvokeMethod extends SP.ClientAction {\\n        constructor(obj: SP.ClientObject, methodName: string, parameters: any[]);\\n    }\\n    class ClientActionInvokeStaticMethod extends SP.ClientAction {\\n        constructor(context: SP.ClientRuntimeContext, typeId: string, methodName: string, parameters: any[]);\\n    }\\n    class ClientObject {\\n        constructor(context: SP.ClientRuntimeContext, objectPath: SP.ObjectPath);\\n        get_context(): SP.ClientRuntimeContext;\\n        get_path(): SP.ObjectPath;\\n        get_objectVersion(): string;\\n        set_objectVersion(value: string): void;\\n        fromJson(initValue: any): void;\\n        customFromJson(initValue: any): boolean;\\n        refreshLoad(): void;\\n        retrieve(propertyNames?: string[]): void;\\n        isPropertyAvailable(propertyName: string): boolean;\\n        isObjectPropertyInstantiated(propertyName: string): boolean;\\n        get_serverObjectIsNull(): boolean;\\n        get_typedObject(): SP.ClientObject;\\n        initPropertiesFromJson(initValue: any): void;\\n        checkUninitializedProperty(propName: string): void;\\n    }\\n    class ClientObjectData {\\n        get_properties(): any;\\n        get_clientObjectProperties(): any;\\n        get_methodReturnObjects(): any;\\n        constructor();\\n    }\\n    /** Provides a base class for a collection of objects on a remote client. */\\n    class ClientObjectCollection<T> extends SP.ClientObject implements IEnumerable<T> {\\n        constructor();\\n        get_areItemsAvailable(): boolean;\\n        /** Gets the data for all of the items in the collection. */\\n        retrieveItems(): SP.ClientObjectPrototype;\\n        /** Returns an enumerator that iterates through the collection. */\\n        getEnumerator(): IEnumerator<T>;\\n        /** Returns number of items in the collection. */\\n        get_count(): number;\\n        get_data(): T[];\\n        addChild(obj: T): void;\\n        getItemAtIndex(index: number): T;\\n        fromJson(obj: any): void;\\n    }\\n    class ClientObjectList<T> extends SP.ClientObjectCollection<T> {\\n        constructor(context: SP.ClientRuntimeContext, objectPath: SP.ObjectPath, childItemType: any);\\n        fromJson(initValue: any): void;\\n        customFromJson(initValue: any): boolean;\\n    }\\n    class ClientObjectPrototype {\\n        retrieve(propertyNames?: string[]): void;\\n        retrieveObject(propertyName: string): SP.ClientObjectPrototype;\\n        retrieveCollectionObject(propertyName: string): SP.ClientObjectCollectionPrototype;\\n    }\\n    class ClientObjectCollectionPrototype extends SP.ClientObjectPrototype {\\n        retrieveItems(): SP.ClientObjectPrototype;\\n    }\\n    enum ClientRequestStatus {\\n        active,\\n        inProgress,\\n        completedSuccess,\\n        completedException,\\n    }\\n    class WebRequestEventArgs extends Sys.EventArgs {\\n        constructor(webRequest: Sys.Net.WebRequest);\\n        get_webRequest(): Sys.Net.WebRequest;\\n    }\\n    class ClientRequest {\\n        static get_nextSequenceId(): number;\\n        get_webRequest(): Sys.Net.WebRequest;\\n        add_requestSucceeded(value: (sender: any, args: SP.ClientRequestSucceededEventArgs) => void): void;\\n        remove_requestSucceeded(value: (sender: any, args: SP.ClientRequestSucceededEventArgs) => void): void;\\n        add_requestFailed(value: (sender: any, args: SP.ClientRequestFailedEventArgs) => void): void;\\n        remove_requestFailed(value: (sender: any, args: SP.ClientRequestFailedEventArgs) => void): void;\\n        get_navigateWhenServerRedirect(): boolean;\\n        set_navigateWhenServerRedirect(value: boolean): void;\\n    }\\n    class ClientRequestEventArgs extends Sys.EventArgs {\\n        get_request(): SP.ClientRequest;\\n    }\\n    class ClientRequestFailedEventArgs extends SP.ClientRequestEventArgs {\\n        constructor(request: SP.ClientRequest, message: string, stackTrace: string, errorCode: number, errorValue: string, errorTypeName: string, errorDetails: any, errorTraceCorrelationId?: string);\\n        get_message(): string;\\n        get_stackTrace(): string;\\n        get_errorCode(): number;\\n        get_errorValue(): string;\\n        get_errorTypeName(): string;\\n        get_errorDetails(): any;\\n        get_errorTraceCorrelationId(): string;\\n    }\\n    class ClientRequestSucceededEventArgs extends SP.ClientRequestEventArgs {\\n    }\\n    class ClientRuntimeContext implements Sys.IDisposable {\\n        constructor(serverRelativeUrlOrFullUrl: string);\\n        get_url(): string;\\n        get_viaUrl(): string;\\n        set_viaUrl(value: string): void;\\n        get_formDigestHandlingEnabled(): boolean;\\n        set_formDigestHandlingEnabled(value: boolean): void;\\n        get_applicationName(): string;\\n        set_applicationName(value: string): void;\\n        get_disableReturnValueCache(): boolean;\\n        set_disableReturnValueCache(value: boolean): boolean;\\n        get_clientTag(): string;\\n        set_clientTag(value: string): void;\\n        get_webRequestExecutorFactory(): SP.IWebRequestExecutorFactory;\\n        set_webRequestExecutorFactory(value: SP.IWebRequestExecutorFactory): void;\\n        get_pendingRequest(): SP.ClientRequest;\\n        get_hasPendingRequest(): boolean;\\n        add_executingWebRequest(value: (sender: any, args: SP.WebRequestEventArgs) => void): void;\\n        remove_executingWebRequest(value: (sender: any, args: SP.WebRequestEventArgs) => void): void;\\n        add_requestSucceeded(value: (sender: any, args: SP.ClientRequestSucceededEventArgs) => void): void;\\n        remove_requestSucceeded(value: (sender: any, args: SP.ClientRequestSucceededEventArgs) => void): void;\\n        add_requestFailed(value: (sender: any, args: SP.ClientRequestFailedEventArgs) => void): void;\\n        remove_requestFailed(value: (sender: any, args: SP.ClientRequestFailedEventArgs) => void): void;\\n        add_beginningRequest(value: (sender: any, args: SP.ClientRequestEventArgs) => void): void;\\n        remove_beginningRequest(value: (sender: any, args: SP.ClientRequestEventArgs) => void): void;\\n        get_requestTimeout(): number;\\n        set_requestTimeout(value: number): void;\\n        executeQueryAsync(succeededCallback?: (sender: any, args: SP.ClientRequestSucceededEventArgs) => void, failedCallback?: (sender: any, args: SP.ClientRequestFailedEventArgs) => void): void;\\n        get_staticObjects(): any;\\n        castTo(obj: SP.ClientObject, type: any): SP.ClientObject;\\n        addQuery(query: SP.ClientAction): void;\\n        addQueryIdAndResultObject(id: number, obj: any): void;\\n        parseObjectFromJsonString(json: string, skipTypeFixup?: boolean): any;\\n        load(clientObject: SP.ClientObject, ...exps: string[]): void;\\n        loadQuery<T>(clientObjectCollection: SP.ClientObjectCollection<T>, exp?: string): any;\\n        get_serverSchemaVersion(): string;\\n        get_serverLibraryVersion(): string;\\n        get_traceCorrelationId(): string;\\n        set_traceCorrelationId(value: string): void;\\n        dispose(): void;\\n    }\\n    class SimpleDataTable {\\n        get_rows(): any[];\\n        constructor();\\n    }\\n    class ClientValueObject {\\n        fromJson(obj: any): void;\\n        customFromJson(obj: any): boolean;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        customWriteToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): boolean;\\n        get_typeId(): string;\\n    }\\n    class ClientValueObjectCollection<T> extends SP.ClientValueObject implements IEnumerable<T> {\\n        get_count(): number;\\n        getEnumerator(): IEnumerator<T>;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n    }\\n    class ExceptionHandlingScope {\\n        constructor(context: SP.ClientRuntimeContext);\\n        startScope(): any;\\n        startTry(): any;\\n        startCatch(): any;\\n        startFinally(): any;\\n        get_processed(): boolean;\\n        get_hasException(): boolean;\\n        get_errorMessage(): string;\\n        get_serverStackTrace(): string;\\n        get_serverErrorCode(): number;\\n        get_serverErrorValue(): string;\\n        get_serverErrorTypeName(): string;\\n        get_serverErrorDetails(): any;\\n    }\\n    class ObjectIdentityQuery extends SP.ClientAction {\\n        constructor(objectPath: SP.ObjectPath);\\n    }\\n    class ObjectPath {\\n        setPendingReplace(): void;\\n    }\\n    class ObjectPathProperty extends SP.ObjectPath {\\n        constructor(context: SP.ClientRuntimeContext, parent: SP.ObjectPath, propertyName: string);\\n    }\\n    class ObjectPathStaticProperty extends SP.ObjectPath {\\n        constructor(context: SP.ClientRuntimeContext, typeId: string, propertyName: string);\\n    }\\n    class ObjectPathMethod extends SP.ObjectPath {\\n        constructor(context: SP.ClientRuntimeContext, parent: SP.ObjectPath, methodName: string, parameters: any[]);\\n    }\\n    class ObjectPathStaticMethod extends SP.ObjectPath {\\n        constructor(context: SP.ClientRuntimeContext, typeId: string, methodName: string, parameters: any[]);\\n    }\\n    class ObjectPathConstructor extends SP.ObjectPath {\\n        constructor(context: SP.ClientRuntimeContext, typeId: string, parameters: any[]);\\n    }\\n    class SerializationContext {\\n        addClientObject(obj: SP.ClientObject): void;\\n        addObjectPath(path: SP.ObjectPath): void;\\n    }\\n    class ResourceStrings {\\n        argumentExceptionMessage: string;\\n        argumentNullExceptionMessage: string;\\n        cC_AppIconAlt: string;\\n        cC_AppWebUrlNotSet: string;\\n        cC_ArrowImageAlt: string;\\n        cC_BackToSite: string;\\n        cC_ErrorGettingThemeInfo: string;\\n        cC_HelpLinkToolTip: string;\\n        cC_HostSiteUrlNotSet: string;\\n        cC_InvalidArgument: string;\\n        cC_InvalidJSON: string;\\n        cC_InvalidOperation: string;\\n        cC_PlaceHolderElementNotFound: string;\\n        cC_RequiredScriptNotLoaded: string;\\n        cC_SendFeedback: string;\\n        cC_SettingsLinkToolTip: string;\\n        cC_TimeoutGettingThemeInfo: string;\\n        cC_Welcome: string;\\n        cannotFindContextWebServerRelativeUrl: string;\\n        collectionHasNotBeenInitialized: string;\\n        collectionModified: string;\\n        invalidUsageOfConditionalScope: string;\\n        invalidUsageOfConditionalScopeNowAllowedAction: string;\\n        invalidUsageOfExceptionHandlingScope: string;\\n        namedPropertyHasNotBeenInitialized: string;\\n        namedServerObjectIsNull: string;\\n        noObjectPathAssociatedWithObject: string;\\n        notSameClientContext: string;\\n        notSupportedQueryExpressionWithExpressionDetail: string;\\n        objectNameIdentity: string;\\n        objectNameMethod: string;\\n        objectNameProperty: string;\\n        objectNameType: string;\\n        propertyHasNotBeenInitialized: string;\\n        rE_BrowserBinaryDataNotSupported: string;\\n        rE_BrowserNotSupported: string;\\n        rE_CannotAccessSite: string;\\n        rE_CannotAccessSiteCancelled: string;\\n        rE_CannotAccessSiteOpenWindowFailed: string;\\n        rE_DismissOpenWindowMessageLinkText: string;\\n        rE_DomainDoesNotMatch: string;\\n        rE_FixitHelpMessage: string;\\n        rE_InvalidArgumentOrField: string;\\n        rE_InvalidOperation: string;\\n        rE_NoTrustedOrigins: string;\\n        rE_OpenWindowButtonText: string;\\n        rE_OpenWindowMessage: string;\\n        rE_RequestAbortedOrTimedout: string;\\n        rE_RequestUnexpectedResponse: string;\\n        rE_RequestUnexpectedResponseWithContentTypeAndStatus: string;\\n        requestAbortedOrTimedOut: string;\\n        requestEmptyQueryName: string;\\n        requestHasBeenExecuted: string;\\n        requestUnexpectedResponse: string;\\n        requestUnexpectedResponseWithContentTypeAndStatus: string;\\n        requestUnexpectedResponseWithStatus: string;\\n        requestUnknownResponse: string;\\n        serverObjectIsNull: string;\\n        unknownError: string;\\n        unknownResponseData: string;\\n    }\\n    class RuntimeRes {\\n        cC_PlaceHolderElementNotFound: string;\\n        rE_CannotAccessSiteOpenWindowFailed: string;\\n        noObjectPathAssociatedWithObject: string;\\n        cC_TimeoutGettingThemeInfo: string;\\n        unknownResponseData: string;\\n        requestUnexpectedResponseWithStatus: string;\\n        objectNameProperty: string;\\n        requestUnknownResponse: string;\\n        rE_RequestUnexpectedResponseWithContentTypeAndStatus: string;\\n        rE_BrowserNotSupported: string;\\n        argumentExceptionMessage: string;\\n        namedServerObjectIsNull: string;\\n        objectNameType: string;\\n        requestUnexpectedResponseWithContentTypeAndStatus: string;\\n        cC_InvalidJSON: string;\\n        invalidUsageOfExceptionHandlingScope: string;\\n        serverObjectIsNull: string;\\n        cC_AppWebUrlNotSet: string;\\n        rE_OpenWindowMessage: string;\\n        argumentNullExceptionMessage: string;\\n        cC_HelpLinkToolTip: string;\\n        propertyHasNotBeenInitialized: string;\\n        rE_RequestAbortedOrTimedout: string;\\n        invalidUsageOfConditionalScope: string;\\n        cC_ErrorGettingThemeInfo: string;\\n        rE_DismissOpenWindowMessageLinkText: string;\\n        rE_CannotAccessSiteCancelled: string;\\n        objectNameIdentity: string;\\n        cC_HostSiteUrlNotSet: string;\\n        rE_FixitHelpMessage: string;\\n        notSupportedQueryExpressionWithExpressionDetail: string;\\n        rE_RequestUnexpectedResponse: string;\\n        rE_DomainDoesNotMatch: string;\\n        cC_BackToSite: string;\\n        rE_NoTrustedOrigins: string;\\n        rE_InvalidOperation: string;\\n        collectionModified: string;\\n        cC_Welcome: string;\\n        cC_AppIconAlt: string;\\n        cC_SendFeedback: string;\\n        cC_ArrowImageAlt: string;\\n        cC_InvalidOperation: string;\\n        requestAbortedOrTimedOut: string;\\n        invalidUsageOfConditionalScopeNowAllowedAction: string;\\n        cannotFindContextWebServerRelativeUrl: string;\\n        rE_OpenWindowButtonText: string;\\n        unknownError: string;\\n        cC_InvalidArgument: string;\\n        rE_InvalidArgumentOrField: string;\\n        cC_SettingsLinkToolTip: string;\\n        requestEmptyQueryName: string;\\n        cC_RequiredScriptNotLoaded: string;\\n        rE_CannotAccessSite: string;\\n        notSameClientContext: string;\\n        requestUnexpectedResponse: string;\\n        rE_BrowserBinaryDataNotSupported: string;\\n        collectionHasNotBeenInitialized: string;\\n        namedPropertyHasNotBeenInitialized: string;\\n        requestHasBeenExecuted: string;\\n        objectNameMethod: string;\\n    }\\n    class ParseJSONUtil {\\n        static parseObjectFromJsonString(json: string): any;\\n        static validateJson(text: string): boolean;\\n    }\\n    enum DateTimeKind {\\n        unspecified,\\n        utc,\\n        local,\\n    }\\n    class OfficeVersion {\\n        majorBuildVersion: number;\\n        previousMajorBuildVersion: number;\\n        majorVersion: string;\\n        previousVersion: string;\\n        majorVersionDotZero: string;\\n        previousVersionDotZero: string;\\n        assemblyVersion: string;\\n        wssMajorVersion: string;\\n    }\\n    class ClientContext extends SP.ClientRuntimeContext {\\n        constructor(serverRelativeUrlOrFullUrl?: string);\\n        get_web(): SP.Web;\\n        get_site(): SP.Site;\\n        get_serverVersion(): string;\\n        static get_current(): SP.ClientContext;\\n    }\\n    enum ULSTraceLevel {\\n        verbose,\\n    }\\n    /** Provides a Unified Logging Service (ULS) that monitors log messages. */\\n    class ULS {\\n        /** Gets a value that indicates whether the Unified Logging Service (ULS) is enabled. */\\n        static get_enabled(): boolean;\\n        /** Sets a value that indicates whether the Unified Logging Service (ULS) is enabled. */\\n        static set_enabled(value: boolean): void;\\n        /** Logs the specified debug message.\\n            This method logs the message with a time stamp. If any log messages are pending, this method also logs them. If the message cannot be logged, the message is added to the list of pending log messages. */\\n        static log(debugMessage: string): void;\\n        /** Increases the indentation for subsequent log messages. */\\n        static increaseIndent(): void;\\n        /** Decreases the indentation for subsequent log messages. */\\n        static decreaseIndent(): void;\\n        /** Traces when the function was entered. */\\n        static traceApiEnter(functionName: string, args?: any[]): void;\\n        /** Traces when the function has finished. */\\n        static traceApiLeave(): void;\\n    }\\n    class AccessRequests {\\n        static changeRequestStatus(context: SP.ClientRuntimeContext, itemId: number, newStatus: number, convStr: string, permType: string, permissionLevel: number): void;\\n        static changeRequestStatusBulk(context: SP.ClientRuntimeContext, requestIds: number[], newStatus: number): void;\\n    }\\n    enum AddFieldOptions {\\n        defaultValue,\\n        addToDefaultContentType,\\n        addToNoContentType,\\n        addToAllContentTypes,\\n        addFieldInternalNameHint,\\n        addFieldToDefaultView,\\n        addFieldCheckDisplayName,\\n    }\\n    class AlternateUrl extends SP.ClientObject {\\n        get_uri(): string;\\n        get_urlZone(): SP.UrlZone;\\n    }\\n    class App extends SP.ClientObject {\\n        get_assetId(): string;\\n        get_contentMarket(): string;\\n        get_versionString(): string;\\n    }\\n    class AppCatalog {\\n        static getAppInstances(context: SP.ClientRuntimeContext, web: SP.Web): SP.ClientObjectList<SP.AppInstance>;\\n        static getDeveloperSiteAppInstancesByIds(context: SP.ClientRuntimeContext, site: SP.Site, appInstanceIds: SP.Guid[]): SP.ClientObjectList<SP.AppInstance>;\\n        static isAppSideloadingEnabled(context: SP.ClientRuntimeContext): SP.BooleanResult;\\n    }\\n    class AppContextSite extends SP.ClientObject {\\n        constructor(context: SP.ClientRuntimeContext, siteUrl: string);\\n        get_site(): SP.Site;\\n        get_web(): SP.Web;\\n        static newObject(context: SP.ClientRuntimeContext, siteUrl: string): SP.AppContextSite;\\n    }\\n    class AppInstance extends SP.ClientObject {\\n        get_appPrincipalId(): string;\\n        get_appWebFullUrl(): string;\\n        get_id(): SP.Guid;\\n        get_inError(): boolean;\\n        get_startPage(): string;\\n        get_remoteAppUrl(): string;\\n        get_settingsPageUrl(): string;\\n        get_siteId(): SP.Guid;\\n        get_status(): SP.AppInstanceStatus;\\n        get_title(): string;\\n        get_webId(): SP.Guid;\\n        getErrorDetails(): SP.ClientObjectList<SP.AppInstanceErrorDetails>;\\n        uninstall(): SP.GuidResult;\\n        upgrade(appPackageStream: SP.Base64EncodedByteArray): void;\\n        cancelAllJobs(): SP.BooleanResult;\\n        install(): SP.GuidResult;\\n        getPreviousAppVersion(): SP.App;\\n        retryAllJobs(): void;\\n    }\\n    class AppInstanceErrorDetails extends SP.ClientObject {\\n        get_correlationId(): SP.Guid;\\n        set_correlationId(value: SP.Guid): void;\\n        get_errorDetail(): string;\\n        get_errorType(): SP.AppInstanceErrorType;\\n        set_errorType(value: SP.AppInstanceErrorType): void;\\n        get_errorTypeName(): string;\\n        get_exceptionMessage(): string;\\n        get_source(): SP.AppInstanceErrorSource;\\n        set_source(value: SP.AppInstanceErrorSource): void;\\n        get_sourceName(): string;\\n    }\\n    enum AppInstanceErrorSource {\\n        common,\\n        appWeb,\\n        parentWeb,\\n        remoteWebSite,\\n        database,\\n        officeExtension,\\n        eventCallouts,\\n        finalization,\\n    }\\n    enum AppInstanceErrorType {\\n        transient,\\n        configuration,\\n        app,\\n    }\\n    enum AppInstanceStatus {\\n        invalidStatus,\\n        installing,\\n        canceling,\\n        uninstalling,\\n        installed,\\n        upgrading,\\n        initialized,\\n        upgradeCanceling,\\n        disabling,\\n        disabled,\\n    }\\n    class AppLicense extends SP.ClientValueObject {\\n        get_rawXMLLicenseToken(): string;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class AppLicenseCollection extends SP.ClientValueObjectCollection<AppLicense> {\\n        add(item: SP.AppLicense): void;\\n        get_item(index: number): SP.AppLicense;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    enum AppLicenseType {\\n        perpetualMultiUser,\\n        perpetualAllUsers,\\n        trialMultiUser,\\n        trialAllUsers,\\n    }\\n    class Attachment extends SP.ClientObject {\\n        get_fileName(): string;\\n        get_serverRelativeUrl(): string;\\n        deleteObject(): void;\\n    }\\n    interface AttachmentCollection extends SP.ClientObjectCollection<Attachment> {\\n        itemAt(index: number): SP.Attachment;\\n        get_item(index: number): SP.Attachment;\\n        getByFileName(fileName: string): SP.Attachment;\\n    }\\n    class AttachmentCreationInformation extends SP.ClientValueObject {\\n        get_contentStream(): SP.Base64EncodedByteArray;\\n        set_contentStream(value: SP.Base64EncodedByteArray): void;\\n        get_fileName(): string;\\n        set_fileName(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class BasePermissions extends SP.ClientValueObject {\\n        set(perm: SP.PermissionKind): void;\\n        clear(perm: SP.PermissionKind): void;\\n        clearAll(): void;\\n        has(perm: SP.PermissionKind): boolean;\\n        equals(perm: SP.BasePermissions): boolean;\\n        hasPermissions(high: number, low: number): boolean;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    /** Specifies the base type for a list. */\\n    enum BaseType {\\n        none,\\n        genericList,\\n        documentLibrary,\\n        unused,\\n        discussionBoard,\\n        survey,\\n        issue,\\n    }\\n    enum BrowserFileHandling {\\n        permissive,\\n        strict,\\n    }\\n    enum CalendarType {\\n        none,\\n        gregorian,\\n        japan,\\n        taiwan,\\n        korea,\\n        hijri,\\n        thai,\\n        hebrew,\\n        gregorianMEFrench,\\n        gregorianArabic,\\n        gregorianXLITEnglish,\\n        gregorianXLITFrench,\\n        koreaJapanLunar,\\n        chineseLunar,\\n        sakaEra,\\n        umAlQura,\\n    }\\n    /** Specifies a Collaborative Application Markup Language (CAML) query on a list. */\\n    class CamlQuery extends SP.ClientValueObject {\\n        constructor();\\n        /** This method creates a Collaborative Application Markup Language (CAML) string\\n            that can be used to recursively get all of the items in a list, including\\n            the items in the subfolders. */\\n        static createAllItemsQuery(): SP.CamlQuery;\\n        /** This method creates a Collaborative Application Markup Language (CAML) string\\n            that can be used to recursively get all of the folders in a list, including\\n            the subfolders. */\\n        static createAllFoldersQuery(): SP.CamlQuery;\\n        /** Returns true if the query returns dates in Coordinated Universal Time (UTC) format. */\\n        get_datesInUtc(): boolean;\\n        /** Sets a value that indicates whether the query returns dates in Coordinated Universal Time (UTC) format. */\\n        set_datesInUtc(value: boolean): void;\\n        /** Server relative URL of a list folder from which results will be returned. */\\n        get_folderServerRelativeUrl(): string;\\n        /** Sets a value that specifies the server relative URL of a list folder from which results will be returned. */\\n        set_folderServerRelativeUrl(value: string): void;\\n        get_listItemCollectionPosition(): SP.ListItemCollectionPosition;\\n        /** Sets a value that specifies the information required to get the next page of data for the list view. */\\n        set_listItemCollectionPosition(value: SP.ListItemCollectionPosition): void;\\n        /** Gets value that specifies the XML schema that defines the list view. */\\n        get_viewXml(): string;\\n        /** Sets value that specifies the XML schema that defines the list view. It must be null, empty, or an XML fragment that conforms to the ViewDefinition type.  */\\n        set_viewXml(value: string): void;\\n        /** This member is reserved for internal use and is not intended to be used directly from your code. */\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n    }\\n    class Change extends SP.ClientObject {\\n        get_changeToken(): SP.ChangeToken;\\n        get_changeType(): SP.ChangeType;\\n        get_siteId(): SP.Guid;\\n        get_time(): Date;\\n    }\\n    class ChangeAlert extends SP.Change {\\n        get_alertId(): SP.Guid;\\n        get_webId(): SP.Guid;\\n    }\\n    interface ChangeCollection extends SP.ClientObjectCollection<Change> {\\n        itemAt(index: number): SP.Change;\\n        get_item(index: number): SP.Change;\\n    }\\n    class ChangeContentType extends SP.Change {\\n        get_contentTypeId(): SP.ContentTypeId;\\n        get_webId(): SP.Guid;\\n    }\\n    class ChangeField extends SP.Change {\\n        get_fieldId(): SP.Guid;\\n        get_webId(): SP.Guid;\\n    }\\n    class ChangeFile extends SP.Change {\\n        get_uniqueId(): SP.Guid;\\n        get_webId(): SP.Guid;\\n    }\\n    class ChangeFolder extends SP.Change {\\n        get_uniqueId(): SP.Guid;\\n        get_webId(): SP.Guid;\\n    }\\n    class ChangeGroup extends SP.Change {\\n        get_groupId(): number;\\n    }\\n    class ChangeItem extends SP.Change {\\n        get_itemId(): number;\\n        get_listId(): SP.Guid;\\n        get_webId(): SP.Guid;\\n    }\\n    class ChangeList extends SP.Change {\\n        get_listId(): SP.Guid;\\n        get_webId(): SP.Guid;\\n    }\\n    class ChangeLogItemQuery extends SP.ClientValueObject {\\n        get_changeToken(): string;\\n        set_changeToken(value: string): void;\\n        get_contains(): string;\\n        set_contains(value: string): void;\\n        get_query(): string;\\n        set_query(value: string): void;\\n        get_queryOptions(): string;\\n        set_queryOptions(value: string): void;\\n        get_rowLimit(): string;\\n        set_rowLimit(value: string): void;\\n        get_viewFields(): string;\\n        set_viewFields(value: string): void;\\n        get_viewName(): string;\\n        set_viewName(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class ChangeQuery extends SP.ClientValueObject {\\n        constructor();\\n        constructor(allChangeObjectTypes: boolean, allChangeTypes: boolean);\\n        get_add(): boolean;\\n        set_add(value: boolean): void;\\n        get_alert(): boolean;\\n        set_alert(value: boolean): void;\\n        get_changeTokenEnd(): SP.ChangeToken;\\n        set_changeTokenEnd(value: SP.ChangeToken): void;\\n        get_changeTokenStart(): SP.ChangeToken;\\n        set_changeTokenStart(value: SP.ChangeToken): void;\\n        get_contentType(): boolean;\\n        set_contentType(value: boolean): void;\\n        get_deleteObject(): boolean;\\n        set_deleteObject(value: boolean): void;\\n        get_field(): boolean;\\n        set_field(value: boolean): void;\\n        get_file(): boolean;\\n        set_file(value: boolean): void;\\n        get_folder(): boolean;\\n        set_folder(value: boolean): void;\\n        get_group(): boolean;\\n        set_group(value: boolean): void;\\n        get_groupMembershipAdd(): boolean;\\n        set_groupMembershipAdd(value: boolean): void;\\n        get_groupMembershipDelete(): boolean;\\n        set_groupMembershipDelete(value: boolean): void;\\n        get_item(): boolean;\\n        set_item(value: boolean): void;\\n        get_list(): boolean;\\n        set_list(value: boolean): void;\\n        get_move(): boolean;\\n        set_move(value: boolean): void;\\n        get_navigation(): boolean;\\n        set_navigation(value: boolean): void;\\n        get_rename(): boolean;\\n        set_rename(value: boolean): void;\\n        get_restore(): boolean;\\n        set_restore(value: boolean): void;\\n        get_roleAssignmentAdd(): boolean;\\n        set_roleAssignmentAdd(value: boolean): void;\\n        get_roleAssignmentDelete(): boolean;\\n        set_roleAssignmentDelete(value: boolean): void;\\n        get_roleDefinitionAdd(): boolean;\\n        set_roleDefinitionAdd(value: boolean): void;\\n        get_roleDefinitionDelete(): boolean;\\n        set_roleDefinitionDelete(value: boolean): void;\\n        get_roleDefinitionUpdate(): boolean;\\n        set_roleDefinitionUpdate(value: boolean): void;\\n        get_securityPolicy(): boolean;\\n        set_securityPolicy(value: boolean): void;\\n        get_site(): boolean;\\n        set_site(value: boolean): void;\\n        get_systemUpdate(): boolean;\\n        set_systemUpdate(value: boolean): void;\\n        get_update(): boolean;\\n        set_update(value: boolean): void;\\n        get_user(): boolean;\\n        set_user(value: boolean): void;\\n        get_view(): boolean;\\n        set_view(value: boolean): void;\\n        get_web(): boolean;\\n        set_web(value: boolean): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n    }\\n    class ChangeSite extends SP.Change {\\n    }\\n    class ChangeToken extends SP.ClientValueObject {\\n        get_stringValue(): string;\\n        set_stringValue(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    enum ChangeType {\\n        noChange,\\n        add,\\n        update,\\n        deleteObject,\\n        rename,\\n        moveAway,\\n        moveInto,\\n        restore,\\n        roleAdd,\\n        roleDelete,\\n        roleUpdate,\\n        assignmentAdd,\\n        assignmentDelete,\\n        memberAdd,\\n        memberDelete,\\n        systemUpdate,\\n        navigation,\\n        scopeAdd,\\n        scopeDelete,\\n        listContentTypeAdd,\\n        listContentTypeDelete,\\n    }\\n    class ChangeUser extends SP.Change {\\n        get_activate(): boolean;\\n        get_userId(): number;\\n    }\\n    class ChangeView extends SP.Change {\\n        get_viewId(): SP.Guid;\\n        get_listId(): SP.Guid;\\n        get_webId(): SP.Guid;\\n    }\\n    class ChangeWeb extends SP.Change {\\n        get_webId(): SP.Guid;\\n    }\\n    enum CheckinType {\\n        minorCheckIn,\\n        majorCheckIn,\\n        overwriteCheckIn,\\n    }\\n    enum CheckOutType {\\n        online,\\n        offline,\\n        none,\\n    }\\n    enum ChoiceFormatType {\\n        dropdown,\\n        radioButtons,\\n    }\\n    class CompatibilityRange extends SP.ClientObject {\\n    }\\n    class ContentType extends SP.ClientObject {\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_displayFormTemplateName(): string;\\n        set_displayFormTemplateName(value: string): void;\\n        get_displayFormUrl(): string;\\n        set_displayFormUrl(value: string): void;\\n        get_documentTemplate(): string;\\n        set_documentTemplate(value: string): void;\\n        get_documentTemplateUrl(): string;\\n        get_editFormTemplateName(): string;\\n        set_editFormTemplateName(value: string): void;\\n        get_editFormUrl(): string;\\n        set_editFormUrl(value: string): void;\\n        get_fieldLinks(): SP.FieldLinkCollection;\\n        get_fields(): SP.FieldCollection;\\n        get_group(): string;\\n        set_group(value: string): void;\\n        get_hidden(): boolean;\\n        set_hidden(value: boolean): void;\\n        get_id(): SP.ContentTypeId;\\n        get_jsLink(): string;\\n        set_jsLink(value: string): void;\\n        get_name(): string;\\n        set_name(value: string): void;\\n        get_newFormTemplateName(): string;\\n        set_newFormTemplateName(value: string): void;\\n        get_newFormUrl(): string;\\n        set_newFormUrl(value: string): void;\\n        get_parent(): SP.ContentType;\\n        get_readOnly(): boolean;\\n        set_readOnly(value: boolean): void;\\n        get_schemaXml(): string;\\n        get_schemaXmlWithResourceTokens(): string;\\n        set_schemaXmlWithResourceTokens(value: string): void;\\n        get_scope(): string;\\n        get_sealed(): boolean;\\n        set_sealed(value: boolean): void;\\n        get_stringId(): string;\\n        get_workflowAssociations(): SP.Workflow.WorkflowAssociationCollection;\\n        update(updateChildren: boolean): void;\\n        deleteObject(): void;\\n    }\\n    interface ContentTypeCollection extends SP.ClientObjectCollection<ContentType> {\\n        itemAt(index: number): SP.ContentType;\\n        get_item(index: number): SP.ContentType;\\n        getById(contentTypeId: string): SP.ContentType;\\n        addExistingContentType(contentType: SP.ContentType): SP.ContentType;\\n        add(parameters: SP.ContentTypeCreationInformation): SP.ContentType;\\n    }\\n    class ContentTypeCreationInformation extends SP.ClientValueObject {\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_group(): string;\\n        set_group(value: string): void;\\n        get_name(): string;\\n        set_name(value: string): void;\\n        get_parentContentType(): SP.ContentType;\\n        set_parentContentType(value: SP.ContentType): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class ContentTypeId extends SP.ClientValueObject {\\n        toString(): string;\\n        get_stringValue(): string;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    enum CustomizedPageStatus {\\n        none,\\n        uncustomized,\\n        customized,\\n    }\\n    enum DateTimeFieldFormatType {\\n        dateOnly,\\n        dateTime,\\n    }\\n    enum DateTimeFieldFriendlyFormatType {\\n        unspecified,\\n        disabled,\\n        relative,\\n    }\\n    enum DraftVisibilityType {\\n        reader,\\n        author,\\n        approver,\\n    }\\n    class EventReceiverDefinition extends SP.ClientObject {\\n        get_receiverAssembly(): string;\\n        get_receiverClass(): string;\\n        get_receiverId(): SP.Guid;\\n        get_receiverName(): string;\\n        get_sequenceNumber(): number;\\n        get_synchronization(): SP.EventReceiverSynchronization;\\n        get_eventType(): SP.EventReceiverType;\\n        get_receiverUrl(): string;\\n        update(): void;\\n        deleteObject(): void;\\n    }\\n    interface EventReceiverDefinitionCollection extends SP.ClientObjectCollection<EventReceiverDefinition> {\\n        itemAt(index: number): SP.EventReceiverDefinition;\\n        get_item(index: number): SP.EventReceiverDefinition;\\n        getById(eventReceiverId: SP.Guid): SP.EventReceiverDefinition;\\n        add(eventReceiverCreationInformation: SP.EventReceiverDefinitionCreationInformation): SP.EventReceiverDefinition;\\n    }\\n    class EventReceiverDefinitionCreationInformation extends SP.ClientValueObject {\\n        get_receiverAssembly(): string;\\n        set_receiverAssembly(value: string): void;\\n        get_receiverClass(): string;\\n        set_receiverClass(value: string): void;\\n        get_receiverName(): string;\\n        set_receiverName(value: string): void;\\n        get_sequenceNumber(): number;\\n        set_sequenceNumber(value: number): void;\\n        get_synchronization(): SP.EventReceiverSynchronization;\\n        set_synchronization(value: SP.EventReceiverSynchronization): void;\\n        get_eventType(): SP.EventReceiverType;\\n        set_eventType(value: SP.EventReceiverType): void;\\n        get_receiverUrl(): string;\\n        set_receiverUrl(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    enum EventReceiverSynchronization {\\n        defaultSynchronization,\\n        synchronous,\\n        asynchronous,\\n    }\\n    enum EventReceiverType {\\n        invalidReceiver,\\n        itemAdding,\\n        itemUpdating,\\n        itemDeleting,\\n        itemCheckingIn,\\n        itemCheckingOut,\\n        itemUncheckingOut,\\n        itemAttachmentAdding,\\n        itemAttachmentDeleting,\\n        itemFileMoving,\\n        itemVersionDeleting,\\n        fieldAdding,\\n        fieldUpdating,\\n        fieldDeleting,\\n        listAdding,\\n        listDeleting,\\n        siteDeleting,\\n        webDeleting,\\n        webMoving,\\n        webAdding,\\n        groupAdding,\\n        groupUpdating,\\n        groupDeleting,\\n        groupUserAdding,\\n        groupUserDeleting,\\n        roleDefinitionAdding,\\n        roleDefinitionUpdating,\\n        roleDefinitionDeleting,\\n        roleAssignmentAdding,\\n        roleAssignmentDeleting,\\n        inheritanceBreaking,\\n        inheritanceResetting,\\n        workflowStarting,\\n        itemAdded,\\n        itemUpdated,\\n        itemDeleted,\\n        itemCheckedIn,\\n        itemCheckedOut,\\n        itemUncheckedOut,\\n        itemAttachmentAdded,\\n        itemAttachmentDeleted,\\n        itemFileMoved,\\n        itemFileConverted,\\n        itemVersionDeleted,\\n        fieldAdded,\\n        fieldUpdated,\\n        fieldDeleted,\\n        listAdded,\\n        listDeleted,\\n        siteDeleted,\\n        webDeleted,\\n        webMoved,\\n        webProvisioned,\\n        groupAdded,\\n        groupUpdated,\\n        groupDeleted,\\n        groupUserAdded,\\n        groupUserDeleted,\\n        roleDefinitionAdded,\\n        roleDefinitionUpdated,\\n        roleDefinitionDeleted,\\n        roleAssignmentAdded,\\n        roleAssignmentDeleted,\\n        inheritanceBroken,\\n        inheritanceReset,\\n        workflowStarted,\\n        workflowPostponed,\\n        workflowCompleted,\\n        entityInstanceAdded,\\n        entityInstanceUpdated,\\n        entityInstanceDeleted,\\n        appInstalled,\\n        appUpgraded,\\n        appUninstalling,\\n        emailReceived,\\n        contextEvent,\\n    }\\n    class Feature extends SP.ClientObject {\\n        get_definitionId(): SP.Guid;\\n    }\\n    interface FeatureCollection extends SP.ClientObjectCollection<Feature> {\\n        itemAt(index: number): SP.Feature;\\n        get_item(index: number): SP.Feature;\\n        getById(featureId: SP.Guid): SP.Feature;\\n        add(featureId: SP.Guid, force: boolean, featdefScope: SP.FeatureDefinitionScope): SP.Feature;\\n        remove(featureId: SP.Guid, force: boolean): void;\\n    }\\n    enum FeatureDefinitionScope {\\n        none,\\n        farm,\\n        site,\\n        web,\\n    }\\n    class Field extends SP.ClientObject {\\n        get_canBeDeleted(): boolean;\\n        get_defaultValue(): string;\\n        set_defaultValue(value: string): void;\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_direction(): string;\\n        set_direction(value: string): void;\\n        get_enforceUniqueValues(): boolean;\\n        set_enforceUniqueValues(value: boolean): void;\\n        get_entityPropertyName(): string;\\n        get_filterable(): boolean;\\n        get_fromBaseType(): boolean;\\n        get_group(): string;\\n        set_group(value: string): void;\\n        get_hidden(): boolean;\\n        set_hidden(value: boolean): void;\\n        get_id(): SP.Guid;\\n        get_indexed(): boolean;\\n        set_indexed(value: boolean): void;\\n        get_internalName(): string;\\n        get_jsLink(): string;\\n        set_jsLink(value: string): void;\\n        get_readOnlyField(): boolean;\\n        set_readOnlyField(value: boolean): void;\\n        get_required(): boolean;\\n        set_required(value: boolean): void;\\n        get_schemaXml(): string;\\n        set_schemaXml(value: string): void;\\n        get_schemaXmlWithResourceTokens(): string;\\n        get_scope(): string;\\n        get_sealed(): boolean;\\n        get_sortable(): boolean;\\n        get_staticName(): string;\\n        set_staticName(value: string): void;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_fieldTypeKind(): SP.FieldType;\\n        set_fieldTypeKind(value: SP.FieldType): void;\\n        get_typeAsString(): string;\\n        set_typeAsString(value: string): void;\\n        get_typeDisplayName(): string;\\n        get_typeShortDescription(): string;\\n        get_validationFormula(): string;\\n        set_validationFormula(value: string): void;\\n        get_validationMessage(): string;\\n        set_validationMessage(value: string): void;\\n        validateSetValue<T = any>(item: SP.ListItem<T>, value: string): void;\\n        updateAndPushChanges(pushChangesToLists: boolean): void;\\n        update(): void;\\n        deleteObject(): void;\\n        setShowInDisplayForm(value: boolean): void;\\n        setShowInEditForm(value: boolean): void;\\n        setShowInNewForm(value: boolean): void;\\n    }\\n    class FieldCalculated extends SP.Field {\\n        get_dateFormat(): SP.DateTimeFieldFormatType;\\n        set_dateFormat(value: SP.DateTimeFieldFormatType): void;\\n        get_formula(): string;\\n        set_formula(value: string): void;\\n        get_outputType(): SP.FieldType;\\n        set_outputType(value: SP.FieldType): void;\\n    }\\n    class FieldCalculatedErrorValue extends SP.ClientValueObject {\\n        get_errorMessage(): string;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class FieldMultiChoice extends SP.Field {\\n        get_fillInChoice(): boolean;\\n        set_fillInChoice(value: boolean): void;\\n        get_mappings(): string;\\n        get_choices(): string[];\\n        set_choices(value: string[]): void;\\n    }\\n    class FieldChoice extends SP.FieldMultiChoice {\\n        get_editFormat(): SP.ChoiceFormatType;\\n        set_editFormat(value: SP.ChoiceFormatType): void;\\n    }\\n    interface FieldCollection extends SP.ClientObjectCollection<Field> {\\n        itemAt(index: number): SP.Field;\\n        get_item(index: number): SP.Field;\\n        get_schemaXml(): string;\\n        getByTitle(title: string): SP.Field;\\n        getById(id: SP.Guid): SP.Field;\\n        add(field: SP.Field): SP.Field;\\n        addDependentLookup(displayName: string, primaryLookupField: SP.Field, lookupField: string): SP.Field;\\n        addFieldAsXml(schemaXml: string, addToDefaultView: boolean, options: SP.AddFieldOptions): SP.Field;\\n        getByInternalNameOrTitle(strName: string): SP.Field;\\n    }\\n    class FieldComputed extends SP.Field {\\n        get_enableLookup(): boolean;\\n        set_enableLookup(value: boolean): void;\\n    }\\n    class FieldNumber extends SP.Field {\\n        get_maximumValue(): number;\\n        set_maximumValue(value: number): void;\\n        get_minimumValue(): number;\\n        set_minimumValue(value: number): void;\\n    }\\n    class FieldCurrency extends SP.FieldNumber {\\n        get_currencyLocaleId(): number;\\n        set_currencyLocaleId(value: number): void;\\n    }\\n    class FieldDateTime extends SP.Field {\\n        get_dateTimeCalendarType(): SP.CalendarType;\\n        set_dateTimeCalendarType(value: SP.CalendarType): void;\\n        get_displayFormat(): SP.DateTimeFieldFormatType;\\n        set_displayFormat(value: SP.DateTimeFieldFormatType): void;\\n        get_friendlyDisplayFormat(): SP.DateTimeFieldFriendlyFormatType;\\n        set_friendlyDisplayFormat(value: SP.DateTimeFieldFriendlyFormatType): void;\\n    }\\n    class FieldGeolocation extends SP.Field {\\n    }\\n    class FieldGeolocationValue extends SP.ClientValueObject {\\n        get_altitude(): number;\\n        set_altitude(value: number): void;\\n        get_latitude(): number;\\n        set_latitude(value: number): void;\\n        get_longitude(): number;\\n        set_longitude(value: number): void;\\n        get_measure(): number;\\n        set_measure(value: number): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class FieldGuid extends SP.Field {\\n    }\\n    class FieldLink extends SP.ClientObject {\\n        get_hidden(): boolean;\\n        set_hidden(value: boolean): void;\\n        get_id(): SP.Guid;\\n        get_name(): string;\\n        get_required(): boolean;\\n        set_required(value: boolean): void;\\n        deleteObject(): void;\\n    }\\n    interface FieldLinkCollection extends SP.ClientObjectCollection<FieldLink> {\\n        itemAt(index: number): SP.FieldLink;\\n        get_item(index: number): SP.FieldLink;\\n        getById(id: SP.Guid): SP.FieldLink;\\n        add(parameters: SP.FieldLinkCreationInformation): SP.FieldLink;\\n        reorder(internalNames: string[]): void;\\n    }\\n    class FieldLinkCreationInformation extends SP.ClientValueObject {\\n        get_field(): SP.Field;\\n        set_field(value: SP.Field): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class FieldLookup extends SP.Field {\\n        get_allowMultipleValues(): boolean;\\n        set_allowMultipleValues(value: boolean): void;\\n        get_isRelationship(): boolean;\\n        set_isRelationship(value: boolean): void;\\n        get_lookupField(): string;\\n        set_lookupField(value: string): void;\\n        get_lookupList(): string;\\n        set_lookupList(value: string): void;\\n        get_lookupWebId(): SP.Guid;\\n        set_lookupWebId(value: SP.Guid): void;\\n        get_primaryFieldId(): string;\\n        set_primaryFieldId(value: string): void;\\n        get_relationshipDeleteBehavior(): SP.RelationshipDeleteBehaviorType;\\n        set_relationshipDeleteBehavior(value: SP.RelationshipDeleteBehaviorType): void;\\n    }\\n    class FieldLookupValue extends SP.ClientValueObject {\\n        get_lookupId(): number;\\n        set_lookupId(value: number): void;\\n        get_lookupValue(): string;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class FieldMultiLineText extends SP.Field {\\n        get_allowHyperlink(): boolean;\\n        set_allowHyperlink(value: boolean): void;\\n        get_appendOnly(): boolean;\\n        set_appendOnly(value: boolean): void;\\n        get_numberOfLines(): number;\\n        set_numberOfLines(value: number): void;\\n        get_restrictedMode(): boolean;\\n        set_restrictedMode(value: boolean): void;\\n        get_richText(): boolean;\\n        set_richText(value: boolean): void;\\n        get_wikiLinking(): boolean;\\n    }\\n    class FieldRatingScale extends SP.FieldMultiChoice {\\n        get_gridEndNumber(): number;\\n        set_gridEndNumber(value: number): void;\\n        get_gridNAOptionText(): string;\\n        set_gridNAOptionText(value: string): void;\\n        get_gridStartNumber(): number;\\n        set_gridStartNumber(value: number): void;\\n        get_gridTextRangeAverage(): string;\\n        set_gridTextRangeAverage(value: string): void;\\n        get_gridTextRangeHigh(): string;\\n        set_gridTextRangeHigh(value: string): void;\\n        get_gridTextRangeLow(): string;\\n        set_gridTextRangeLow(value: string): void;\\n        get_rangeCount(): number;\\n    }\\n    class FieldRatingScaleQuestionAnswer extends SP.ClientValueObject {\\n        get_answer(): number;\\n        set_answer(value: number): void;\\n        get_question(): string;\\n        set_question(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class FieldStringValues extends SP.ClientObject {\\n        get_fieldValues(): any;\\n        get_item(fieldName: string): string;\\n        refreshLoad(): void;\\n    }\\n    class FieldText extends SP.Field {\\n        get_maxLength(): number;\\n        set_maxLength(value: number): void;\\n    }\\n    enum FieldType {\\n        invalid,\\n        integer,\\n        text,\\n        note,\\n        dateTime,\\n        counter,\\n        choice,\\n        lookup,\\n        boolean,\\n        number,\\n        currency,\\n        URL,\\n        computed,\\n        threading,\\n        guid,\\n        multiChoice,\\n        gridChoice,\\n        calculated,\\n        file,\\n        attachments,\\n        user,\\n        recurrence,\\n        crossProjectLink,\\n        modStat,\\n        error,\\n        contentTypeId,\\n        pageSeparator,\\n        threadIndex,\\n        workflowStatus,\\n        allDayEvent,\\n        workflowEventType,\\n        geolocation,\\n        outcomeChoice,\\n        maxItems,\\n    }\\n    class FieldUrl extends SP.Field {\\n        get_displayFormat(): SP.UrlFieldFormatType;\\n        set_displayFormat(value: SP.UrlFieldFormatType): void;\\n    }\\n    class FieldUrlValue extends SP.ClientValueObject {\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_url(): string;\\n        set_url(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class FieldUser extends SP.FieldLookup {\\n        get_allowDisplay(): boolean;\\n        set_allowDisplay(value: boolean): void;\\n        get_presence(): boolean;\\n        set_presence(value: boolean): void;\\n        get_selectionGroup(): number;\\n        set_selectionGroup(value: number): void;\\n        get_selectionMode(): SP.FieldUserSelectionMode;\\n        set_selectionMode(value: SP.FieldUserSelectionMode): void;\\n    }\\n    enum FieldUserSelectionMode {\\n        peopleOnly,\\n        peopleAndGroups,\\n    }\\n    class FieldUserValue extends SP.FieldLookupValue {\\n        static fromUser(userName: string): SP.FieldUserValue;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    /** Represents a file in a SharePoint Web site that can be a Web Part Page, an item in a document library, or a file in a folder. */\\n    class File extends SP.ClientObject {\\n        get_author(): SP.User;\\n        /** Returns the user who has checked out the file. */\\n        get_checkedOutByUser(): SP.User;\\n        /** Returns the comment that was specified when the document was checked into the document library. */\\n        get_checkInComment(): string;\\n        /** The type of checkout that exists on the document. */\\n        get_checkOutType(): SP.CheckOutType;\\n        get_contentTag(): string;\\n        /** Gets the customization(ghost) status of the SPFile. */\\n        get_customizedPageStatus(): SP.CustomizedPageStatus;\\n        /** Gets the ETag of the file  */\\n        get_eTag(): string;\\n        /** Specifies whether the file exists  */\\n        get_exists(): boolean;\\n        get_length(): number;\\n        get_level(): SP.FileLevel;\\n        /** Specifies the SPListItem corresponding to this file if this file belongs to a doclib. Values for all fields are returned also. */\\n        get_listItemAllFields<T = any>(): SP.ListItem<T>;\\n        /** Returns the user that owns the current lock on the file. MUST return null if there is no lock. */\\n        get_lockedByUser(): SP.User;\\n        /** Specifies the major version of the file. */\\n        get_majorVersion(): number;\\n        /** Specifies the minor version of the file. */\\n        get_minorVersion(): number;\\n        get_modifiedBy(): SP.User;\\n        get_name(): string;\\n        get_serverRelativeUrl(): string;\\n        /** Specifies when the file was created. */\\n        get_timeCreated(): Date;\\n        /** Specifies when the file was created. */\\n        get_timeLastModified(): Date;\\n        get_title(): string;\\n        /** Specifies the implementation-specific version identifier of the file. */\\n        get_uIVersion(): number;\\n        /** Specifies the implementation-specific version identifier of the file. */\\n        get_uIVersionLabel(): string;\\n        /** Returns a collection of file version objects that represent the versions of the file. */\\n        get_versions(): SP.FileVersionCollection;\\n        /** Reverts an existing online or offline checkout for the file. */\\n        undoCheckOut(): void;\\n        checkIn(comment: string, checkInType: SP.CheckinType): void;\\n        publish(comment: string): void;\\n        /** Removes the file from content approval with the specified comment. */\\n        unPublish(comment: string): void;\\n        /** Approves the file submitted for content approval with the specified comment.  */\\n        approve(comment: string): void;\\n        /** Denies the file submitted for content approval. */\\n        deny(comment: string): void;\\n        static getContentVerFromTag(context: SP.ClientRuntimeContext, contentTag: string): SP.IntResult;\\n        getLimitedWebPartManager(scope: SP.WebParts.PersonalizationScope): SP.WebParts.LimitedWebPartManager;\\n        moveTo(newUrl: string, flags: SP.MoveOperations): void;\\n        copyTo(strNewUrl: string, bOverWrite: boolean): void;\\n        saveBinary(parameters: SP.FileSaveBinaryInformation): void;\\n        deleteObject(): void;\\n        /** Moves the file to the recycle bin. MUST return the identifier of the new Recycle Bin item */\\n        recycle(): SP.GuidResult;\\n        checkOut(): void;\\n    }\\n    interface FileCollection extends SP.ClientObjectCollection<File> {\\n        itemAt(index: number): SP.File;\\n        get_item(index: number): SP.File;\\n        getByUrl(url: string): SP.File;\\n        add(parameters: SP.FileCreationInformation): SP.File;\\n        addTemplateFile(urlOfFile: string, templateFileType: SP.TemplateFileType): SP.File;\\n    }\\n    class FileCreationInformation extends SP.ClientValueObject {\\n        get_content(): SP.Base64EncodedByteArray;\\n        set_content(value: SP.Base64EncodedByteArray): void;\\n        get_overwrite(): boolean;\\n        set_overwrite(value: boolean): void;\\n        get_url(): string;\\n        set_url(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    enum FileLevel {\\n        published,\\n        draft,\\n        checkout,\\n    }\\n    class FileSaveBinaryInformation extends SP.ClientValueObject {\\n        get_checkRequiredFields(): boolean;\\n        set_checkRequiredFields(value: boolean): void;\\n        get_content(): SP.Base64EncodedByteArray;\\n        set_content(value: SP.Base64EncodedByteArray): void;\\n        get_eTag(): string;\\n        set_eTag(value: string): void;\\n        get_fieldValues(): any;\\n        set_fieldValues(value: any): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    enum FileSystemObjectType {\\n        invalid,\\n        file,\\n        folder,\\n        web,\\n    }\\n    class FileVersion extends SP.ClientObject {\\n        get_checkInComment(): string;\\n        get_created(): Date;\\n        get_createdBy(): SP.User;\\n        get_iD(): number;\\n        get_isCurrentVersion(): boolean;\\n        get_size(): number;\\n        get_url(): string;\\n        get_versionLabel(): string;\\n        deleteObject(): void;\\n    }\\n    interface FileVersionCollection extends SP.ClientObjectCollection<FileVersion> {\\n        itemAt(index: number): SP.FileVersion;\\n        get_item(index: number): SP.FileVersion;\\n        getById(versionid: number): SP.FileVersion;\\n        deleteByID(vid: number): void;\\n        deleteByLabel(versionlabel: string): void;\\n        deleteAll(): void;\\n        restoreByLabel(versionlabel: string): void;\\n    }\\n    class Folder extends SP.ClientObject {\\n        get_contentTypeOrder(): SP.ContentTypeId[];\\n        get_files(): SP.FileCollection;\\n        get_listItemAllFields<T = any>(): SP.ListItem<T>;\\n        get_itemCount(): number;\\n        get_name(): string;\\n        get_parentFolder(): SP.Folder;\\n        get_properties(): SP.PropertyValues;\\n        get_serverRelativeUrl(): string;\\n        get_folders(): SP.FolderCollection;\\n        get_uniqueContentTypeOrder(): SP.ContentTypeId[];\\n        set_uniqueContentTypeOrder(value: SP.ContentTypeId[]): void;\\n        get_welcomePage(): string;\\n        set_welcomePage(value: string): void;\\n        update(): void;\\n        deleteObject(): void;\\n        recycle(): SP.GuidResult;\\n    }\\n    interface FolderCollection extends SP.ClientObjectCollection<Folder> {\\n        itemAt(index: number): SP.Folder;\\n        get_item(index: number): SP.Folder;\\n        getByUrl(url: string): SP.Folder;\\n        add(url: string): SP.Folder;\\n    }\\n    class Form extends SP.ClientObject {\\n        get_id(): SP.Guid;\\n        get_serverRelativeUrl(): string;\\n        get_formType(): SP.PageType;\\n    }\\n    interface FormCollection extends SP.ClientObjectCollection<Form> {\\n        itemAt(index: number): SP.Form;\\n        get_item(index: number): SP.Form;\\n        getByPageType(formType: SP.PageType): SP.Form;\\n        getById(id: SP.Guid): SP.Form;\\n    }\\n    class Principal extends SP.ClientObject {\\n        get_id(): number;\\n        get_isHiddenInUI(): boolean;\\n        get_loginName(): string;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_principalType(): SP.Utilities.PrincipalType;\\n    }\\n    class Group extends SP.Principal {\\n        get_allowMembersEditMembership(): boolean;\\n        set_allowMembersEditMembership(value: boolean): void;\\n        get_allowRequestToJoinLeave(): boolean;\\n        set_allowRequestToJoinLeave(value: boolean): void;\\n        get_autoAcceptRequestToJoinLeave(): boolean;\\n        set_autoAcceptRequestToJoinLeave(value: boolean): void;\\n        get_canCurrentUserEditMembership(): boolean;\\n        get_canCurrentUserManageGroup(): boolean;\\n        get_canCurrentUserViewMembership(): boolean;\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_onlyAllowMembersViewMembership(): boolean;\\n        set_onlyAllowMembersViewMembership(value: boolean): void;\\n        get_owner(): SP.Principal;\\n        set_owner(value: SP.Principal): void;\\n        get_ownerTitle(): string;\\n        get_requestToJoinLeaveEmailSetting(): string;\\n        set_requestToJoinLeaveEmailSetting(value: string): void;\\n        get_users(): SP.UserCollection;\\n        update(): void;\\n    }\\n    interface GroupCollection extends SP.ClientObjectCollection<Group> {\\n        itemAt(index: number): SP.Group;\\n        get_item(index: number): SP.Group;\\n        getByName(name: string): SP.Group;\\n        getById(id: number): SP.Group;\\n        add(parameters: SP.GroupCreationInformation): SP.Group;\\n        removeByLoginName(loginName: string): void;\\n        removeById(id: number): void;\\n        remove(group: SP.Group): void;\\n    }\\n    class GroupCreationInformation extends SP.ClientValueObject {\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class InformationRightsManagementSettings extends SP.ClientObject {\\n        get_allowPrint(): boolean;\\n        set_allowPrint(value: boolean): void;\\n        get_allowScript(): boolean;\\n        set_allowScript(value: boolean): void;\\n        get_allowWriteCopy(): boolean;\\n        set_allowWriteCopy(value: boolean): void;\\n        get_disableDocumentBrowserView(): boolean;\\n        set_disableDocumentBrowserView(value: boolean): void;\\n        get_documentAccessExpireDays(): number;\\n        set_documentAccessExpireDays(value: number): void;\\n        get_documentLibraryProtectionExpireDate(): Date;\\n        set_documentLibraryProtectionExpireDate(value: Date): void;\\n        get_enableDocumentAccessExpire(): boolean;\\n        set_enableDocumentAccessExpire(value: boolean): void;\\n        get_enableDocumentBrowserPublishingView(): boolean;\\n        set_enableDocumentBrowserPublishingView(value: boolean): void;\\n        get_enableGroupProtection(): boolean;\\n        set_enableGroupProtection(value: boolean): void;\\n        get_enableLicenseCacheExpire(): boolean;\\n        set_enableLicenseCacheExpire(value: boolean): void;\\n        get_groupName(): string;\\n        set_groupName(value: string): void;\\n        get_licenseCacheExpireDays(): number;\\n        set_licenseCacheExpireDays(value: number): void;\\n        get_policyDescription(): string;\\n        set_policyDescription(value: string): void;\\n        get_policyTitle(): string;\\n        set_policyTitle(value: string): void;\\n        reset(): void;\\n        update(): void;\\n    }\\n    class Language extends SP.ClientValueObject {\\n        get_displayName(): string;\\n        get_languageTag(): string;\\n        get_lcid(): number;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class SecurableObject extends SP.ClientObject {\\n        get_firstUniqueAncestorSecurableObject(): SP.SecurableObject;\\n        get_hasUniqueRoleAssignments(): boolean;\\n        get_roleAssignments(): SP.RoleAssignmentCollection;\\n        resetRoleInheritance(): void;\\n        breakRoleInheritance(copyRoleAssignments: boolean, clearSubscopes: boolean): void;\\n    }\\n    /** Represents display mode for a control or form */\\n    enum ControlMode {\\n        invalid,\\n        displayMode,\\n        editMode,\\n        newMode\\n    }\\n    /** Represents a list on a SharePoint Web site. */\\n    class List<T = any> extends SP.SecurableObject {\\n        /** Gets item by id. */\\n        getItemById(id: number): SP.ListItem<T>;\\n        /** Gets a value that specifies whether the list supports content types. */\\n        get_allowContentTypes(): boolean;\\n        /** Gets the list definition type on which the list is based. For lists based on OOTB list definitions, return value corresponds the SP.ListTemplateType enumeration. */\\n        get_baseTemplate(): number;\\n        /** Gets base type for the list. */\\n        get_baseType(): SP.BaseType;\\n        /** Gets a value that specifies the override of the web application's BrowserFileHandling property at the list level. */\\n        get_browserFileHandling(): SP.BrowserFileHandling;\\n        /** Gets the content types that are associated with the list. */\\n        get_contentTypes(): SP.ContentTypeCollection;\\n        /** Gets a value that specifies whether content types are enabled for the list. */\\n        get_contentTypesEnabled(): boolean;\\n        /** Sets a value that specifies whether content types are enabled for the list. */\\n        set_contentTypesEnabled(value: boolean): void;\\n        /** Gets a value that specifies when the list was created. */\\n        get_created(): Date;\\n        /** Gets the data source associated with the list, or null if the list is not a virtual list. */\\n        get_dataSource(): SP.ListDataSource;\\n        /** Gets a value that specifies the default workflow identifier for content approval on the list. */\\n        get_defaultContentApprovalWorkflowId(): SP.Guid;\\n        /** Sets a value that specifies the default workflow identifier for content approval on the list. */\\n        set_defaultContentApprovalWorkflowId(value: SP.Guid): void;\\n        /** Gets a value that specifies the location of the default display form for the list. */\\n        get_defaultDisplayFormUrl(): string;\\n        /** Sets a value that specifies the location of the default display form for the list. */\\n        set_defaultDisplayFormUrl(value: string): void;\\n        /** Gets a value that specifies the URL of the edit form to use for list items in the list. */\\n        get_defaultEditFormUrl(): string;\\n        /** Sets a value that specifies the URL of the edit form to use for list items in the list. */\\n        set_defaultEditFormUrl(value: string): void;\\n        /** Gets a value that specifies the location of the default new form for the list. */\\n        get_defaultNewFormUrl(): string;\\n        /** Sets a value that specifies the location of the default new form for the list. */\\n        set_defaultNewFormUrl(value: string): void;\\n        /** Gets default view for the list. */\\n        get_defaultView(): SP.View;\\n        /** Get URL of the default view for the list. */\\n        get_defaultViewUrl(): string;\\n        /** Gets a value that specifies the description of the list. */\\n        get_description(): string;\\n        /** Sets a value that specifies the description of the list. */\\n        set_description(value: string): void;\\n        /** Gets a value that specifies the reading order of the list. */\\n        get_direction(): string;\\n        /** Sets a value that specifies the reading order of the list. */\\n        set_direction(value: string): void;\\n        /** Gets a value that specifies the server-relative URL of the document template for the list */\\n        get_documentTemplateUrl(): string;\\n        /** Sets a value that specifies the server-relative URL of the document template for the list */\\n        set_documentTemplateUrl(value: string): void;\\n        /** Gets a value that specifies the minimum permission required to view minor versions and drafts within the list. */\\n        get_draftVersionVisibility(): SP.DraftVisibilityType;\\n        /** Sets a value that specifies the minimum permission required to view minor versions and drafts within the list. */\\n        set_draftVersionVisibility(value: SP.DraftVisibilityType): void;\\n        /** Gets a value that specifies the effective permissions on the list that are assigned to the current user. */\\n        get_effectiveBasePermissions(): SP.BasePermissions;\\n        /** Gets the effective base permissions for the current user, as they should be displayed in UI. This will only differ from EffectiveBasePermissions if ReadOnlyUI is set to true, and in all cases will be a subset of EffectiveBasePermissions. To put it another way, EffectiveBasePermissionsForUI will always be as or more restrictive than EffectiveBasePermissions. */\\n        get_effectiveBasePermissionsForUI(): SP.BasePermissions;\\n        /** Gets a value that specifies whether list item attachments are enabled for the list. */\\n        get_enableAttachments(): boolean;\\n        /** Sets a value that specifies whether list item attachments are enabled for the list. */\\n        set_enableAttachments(value: boolean): void;\\n        /** Gets a value that specifies whether new list folders can be added to the list. */\\n        get_enableFolderCreation(): boolean;\\n        /** Sets a value that specifies whether new list folders can be added to the list. */\\n        set_enableFolderCreation(value: boolean): void;\\n        /** Gets a value that specifies whether minor versions are enabled for the list. */\\n        get_enableMinorVersions(): boolean;\\n        /** Sets a value that specifies whether minor versions are enabled for the list. */\\n        set_enableMinorVersions(value: boolean): void;\\n        /** Gets a value that specifies whether content approval is enabled for the list. */\\n        get_enableModeration(): boolean;\\n        /** Sets a value that specifies whether content approval is enabled for the list */\\n        set_enableModeration(value: boolean): void;\\n        /** Gets a value that specifies whether historical versions of list items and documents can be created in the list */\\n        get_enableVersioning(): boolean;\\n        /** Sets a value that specifies whether historical versions of list items and documents can be created in the list */\\n        set_enableVersioning(value: boolean): void;\\n        /** The entity type name. */\\n        get_entityTypeName(): string;\\n        /** Gets collection of event receiver objects associated with the list. */\\n        get_eventReceivers(): SP.EventReceiverDefinitionCollection;\\n        /** Gets a value that specifies the collection of all fields in the list. */\\n        get_fields(): SP.FieldCollection;\\n        /** Gets a value that indicates whether forced checkout is enabled for the document library. */\\n        get_forceCheckout(): boolean;\\n        /** Sets a value that indicates whether forced checkout is enabled for the document library */\\n        set_forceCheckout(value: boolean): void;\\n        /** Gets collections of forms associated with the list. */\\n        get_forms(): SP.FormCollection;\\n        /** Returns true if this is external list. */\\n        get_hasExternalDataSource(): boolean;\\n        /** Gets wherever the list is hidden */\\n        get_hidden(): boolean;\\n        /** Sets if the list is hidden from \\\"All site contents\\\" or not. */\\n        set_hidden(value: boolean): void;\\n        /** Gets id of the list */\\n        get_id(): SP.Guid;\\n        /** Gets a value that specifies the URI for the icon of the list */\\n        get_imageUrl(): string;\\n        /** Sets a value that specifies the URI for the icon of the list */\\n        set_imageUrl(value: string): void;\\n        /** Settings of document library Information Rights Management (IRM)  */\\n        get_informationRightsManagementSettings(): SP.InformationRightsManagementSettings;\\n        /** Gets a value that specifies whether Information Rights Management (IRM) is enabled for the list.  */\\n        get_irmEnabled(): boolean;\\n        /** Sets a value that specifies whether Information Rights Management (IRM) is enabled for the list.  */\\n        set_irmEnabled(value: boolean): void;\\n        /** Gets a value that specifies whether Information Rights Management (IRM) expiration is enabled for the list.  */\\n        get_irmExpire(): boolean;\\n        /** Sets a value that specifies whether Information Rights Management (IRM) expiration is enabled for the list.  */\\n        set_irmExpire(value: boolean): void;\\n        /** Gets a value that specifies whether Information Rights Management (IRM) rejection is enabled for the list.  */\\n        get_irmReject(): boolean;\\n        /** Sets a value that specifies whether Information Rights Management (IRM) rejection is enabled for the list.  */\\n        set_irmReject(value: boolean): void;\\n        /** Indicates whether this list should be treated as a top level navigation object or not.  */\\n        get_isApplicationList(): boolean;\\n        /** Sets a value that indicates whether this list should be treated as a top level navigation object or not.  */\\n        set_isApplicationList(value: boolean): void;\\n        /** Gets a value that specifies whether the list is a gallery. */\\n        get_isCatalog(): boolean;\\n        /** Gets a value that indicates whether the document library is a private list with restricted permissions, such as for Solutions.  */\\n        get_isPrivate(): boolean;\\n        /** Gets a value that indicates whether the list is designated as a default asset location for images or other files which the users upload to their wiki pages. */\\n        get_isSiteAssetsLibrary(): boolean;\\n        /** Gets a value that specifies the number of list items in the list */\\n        get_itemCount(): number;\\n        /** Gets a value that specifies the last time a list item was deleted from the list. */\\n        get_lastItemDeletedDate(): Date;\\n        /** Gets a value that specifies the last time a list item, field, or property of the list was modified. */\\n        get_lastItemModifiedDate(): Date;\\n        /** Sets a value that specifies the last time the list was modified. */\\n        set_lastItemModifiedDate(value: Date): void;\\n        /** The entity type full name of the list item in the list. */\\n        get_listItemEntityTypeFullName(): string;\\n        /** Gets a value that indicates whether the list in a Meeting Workspace site contains data for multiple meeting instances within the site */\\n        get_multipleDataList(): boolean;\\n        /** Sets a value that indicates whether the list in a Meeting Workspace site contains data for multiple meeting instances within the site */\\n        set_multipleDataList(value: boolean): void;\\n        /** Gets a value that specifies that the crawler must not crawl the list */\\n        get_noCrawl(): boolean;\\n        /** Sets a value that specifies that the crawler must not crawl the list */\\n        set_noCrawl(value: boolean): void;\\n        /** Gets a value that specifies whether the list appears on the Quick Launch of the site */\\n        get_onQuickLaunch(): boolean;\\n        /** Sets a value that specifies whether the list appears on the Quick Launch of the site */\\n        set_onQuickLaunch(value: boolean): void;\\n        /** Gets a value that specifies the site that contains the list. */\\n        get_parentWeb(): SP.Web;\\n        /** Gets a value that specifies the server-relative URL of the site that contains the list. */\\n        get_parentWebUrl(): string;\\n        /** Gets the root folder that contains the files in the list and any related files. */\\n        get_rootFolder(): SP.Folder;\\n        /** Gets a value that specifies the list schema of the list. */\\n        get_schemaXml(): string;\\n        /** Gets a value that indicates whether folders can be created within the list. */\\n        get_serverTemplateCanCreateFolders(): boolean;\\n        /** Gets a value that specifies the feature identifier of the feature that contains the list schema for the list. */\\n        get_templateFeatureId(): SP.Guid;\\n        /** Gets the list title. You can determine list URL from it's root folder URL. */\\n        get_title(): string;\\n        /** Sets the list title. To change list URL you should change name of the root folder. */\\n        set_title(value: string): void;\\n        /** Gets collection of custom actions associated with the list. */\\n        get_userCustomActions(): SP.UserCustomActionCollection;\\n        /** Gets a value that specifies the data validation criteria for a list item. */\\n        get_validationFormula(): string;\\n        /** Sets a value that specifies the data validation criteria for a list item. */\\n        set_validationFormula(value: string): void;\\n        /** Gets a value that specifies the error message returned when data validation fails for a list item. */\\n        get_validationMessage(): string;\\n        /** Sets a value that specifies the error message returned when data validation fails for a list item. */\\n        set_validationMessage(value: string): void;\\n        /** Returns collection of views added to the list */\\n        get_views(): SP.ViewCollection;\\n        /** Gets the collection of workflow association objects that represents all the workflows that are associated with the list. */\\n        get_workflowAssociations(): SP.Workflow.WorkflowAssociationCollection;\\n        /** Returns the collection of changes from the change log that have occurred within the list, based on the specified query. */\\n        getChanges(query: SP.ChangeQuery): SP.ChangeCollection;\\n        /** Returns array of items describing changes since time specified in the query */\\n        getListItemChangesSinceToken(query: SP.ChangeLogItemQuery): any[];\\n        /** Gets the effective permissions that a specified user has on the list. */\\n        getUserEffectivePermissions(userName: string): SP.BasePermissions;\\n        /** First tries to find if the view already exists. Overwrite it if yes, add a new view if no. Then extract all the adhoc filter/sort info from the URL and build and update the view's xml Returns the url of the new/overwritten view.\\n            @param oldName The name of the view the user did the adhoc filter on (is currently on).\\n            @param newName The desired name the user typed\\n            @param privateView Boolean true when the user wants make a new view that's personal\\n            @param uri Url that keeps all the adhoc filter/sort inforatmion */\\n        saveAsNewView(oldName: string, newName: string, privateView: boolean, uri: string): SP.StringResult;\\n        /** Returns a collection of lookup fields that use this list as a data source and that have FieldLookup.IsRelationship set to true. */\\n        getRelatedFields(): SP.RelatedFieldCollection;\\n        /** This member is reserved for internal use and is not intended to be used directly from your code. */\\n        getRelatedFieldsExtendedData(): SP.RelatedFieldExtendedDataCollection;\\n        /** Returns json string which contains all information necessary for rendering the specified list form for the specified itemId. Mode is SP.ControlMode */\\n        renderListFormData(itemId: number, formId: string, mode: SP.ControlMode): SP.StringResult;\\n        /** Returns the data for the specified query view. */\\n        renderListData(viewXml: string): SP.StringResult;\\n        /** This member is reserved for internal use and is not intended to be used directly from your code. */\\n        reserveListItemId(): SP.IntResult;\\n        /** Updates the database with changes that are made to the list object. */\\n        update(): void;\\n        /** Returns the list view with the specified view identifier. */\\n        getView(viewGuid: SP.Guid): SP.View;\\n        /** Deletes the list. */\\n        deleteObject(): void;\\n        /** Sends the list to the site recycle bin. */\\n        recycle(): SP.GuidResult;\\n        /** Returns collection of list items based on the specified CAML query. */\\n        getItems(query: SP.CamlQuery): SP.ListItemCollection<T>;\\n        /** Creates a new list item in the list. */\\n        addItem(parameters: SP.ListItemCreationInformation): SP.ListItem<T>;\\n    }\\n    /** Represents a collection of SP.List objects */\\n    interface ListCollection extends SP.ClientObjectCollection<List> {\\n        /** Gets the list at the specified index in the collection. */\\n        itemAt<T = any>(index: number): SP.List<T>;\\n        /** Gets the list at the specified index in the collection. */\\n        get_item<T = any>(index: number): SP.List<T>;\\n        /** Returns the list with the specified title from the collection. */\\n        getByTitle<T = any>(title: string): SP.List<T>;\\n        /** Returns the list with the specified list identifier. */\\n        getById<T = any>(id: string | SP.Guid): SP.List<T>;\\n        /** Creates a new list or a document library. */\\n        add(parameters: SP.ListCreationInformation): SP.List;\\n        /** Gets a list that is the default location for wiki pages. */\\n        ensureSitePagesLibrary(): SP.List;\\n        /** Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages. */\\n        ensureSiteAssetsLibrary(): SP.List;\\n    }\\n    class ListCreationInformation extends SP.ClientValueObject {\\n        get_customSchemaXml(): string;\\n        set_customSchemaXml(value: string): void;\\n        get_dataSourceProperties(): any;\\n        set_dataSourceProperties(value: any): void;\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_documentTemplateType(): number;\\n        set_documentTemplateType(value: number): void;\\n        get_quickLaunchOption(): SP.QuickLaunchOptions;\\n        set_quickLaunchOption(value: SP.QuickLaunchOptions): void;\\n        get_templateFeatureId(): SP.Guid;\\n        set_templateFeatureId(value: SP.Guid): void;\\n        get_templateType(): number;\\n        set_templateType(value: number): void;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_url(): string;\\n        set_url(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class ListDataSource extends SP.ClientValueObject {\\n        get_properties(): any;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class ListDataValidationExceptionValue extends SP.ClientValueObject {\\n        get_fieldFailures(): SP.ListDataValidationFailure[];\\n        get_itemFailure(): SP.ListDataValidationFailure;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class ListDataValidationFailure extends SP.ClientValueObject {\\n        get_displayName(): string;\\n        get_message(): string;\\n        get_name(): string;\\n        get_reason(): SP.ListDataValidationFailureReason;\\n        get_validationType(): SP.ListDataValidationType;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    enum ListDataValidationFailureReason {\\n        dataFailure,\\n        formulaError,\\n    }\\n    enum ListDataValidationType {\\n        userFormulaField,\\n        userFormulaItem,\\n        requiredField,\\n        choiceField,\\n        minMaxField,\\n        textField,\\n    }\\n    /** Represents an item or row in a list. */\\n    class ListItem<T = any> extends SP.SecurableObject {\\n        get_fieldValues(): T;\\n        /** Gets the specified field value for the list item. Field value is returned as string, but it can be casted to a specific field value type, e.g. SP.LookupFieldValue, etc. */\\n        get_item<K extends keyof T>(fieldInternalName: K): T[K];\\n        /** Sets the specified field value for the list item. Consider using parseAndSetFieldValue instead. */\\n        set_item<K extends keyof T>(fieldInternalName: K, value: T[K]): void;\\n        /** Gets collection of objects that represent attachments for the list item. */\\n        get_attachmentFiles(): SP.AttachmentCollection;\\n        /** Gets the content type of the item. */\\n        get_contentType(): SP.ContentType;\\n        /** Gets a value that specifies the display name of the list item.\\n            This property is not available by default when you return list items. Trying to call this method returns a PropertyOrFieldNotInitializedException if you try to access one of these properties. To access this property, use the Include method as part of the query string. */\\n        get_displayName(): string;\\n        /** Gets a value that specifies the effective permissions on the list item that are assigned to the current user.\\n            This property is not available by default when you return list items. Trying to call this method returns a PropertyOrFieldNotInitializedException if you try to access one of these properties. To access this property, use the Include method as part of the query string. */\\n        get_effectiveBasePermissions(): SP.BasePermissions;\\n        /** Gets the effective base permissions for the current user, as they should be displayed in UI.\\n            This will only differ from EffectiveBasePermissions if ReadOnlyUI is set to true on the item's parent list, and in all cases will be a subset of EffectiveBasePermissions. To put it another way, EffectiveBasePermissionsForUI will always be as or more restrictive than EffectiveBasePermissions.\\n            This property is not available by default when you return list items. Trying to call this method returns a PropertyOrFieldNotInitializedException if you try to access one of these properties. To access this property, use the Include method as part of the query string.  */\\n        get_effectiveBasePermissionsForUI(): SP.BasePermissions;\\n        get_fieldValuesAsHtml(): SP.FieldStringValues;\\n        get_fieldValuesAsText(): SP.FieldStringValues;\\n        get_fieldValuesForEdit(): SP.FieldStringValues;\\n        /** Gets the file that is represented by the item from a document library. Only for document libraries. */\\n        get_file(): SP.File;\\n        /** Gets or sets the file system object type for the item (file, folder or invalid). */\\n        get_fileSystemObjectType(): SP.FileSystemObjectType;\\n        /** Gets the parent folder for the list item */\\n        get_folder(): SP.Folder;\\n        /** Gets id of the item */\\n        get_id(): number;\\n        /** Get the list in which the item resides. */\\n        get_parentList(): SP.List;\\n        refreshLoad(): void;\\n        getWOPIFrameUrl(action: SP.Utilities.SPWOPIFrameAction): SP.StringResult;\\n        /** Commits changed properties of the list item. The actual update is performed during context.executeQueryAsync method call. */\\n        update(): void;\\n        /** Deletes the list item */\\n        deleteObject(): void;\\n        /** Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item. */\\n        recycle(): SP.GuidResult;\\n        /** Gets effective permissions for the specified user. */\\n        getUserEffectivePermissions(userName: string): SP.BasePermissions;\\n        /** Sets the value of the field for the list item based on an implementation specific transformation of the value. */\\n        parseAndSetFieldValue(fieldInternalName: string, value: string): void;\\n        /** Validates form values specified for the list item. Errors are returned through hasException and errorMessage properties of the ListItemFormUpdateValue objects */\\n        validateUpdateListItem(formValues: SP.ListItemFormUpdateValue[], bNewDocumentUpdate: boolean): SP.ListItemFormUpdateValue[];\\n    }\\n    interface ListItemCollection<T = any> extends SP.ClientObjectCollection<ListItem<T>> {\\n        itemAt(index: number): SP.ListItem<T>;\\n        get_item(index: number): SP.ListItem<T>;\\n        getById(id: number | string): SP.ListItem<T>;\\n        get_listItemCollectionPosition(): SP.ListItemCollectionPosition;\\n    }\\n    class ListItemCollectionPosition extends SP.ClientValueObject {\\n        get_pagingInfo(): string;\\n        set_pagingInfo(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    /** Specifies the properties of the new list item. */\\n    class ListItemCreationInformation extends SP.ClientValueObject {\\n        get_folderUrl(): string;\\n        /** Sets a value that specifies the folder for the new list item. */\\n        set_folderUrl(value: string): void;\\n        get_leafName(): string;\\n        /** Sets a value that specifies the name of the new list item. It must be the name of the file if the parent list of the list item is a document library. */\\n        set_leafName(value: string): void;\\n        get_underlyingObjectType(): SP.FileSystemObjectType;\\n        /** Sets a value that specifies whether the new list item is a file or a folder. */\\n        set_underlyingObjectType(value: SP.FileSystemObjectType): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    interface ListItemEntityCollection<T> extends SP.ClientObjectCollection<ListItem<T>> {\\n        itemAt(index: number): SP.ListItem<T>;\\n        get_item(index: number): SP.ListItem<T>;\\n    }\\n    class ListItemFormUpdateValue extends SP.ClientValueObject {\\n        get_errorMessage(): string;\\n        set_errorMessage(value: string): void;\\n        get_fieldName(): string;\\n        set_fieldName(value: string): void;\\n        get_fieldValue(): string;\\n        set_fieldValue(value: string): void;\\n        get_hasException(): boolean;\\n        set_hasException(value: boolean): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class ListTemplate extends SP.ClientObject {\\n        get_allowsFolderCreation(): boolean;\\n        get_baseType(): SP.BaseType;\\n        get_description(): string;\\n        get_featureId(): SP.Guid;\\n        get_hidden(): boolean;\\n        get_imageUrl(): string;\\n        get_internalName(): string;\\n        get_isCustomTemplate(): boolean;\\n        get_name(): string;\\n        get_onQuickLaunch(): boolean;\\n        get_listTemplateTypeKind(): number;\\n        get_unique(): boolean;\\n    }\\n    interface ListTemplateCollection extends SP.ClientObjectCollection<ListTemplate> {\\n        itemAt(index: number): SP.ListTemplate;\\n        get_item(index: number): SP.ListTemplate;\\n        getByName(name: string): SP.ListTemplate;\\n    }\\n    enum ListTemplateType {\\n        invalidType,\\n        noListTemplate,\\n        genericList,\\n        documentLibrary,\\n        survey,\\n        links,\\n        announcements,\\n        contacts,\\n        events,\\n        tasks,\\n        discussionBoard,\\n        pictureLibrary,\\n        dataSources,\\n        webTemplateCatalog,\\n        userInformation,\\n        webPartCatalog,\\n        listTemplateCatalog,\\n        xMLForm,\\n        masterPageCatalog,\\n        noCodeWorkflows,\\n        workflowProcess,\\n        webPageLibrary,\\n        customGrid,\\n        solutionCatalog,\\n        noCodePublic,\\n        themeCatalog,\\n        designCatalog,\\n        appDataCatalog,\\n        dataConnectionLibrary,\\n        workflowHistory,\\n        ganttTasks,\\n        helpLibrary,\\n        accessRequest,\\n        tasksWithTimelineAndHierarchy,\\n        maintenanceLogs,\\n        meetings,\\n        agenda,\\n        meetingUser,\\n        decision,\\n        meetingObjective,\\n        textBox,\\n        thingsToBring,\\n        homePageLibrary,\\n        posts,\\n        comments,\\n        categories,\\n        facility,\\n        whereabouts,\\n        callTrack,\\n        circulation,\\n        timecard,\\n        holidays,\\n        iMEDic,\\n        externalList,\\n        mySiteDocumentLibrary,\\n        issueTracking,\\n        adminTasks,\\n        healthRules,\\n        healthReports,\\n        developerSiteDraftApps,\\n    }\\n    enum MoveOperations {\\n        none,\\n        overwrite,\\n        allowBrokenThickets,\\n        bypassApprovePermission,\\n    }\\n    class Navigation extends SP.ClientObject {\\n        get_quickLaunch(): SP.NavigationNodeCollection;\\n        get_topNavigationBar(): SP.NavigationNodeCollection;\\n        get_useShared(): boolean;\\n        set_useShared(value: boolean): void;\\n        getNodeById(id: number): SP.NavigationNode;\\n    }\\n    class NavigationNode extends SP.ClientObject {\\n        get_children(): SP.NavigationNodeCollection;\\n        get_id(): number;\\n        get_isDocLib(): boolean;\\n        get_isExternal(): boolean;\\n        get_isVisible(): boolean;\\n        set_isVisible(value: boolean): void;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_url(): string;\\n        set_url(value: string): void;\\n        update(): void;\\n        deleteObject(): void;\\n    }\\n    interface NavigationNodeCollection extends SP.ClientObjectCollection<NavigationNode> {\\n        itemAt(index: number): SP.NavigationNode;\\n        get_item(index: number): SP.NavigationNode;\\n        add(parameters: SP.NavigationNodeCreationInformation): SP.NavigationNode;\\n    }\\n    class NavigationNodeCreationInformation extends SP.ClientValueObject {\\n        get_asLastNode(): boolean;\\n        set_asLastNode(value: boolean): void;\\n        get_isExternal(): boolean;\\n        set_isExternal(value: boolean): void;\\n        get_previousNode(): SP.NavigationNode;\\n        set_previousNode(value: SP.NavigationNode): void;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_url(): string;\\n        set_url(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class ObjectSharingInformation extends SP.ClientObject {\\n        get_anonymousEditLink(): string;\\n        get_anonymousViewLink(): string;\\n        get_canManagePermissions(): boolean;\\n        get_hasPendingAccessRequests(): boolean;\\n        get_hasPermissionLevels(): boolean;\\n        get_isSharedWithCurrentUser(): boolean;\\n        get_isSharedWithGuest(): boolean;\\n        get_isSharedWithMany(): boolean;\\n        get_isSharedWithSecurityGroup(): boolean;\\n        get_pendingAccessRequestsLink(): string;\\n        getSharedWithUsers(): SP.ClientObjectList<SP.ObjectSharingInformationUser>;\\n        static getListItemSharingInformation(context: SP.ClientRuntimeContext, listID: SP.Guid, itemID: number, excludeCurrentUser: boolean, excludeSiteAdmin: boolean, excludeSecurityGroups: boolean, retrieveAnonymousLinks: boolean, retrieveUserInfoDetails: boolean, checkForAccessRequests: boolean): SP.ObjectSharingInformation;\\n        static getWebSharingInformation(context: SP.ClientRuntimeContext, excludeCurrentUser: boolean, excludeSiteAdmin: boolean, excludeSecurityGroups: boolean, retrieveAnonymousLinks: boolean, retrieveUserInfoDetails: boolean, checkForAccessRequests: boolean): SP.ObjectSharingInformation;\\n        static getObjectSharingInformation(context: SP.ClientRuntimeContext, securableObject: SP.SecurableObject, excludeCurrentUser: boolean, excludeSiteAdmin: boolean, excludeSecurityGroups: boolean, retrieveAnonymousLinks: boolean, retrieveUserInfoDetails: boolean, checkForAccessRequests: boolean, retrievePermissionLevels: boolean): SP.ObjectSharingInformation;\\n    }\\n    class ObjectSharingInformationUser extends SP.ClientObject {\\n        get_customRoleNames(): string;\\n        get_department(): string;\\n        get_email(): string;\\n        get_hasEditPermission(): boolean;\\n        get_hasViewPermission(): boolean;\\n        get_id(): number;\\n        get_isSiteAdmin(): boolean;\\n        get_jobTitle(): string;\\n        get_loginName(): string;\\n        get_name(): string;\\n        get_picture(): string;\\n        get_principal(): SP.Principal;\\n        get_sipAddress(): string;\\n        get_user(): SP.User;\\n    }\\n    enum OpenWebOptions {\\n        none,\\n        initNavigationCache,\\n    }\\n    enum PageType {\\n        invalid,\\n        defaultView,\\n        normalView,\\n        dialogView,\\n        view,\\n        displayForm,\\n        displayFormDialog,\\n        editForm,\\n        editFormDialog,\\n        newForm,\\n        newFormDialog,\\n        solutionForm,\\n        pAGE_MAXITEMS,\\n    }\\n    class PropertyValues extends SP.ClientObject {\\n        get_fieldValues(): any;\\n        get_item(fieldName: string): any;\\n        set_item(fieldName: string, value: any): void;\\n        refreshLoad(): void;\\n    }\\n    class PushNotificationSubscriber extends SP.ClientObject {\\n        get_customArgs(): string;\\n        set_customArgs(value: string): void;\\n        get_deviceAppInstanceId(): SP.Guid;\\n        get_lastModifiedTimeStamp(): Date;\\n        get_registrationTimeStamp(): Date;\\n        get_serviceToken(): string;\\n        set_serviceToken(value: string): void;\\n        get_subscriberType(): string;\\n        set_subscriberType(value: string): void;\\n        get_user(): SP.User;\\n        update(): void;\\n    }\\n    interface PushNotificationSubscriberCollection extends SP.ClientObjectCollection<PushNotificationSubscriber> {\\n        itemAt(index: number): SP.PushNotificationSubscriber;\\n        get_item(index: number): SP.PushNotificationSubscriber;\\n        getByStoreId(id: string): SP.PushNotificationSubscriber;\\n    }\\n    enum QuickLaunchOptions {\\n        off,\\n        on,\\n        defaultValue,\\n    }\\n    class RecycleBinItem extends SP.ClientObject {\\n        get_author(): SP.User;\\n        get_deletedBy(): SP.User;\\n        get_deletedDate(): Date;\\n        get_dirName(): string;\\n        get_id(): SP.Guid;\\n        get_itemState(): SP.RecycleBinItemState;\\n        get_itemType(): SP.RecycleBinItemType;\\n        get_leafName(): string;\\n        get_size(): number;\\n        get_title(): string;\\n        deleteObject(): void;\\n        restore(): void;\\n    }\\n    interface RecycleBinItemCollection extends SP.ClientObjectCollection<RecycleBinItem> {\\n        itemAt(index: number): SP.RecycleBinItem;\\n        get_item(index: number): SP.RecycleBinItem;\\n        getById(id: SP.Guid): SP.RecycleBinItem;\\n        deleteAll(): void;\\n        restoreAll(): void;\\n    }\\n    enum RecycleBinItemState {\\n        none,\\n        firstStageRecycleBin,\\n        secondStageRecycleBin,\\n    }\\n    enum RecycleBinItemType {\\n        none,\\n        file,\\n        fileVersion,\\n        listItem,\\n        list,\\n        folder,\\n        folderWithLists,\\n        attachment,\\n        listItemVersion,\\n        cascadeParent,\\n        web,\\n    }\\n    class RegionalSettings extends SP.ClientObject {\\n        get_adjustHijriDays(): number;\\n        get_alternateCalendarType(): number;\\n        get_aM(): string;\\n        get_calendarType(): number;\\n        get_collation(): number;\\n        get_collationLCID(): number;\\n        get_dateFormat(): number;\\n        get_dateSeparator(): string;\\n        get_decimalSeparator(): string;\\n        get_digitGrouping(): string;\\n        get_firstDayOfWeek(): number;\\n        get_firstWeekOfYear(): number;\\n        get_isEastAsia(): boolean;\\n        get_isRightToLeft(): boolean;\\n        get_isUIRightToLeft(): boolean;\\n        get_listSeparator(): string;\\n        get_localeId(): number;\\n        get_negativeSign(): string;\\n        get_negNumberMode(): number;\\n        get_pM(): string;\\n        get_positiveSign(): string;\\n        get_showWeeks(): boolean;\\n        get_thousandSeparator(): string;\\n        get_time24(): boolean;\\n        get_timeMarkerPosition(): number;\\n        get_timeSeparator(): string;\\n        get_timeZone(): SP.TimeZone;\\n        get_timeZones(): SP.TimeZoneCollection;\\n        get_workDayEndHour(): number;\\n        get_workDays(): number;\\n        get_workDayStartHour(): number;\\n    }\\n    class RelatedField extends SP.ClientObject {\\n        get_fieldId(): SP.Guid;\\n        get_listId(): SP.Guid;\\n        get_lookupList(): SP.List;\\n        get_relationshipDeleteBehavior(): SP.RelationshipDeleteBehaviorType;\\n        get_webId(): SP.Guid;\\n    }\\n    interface RelatedFieldCollection extends SP.ClientObjectCollection<RelatedField> {\\n        itemAt(index: number): SP.RelatedField;\\n        get_item(index: number): SP.RelatedField;\\n    }\\n    class RelatedFieldExtendedData extends SP.ClientObject {\\n        get_fieldId(): SP.Guid;\\n        get_listId(): SP.Guid;\\n        get_listImageUrl(): string;\\n        get_resolvedListTitle(): string;\\n        get_toolTipDescription(): string;\\n        get_webId(): SP.Guid;\\n    }\\n    interface RelatedFieldExtendedDataCollection extends SP.ClientObjectCollection<RelatedFieldExtendedData> {\\n        itemAt(index: number): SP.RelatedFieldExtendedData;\\n        get_item(index: number): SP.RelatedFieldExtendedData;\\n    }\\n    class RelatedItem extends SP.ClientValueObject {\\n        get_iconUrl(): string;\\n        set_iconUrl(value: string): void;\\n        get_itemId(): number;\\n        set_itemId(value: number): void;\\n        get_listId(): string;\\n        set_listId(value: string): void;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_url(): string;\\n        set_url(value: string): void;\\n        get_webId(): string;\\n        set_webId(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class RelatedItemManager extends SP.ClientObject {\\n        static getRelatedItems(context: SP.ClientRuntimeContext, SourceListName: string, SourceItemID: number): SP.RelatedItem[];\\n        static getPageOneRelatedItems(context: SP.ClientRuntimeContext, SourceListName: string, SourceItemID: number): SP.RelatedItem[];\\n        static addSingleLink(context: SP.ClientRuntimeContext, SourceListName: string, SourceItemID: number, SourceWebUrl: string, TargetListName: string, TargetItemID: number, TargetWebUrl: string, TryAddReverseLink: boolean): void;\\n        static addSingleLinkToUrl(context: SP.ClientRuntimeContext, SourceListName: string, SourceItemID: number, TargetItemUrl: string, TryAddReverseLink: boolean): void;\\n        static addSingleLinkFromUrl(context: SP.ClientRuntimeContext, SourceItemUrl: string, TargetListName: string, TargetItemID: number, TryAddReverseLink: boolean): void;\\n        static deleteSingleLink(context: SP.ClientRuntimeContext, SourceListName: string, SourceItemID: number, SourceWebUrl: string, TargetListName: string, TargetItemID: number, TargetWebUrl: string, TryDeleteReverseLink: boolean): void;\\n    }\\n    enum RelationshipDeleteBehaviorType {\\n        none,\\n        cascade,\\n        restrict,\\n    }\\n    class RequestVariable extends SP.ClientObject {\\n        constructor(context: SP.ClientRuntimeContext);\\n        get_value(): string;\\n        static newObject(context: SP.ClientRuntimeContext): SP.RequestVariable;\\n        append(value: string): void;\\n        set(value: string): void;\\n    }\\n    class RoleAssignment extends SP.ClientObject {\\n        get_member(): SP.Principal;\\n        get_principalId(): number;\\n        get_roleDefinitionBindings(): SP.RoleDefinitionBindingCollection;\\n        importRoleDefinitionBindings(roleDefinitionBindings: SP.RoleDefinitionBindingCollection): void;\\n        update(): void;\\n        deleteObject(): void;\\n    }\\n    interface RoleAssignmentCollection extends SP.ClientObjectCollection<RoleAssignment> {\\n        itemAt(index: number): SP.RoleAssignment;\\n        get_item(index: number): SP.RoleAssignment;\\n        get_groups(): SP.GroupCollection;\\n        getByPrincipal(principalToFind: SP.Principal): SP.RoleAssignment;\\n        getByPrincipalId(principalId: number): SP.RoleAssignment;\\n        add(principal: SP.Principal, roleBindings: SP.RoleDefinitionBindingCollection): SP.RoleAssignment;\\n    }\\n    class RoleDefinition extends SP.ClientObject {\\n        get_basePermissions(): SP.BasePermissions;\\n        set_basePermissions(value: SP.BasePermissions): void;\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_hidden(): boolean;\\n        get_id(): number;\\n        get_name(): string;\\n        set_name(value: string): void;\\n        get_order(): number;\\n        set_order(value: number): void;\\n        get_roleTypeKind(): SP.RoleType;\\n        update(): void;\\n        deleteObject(): void;\\n    }\\n    class RoleDefinitionBindingCollection extends SP.ClientObjectCollection<RoleDefinition> {\\n        constructor(context: SP.ClientRuntimeContext);\\n        itemAt(index: number): SP.RoleDefinition;\\n        get_item(index: number): SP.RoleDefinition;\\n        add(roleDefinition: SP.RoleDefinition): void;\\n        remove(roleDefinition: SP.RoleDefinition): void;\\n        removeAll(): void;\\n        static newObject(context: SP.ClientRuntimeContext): SP.RoleDefinitionBindingCollection;\\n    }\\n    interface RoleDefinitionCollection extends SP.ClientObjectCollection<RoleDefinition> {\\n        itemAt(index: number): SP.RoleDefinition;\\n        get_item(index: number): SP.RoleDefinition;\\n        getByName(name: string): SP.RoleDefinition;\\n        add(parameters: SP.RoleDefinitionCreationInformation): SP.RoleDefinition;\\n        getById(id: number): SP.RoleDefinition;\\n        getByType(roleType: SP.RoleType): SP.RoleDefinition;\\n    }\\n    class RoleDefinitionCreationInformation extends SP.ClientValueObject {\\n        get_basePermissions(): SP.BasePermissions;\\n        set_basePermissions(value: SP.BasePermissions): void;\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_name(): string;\\n        set_name(value: string): void;\\n        get_order(): number;\\n        set_order(value: number): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    enum RoleType {\\n        none,\\n        guest,\\n        reader,\\n        contributor,\\n        webDesigner,\\n        administrator,\\n        editor,\\n    }\\n    class ServerSettings {\\n        static getAlternateUrls(context: SP.ClientRuntimeContext): SP.ClientObjectList<SP.AlternateUrl>;\\n        static getGlobalInstalledLanguages(context: SP.ClientRuntimeContext, compatibilityLevel: number): SP.Language[];\\n    }\\n    class Site extends SP.ClientObject {\\n        get_allowDesigner(): boolean;\\n        set_allowDesigner(value: boolean): void;\\n        get_allowMasterPageEditing(): boolean;\\n        set_allowMasterPageEditing(value: boolean): void;\\n        get_allowRevertFromTemplate(): boolean;\\n        set_allowRevertFromTemplate(value: boolean): void;\\n        get_allowSelfServiceUpgrade(): boolean;\\n        set_allowSelfServiceUpgrade(value: boolean): void;\\n        get_allowSelfServiceUpgradeEvaluation(): boolean;\\n        set_allowSelfServiceUpgradeEvaluation(value: boolean): void;\\n        get_canUpgrade(): boolean;\\n        get_compatibilityLevel(): number;\\n        get_eventReceivers(): SP.EventReceiverDefinitionCollection;\\n        get_features(): SP.FeatureCollection;\\n        get_id(): SP.Guid;\\n        get_lockIssue(): string;\\n        get_maxItemsPerThrottledOperation(): number;\\n        get_owner(): SP.User;\\n        set_owner(value: SP.User): void;\\n        get_primaryUri(): string;\\n        get_readOnly(): boolean;\\n        get_recycleBin(): SP.RecycleBinItemCollection;\\n        get_rootWeb(): SP.Web;\\n        get_serverRelativeUrl(): string;\\n        get_shareByLinkEnabled(): boolean;\\n        get_showUrlStructure(): boolean;\\n        set_showUrlStructure(value: boolean): void;\\n        get_uIVersionConfigurationEnabled(): boolean;\\n        set_uIVersionConfigurationEnabled(value: boolean): void;\\n        get_upgradeInfo(): SP.UpgradeInfo;\\n        get_upgradeReminderDate(): Date;\\n        get_upgrading(): boolean;\\n        get_url(): string;\\n        get_usage(): SP.UsageInfo;\\n        get_userCustomActions(): SP.UserCustomActionCollection;\\n        updateClientObjectModelUseRemoteAPIsPermissionSetting(requireUseRemoteAPIs: boolean): void;\\n        needsUpgradeByType(versionUpgrade: boolean, recursive: boolean): SP.BooleanResult;\\n        runHealthCheck(ruleId: SP.Guid, bRepair: boolean, bRunAlways: boolean): SP.SiteHealth.SiteHealthSummary;\\n        createPreviewSPSite(upgrade: boolean, sendemail: boolean): void;\\n        runUpgradeSiteSession(versionUpgrade: boolean, queueOnly: boolean, sendEmail: boolean): void;\\n        getChanges(query: SP.ChangeQuery): SP.ChangeCollection;\\n        openWeb(strUrl: string): SP.Web;\\n        openWebById(gWebId: SP.Guid): SP.Web;\\n        getWebTemplates(LCID: number, overrideCompatLevel: number): SP.WebTemplateCollection;\\n        getCustomListTemplates(web: SP.Web): SP.ListTemplateCollection;\\n        getCatalog(typeCatalog: number): SP.List;\\n        extendUpgradeReminderDate(): void;\\n        invalidate(): void;\\n    }\\n    class SiteUrl extends SP.ClientObject {\\n    }\\n    class SubwebQuery extends SP.ClientValueObject {\\n        get_configurationFilter(): number;\\n        set_configurationFilter(value: number): void;\\n        get_webTemplateFilter(): number;\\n        set_webTemplateFilter(value: number): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    enum TemplateFileType {\\n        standardPage,\\n        wikiPage,\\n        formPage,\\n    }\\n    class ThemeInfo extends SP.ClientObject {\\n        get_accessibleDescription(): string;\\n        get_themeBackgroundImageUri(): string;\\n        getThemeShadeByName(name: string): SP.StringResult;\\n        getThemeFontByName(name: string, lcid: number): SP.StringResult;\\n    }\\n    class TimeZone extends SP.ClientObject {\\n        get_description(): string;\\n        get_id(): number;\\n        get_information(): SP.TimeZoneInformation;\\n        localTimeToUTC(date: Date): SP.DateTimeResult;\\n        utcToLocalTime(date: Date): SP.DateTimeResult;\\n    }\\n    interface TimeZoneCollection extends SP.ClientObjectCollection<TimeZone> {\\n        itemAt(index: number): SP.TimeZone;\\n        get_item(index: number): SP.TimeZone;\\n        getById(id: number): SP.TimeZone;\\n    }\\n    class TimeZoneInformation extends SP.ClientValueObject {\\n        get_bias(): number;\\n        get_daylightBias(): number;\\n        get_standardBias(): number;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class UpgradeInfo extends SP.ClientValueObject {\\n        get_errorFile(): string;\\n        get_errors(): number;\\n        get_lastUpdated(): Date;\\n        get_logFile(): string;\\n        get_requestDate(): Date;\\n        get_retryCount(): number;\\n        get_startTime(): Date;\\n        get_status(): SP.UpgradeStatus;\\n        get_upgradeType(): SP.UpgradeType;\\n        get_warnings(): number;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    enum UpgradeStatus {\\n        none,\\n        inProgress,\\n        failed,\\n        completed,\\n    }\\n    enum UpgradeType {\\n        buildUpgrade,\\n        versionUpgrade,\\n    }\\n    enum UrlFieldFormatType {\\n        hyperlink,\\n        image,\\n    }\\n    enum UrlZone {\\n        defaultZone,\\n        intranet,\\n        internet,\\n        custom,\\n        extranet,\\n    }\\n    class UsageInfo extends SP.ClientValueObject {\\n        get_bandwidth(): number;\\n        get_discussionStorage(): number;\\n        get_hits(): number;\\n        get_storage(): number;\\n        get_storagePercentageUsed(): number;\\n        get_visits(): number;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class User extends SP.Principal {\\n        get_email(): string;\\n        set_email(value: string): void;\\n        get_groups(): SP.GroupCollection;\\n        get_isSiteAdmin(): boolean;\\n        set_isSiteAdmin(value: boolean): void;\\n        get_userId(): SP.UserIdInfo;\\n        update(): void;\\n    }\\n    interface UserCollection extends SP.ClientObjectCollection<User> {\\n        itemAt(index: number): SP.User;\\n        get_item(index: number): SP.User;\\n        getByLoginName(loginName: string): SP.User;\\n        getById(id: number): SP.User;\\n        getByEmail(emailAddress: string): SP.User;\\n        removeByLoginName(loginName: string): void;\\n        removeById(id: number): void;\\n        remove(user: SP.User): void;\\n        add(parameters: SP.UserCreationInformation): SP.User;\\n        addUser(user: SP.User): SP.User;\\n    }\\n    class UserCreationInformation extends SP.ClientValueObject {\\n        get_email(): string;\\n        set_email(value: string): void;\\n        get_loginName(): string;\\n        set_loginName(value: string): void;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class UserCustomAction extends SP.ClientObject {\\n        get_commandUIExtension(): string;\\n        set_commandUIExtension(value: string): void;\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_group(): string;\\n        set_group(value: string): void;\\n        get_id(): SP.Guid;\\n        get_imageUrl(): string;\\n        set_imageUrl(value: string): void;\\n        get_location(): string;\\n        set_location(value: string): void;\\n        get_name(): string;\\n        set_name(value: string): void;\\n        get_registrationId(): string;\\n        set_registrationId(value: string): void;\\n        get_registrationType(): SP.UserCustomActionRegistrationType;\\n        set_registrationType(value: SP.UserCustomActionRegistrationType): void;\\n        get_rights(): SP.BasePermissions;\\n        set_rights(value: SP.BasePermissions): void;\\n        get_scope(): SP.UserCustomActionScope;\\n        get_scriptBlock(): string;\\n        set_scriptBlock(value: string): void;\\n        get_scriptSrc(): string;\\n        set_scriptSrc(value: string): void;\\n        get_sequence(): number;\\n        set_sequence(value: number): void;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_url(): string;\\n        set_url(value: string): void;\\n        get_versionOfUserCustomAction(): string;\\n        update(): void;\\n        deleteObject(): void;\\n    }\\n    interface UserCustomActionCollection extends SP.ClientObjectCollection<UserCustomAction> {\\n        itemAt(index: number): SP.UserCustomAction;\\n        get_item(index: number): SP.UserCustomAction;\\n        getById(id: SP.Guid): SP.UserCustomAction;\\n        clear(): void;\\n        add(): SP.UserCustomAction;\\n    }\\n    enum UserCustomActionRegistrationType {\\n        none,\\n        list,\\n        contentType,\\n        progId,\\n        fileType,\\n    }\\n    enum UserCustomActionScope {\\n        unknown,\\n        site,\\n        web,\\n        list,\\n    }\\n    class UserIdInfo extends SP.ClientValueObject {\\n        get_nameId(): string;\\n        get_nameIdIssuer(): string;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class View extends SP.ClientObject {\\n        get_aggregations(): string;\\n        set_aggregations(value: string): void;\\n        get_aggregationsStatus(): string;\\n        set_aggregationsStatus(value: string): void;\\n        get_baseViewId(): string;\\n        get_contentTypeId(): SP.ContentTypeId;\\n        set_contentTypeId(value: SP.ContentTypeId): void;\\n        get_defaultView(): boolean;\\n        set_defaultView(value: boolean): void;\\n        get_defaultViewForContentType(): boolean;\\n        set_defaultViewForContentType(value: boolean): void;\\n        get_editorModified(): boolean;\\n        set_editorModified(value: boolean): void;\\n        get_formats(): string;\\n        set_formats(value: string): void;\\n        get_hidden(): boolean;\\n        set_hidden(value: boolean): void;\\n        get_htmlSchemaXml(): string;\\n        get_id(): SP.Guid;\\n        get_imageUrl(): string;\\n        get_includeRootFolder(): boolean;\\n        set_includeRootFolder(value: boolean): void;\\n        get_viewJoins(): string;\\n        set_viewJoins(value: string): void;\\n        get_jsLink(): string;\\n        set_jsLink(value: string): void;\\n        get_listViewXml(): string;\\n        set_listViewXml(value: string): void;\\n        get_method(): string;\\n        set_method(value: string): void;\\n        get_mobileDefaultView(): boolean;\\n        set_mobileDefaultView(value: boolean): void;\\n        get_mobileView(): boolean;\\n        set_mobileView(value: boolean): void;\\n        get_moderationType(): string;\\n        get_orderedView(): boolean;\\n        get_paged(): boolean;\\n        set_paged(value: boolean): void;\\n        get_personalView(): boolean;\\n        get_viewProjectedFields(): string;\\n        set_viewProjectedFields(value: string): void;\\n        get_viewQuery(): string;\\n        set_viewQuery(value: string): void;\\n        get_readOnlyView(): boolean;\\n        get_requiresClientIntegration(): boolean;\\n        get_rowLimit(): number;\\n        set_rowLimit(value: number): void;\\n        get_scope(): SP.ViewScope;\\n        set_scope(value: SP.ViewScope): void;\\n        get_serverRelativeUrl(): string;\\n        get_styleId(): string;\\n        get_threaded(): boolean;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_toolbar(): string;\\n        set_toolbar(value: string): void;\\n        get_toolbarTemplateName(): string;\\n        get_viewType(): string;\\n        get_viewData(): string;\\n        set_viewData(value: string): void;\\n        get_viewFields(): SP.ViewFieldCollection;\\n        deleteObject(): void;\\n        renderAsHtml(): SP.StringResult;\\n        update(): void;\\n    }\\n    interface ViewCollection extends SP.ClientObjectCollection<View> {\\n        itemAt(index: number): SP.View;\\n        get_item(index: number): SP.View;\\n        getByTitle(strTitle: string): SP.View;\\n        getById(guidId: SP.Guid): SP.View;\\n        add(parameters: SP.ViewCreationInformation): SP.View;\\n    }\\n    class ViewCreationInformation extends SP.ClientValueObject {\\n        get_paged(): boolean;\\n        set_paged(value: boolean): void;\\n        get_personalView(): boolean;\\n        set_personalView(value: boolean): void;\\n        get_query(): string;\\n        set_query(value: string): void;\\n        get_rowLimit(): number;\\n        set_rowLimit(value: number): void;\\n        get_setAsDefaultView(): boolean;\\n        set_setAsDefaultView(value: boolean): void;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_viewFields(): string[];\\n        set_viewFields(value: string[]): void;\\n        get_viewTypeKind(): SP.ViewType;\\n        set_viewTypeKind(value: SP.ViewType): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    interface ViewFieldCollection extends SP.ClientObjectCollection<string> {\\n        itemAt(index: number): string;\\n        get_item(index: number): string;\\n        get_schemaXml(): string;\\n        moveFieldTo(field: string, index: number): void;\\n        add(strField: string): void;\\n        remove(strField: string): void;\\n        removeAll(): void;\\n    }\\n    enum ViewScope {\\n        defaultValue,\\n        recursive,\\n        recursiveAll,\\n        filesOnly,\\n    }\\n    enum ViewType {\\n        none,\\n        html,\\n        grid,\\n        calendar,\\n        recurrence,\\n        chart,\\n        gantt,\\n    }\\n    class Web extends SP.SecurableObject {\\n        get_allowDesignerForCurrentUser(): boolean;\\n        get_allowMasterPageEditingForCurrentUser(): boolean;\\n        get_allowRevertFromTemplateForCurrentUser(): boolean;\\n        get_allowRssFeeds(): boolean;\\n        get_allProperties(): SP.PropertyValues;\\n        get_appInstanceId(): SP.Guid;\\n        get_associatedMemberGroup(): SP.Group;\\n        set_associatedMemberGroup(value: SP.Group): void;\\n        get_associatedOwnerGroup(): SP.Group;\\n        set_associatedOwnerGroup(value: SP.Group): void;\\n        get_associatedVisitorGroup(): SP.Group;\\n        set_associatedVisitorGroup(value: SP.Group): void;\\n        get_availableContentTypes(): SP.ContentTypeCollection;\\n        get_availableFields(): SP.FieldCollection;\\n        get_configuration(): number;\\n        get_contentTypes(): SP.ContentTypeCollection;\\n        get_created(): Date;\\n        get_currentUser(): SP.User;\\n        get_customMasterUrl(): string;\\n        set_customMasterUrl(value: string): void;\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_documentLibraryCalloutOfficeWebAppPreviewersDisabled(): boolean;\\n        get_effectiveBasePermissions(): SP.BasePermissions;\\n        get_enableMinimalDownload(): boolean;\\n        set_enableMinimalDownload(value: boolean): void;\\n        get_eventReceivers(): SP.EventReceiverDefinitionCollection;\\n        get_features(): SP.FeatureCollection;\\n        get_fields(): SP.FieldCollection;\\n        get_folders(): SP.FolderCollection;\\n        get_id(): SP.Guid;\\n        get_language(): number;\\n        get_lastItemModifiedDate(): Date;\\n        get_lists(): SP.ListCollection;\\n        get_listTemplates(): SP.ListTemplateCollection;\\n        get_masterUrl(): string;\\n        set_masterUrl(value: string): void;\\n        get_navigation(): SP.Navigation;\\n        get_parentWeb(): SP.WebInformation;\\n        get_pushNotificationSubscribers(): SP.PushNotificationSubscriberCollection;\\n        get_quickLaunchEnabled(): boolean;\\n        set_quickLaunchEnabled(value: boolean): void;\\n        get_recycleBin(): SP.RecycleBinItemCollection;\\n        get_recycleBinEnabled(): boolean;\\n        get_regionalSettings(): SP.RegionalSettings;\\n        get_roleDefinitions(): SP.RoleDefinitionCollection;\\n        get_rootFolder(): SP.Folder;\\n        get_saveSiteAsTemplateEnabled(): boolean;\\n        set_saveSiteAsTemplateEnabled(value: boolean): void;\\n        get_serverRelativeUrl(): string;\\n        set_serverRelativeUrl(value: string): void;\\n        get_showUrlStructureForCurrentUser(): boolean;\\n        get_siteLogoUrl(): string;\\n        get_siteGroups(): SP.GroupCollection;\\n        get_siteUserInfoList(): SP.List;\\n        get_siteUsers(): SP.UserCollection;\\n        get_supportedUILanguageIds(): number[];\\n        get_syndicationEnabled(): boolean;\\n        set_syndicationEnabled(value: boolean): void;\\n        get_themeInfo(): SP.ThemeInfo;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_treeViewEnabled(): boolean;\\n        set_treeViewEnabled(value: boolean): void;\\n        get_uIVersion(): number;\\n        set_uIVersion(value: number): void;\\n        get_uIVersionConfigurationEnabled(): boolean;\\n        set_uIVersionConfigurationEnabled(value: boolean): void;\\n        get_url(): string;\\n        get_userCustomActions(): SP.UserCustomActionCollection;\\n        get_webs(): SP.WebCollection;\\n        get_webTemplate(): string;\\n        get_workflowAssociations(): SP.Workflow.WorkflowAssociationCollection;\\n        get_workflowTemplates(): SP.Workflow.WorkflowTemplateCollection;\\n        doesUserHavePermissions(permissionMask: SP.BasePermissions): SP.BooleanResult;\\n        getUserEffectivePermissions(userName: string): SP.BasePermissions;\\n        mapToIcon(fileName: string, progId: string, size: SP.Utilities.IconSize): SP.StringResult;\\n        registerPushNotificationSubscriber(deviceAppInstanceId: SP.Guid, serviceToken: string): SP.PushNotificationSubscriber;\\n        unregisterPushNotificationSubscriber(deviceAppInstanceId: SP.Guid): void;\\n        getPushNotificationSubscribersByArgs(customArgs: string): SP.PushNotificationSubscriberCollection;\\n        getPushNotificationSubscribersByUser(userName: string): SP.PushNotificationSubscriberCollection;\\n        doesPushNotificationSubscriberExist(deviceAppInstanceId: SP.Guid): SP.BooleanResult;\\n        getPushNotificationSubscriber(deviceAppInstanceId: SP.Guid): SP.PushNotificationSubscriber;\\n        getUserById(userId: number): SP.User;\\n        getAvailableWebTemplates(lcid: number, doIncludeCrossLanguage: boolean): SP.WebTemplateCollection;\\n        getCatalog(typeCatalog: number): SP.List;\\n        getChanges(query: SP.ChangeQuery): SP.ChangeCollection;\\n        applyWebTemplate(webTemplate: string): void;\\n        deleteObject(): void;\\n        update(): void;\\n        getFileByServerRelativeUrl(serverRelativeUrl: string): SP.File;\\n        getFolderByServerRelativeUrl(serverRelativeUrl: string): SP.Folder;\\n        getEntity(namespace: string, name: string): SP.BusinessData.Entity;\\n        getAppBdcCatalogForAppInstance(appInstanceId: SP.Guid): SP.BusinessData.AppBdcCatalog;\\n        getAppBdcCatalog(): SP.BusinessData.AppBdcCatalog;\\n        getSubwebsForCurrentUser(query: SP.SubwebQuery): SP.WebCollection;\\n        getAppInstanceById(appInstanceId: SP.Guid): SP.AppInstance;\\n        getAppInstancesByProductId(productId: SP.Guid): SP.ClientObjectList<SP.AppInstance>;\\n        loadAndInstallAppInSpecifiedLocale(appPackageStream: SP.Base64EncodedByteArray, installationLocaleLCID: number): SP.AppInstance;\\n        loadApp(appPackageStream: SP.Base64EncodedByteArray, installationLocaleLCID: number): SP.AppInstance;\\n        loadAndInstallApp(appPackageStream: SP.Base64EncodedByteArray): SP.AppInstance;\\n        ensureUser(logonName: string): SP.User;\\n        applyTheme(colorPaletteUrl: string, fontSchemeUrl: string, backgroundImageUrl: string, shareGenerated: boolean): void;\\n\\n        /** Available after March 2015 CU for SharePoint 2013*/\\n        getList(url: string): List;\\n    }\\n    interface WebCollection extends SP.ClientObjectCollection<Web> {\\n        itemAt(index: number): SP.Web;\\n        get_item(index: number): SP.Web;\\n        add(parameters: SP.WebCreationInformation): SP.Web;\\n    }\\n    class WebCreationInformation extends SP.ClientValueObject {\\n        get_description(): string;\\n        set_description(value: string): void;\\n        get_language(): number;\\n        set_language(value: number): void;\\n        get_title(): string;\\n        set_title(value: string): void;\\n        get_url(): string;\\n        set_url(value: string): void;\\n        get_useSamePermissionsAsParentSite(): boolean;\\n        set_useSamePermissionsAsParentSite(value: boolean): void;\\n        get_webTemplate(): string;\\n        set_webTemplate(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class WebInformation extends SP.ClientObject {\\n        get_configuration(): number;\\n        get_created(): Date;\\n        get_description(): string;\\n        get_id(): SP.Guid;\\n        get_language(): number;\\n        get_lastItemModifiedDate(): Date;\\n        get_serverRelativeUrl(): string;\\n        get_title(): string;\\n        get_webTemplate(): string;\\n        get_webTemplateId(): number;\\n    }\\n    class WebProxy {\\n        static invoke(context: SP.ClientRuntimeContext, requestInfo: SP.WebRequestInfo): SP.WebResponseInfo;\\n    }\\n    class WebRequestInfo extends SP.ClientValueObject {\\n        get_body(): string;\\n        set_body(value: string): void;\\n        get_headers(): any;\\n        set_headers(value: any): void;\\n        get_method(): string;\\n        set_method(value: string): void;\\n        get_url(): string;\\n        set_url(value: string): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class WebResponseInfo extends SP.ClientValueObject {\\n        get_body(): string;\\n        set_body(value: string): void;\\n        get_headers(): any;\\n        set_headers(value: any): void;\\n        get_statusCode(): number;\\n        set_statusCode(value: number): void;\\n        get_typeId(): string;\\n        writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n        constructor();\\n    }\\n    class WebTemplate extends SP.ClientObject {\\n        get_description(): string;\\n        get_displayCategory(): string;\\n        get_id(): number;\\n        get_imageUrl(): string;\\n        get_isHidden(): boolean;\\n        get_isRootWebOnly(): boolean;\\n        get_isSubWebOnly(): boolean;\\n        get_lcid(): number;\\n        get_name(): string;\\n        get_title(): string;\\n    }\\n    interface WebTemplateCollection extends SP.ClientObjectCollection<WebTemplate> {\\n        itemAt(index: number): SP.WebTemplate;\\n        get_item(index: number): SP.WebTemplate;\\n        getByName(name: string): SP.WebTemplate;\\n    }\\n\\n    namespace Application {\\n        namespace UI {\\n            interface DefaultFormsInformationRequestor {\\n                onDefaultFormsInformationRetrieveSuccess(defaultForms: SP.Application.UI.DefaultFormsInformation): void;\\n                onDefaultFormsInformationRetrieveFailure(): void;\\n            }\\n            class FormsInfo {\\n                ContentTypeName: string;\\n                NewFormUrl: string;\\n                DisplayFormUrl: string;\\n                EditFormUrl: string;\\n                constructor();\\n            }\\n            class DefaultFormsInformation {\\n                DefaultForms: SP.Application.UI.FormsInfo;\\n                OtherForms: any;\\n                constructor();\\n            }\\n            class DefaultFormsMenuBuilder {\\n                static getDefaultFormsInformation(requestor: SP.Application.UI.DefaultFormsInformationRequestor, listId: SP.Guid): void;\\n            }\\n            class ViewSelectorMenuOptions {\\n                showRepairView: boolean;\\n                showMergeView: boolean;\\n                showEditView: boolean;\\n                showCreateView: boolean;\\n                showApproverView: boolean;\\n                listId: string;\\n                viewId: string;\\n                viewParameters: string;\\n                constructor();\\n            }\\n            interface ViewInformationRequestor {\\n                onViewInformationReturned(viewGroups: SP.Application.UI.ViewSelectorGroups): void;\\n            }\\n            class ViewSelectorGroups {\\n                ModeratedViews: any;\\n                PublicViews: any;\\n                PersonalViews: any;\\n                OtherViews: any;\\n                DefaultView: SP.Application.UI.ViewSelectorMenuItem;\\n                ViewCreation: any;\\n                constructor();\\n            }\\n            class ViewSelectorMenuItem {\\n                Text: string;\\n                ActionScriptText: string;\\n                NavigateUrl: string;\\n                ImageSourceUrl: string;\\n                Description: string;\\n                Id: string;\\n                Sequence: number;\\n                ItemType: string;\\n                GroupId: number;\\n                constructor();\\n            }\\n            class ViewSelectorSubMenu {\\n                Text: string;\\n                ImageSourceUrl: string;\\n                SubMenuItems: any;\\n                constructor();\\n            }\\n            class ViewSelectorMenuBuilder {\\n                static get_filterMenuItemsCallback(): (menuItems: any) => any;\\n                static set_filterMenuItemsCallback(value: (menuItems: any) => any): void;\\n                static showMenu(elem: HTMLElement, options: SP.Application.UI.ViewSelectorMenuOptions): void;\\n                static getViewInformation(requestor: SP.Application.UI.ViewInformationRequestor, options: SP.Application.UI.ViewSelectorMenuOptions): void;\\n            }\\n            class MoreColorsPicker extends Sys.UI.Control {\\n                constructor(e: HTMLElement);\\n                initialize(): void;\\n                dispose(): void;\\n                get_colorValue(): string;\\n                set_colorValue(value: string): void;\\n            }\\n            class MoreColorsPage extends Sys.UI.Control {\\n                constructor(e: HTMLElement);\\n                initialize(): void;\\n                dispose(): void;\\n                get_moreColorsPicker(): SP.Application.UI.MoreColorsPicker;\\n                set_moreColorsPicker(value: SP.Application.UI.MoreColorsPicker): void;\\n            }\\n            class ThemeWebPage extends Sys.UI.Control {\\n                add_themeDisplayUpdated(value: (sender: any, e: Sys.EventArgs) => void): void;\\n                remove_themeDisplayUpdated(value: (sender: any, e: Sys.EventArgs) => void): void;\\n                constructor(e: HTMLElement);\\n                initialize(): void;\\n                dispose(): void;\\n                onThemeSelectionChanged(evt: Sys.UI.DomEvent): void;\\n                updateThemeDisplay(): void;\\n                get_thmxThemes(): any;\\n                set_thmxThemes(value: any): void;\\n            }\\n            class WikiPageNameInPlaceEditor {\\n                constructor(ownerDoc: any, displayElemId: string, editElemId: string, editTextBoxId: string);\\n                editingPageCallback(): void;\\n                savingPageCallback(): void;\\n            }\\n        }\\n    }\\n\\n    namespace Analytics {\\n        class AnalyticsUsageEntry extends SP.ClientObject {\\n            static logAnalyticsEvent(context: SP.ClientRuntimeContext, eventTypeId: number, itemId: string): void;\\n            static logAnalyticsEvent2(context: SP.ClientRuntimeContext, eventTypeId: number, itemId: string, rollupScopeId: SP.Guid, siteId: SP.Guid, userId: string): void;\\n            static logAnalyticsAppEvent(context: SP.ClientRuntimeContext, appEventTypeId: SP.Guid, itemId: string): void;\\n            static logAnalyticsAppEvent2(context: SP.ClientRuntimeContext, appEventTypeId: SP.Guid, itemId: string, rollupScopeId: SP.Guid, siteId: SP.Guid, userId: string): void;\\n        }\\n        enum EventTypeId {\\n            none,\\n            first,\\n            view,\\n            recommendationView,\\n            recommendationClick,\\n            last,\\n        }\\n    }\\n\\n    namespace SiteHealth {\\n        class SiteHealthResult extends SP.ClientValueObject {\\n            get_messageAsText(): string;\\n            get_ruleHelpLink(): string;\\n            get_ruleId(): SP.Guid;\\n            get_ruleIsRepairable(): boolean;\\n            get_ruleName(): string;\\n            get_status(): SP.SiteHealth.SiteHealthStatusType;\\n            set_status(value: SP.SiteHealth.SiteHealthStatusType): void;\\n            get_timeStamp(): Date;\\n            set_timeStamp(value: Date): void;\\n            get_typeId(): string;\\n            writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n            constructor();\\n        }\\n        enum SiteHealthStatusType {\\n            passed,\\n            failedWarning,\\n            failedError,\\n        }\\n        class SiteHealthSummary extends SP.ClientObject {\\n            get_failedErrorCount(): number;\\n            get_failedWarningCount(): number;\\n            get_passedCount(): number;\\n            get_results(): SP.SiteHealth.SiteHealthResult[];\\n        }\\n    }\\n}\\n\\ndeclare namespace Microsoft.SharePoint.Client.Search {\\n    namespace Query {\\n        /**Contains information common to all types of search queries.*/\\n        class Query extends SP.ClientObject {\\n            get_blockDedupeMode: () => number;\\n            set_blockDedupeMode: (value: number) => void;\\n\\n            get_bypassResultTypes: () => boolean;\\n            set_bypassResultTypes: (value: boolean) => void;\\n\\n            get_clientType: () => string;\\n            set_clientType: (value: string) => void;\\n\\n            get_culture: () => number;\\n            set_culture: (value: number) => void;\\n\\n            get_desiredSnippetLength: () => number;\\n            set_desiredSnippetLength: (value: number) => void;\\n\\n            get_enableInterleaving: () => boolean;\\n            set_enableInterleaving: (value: boolean) => void;\\n\\n            get_enableNicknames: () => boolean;\\n            set_enableNicknames: (value: boolean) => void;\\n\\n            get_enableOrderingHitHighlightedProperty: () => boolean;\\n            set_enableOrderingHitHighlightedProperty: (value: boolean) => void;\\n\\n            get_enablePhonetic: () => boolean;\\n            set_enablePhonetic: (value: boolean) => void;\\n\\n            get_enableQueryRules: () => boolean;\\n            set_enableQueryRules: (value: boolean) => void;\\n\\n            get_enableStemming: () => boolean;\\n            set_enableStemming: (value: boolean) => void;\\n\\n            get_generateBlockRankLog: () => boolean;\\n            set_generateBlockRankLog: (value: boolean) => void;\\n\\n            get_hitHighlightedMultivaluePropertyLimit: () => number;\\n            set_hitHighlightedMultivaluePropertyLimit: (value: number) => void;\\n\\n            get_hitHighlightedProperties: () => StringCollection;\\n\\n            get_ignoreSafeQueryPropertiesTemplateUrl: () => boolean;\\n            set_ignoreSafeQueryPropertiesTemplateUrl: (value: boolean) => void;\\n\\n            get_impressionID: () => string;\\n            set_impressionID: (value: string) => void;\\n\\n            get_maxSnippetLength: () => number;\\n            set_maxSnippetLength: (value: number) => void;\\n\\n            get_personalizationData: () => QueryPersonalizationData;\\n            set_personalizationData: (value: QueryPersonalizationData) => void;\\n\\n            get_processBestBets: () => boolean;\\n            set_processBestBets: (value: boolean) => void;\\n\\n            get_processPersonalFavorites: () => boolean;\\n            set_processPersonalFavorites: (value: boolean) => void;\\n\\n            get_queryTag: () => string;\\n            set_queryTag: (value: string) => void;\\n\\n            get_queryTemplate: () => string;\\n            set_queryTemplate: (value: string) => void;\\n\\n            get_queryTemplateParameters: () => { [key: string]: boolean; };\\n\\n            get_queryText: () => string;\\n            set_queryText: (value: string) => void;\\n\\n            get_rankingModelId: () => string;\\n            set_rankingModelId: (value: string) => void;\\n\\n            get_resultsUrl: () => string;\\n            set_resultsUrl: (value: string) => void;\\n\\n            get_rowLimit: () => number;\\n            set_rowLimit: (value: number) => void;\\n\\n            get_rowsPerPage: () => number;\\n            set_rowsPerPage: (value: number) => void;\\n\\n            get_safeQueryPropertiesTemplateUrl: () => string;\\n            set_safeQueryPropertiesTemplateUrl: (value: string) => void;\\n\\n            get_showPeopleNameSuggestions: () => boolean;\\n            set_showPeopleNameSuggestions: (value: boolean) => void;\\n\\n            get_sourceId: () => SP.Guid;\\n            set_sourceId: (value: SP.Guid) => void;\\n\\n            get_startRow: () => number;\\n            set_startRow: (value: number) => void;\\n\\n            get_summaryLength: () => number;\\n            set_summaryLength: (value: number) => void;\\n\\n            get_timeout: () => number;\\n            set_timeout: (value: number) => void;\\n\\n            get_totalRowsExactMinimum: () => number;\\n            set_totalRowsExactMinimum: (value: number) => void;\\n\\n            get_trimDuplicates: () => boolean;\\n            set_trimDuplicates: (value: boolean) => void;\\n\\n            get_uiLanguage: () => number;\\n            set_uiLanguage: (value: number) => void;\\n\\n            getQuerySuggestionsWithResults: (\\n                iNumberOfQuerySuggestions: number,\\n                iNumberOfResultSuggestions: number,\\n                fPreQuerySuggestions: boolean,\\n                fHitHighlighting: boolean,\\n                fCapitalizeFirstLetters: boolean,\\n                fPrefixMatchAllTerms: boolean) => QuerySuggestionResults;\\n        }\\n\\n        /**Contains information about a keyword based search query.*/\\n        class KeywordQuery extends Query {\\n            constructor(context: SP.ClientContext);\\n\\n            get_collapseSpecification: () => string;\\n            set_collapseSpecification: (value: string) => void;\\n\\n            get_enableSorting: () => boolean;\\n            set_enableSorting: (value: boolean) => void;\\n\\n            get_hiddenConstraints: () => string;\\n            set_hiddenConstraints: (value: string) => void;\\n\\n            get_properties: () => KeywordQueryProperties;\\n\\n            get_refinementFilters: () => StringCollection;\\n            set_refinementFilters: (value: StringCollection) => void;\\n\\n            get_refiners: () => string;\\n            set_refiners: (value: string) => void;\\n\\n            get_reorderingRules: () => ReorderingRuleCollection;\\n            set_reorderingRules: (value: ReorderingRuleCollection) => void;\\n\\n            /**Specifies the list of managed properties to be returned for each search result.*/\\n            get_selectProperties: () => StringCollection;\\n\\n            get_sortList: () => SortCollection;\\n\\n            get_trimDuplicatesIncludeId: () => number;\\n            set_trimDuplicatesIncludeId: (value: number) => void;\\n        }\\n\\n        /**Executes queries against a search server.*/\\n        class SearchExecutor extends SP.ClientObject {\\n            constructor(context: SP.ClientContext);\\n\\n            /**Runs a query.*/\\n            executeQuery: (query: Query) => SP.JsonObjectResult;\\n            executeQueries: (queryIds: string[], queries: Query[], handleExceptions: boolean) => SP.JsonObjectResult;\\n            recordPageClick: (\\n                pageInfo: string,\\n                clickType: string,\\n                blockType: number,\\n                clickedResultId: string,\\n                subResultIndex: number,\\n                immediacySourceId: string,\\n                immediacyQueryString: string,\\n                immediacyTitle: string,\\n                immediacyUrl: string) => void;\\n            exportPopularQueries: (web: SP.Web, sourceId: SP.Guid) => SP.JsonObjectResult;\\n        }\\n\\n        class StringCollection extends SP.ClientObjectCollection<string> {\\n            constructor(context: SP.ClientContext);\\n            itemAt(index: number): string;\\n            get_item(index: number): string;\\n            get_childItemType(): typeof String;\\n            add(property: string): void;\\n            clear(): void;\\n        }\\n\\n        class QueryPersonalizationData extends SP.ClientObject {\\n            // It's really empty;\\n        }\\n\\n        class QuerySuggestionResults extends SP.ClientValueObject {\\n            get_peopleNames: () => string[];\\n            set_peopleNames: (value: string[]) => void;\\n\\n            get_personalResults: () => PersonalResultSuggestion[];\\n            set_personalResults: (value: PersonalResultSuggestion[]) => void;\\n\\n            get_queries: () => QuerySuggestionQuery[];\\n            set_queries: (value: QuerySuggestionQuery[]) => void;\\n        }\\n\\n        class PersonalResultSuggestion extends SP.ClientValueObject {\\n            get_highlightedTitle: () => string;\\n            set_highlightedTitle: (value: string) => void;\\n\\n            get_isBestBet: () => boolean;\\n            set_isBestBet: (value: boolean) => void;\\n\\n            get_title: () => string;\\n            set_title: (value: string) => void;\\n\\n            get_url: () => string;\\n            set_url: (value: string) => void;\\n        }\\n\\n        class QuerySuggestionQuery extends SP.ClientValueObject {\\n            get_isPersonal: () => boolean;\\n            set_isPersonal: (value: boolean) => void;\\n\\n            get_query: () => string;\\n            set_query: (value: string) => void;\\n        }\\n\\n        class KeywordQueryProperties extends SP.ClientObject {\\n            get_item: (key: string) => any;\\n            set_item: (key: string, value: any) => void;\\n            setQueryPropertyValue: (name: string) => QueryPropertyValue;\\n            getQueryPropertyValue: (name: string, value: QueryPropertyValue) => void;\\n        }\\n\\n        enum QueryPropertyValueType {\\n            none,\\n            stringType,\\n            int32TYpe,\\n            booleanType,\\n            stringArrayType,\\n            unSupportedType\\n        }\\n\\n        class QueryPropertyValue extends SP.ClientValueObject {\\n            get_boolVal: () => boolean;\\n            set_boolVal: (value: boolean) => boolean;\\n\\n            get_intVal: () => number;\\n            set_intVal: (value: number) => number;\\n            get_queryPropertyValueTypeIndex: () => number;\\n            set_queryPropertyValueTypeIndex: (value: number) => void;\\n            get_strArray: () => string[];\\n            set_strArray: (value: string[]) => string[];\\n            get_strVal: () => string;\\n            set_strVal: (value: string) => string;\\n        }\\n\\n        class QueryUtility {\\n            static create: (name: string, val: any) => QueryPropertyValue;\\n            static getQueryPropertyValueType: (val: QueryPropertyValue) => QueryPropertyValueType;\\n            static queryPropertyValueToObject: (val: QueryPropertyValue) => any;\\n        }\\n        interface ReorderingRuleCollection extends SP.ClientObjectCollection<ReorderingRule> {\\n            itemAt(index: number): ReorderingRule;\\n            get_item(index: number): ReorderingRule;\\n            get_childItemType(): typeof ReorderingRule;\\n            add(property: ReorderingRule): void;\\n            clear(): void;\\n        }\\n\\n        enum ReorderingRuleMatchType {\\n            resultContainsKeyword,\\n            titleContainsKeyword,\\n            titleMatchesKeyword,\\n            urlStartsWith,\\n            urlExactlyMatches,\\n            contentTypeIs,\\n            fileExtensionMatches,\\n            resultHasTag,\\n            manualCondition\\n        }\\n\\n        class ReorderingRule extends SP.ClientValueObject {\\n            get_boost: () => number;\\n            set_boost: (value: number) => void;\\n\\n            get_matchType: () => ReorderingRuleMatchType;\\n            set_matchType: (value: ReorderingRuleMatchType) => void;\\n\\n            get_matchValue: () => string;\\n            set_matchValue: (value: string) => void;\\n        }\\n\\n        interface SortCollection extends SP.ClientObjectCollection<Sort> {\\n            itemAt(index: number): Sort;\\n            get_item(index: number): Sort;\\n            get_childItemType(): typeof Sort;\\n            add(strProperty: string, sortDirection: SortDirection): void;\\n            clear(): void;\\n        }\\n\\n        enum SortDirection {\\n            ascending,\\n            descending,\\n            fqlFormula\\n        }\\n        class Sort extends SP.ClientValueObject {\\n            get_direction: () => SortDirection;\\n            set_direction: (value: SortDirection) => void;\\n\\n            get_property: () => string;\\n            set_property: (value: string) => void;\\n        }\\n\\n        class ResultTableCollection extends SP.ClientValueObjectCollection<ResultTable> {\\n            get_item: (index: number) => ResultTable;\\n\\n            get_elapsedTime: () => number;\\n            set_elapsedTime: (value: number) => void;\\n\\n            get_properties: () => { [key: string]: any; };\\n\\n            get_queryErrors: () => { [key: string]: WebControls.ControlMessage; };\\n\\n            get_queryId: () => string;\\n\\n            get_spellingSuggestion: () => string;\\n\\n            get_triggeredRules: () => SP.Guid[];\\n\\n            initPropertiesFromJson: (parentNode: any) => void;\\n        }\\n\\n        class ResultTable extends SP.ClientValueObject {\\n            get_groupTemplateId: () => string;\\n\\n            get_itemTemplateId: () => string;\\n\\n            get_properties: () => { [key: string]: any; };\\n\\n            get_queryId: () => string;\\n\\n            get_queryRuleId: () => string;\\n\\n            get_resultRows: () => Array<{ [key: string]: any; }>;\\n\\n            get_resultTitle: () => string;\\n\\n            get_resultTitleUrl: () => string;\\n\\n            get_rowCount: () => number;\\n\\n            get_tableType: () => string;\\n\\n            get_totalRows: () => number;\\n\\n            get_totalRowsIncludingDuplicates: () => number;\\n\\n            initPropertiesFromJson: (parentNode: any) => void;\\n        }\\n\\n        class RankingLabeling extends SP.ClientObject {\\n            constructor(context: SP.ClientContext);\\n            getJudgementsForQuery: (query: string) => SP.JsonObjectResult;\\n            addJudgment: (userQuery: string, url: string, labelId: number) => void;\\n            normalizeResultUrl: (url: string) => SP.JsonObjectResult;\\n        }\\n\\n        class PopularQuery extends SP.ClientValueObject {\\n            get_clickCount: () => number;\\n            set_clickCount: (value: number) => void;\\n\\n            get_LCID: () => number;\\n            set_LCID: (value: number) => void;\\n\\n            get_queryCount: () => number;\\n            set_queryCount: (value: number) => void;\\n\\n            get_queryText: () => string;\\n            set_queryText: (value: string) => void;\\n        }\\n\\n        class QueryPropertyNames {\\n            static blockDedupeMode: string; // 'BlockDedupeMode';\\n            static bypassResultTypes: string; // 'BypassResultTypes';\\n            static clientType: string; // 'ClientType';\\n            static culture: string; // 'Culture';\\n            static desiredSnippetLength: string; // 'DesiredSnippetLength';\\n            static enableInterleaving: string; // 'EnableInterleaving';\\n            static enableNicknames: string; // 'EnableNicknames';\\n            static enableOrderingHitHighlightedProperty: string; // 'EnableOrderingHitHighlightedProperty';\\n            static enablePhonetic: string; // 'EnablePhonetic';\\n            static enableQueryRules: string; // 'EnableQueryRules';\\n            static enableStemming: string; // 'EnableStemming';\\n            static generateBlockRankLog: string; // 'GenerateBlockRankLog';\\n            static hitHighlightedMultivaluePropertyLimit: string; // 'HitHighlightedMultivaluePropertyLimit';\\n            static ignoreSafeQueryPropertiesTemplateUrl: string; // 'IgnoreSafeQueryPropertiesTemplateUrl';\\n            static impressionID: string; // 'ImpressionID';\\n            static maxSnippetLength: string; // 'MaxSnippetLength';\\n            static processBestBets: string; // 'ProcessBestBets';\\n            static processPersonalFavorites: string; // 'ProcessPersonalFavorites';\\n            static queryTag: string; // 'QueryTag';\\n            static queryTemplate: string; // 'QueryTemplate';\\n            static queryTemplateParameters: string; // 'QueryTemplateParameters';\\n            static queryText: string; // 'QueryText';\\n            static rankingModelId: string; // 'RankingModelId';\\n            static resultsUrl: string; // 'ResultsUrl';\\n            static rowLimit: string; // 'RowLimit';\\n            static rowsPerPage: string; // 'RowsPerPage';\\n            static safeQueryPropertiesTemplateUrl: string; // 'SafeQueryPropertiesTemplateUrl';\\n            static showPeopleNameSuggestions: string; // 'ShowPeopleNameSuggestions';\\n            static sourceId: string; // 'SourceId';\\n            static startRow: string; // 'StartRow';\\n            static summaryLength: string; // 'SummaryLength';\\n            static timeout: string; // 'Timeout';\\n            static totalRowsExactMinimum: string; // 'TotalRowsExactMinimum';\\n            static trimDuplicates: string; // 'TrimDuplicates';\\n            static uiLanguage: string; // 'UILanguage';\\n        }\\n\\n        class QueryObjectPropertyNames {\\n            static hitHighlightedProperties: string; // = 'HitHighlightedProperties';\\n            static personalizationData: string; // = 'PersonalizationData';\\n        }\\n\\n        class KeywordQueryPropertyNames {\\n            static collapseSpecification: string; // 'CollapseSpecification';\\n            static enableSorting: string; // 'EnableSorting';\\n            static hiddenConstraints: string; // 'HiddenConstraints';\\n            static refiners: string; // 'Refiners';\\n            static trimDuplicatesIncludeId: string; // 'TrimDuplicatesIncludeId';\\n        }\\n\\n        class KeywordQueryObjectPropertyNames {\\n            static properties: string; // 'Properties';\\n            static refinementFilters: string; // 'RefinementFilters';\\n            static reorderingRules: string; // 'ReorderingRules';\\n            static selectProperties: string; // 'SelectProperties';\\n            static sortList: string; // 'SortList';\\n        }\\n    }\\n\\n    namespace WebControls {\\n        class ControlMessage extends SP.ClientValueObject {\\n            get_code: () => number;\\n\\n            get_correlationID: () => string;\\n\\n            get_encodeDetails: () => boolean;\\n\\n            get_header: () => string;\\n\\n            get_level: () => MessageLevel;\\n\\n            get_messageDetails: () => string;\\n\\n            get_messageDetailsForViewers: () => string;\\n\\n            get_serverTypeId: () => string;\\n\\n            get_showForViewerUsers: () => boolean;\\n\\n            get_showInEditModeOnly: () => boolean;\\n\\n            get_stackTrace: () => string;\\n\\n            get_type: () => string;\\n        }\\n\\n        enum MessageLevel {\\n            information,\\n            warning,\\n            error\\n        }\\n    }\\n\\n    namespace Administration {\\n        class DocumentCrawlLog extends SP.ClientObject {\\n            constructor(context: SP.ClientContext, site: SP.Site);\\n            getCrawledUrls: (\\n                getCountOnly: boolean,\\n                maxRows: { High: number; Low: number; },\\n                queryString: string,\\n                isLike: boolean,\\n                contentSourceID: number,\\n                errorLevel: number,\\n                errorID: number,\\n                startDateTime: Date,\\n                endDateTime: Date) => SP.JsonObjectResult;\\n        }\\n\\n        class SearchObjectOwner extends SP.ClientObject {\\n            constructor(context: SP.ClientContext, lowestCurrentLevelToUse: SearchObjectLevel);\\n        }\\n\\n        enum SearchObjectLevel {\\n            spWeb,\\n            spSite,\\n            spSiteSubscription,\\n            ssa\\n        }\\n    }\\n\\n    namespace Portability {\\n        class SearchConfigurationPortability extends SP.ClientObject {\\n            constructor(context: SP.ClientContext);\\n            get_importWarnings: () => string;\\n\\n            exportSearchConfiguration: (owningScope: Administration.SearchObjectOwner) => SP.JsonObjectResult;\\n\\n            importSearchConfiguration: (owningScope: Administration.SearchObjectOwner, searchConfiguration: string) => void;\\n\\n            deleteSearchConfiguration: (owningScope: Administration.SearchObjectOwner, searchConfiguration: string) => void;\\n        }\\n\\n        class SearchConfigurationPortabilityPropertyNames {\\n            static importWarnings: string; // = 'ImportWarnings'\\n        }\\n    }\\n\\n    /**Located in sp.search.apps.js*/\\n    namespace Analytics {\\n        class AnalyticsItemData extends SP.ClientObject {\\n            get_lastProcessingTime: () => Date;\\n\\n            get_totalHits: () => number;\\n\\n            get_totalUniqueUsers: () => number;\\n\\n            getHitCountForDay: (day: Date) => number;\\n\\n            getUniqueUsersCountForDay: (day: Date) => number;\\n\\n            getHitCountForMonth: (day: Date) => number;\\n\\n            getUniqueUsersCountForMonth: (day: Date) => number;\\n        }\\n\\n        class UsageAnalytics extends SP.ClientObject {\\n            getAnalyticsItemData: <T = any>(eventType: number, listItem: SP.ListItem<T>) => AnalyticsItemData;\\n\\n            getAnalyticsItemDataForApplicationEventType: <T = any>(appEventType: SP.Guid, listItem: SP.ListItem<T>) => AnalyticsItemData;\\n\\n            deleteStandardEventUsageData: (eventType: number) => void;\\n\\n            deleteCustomEventUsageData: (appEventTypeId: SP.Guid) => void;\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace BusinessData {\\n        class AppBdcCatalog extends SP.ClientObject {\\n            getEntity(namespace: string, name: string): SP.BusinessData.Entity;\\n            getLobSystemProperty(lobSystemName: string, propertyName: string): SP.StringResult;\\n            setLobSystemProperty(lobSystemName: string, propertyName: string, propertyValue: string): void;\\n            getLobSystemInstanceProperty(lobSystemName: string, lobSystemInstanceName: string, propertyName: string): SP.StringResult;\\n            setLobSystemInstanceProperty(lobSystemName: string, lobSystemInstanceName: string, propertyName: string, propertyValue: string): void;\\n            getConnectionId(lobSystemName: string, lobSystemInstanceName: string): SP.StringResult;\\n            setConnectionId(lobSystemName: string, lobSystemInstanceName: string, connectionId: string): void;\\n            getPermissibleConnections(): string[];\\n        }\\n        class Entity extends SP.ClientObject {\\n            get_estimatedInstanceCount(): number;\\n            get_name(): string;\\n            get_namespace(): string;\\n            getIdentifiers(): SP.BusinessData.Collections.EntityIdentifierCollection;\\n            getIdentifierCount(): SP.IntResult;\\n            getLobSystem(): SP.BusinessData.LobSystem;\\n            getCreatorView(methodInstanceName: string): SP.BusinessData.EntityView;\\n            getUpdaterView(updaterName: string): SP.BusinessData.EntityView;\\n            getFinderView(methodInstanceName: string): SP.BusinessData.EntityView;\\n            getSpecificFinderView(specificFinderName: string): SP.BusinessData.EntityView;\\n            getDefaultSpecificFinderView(): SP.BusinessData.EntityView;\\n            findSpecificDefault(identity: SP.BusinessData.Runtime.EntityIdentity, lobSystemInstance: SP.BusinessData.LobSystemInstance): SP.BusinessData.Runtime.EntityInstance;\\n            findSpecific(identity: SP.BusinessData.Runtime.EntityIdentity, specificFinderName: string, lobSystemInstance: SP.BusinessData.LobSystemInstance): SP.BusinessData.Runtime.EntityInstance;\\n            findSpecificDefaultByBdcId(bdcIdentity: string, lobSystemInstance: SP.BusinessData.LobSystemInstance): SP.BusinessData.Runtime.EntityInstance;\\n            findSpecificByBdcId(bdcIdentity: string, specificFinderName: string, lobSystemInstance: SP.BusinessData.LobSystemInstance): SP.BusinessData.Runtime.EntityInstance;\\n            findFiltered(filterList: SP.BusinessData.Collections.FilterCollection, nameOfFinder: string, lobSystemInstance: SP.BusinessData.LobSystemInstance): SP.BusinessData.Collections.EntityInstanceCollection;\\n            findAssociated(entityInstance: SP.BusinessData.Runtime.EntityInstance, associationName: string, filterList: SP.BusinessData.Collections.FilterCollection, lobSystemInstance: SP.BusinessData.LobSystemInstance): SP.BusinessData.Collections.EntityInstanceCollection;\\n            getFilters(methodInstanceName: string): SP.BusinessData.Collections.FilterCollection;\\n            execute(methodInstanceName: string, lobSystemInstance: SP.BusinessData.LobSystemInstance, inputParams: any[]): SP.BusinessData.MethodExecutionResult;\\n            getAssociationView(associationName: string): SP.BusinessData.EntityView;\\n            create(fieldValues: SP.BusinessData.Runtime.EntityFieldValueDictionary, lobSystemInstance: SP.BusinessData.LobSystemInstance): SP.BusinessData.Runtime.EntityIdentity;\\n            subscribe(eventType: SP.BusinessData.Runtime.EntityEventType, notificationCallback: SP.BusinessData.Runtime.NotificationCallback, onBehalfOfUser: string, subscriberName: string, lobSystemInstance: SP.BusinessData.LobSystemInstance): SP.BusinessData.Runtime.Subscription;\\n            unsubscribe(subscription: SP.BusinessData.Runtime.Subscription, onBehalfOfUser: string, unsubscriberName: string, lobSystemInstance: SP.BusinessData.LobSystemInstance): void;\\n        }\\n        class EntityField extends SP.ClientObject {\\n            get_containsLocalizedDisplayName(): boolean;\\n            get_defaultDisplayName(): string;\\n            get_localizedDisplayName(): string;\\n            get_name(): string;\\n        }\\n        class EntityIdentifier extends SP.ClientObject {\\n            get_identifierType(): string;\\n            get_name(): string;\\n            getDefaultDisplayName(): SP.StringResult;\\n            containsLocalizedDisplayName(): SP.BooleanResult;\\n            getLocalizedDisplayName(): SP.StringResult;\\n        }\\n        class EntityView extends SP.ClientObject {\\n            get_fields(): SP.BusinessData.Collections.EntityFieldCollection;\\n            get_name(): string;\\n            get_relatedSpecificFinderName(): string;\\n            getDefaultValues(): SP.BusinessData.Runtime.EntityFieldValueDictionary;\\n            getXmlSchema(): SP.StringResult;\\n            getTypeDescriptor(fieldDotNotation: string): SP.BusinessData.TypeDescriptor;\\n            getType(fieldDotNotation: string): SP.StringResult;\\n        }\\n        class Filter extends SP.ClientObject {\\n            get_defaultDisplayName(): string;\\n            get_filterField(): string;\\n            get_filterType(): string;\\n            get_localizedDisplayName(): string;\\n            get_name(): string;\\n            get_valueCount(): number;\\n        }\\n        class LobSystem extends SP.ClientObject {\\n            get_name(): string;\\n            getLobSystemInstances(): SP.BusinessData.Collections.LobSystemInstanceCollection;\\n        }\\n        class LobSystemInstance extends SP.ClientObject {\\n            get_name(): string;\\n        }\\n        class MethodExecutionResult extends SP.ClientObject {\\n            get_returnParameterCollection(): SP.BusinessData.ReturnParameterCollection;\\n        }\\n        interface ReturnParameterCollection extends SP.ClientObjectCollection<SP.BusinessData.Runtime.EntityFieldValueDictionary> {\\n            itemAt(index: number): SP.BusinessData.Runtime.EntityFieldValueDictionary;\\n            get_item(index: number): SP.BusinessData.Runtime.EntityFieldValueDictionary;\\n        }\\n        class TypeDescriptor extends SP.ClientObject {\\n            get_containsReadOnly(): boolean;\\n            get_isCollection(): boolean;\\n            get_isReadOnly(): boolean;\\n            get_name(): string;\\n            get_typeName(): string;\\n            containsLocalizedDisplayName(): SP.BooleanResult;\\n            getLocalizedDisplayName(): SP.StringResult;\\n            getDefaultDisplayName(): SP.StringResult;\\n            isRoot(): SP.BooleanResult;\\n            isLeaf(): SP.BooleanResult;\\n            getChildTypeDescriptors(): SP.BusinessData.Collections.TypeDescriptorCollection;\\n            getParentTypeDescriptor(): SP.BusinessData.TypeDescriptor;\\n        }\\n        namespace Collections {\\n            interface EntityFieldCollection extends SP.ClientObjectCollection<SP.BusinessData.EntityField> {\\n                itemAt(index: number): SP.BusinessData.EntityField;\\n                get_item(index: number): SP.BusinessData.EntityField;\\n            }\\n            interface EntityIdentifierCollection extends SP.ClientObjectCollection<SP.BusinessData.EntityIdentifier> {\\n                itemAt(index: number): SP.BusinessData.EntityIdentifier;\\n                get_item(index: number): SP.BusinessData.EntityIdentifier;\\n            }\\n            interface EntityInstanceCollection extends SP.ClientObjectCollection<SP.BusinessData.Runtime.EntityInstance> {\\n                itemAt(index: number): SP.BusinessData.Runtime.EntityInstance;\\n                get_item(index: number): SP.BusinessData.Runtime.EntityInstance;\\n            }\\n            interface FilterCollection extends SP.ClientObjectCollection<SP.BusinessData.Filter> {\\n                itemAt(index: number): SP.BusinessData.Filter;\\n                get_item(index: number): SP.BusinessData.Filter;\\n                setFilterValue(inputFilterName: string, valueIndex: number, value: any): void;\\n            }\\n            interface LobSystemInstanceCollection extends SP.ClientObjectCollection<SP.BusinessData.LobSystemInstance> {\\n                itemAt(index: number): SP.BusinessData.LobSystemInstance;\\n                get_item(index: number): SP.BusinessData.LobSystemInstance;\\n            }\\n            interface TypeDescriptorCollection extends SP.ClientObjectCollection<SP.BusinessData.TypeDescriptor> {\\n                itemAt(index: number): SP.BusinessData.TypeDescriptor;\\n                get_item(index: number): SP.BusinessData.TypeDescriptor;\\n            }\\n        }\\n\\n        namespace Infrastructure {\\n            class ExternalSubscriptionStore extends SP.ClientObject {\\n                constructor(context: SP.ClientRuntimeContext, web: SP.Web);\\n                static newObject(context: SP.ClientRuntimeContext, web: SP.Web): SP.BusinessData.Infrastructure.ExternalSubscriptionStore;\\n                indexStore(): void;\\n            }\\n        }\\n\\n        namespace Runtime {\\n            enum EntityEventType {\\n                none,\\n                itemAdded,\\n                itemUpdated,\\n                itemDeleted,\\n            }\\n            class EntityFieldValueDictionary extends SP.ClientObject {\\n                get_fieldValues(): any;\\n                get_item(fieldName: string): any;\\n                set_item(fieldName: string, value: any): void;\\n                refreshLoad(): void;\\n                fromXml(xml: string): void;\\n                toXml(): SP.StringResult;\\n                createInstance(fieldInstanceDotNotation: string, fieldDotNotation: string): void;\\n                createCollectionInstance(fieldDotNotation: string, size: number): void;\\n                getCollectionSize(fieldDotNotation: string): SP.IntResult;\\n            }\\n            class EntityIdentity extends SP.ClientObject {\\n                get_fieldValues(): any;\\n                get_item(fieldName: string): any;\\n                constructor(context: SP.ClientRuntimeContext, identifierValues: any[]);\\n                get_identifierCount(): number;\\n                static newObject(context: SP.ClientRuntimeContext, identifierValues: any[]): SP.BusinessData.Runtime.EntityIdentity;\\n                refreshLoad(): void;\\n            }\\n            class EntityInstance extends SP.ClientObject {\\n                get_fieldValues(): any;\\n                get_item(fieldName: string): any;\\n                set_item(fieldName: string, value: any): void;\\n                refreshLoad(): void;\\n                createInstance(fieldInstanceDotNotation: string, fieldDotNotation: string): void;\\n                createCollectionInstance(fieldDotNotation: string, size: number): void;\\n                getIdentity(): SP.BusinessData.Runtime.EntityIdentity;\\n                deleteObject(): void;\\n                update(): void;\\n                fromXml(xml: string): void;\\n                toXml(): SP.StringResult;\\n            }\\n            class NotificationCallback extends SP.ClientObject {\\n                constructor(context: SP.ClientRuntimeContext, notificationEndpoint: string);\\n                get_notificationContext(): string;\\n                set_notificationContext(value: string): void;\\n                get_notificationEndpoint(): string;\\n                get_notificationForwarderType(): string;\\n                set_notificationForwarderType(value: string): void;\\n                static newObject(context: SP.ClientRuntimeContext, notificationEndpoint: string): SP.BusinessData.Runtime.NotificationCallback;\\n            }\\n            class Subscription extends SP.ClientObject {\\n                constructor(context: SP.ClientRuntimeContext, id: any, hash: string);\\n                get_hash(): string;\\n                get_iD(): any;\\n                static newObject(context: SP.ClientRuntimeContext, id: any, hash: string): SP.BusinessData.Runtime.Subscription;\\n            }\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace Sharing {\\n        class DocumentSharingManager {\\n            static getRoleDefinition(context: SP.ClientRuntimeContext, role: SP.Sharing.Role): SP.RoleDefinition;\\n            static isDocumentSharingEnabled(context: SP.ClientRuntimeContext, list: SP.List): SP.BooleanResult;\\n            static updateDocumentSharingInfo(context: SP.ClientRuntimeContext, resourceAddress: string, userRoleAssignments: SP.Sharing.UserRoleAssignment[], validateExistingPermissions: boolean, additiveMode: boolean, sendServerManagedNotification: boolean, customMessage: string, includeAnonymousLinksInNotification: boolean): SP.Sharing.UserSharingResult[];\\n        }\\n        enum Role {\\n            none,\\n            view,\\n            edit,\\n            owner,\\n        }\\n        class UserRoleAssignment extends SP.ClientValueObject {\\n            get_role(): SP.Sharing.Role;\\n            set_role(value: SP.Sharing.Role): void;\\n            get_userId(): string;\\n            set_userId(value: string): void;\\n            get_typeId(): string;\\n            writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n            constructor();\\n        }\\n        class UserSharingResult extends SP.ClientValueObject {\\n            get_allowedRoles(): SP.Sharing.Role[];\\n            get_currentRole(): SP.Sharing.Role;\\n            get_isUserKnown(): boolean;\\n            get_message(): string;\\n            get_status(): boolean;\\n            get_user(): string;\\n            get_typeId(): string;\\n            writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n            constructor();\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace Social {\\n        /** Identifies an actor as a user, document, site, or tag. */\\n        enum SocialActorType {\\n            user,\\n            document,\\n            site,\\n            tag\\n        }\\n        /** Specifies one or more actor types in a query to the server. */\\n        enum SocialActorTypes {\\n            none,\\n            users,\\n            documents,\\n            sites,\\n            tags,\\n            /** The set excludes documents and sites that do not have feeds. */\\n            excludeContentWithoutFeeds,\\n            all\\n        }\\n        /** Specifies whether the action is to navigate to the attachment or to perform some action dependent on the context in which the attachment is presented to the user. */\\n        enum SocialAttachmentActionKind {\\n            /** This value specifies that the action is to navigate to the attachment. */\\n            navigate,\\n            /** This value specifies that the action is dependent on the context that the attachment is displayed to the user. */\\n            adHocAction\\n        }\\n\\n        enum SocialAttachmentKind {\\n            image,\\n            video,\\n            document\\n        }\\n\\n        /** Specifies whether the item being inserted is a user, document, site, tag, or link. */\\n        enum SocialDataItemType {\\n            user,\\n            document,\\n            site,\\n            tag,\\n            link\\n        }\\n\\n        /** Specifies whether the overlay is a link or one or more actors. */\\n        enum SocialDataOverlayType {\\n            link,\\n            actors\\n        }\\n\\n        /** Specifies whether the sort order is by creation time or modification time. */\\n        enum SocialFeedSortOrder {\\n            byModifiedTime,\\n            byCreatedTime\\n        }\\n\\n        /** Identifies the kind of post to be retrieved.  */\\n        enum SocialFeedType {\\n            personal,\\n            news,\\n            timeline,\\n            likes,\\n            everyone\\n        }\\n\\n        // For some reasons this enum doesn't exist\\n        // enum SocialFollowResult {\\n        //    ok = 0,\\n        //    alreadyFollowing = 1,\\n        //    limitReached = 2,\\n        //    internalError = 3\\n        // }\\n\\n        /** Provides information about the feed.\\n            This type provides information about whether the feed on the server contains additional threads that were not returned. */\\n        enum SocialFeedAttributes {\\n            none,\\n            moreThreadsAvailable\\n        }\\n\\n        /** Specifies attributes of the post, such as whether the current user can like or delete the post. */\\n        enum SocialPostAttributes {\\n            none,\\n            canLike,\\n            canDelete,\\n            useAuthorImage,\\n            useSmallImage,\\n            canFollowUp\\n        }\\n\\n        /** Defines the type of item being specified in the SocialPostDefinitionDataItem.\\n            This type is only available in server-to-server calls. */\\n        enum SocialPostDefinitionDataItemType {\\n            text,\\n            user,\\n            document,\\n            site,\\n            tag,\\n            link\\n        }\\n\\n        enum SocialPostType {\\n            root,\\n            reply\\n        }\\n\\n        /** Specifies a status or error code. */\\n        enum SocialStatusCode {\\n            OK,\\n            /** This value specifies that an invalid request was encountered. */\\n            invalidRequest,\\n            /** This value specifies that access was denied to the current user. */\\n            accessDenied,\\n            itemNotFound,\\n            /** This value specifies that an invalid operation was attempted. */\\n            invalidOperation,\\n            /** This value specifies that the item was not changed by the operation. */\\n            itemNotModified,\\n            internalError,\\n            /** This value specifies that there was an error reading the cache. */\\n            cacheReadError,\\n            /** This value specifies that there was an error updating the cache. */\\n            cacheUpdateError,\\n            personalSiteNotFound,\\n            failedToCreatePersonalSite,\\n            notAuthorizedToCreatePersonalSite,\\n            cannotCreatePersonalSite,\\n            /** This value specifies that a server limit was reached. */\\n            limitReached,\\n            /** This value specifies that the operation failed because there was an error handling an attachment. */\\n            attachmentError,\\n            /** This value specifies that the operation completed with recoverable errors and that the returned data is incomplete. */\\n            partialData,\\n            /** This value specifies that the operation failed because a required server feature was disabled by administrative action. */\\n            featureDisabled\\n        }\\n\\n        /** Specifies properties of the thread. */\\n        enum SocialThreadAttributes {\\n            none,\\n            isDigest,\\n            canReply,\\n            canLock,\\n            isLocked,\\n            replyLimitReached\\n        }\\n\\n        enum SocialThreadType {\\n            normal,\\n            likeReference,\\n            replyReference,\\n            mentionReference,\\n            tagReference\\n        }\\n\\n        /** Contains information about an actor retrieved from server. An actor is a user, document, site, or tag. */\\n        class SocialActor extends SP.ClientValueObject {\\n            /** The AccountName property returns the user account name.\\n                This property is only available for social actors of type \\\"user\\\". */\\n            get_accountName(): string;\\n            /** Identifies whether the actor is a user, document, site, or tag. */\\n            get_actorType(): SocialActorType;\\n            /** Specifies whether the actor can be followed by the current user. */\\n            get_canFollow(): boolean;\\n            /** Returns the URI of the document or site content.\\n                This property is only available for social actors of type Document or Site. */\\n            get_contentUri(): string;\\n            get_emailAddress(): string;\\n            /** Returns the URI of the user's followed content folder.\\n                This property is only available for social actors of type \\\"user\\\". */\\n            get_followedContentUri(): string;\\n            /** Returns the actor's unique identifier. */\\n            get_id(): string;\\n            /** Returns the URI of the image representing the actor.\\n                This property is only available if actor is User, Document, or Site. */\\n            get_imageUri(): string;\\n            /** Returns true if the current user is following the actor; otherwise, it returns false. */\\n            get_isFollowed(): boolean;\\n            /** Returns the URI of the library containing the document.\\n                This property is only available for social actors of type \\\"document\\\". */\\n            get_libraryUri(): string;\\n            /** The Name property returns the actor's display name. */\\n            get_name(): string;\\n            /** Returns the URI of the user's personal site.\\n                This property is only available for social actors of type \\\"user\\\". */\\n            get_personalSiteUri(): string;\\n            /** Represents the status of retrieving the actor */\\n            get_status(): SocialStatusCode;\\n            /** The StatusText property returns the most recent post of the user.\\n                This property is only available for social actors of type \\\"user\\\". */\\n            get_statusText(): string;\\n            /** Returns the GUID of the tag.\\n                Only available for social actors of type \\\"tag\\\" */\\n            get_tagGuid(): string;\\n            /** Returns the user's title\\n                This property is only available for social actors of type \\\"user\\\". */\\n            get_title(): string;\\n            /** Returns the URI of the actor. */\\n            get_uri(): string;\\n        }\\n\\n        /** Identifies an actor to the server. An actor can be a user, document, site, or tag. */\\n        class SocialActorInfo extends SP.ClientValueObject {\\n            /** User account name.\\n                This property is only available for social actors of type \\\"user\\\". */\\n            get_accountName(): string;\\n            /** User account name.\\n                This property is only available for social actors of type \\\"user\\\". */\\n            set_accountName(value: string): string;\\n            /** Identifies whether the actor is a user, document, site, or tag. */\\n            get_actorType(): SocialActorType;\\n            /** Identifies whether the actor is a user, document, site, or tag. */\\n            set_actorType(value: SocialActorType): SocialActorType;\\n            /** URI of the document or site content.\\n                This property is only available for social actors of type Document or Site. */\\n            get_contentUri(): string;\\n            /** URI of the document or site content.\\n                This property is only available for social actors of type Document or Site. */\\n            set_contentUri(value: string): string;\\n            /** Actor's unique identifier. */\\n            get_id(): string;\\n            /** Actor's unique identifier. */\\n            set_id(value: string): string;\\n            /** GUID of the tag.\\n                Only available for social actors of type \\\"tag\\\" */\\n            get_tagGuid(): string;\\n            /** GUID of the tag.\\n                Only available for social actors of type \\\"tag\\\" */\\n            set_tagGuid(value: string): string;\\n        }\\n\\n        /** Represents an image, document preview, or video preview attachment.  */\\n        class SocialAttachment extends SP.ClientValueObject {\\n            /** Specifies the type of object that the attachment contains. */\\n            get_attachmentKind(): SocialAttachmentKind;\\n            /** Specifies the type of object that the attachment contains. */\\n            set_attachmentKind(value: SocialAttachmentKind): SocialAttachmentKind;\\n            /** Specifies the action to take when the user selects the attachment.\\n                This property is only present if the AttachmentKind is Video. */\\n            get_clickAction(): SocialAttachmentAction;\\n            /** Specifies the action to take when the user selects the attachment.\\n                This property is only present if the AttachmentKind is Video. */\\n            set_clickAction(value: SocialAttachmentAction): SocialAttachmentAction;\\n            /** Specifies the URI of the attachment content. */\\n            get_contentUri(): string;\\n            /** Specifies the URI of the attachment content. */\\n            set_contentUri(value: string): string;\\n            /** Provides a text description of the attachment. */\\n            get_description(): string;\\n            /** Provides a text description of the attachment. */\\n            set_description(value: string): string;\\n            /** Specifies the height of the attachment or of the attachment preview. */\\n            get_height(): number;\\n            /** Specifies the height of the attachment or of the attachment preview. */\\n            set_height(value: number): number;\\n            /** Specifies the duration of the attachment in seconds. This property is only present if the AttachmentKind is Video. */\\n            get_length(): number;\\n            /** Specifies the duration of the attachment in seconds. This property is only present if the AttachmentKind is Video. */\\n            set_length(value: number): number;\\n            /** Provides the attachment name. */\\n            get_name(): string;\\n            /** Provides the attachment name. */\\n            set_name(value: string): string;\\n            /** Specifies the URI of the attachment's preview thumbnail.\\n                This property is only present if the AttachmentKind is Document or Video. */\\n            get_previewUri(): string;\\n            /** Specifies the URI of the attachment's preview thumbnail.\\n                This property is only present if the AttachmentKind is Document or Video. */\\n            set_previewUri(value: string): string;\\n            /** Provides the attachment URI. */\\n            get_uri(): string;\\n            /** Provides the attachment URI. */\\n            set_uri(value: string): string;\\n            /** Specifies the width of the attachment or of the attachment preview. */\\n            get_width(): number;\\n            /** Specifies the width of the attachment or of the attachment preview. */\\n            set_width(value: number): number;\\n        }\\n        /** Specifies the user actions that are allowed for the attachment object. */\\n        class SocialAttachmentAction extends SP.ClientValueObject {\\n            /** Specifies whether the action is to navigate to a URI or an action that is dependent on the context in which the object is presented to the user. */\\n            get_actionKind(): SocialAttachmentActionKind;\\n            /** Specifies whether the action is to navigate to a URI or an action that is dependent on the context in which the object is presented to the user. */\\n            set_actionKind(value: SocialAttachmentActionKind): SocialAttachmentActionKind;\\n            /** Specifies the URI associated with the action. */\\n            get_actionUri(): string;\\n            /** Specifies the URI associated with the action. */\\n            set_actionUri(value: string): string;\\n        }\\n\\n        /** Defines a user, document, site, tag, or link to be inserted in a new post.\\n            The SocialPostCreationData class defines the content text that contains substitution strings.\\n            Each substitution string is replaced by a SocialDataItem value. */\\n        class SocialDataItem extends SP.ClientValueObject {\\n            /** Identifies the user.  */\\n            get_accountName(): string;\\n            /** Identifies the user.  */\\n            set_accountName(value: string): string;\\n            /** Specifies whether the item being inserted is a user, document, site, tag, or link. */\\n            get_itemType(): SocialDataItemType;\\n            /** Specifies whether the item being inserted is a user, document, site, tag, or link. */\\n            set_itemType(value: SocialDataItemType): SocialDataItemType;\\n            /** Identifies the tag.  */\\n            get_tagGuid(): string;\\n            /** Identifies the tag.  */\\n            set_tagGuid(value: string): string;\\n            /** Specifies the plain text to be inserted in the created post. The server can use the specified text or can use text that identifies the item, for example the name specified in a user profile.  */\\n            get_text(): string;\\n            /** Specifies the plain text to be inserted in the created post. The server can use the specified text or can use text that identifies the item, for example the name specified in a user profile.  */\\n            set_text(value: string): string;\\n            /** Identifies the site, document, or link.  */\\n            get_uri(): string;\\n            /** Identifies the site, document, or link.  */\\n            set_uri(value: string): string;\\n        }\\n\\n        /** Provides information about an overlay.\\n            An overlay is a substring in a post that represents a user, document, site, tag, or link.\\n            The SocialPost class contains an array of SocialDataOverlay objects.\\n            Each of the SocialDataOverlay objects specifies a link or one or more actors. */\\n        class SocialDataOverlay extends SP.ClientValueObject {\\n            /** Specifies one or more actors as an array of integers where each integer specifies an index into the SocialThreadActors array.\\n                This property is only available if the get_overlayType() has a value of SocialDataOverlayType.actors. */\\n            get_actorIndexes(): number[];\\n            /** The Index property specifies the starting position of the overlay in the SocialPostText string  */\\n            get_index(): number;\\n            /** The Length property specifies the number of characters in the overlay.  */\\n            get_length(): number;\\n            /** The LinkUri property specifies the URI of the link.\\n                This property is only available if the get_overlayType() has a value of SocialDataOverlayType.link.  */\\n            get_linkUri(): string;\\n            /** Specifies whether the overlay is a link or one or more actors. */\\n            get_overlayType(): SocialDataOverlayType;\\n        }\\n\\n        /** Specifies information about errors that the server has encountered. */\\n        class SocialExceptionDetails extends SP.ClientValueObject {\\n            get_internalErrorCode(): number;\\n            get_internalMessage(): string;\\n            get_internalStackTrace(): string;\\n            /** Specifies a type name associated with the internal error if a type name is available. */\\n            get_internalTypeName(): string;\\n            get_status(): SocialStatusCode;\\n        }\\n\\n        /** Specifies a feed, which contains an array of SocialThreads, each of which specifies a root SocialPost object and an array of response SocialPost objects. */\\n        class SocialFeed extends SP.ClientValueObject {\\n            /** Specifies attributes of the returned feed.\\n                The attributes specify if the requested feed has additional threads that were not included in the returned thread. */\\n            get_attributes(): SocialFeedAttributes;\\n            /** Returns the date-time of the most recent post that was requested.\\n                The most recent post that was requested can be removed from the feed if the current user does not have access to it.\\n                Consequently, the feed does not always contain the post with the date specified in this property. */\\n            get_newestProcessed(): string;\\n            /** The OldestProcessed property returns the date-time of the oldest post that was requested.\\n                The oldest post that was requested can be removed from the feed if the current user does not have access to it.\\n                Consequently, the feed does not always contain the post with the date specified in this property */\\n            get_oldestProcessed(): string;\\n            /** Contains the social threads in the feed. */\\n            get_threads(): SocialThread[];\\n            /** Returns the number of mentions of the current user that have been added to the feed on the server since the time that the unread mention count was cleared for the current user. */\\n            get_unreadMentionCount(): number;\\n        }\\n\\n        /** Provides access to social feeds.\\n            It provides methods to create posts, delete posts, read posts, and perform other operations on posts. */\\n        class SocialFeedManager extends SP.ClientObject {\\n            constructor(context: SP.ClientRuntimeContext);\\n            /** Returns the current user */\\n            get_owner(): SocialActor;\\n            /** Specifies the URI of the personal site portal. */\\n            get_personalSitePortalUri(): string;\\n            /** Creates a post in the current user's newsfeed, in the specified user's feed, or in the specified thread.\\n                This method returns a new or a modified thread.\\n                @param targetId Optional, specifies the target of the post.\\n                                If this parameter is null, the post is created as a root post in the current user's feed.\\n                                If this parameter is set to a site URL or a site actor identification, the post is created as a root post in the specified site feed.\\n                                If this parameter is set to a thread identification, the post is created as a reply post in the specified thread.\\n                @param creationData Specifies the format and content of the post. */\\n            createPost(targetId: string, creationData: SocialPostCreationData): SocialThread;\\n            /** Deletes the specified post.\\n                This method returns a digest of the modified thread.\\n                If the entire thread is deleted, this method returns null.\\n                If the post being deleted is the root post of a thread, all reply posts are also deleted.\\n                @param postId   Specifies the post to be deleted.\\n                                Corresponds the value returned from SocialPost.get_id(). */\\n            deletePost(postId: string): SocialThread;\\n            /** Returns the set of users who have liked the specified post.\\n                @param postId   Specifies the post being queried for information about users that like the post.\\n                                Corresponds the value returned from SocialPost.get_id().*/\\n            getAllLikers(postId: string): SocialActor[];\\n            /** Returns a feed for the current user.\\n                The feed consists of an array of message threads.\\n                Each thread consists of a root post and an array of reply posts. */\\n            getFeed(type: SocialFeedType, options: SocialFeedOptions): SocialFeed;\\n            /** Returns the public feed for a user or for a site.\\n                The feed lists activity by the user and posts created by the server for that user.\\n                For example, the feed can include posts indicating the user's birthday or indicating that the user liked a post.\\n                @param actorId  Corresponds to the value returned by SocialActor.get_id().\\n                                If the actorId specifies the current user, this method returns the public feed for the current user. */\\n            getFeedFor(actorId: string, options: SocialFeedOptions): SocialFeed;\\n            /** Returns the root post and all reply posts in the thread. */\\n            getFullThread(threadId: string): SocialThread;\\n            /** Returns a feed containing mention reference threads from the current user's personal feed. */\\n            getMentions(clearUnreadMentions: boolean, options: SocialFeedOptions): SocialFeed;\\n            /** Returns the server's count of unread mentions of the current user.\\n                The server maintains a count of unread mentions in posts, but does not track which mentions have been read.\\n                When a new mention is stored on the server, it increments the unread mention for the user specified by the mention.\\n                The unread mention count is cleared by the GetMentions method. */\\n            getUnreadMentionCount(): SP.IntResult;\\n            /** Specifies that the current user likes the specified post.\\n                Returns a digest thread containing the specified post.\\n                A digest thread contains the root post and a selection of reply posts */\\n            likePost(postId: string): SocialThread;\\n            /** Specifies that the current user does not like the specified post.\\n                Returns a digest thread containing the specified post.  */\\n            unlikePost(postId: string): SocialThread;\\n            /** Prevents any user from adding a new reply post to the specified thread.\\n                Once a thread is locked, no new reply posts can be added until after the thread has been unlocked with the unlockThread method.\\n                This method returns a digest of the locked thread */\\n            lockThread(threadId: string): SocialThread;\\n            /** Allows users to add new reply posts to the specified thread. */\\n            unlockThread(threadId: string): SocialThread;\\n            /** Suppresses activity notifications for the current user of updates to the specified thread. */\\n            suppressThreadNotifications(threadId: string): void;\\n            /** Creates an image attachment for a future post. */\\n            createImageAttachment(name: string, description: string, imageData: any): SocialAttachment;\\n            /** Generates a preview for the content specified by the URL. */\\n            getPreview(itemUrl: string): SocialAttachment;\\n            /** Returns the preview image data for an image attachment.\\n                @param url Specifies the URL of the preview image relative to the personal site portal.\\n                @param key Specifies the URL-encoded key to decrypt the image.\\n                @param iv Specifies the URL-encoded initialization vector for decrypting the image. */\\n            getPreviewImage(url: string, key: string, iv: string): any;\\n        }\\n\\n        class SocialFeedOptions extends SP.ClientObject {\\n            get_maxThreadCount(): number;\\n            set_maxThreadCount(value: number): number;\\n            get_newerThan(): string;\\n            set_newerThan(value: string): string;\\n            get_olderThan(): string;\\n            set_olderThan(value: string): string;\\n            get_sortOrder(): SocialFeedSortOrder;\\n            set_sortOrder(value: SocialFeedSortOrder): SocialFeedSortOrder;\\n        }\\n\\n        /** Provides properties and methods for managing a user's list of followed actors.\\n            Actors can be users, documents, sites, and tags. */\\n        class SocialFollowingManager extends SP.ClientObject {\\n            constructor(context: SP.ClientRuntimeContext);\\n            /** URI to a site  that lists the current user's followed documents. */\\n            get_followedDocumentsUri(): string;\\n            /** URI to a site  that lists the current user's followed sites. */\\n            get_followedSitesUri(): string;\\n            /** Adds the specified actor to the current user's list of followed items.\\n                Returns one of the following values, wrapped into the SP.IntResult object:\\n                0 = ok,\\n                1 = alreadyFollowing,\\n                2 = limitReached,\\n                3 = internalError */\\n            follow(actor: SocialActorInfo): SP.IntResult;\\n            stopFollowing(actor: SocialActorInfo): SP.BooleanResult;\\n            isFollowed(actor: SocialActorInfo): SP.BooleanResult;\\n            getFollowed(types: SocialActorTypes): SocialActor[];\\n            getFollowedCount(types: SocialActorTypes): SP.IntResult;\\n            /** Returns the users who are followers of the current user. */\\n            getFollowers(): SocialActor[];\\n            getSuggestions(): SocialActor[];\\n        }\\n\\n        /** Defines a link that includes a URI and text representation.\\n            This class is used to represent the location of a web site.  */\\n        class SocialLink extends SP.ClientValueObject {\\n            get_text(): string;\\n            set_text(value: string): string;\\n            get_uri(): string;\\n            set_uri(value: string): string;\\n        }\\n\\n        /** Specifies a post read from the server. */\\n        class SocialPost extends SP.ClientValueObject {\\n            /** Specifies an image, document preview, or video preview attachment */\\n            get_attachment(): SocialAttachment;\\n            /** Describes attributes about the post, such as whether the current user can delete or like the post.  */\\n            get_attributes(): SocialPostAttributes;\\n            /** Specifies the author of the post as an index to the social thread's Actors array. */\\n            get_authorIndex(): number;\\n            /** Specifies the date and time that the post was created on the server. */\\n            get_createdTime(): string;\\n            /** Specifies the unique identifier of the post. */\\n            get_id(): string;\\n            /** Specifies information about users who like the post. */\\n            get_likerInfo(): SocialPostActorInfo;\\n            /** Specifies the date and time that the post was last modified on the server. */\\n            get_modifiedTime(): string;\\n            /** An array of objects in a post, where each object represents a user, document, site, tag, or link. */\\n            get_overlays(): SocialDataOverlay[];\\n            /** Specifies whether a post is the root post or a reply post in a thread */\\n            get_postType(): SocialPostType;\\n            /** Specifies the URI of the image to be displayed with the post.  */\\n            get_preferredImageUri(): string;\\n            /** Specifies the link to a web site associated with the application that created the post. */\\n            get_source(): SocialLink;\\n            /** Specifies the text of the post. */\\n            get_text(): string;\\n        }\\n\\n        /** Specifies a set of users, documents, sites, and tags by an index into the SocialThreadActors array  */\\n        class SocialPostActorInfo extends SP.ClientValueObject {\\n            get_includesCurrentUser(): boolean;\\n            /** Specifies an array of indexes into the SocialThreadActors array.\\n                The server can choose to return a limited set of actors. For example, the server can choose to return a subset of the users that like a post. */\\n            get_indexes(): number[];\\n            get_totalCount(): number;\\n        }\\n\\n        /** Specifies the content of a post in the SocialFeedManager.createPost method.\\n            The post consists of a text message, which can optionally include social tags, mentions of users, and links. */\\n        class SocialPostCreationData extends SP.ClientValueObject {\\n            /** Specifies an image, document preview, or video preview to be used in the post. */\\n            get_attachment(): SocialAttachment;\\n            /** Specifies an image, document preview, or video preview to be used in the post. */\\n            set_attachment(value: SocialAttachment): SocialAttachment;\\n            /** Specifies an array consisting of social tags, user mentions, links to documents, links to sites, and generic links.\\n                Each element in the array is inserted into the ContentText string if there is a substitution reference to the array element in the string. */\\n            get_contentItems(): SocialDataItem[];\\n            /** Specifies an array consisting of social tags, user mentions, links to documents, links to sites, and generic links.\\n                Each element in the array is inserted into the ContentText string if there is a substitution reference to the array element in the string. */\\n            set_contentItems(value: SocialDataItem[]): SocialDataItem[];\\n            /** Contains the text body of the post. */\\n            get_contentText(): string;\\n            /** Contains the text body of the post.\\n                It can optionally contain one or more substitution references to elements in the zero-based ContentItems array.\\n                A substitution reference consists of a series of characters that consist of an open-brace character ({) followed by one of more digits in the range 0 to 9 and terminated by a close-brace character (}).\\n                The substitution reference is replaced by the text value of the element in the in the array at the offset specified by the value of the digits.\\n                For example, the text string \\\"{0}\\\" is replaced by the first element in the ContentItems array. */\\n            set_contentText(value: string): string;\\n            /** Specifies additional information when creating server-generated posts */\\n            get_definitionData(): SocialPostDefinitionData;\\n            /** Specifies additional information when creating server-generated posts */\\n            set_definitionData(value: SocialPostDefinitionData): SocialPostDefinitionData;\\n            /** Specifies the link to a web site associated with the application that created the post */\\n            get_source(): SocialLink;\\n            /** Specifies the link to a web site associated with the application that created the post */\\n            set_source(value: SocialLink): SocialLink;\\n            /** Specifies that access to the post SHOULD be restricted to users that have access to the objects identified by the array of URIs */\\n            get_securityUris(): string[];\\n            /** Specifies that access to the post SHOULD be restricted to users that have access to the objects identified by the array of URIs */\\n            set_securityUris(value: string[]): string[];\\n            /** Indicates whether the post is to be used as the current user's new status message. */\\n            get_updateStatusText(): boolean;\\n            /** Indicates whether the post is to be used as the current user's new status message. */\\n            set_updateStatusText(value: boolean): boolean;\\n        }\\n\\n        /** Provides additional information about server-generated posts.\\n            This type can only be specified in a server-to-server call. */\\n        class SocialPostDefinitionData extends SP.ClientValueObject {\\n            get_items(): SocialPostDefinitionDataItem[];\\n            set_items(value: SocialPostDefinitionDataItem[]): SocialPostDefinitionDataItem[];\\n            get_name(): string;\\n            set_name(value: string): string;\\n        }\\n\\n        /** Specifies an item to be inserted in a post by replacing a token in the post definition.\\n            This type can only be specified in a server-to-server call. */\\n        class SocialPostDefinitionDataItem extends SP.ClientValueObject {\\n            /** Specifies the name of the user.\\n                This property is only used if the ItemType property specifies that the item is a User. */\\n            get_accountName(): string;\\n            /** Specifies the name of the user.\\n                This property is only used if the ItemType property specifies that the item is a User. */\\n            set_accountName(value: string): string;\\n            /** Specifies whether the item being formatted is a text element, a user, a document, a site, a tag, or a link. */\\n            get_itemType(): SocialPostDefinitionDataItemType;\\n            /** Specifies whether the item being formatted is a text element, a user, a document, a site, a tag, or a link. */\\n            set_itemType(value: SocialPostDefinitionDataItemType): SocialPostDefinitionDataItemType;\\n            /** Specifies the post definition token to be replaced by the item */\\n            get_placeholderName(): string;\\n            /** Specifies the post definition token to be replaced by the item */\\n            set_placeholderName(value: string): string;\\n            /** Specifies the GUID that identifies the tag.\\n                This property is only used if the ItemType property specifies that the item is a Tag. */\\n            get_tagGuid(): string;\\n            /** Specifies the GUID that identifies the tag.\\n                This property is only used if the ItemType property specifies that the item is a Tag. */\\n            set_tagGuid(value: string): string;\\n            /** Specifies the text that is substituted for the placeholder */\\n            get_text(): string;\\n            /** Specifies the text that is substituted for the placeholder */\\n            set_text(value: string): string;\\n            /** Specifies the URI of the document, site, or link.\\n                This property is only available if the ItemType property specifies that the item is a Document, Link, or Site. */\\n            get_uri(): string;\\n            /** Specifies the URI of the document, site, or link.\\n                This property is only available if the ItemType property specifies that the item is a Document, Link, or Site. */\\n            set_uri(value: string): string;\\n        }\\n\\n        /** Specifies a reference to a post in another thread.\\n            The referenced post can be a post with a tag, a post that is liked, a post that mentions a user, or a post that is a reply. */\\n        class SocialPostReference extends SP.ClientValueObject {\\n            /** Provides a digest of the thread containing the referenced post */\\n            get_digest(): SocialThread;\\n            get_post(): SocialPost;\\n            /** Specifies the unique identifier of the thread containing the referenced post. */\\n            get_threadId(): string;\\n            /** Specifies the current owner of the thread as an index into the SocialThreadActors array. */\\n            get_threadOwnerIndex(): number;\\n        }\\n\\n        /** Specifies a thread that is stored on the server.\\n            The thread contains a root post and zero or more reply posts. */\\n        class SocialThread extends SP.ClientValueObject {\\n            /** Specifies the users who have created a post in the returned thread and also contains any users, documents, sites, and tags that are referenced in any of the posts in the returned thread. */\\n            get_actors(): SocialActor[];\\n            /** Specifies attributes of the thread, such as whether the current user can reply or lock the thread and whether the thread is a digest of a thread on the server, whether the number of replies has reached the maximum, and whether the thread is locked. */\\n            get_attributes(): SocialThreadAttributes;\\n            /** Specifies the unique identification of the thread. */\\n            get_id(): string;\\n            /** Specifies the thread owner as an index into the Actors array.\\n                Typically, the thread owner is the user who created the root post, but the thread owner can be any user included in the Actors array. */\\n            get_ownerIndex(): number;\\n            /** Specifies a URI that is a permanent reference to the thread, if such a permanent reference is available.  */\\n            get_permalink(): string;\\n            /** Specifies a reference to a post in another thread.\\n                The PostReference property is available only if the ThreadType has a value of ReplyReference, LikeReference, MentionReference, or TagReference.  */\\n            get_postReference(): SocialPostReference;\\n            /** Returns an array of zero or more reply posts.\\n                The server can return a subset of the reply posts that are stored on the server. */\\n            get_replies(): SocialPost[];\\n            get_rootPost(): SocialPost;\\n            /** Provides information about conditions that were encountered retrieving the thread that did not prevent the operation from completing. */\\n            get_status(): SocialStatusCode;\\n            /** Specifies if the thread is a normal thread created by one or more CreatePost calls or a reference post generated by the server when a user replies to a post, likes a post, or creates a post with a tag or mention */\\n            get_threadType(): SocialThreadType;\\n            get_totalReplyCount(): number;\\n        }\\n    }\\n}\\ndeclare namespace SP {\\n    namespace Taxonomy {\\n        enum StringMatchOption {\\n            startsWith,\\n            exactMatch\\n        }\\n\\n        enum ChangeItemType {\\n            unknown,\\n            term,\\n            termSet,\\n            group,\\n            termStore,\\n            site\\n        }\\n\\n        enum ChangeOperationType {\\n            unknown,\\n            add,\\n            edit,\\n            deleteObject,\\n            move,\\n            copy,\\n            pathChange,\\n            merge,\\n            importObject,\\n            restore\\n        }\\n\\n        class TaxonomySession extends SP.ClientObject {\\n            static getTaxonomySession(context: SP.ClientContext): TaxonomySession;\\n            get_offlineTermStoreNames(): string[];\\n            get_termStores(): TermStoreCollection;\\n            getTerms(labelMatchInformation: LabelMatchInformation): TermCollection;\\n            updateCache(): void;\\n            getTerm(guid: SP.Guid): Term;\\n            getTermsById(termIds: SP.Guid[]): TermCollection;\\n            getTermsInDefaultLanguage(\\n                termLabel: string,\\n                defaultLabelOnly: boolean,\\n                stringMatchOption: StringMatchOption,\\n                resultCollectionSize: number,\\n                trimUnavailable: boolean,\\n                trimDeprecated: boolean): TermCollection;\\n\\n            getTermsInWorkingLocale(\\n                termLabel: string,\\n                defaultLabelOnly: boolean,\\n                stringMatchOption: StringMatchOption,\\n                resultCollectionSize: number,\\n                trimUnavailable: boolean,\\n                trimDeprecated: boolean): TermCollection;\\n\\n            getTermsWithCustomProperty(customPropertyName: string, trimUnavailable: boolean): TermCollection;\\n            getTermsWithCustomProperty(customPropertyMatchInformation: CustomPropertyMatchInformation): TermCollection;\\n            getTermSetsByName(termSetName: string, lcid: number): TermSetCollection;\\n            getTermSetsByTermLabel(requiredTermLabels: string[], lcid: number): TermSetCollection;\\n            getDefaultKeywordsTermStore(): TermStore;\\n            getDefaultSiteCollectionTermStore(): TermStore;\\n        }\\n\\n        interface TermStoreCollection extends SP.ClientObjectCollection<TermStore> {\\n            itemAt(index: number): TermStore;\\n            get_item(index: number): TermStore;\\n            getById(id: SP.Guid): TermStore;\\n            getByName(name: string): TermStore;\\n        }\\n\\n        class TermStore extends SP.ClientObject {\\n            get_contentTypePublishingHub(): string;\\n            get_defaultLanguage(): number;\\n            set_defaultLanguage(value: number): void;\\n            get_groups(): TermGroupCollection;\\n            get_hashTagsTermSet(): TermSet;\\n            get_id(): SP.Guid;\\n            get_isOnline(): boolean;\\n            get_keywordsTermSet(): TermSet;\\n            get_languages(): number[];\\n            get_name(): string;\\n            get_orphanedTermsTermSet(): TermSet;\\n            get_systemGroup(): TermGroup;\\n            get_workingLanguage(): number;\\n            set_workingLanguage(value: number): void;\\n\\n            addLanguage(lcid: number): void;\\n            commitAll(): void;\\n            createGroup(name: string, groupId?: SP.Guid): TermGroup;\\n\\n            deleteLanguage(lcid: number): void;\\n\\n            getChanges(changeInformation: ChangeInformation): ChangedItemCollection;\\n\\n            getGroup(id: SP.Guid): TermGroup;\\n            getTerm(termId: SP.Guid): Term;\\n            getTermInTermSet(termSetId: SP.Guid, termId: SP.Guid): Term;\\n            getTermsById(termIds: SP.Guid[]): TermCollection;\\n            getTerms(termLabel: string, trimUnavailable: boolean): TermCollection;\\n            getTerms(labelMatchInformation: LabelMatchInformation): TermCollection;\\n            getTermSetsByName(termSetName: string, lcid: number): TermSetCollection;\\n            getTermSetsByTermLabel(requiredTermLabels: string[], lcid: number): TermSetCollection;\\n            getTermsWithCustomProperty(customPropertyName: string, trimUnavailable: boolean): TermCollection;\\n            getTermsWithCustomProperty(customPropertyMatchInformation: CustomPropertyMatchInformation): TermCollection;\\n\\n            getTermSet(termSetId: SP.Guid): TermSet;\\n            getTermSetsWithCustomProperty(customPropertyMatchInformation: CustomPropertyMatchInformation): TermSetCollection;\\n            rollbackAll(): void;\\n            updateCache(): void;\\n            getSiteCollectionGroup(currentSite: SP.Site, createIfMissing: boolean): TermGroup;\\n            updateUsedTermsOnSite(currentSite: SP.Site): void;\\n        }\\n\\n        class TaxonomyItem extends SP.ClientObject {\\n            static normalizeName(context: SP.ClientContext, name: string): SP.StringResult;\\n            get_createdDate(): Date;\\n            get_id(): SP.Guid;\\n            get_lastModifiedDate(): Date;\\n            get_name(): string;\\n            set_name(value: string): void;\\n            get_termStore(): TermStore;\\n            deleteObject(): void;\\n        }\\n\\n        interface TermGroupCollection extends SP.ClientObjectCollection<TermGroup> {\\n            itemAt(index: number): TermGroup;\\n            get_item(index: number): TermGroup;\\n            getById(id: SP.Guid): TermGroup;\\n            getByName(name: string): TermGroup;\\n        }\\n\\n        class TermGroup extends TaxonomyItem {\\n            get_description(): string;\\n            set_description(value: string): void;\\n            get_isSiteCollectionGroup(): boolean;\\n            get_isSystemGroup(): boolean;\\n            get_termSets(): TermSetCollection;\\n            createTermSet(name: string, newTermSetId: SP.Guid, lcid: number): TermSet;\\n            exportObject(): SP.StringResult;\\n            getChanges(changeInformation: ChangeInformation): ChangedItemCollection;\\n            getTermSetsWithCustomProperty(customPropertyMatchInformation: CustomPropertyMatchInformation): TermSetCollection;\\n        }\\n\\n        class TermSetItem extends TaxonomyItem {\\n            get_customProperties(): { [key: string]: string; };\\n            get_customSortOrder(): string;\\n            set_customSortOrder(value: string): void;\\n            get_isAvailableForTagging(): boolean;\\n            set_isAvailableForTagging(value: boolean): void;\\n            get_owner(): string;\\n            set_owner(value: string): void;\\n            get_terms(): TermCollection;\\n            createTerm(name: string, lcid: number, newTermId: SP.Guid): Term;\\n            /*getTerms(pagingLimit: number): TermCollection;*/ // Moved to descendants to void TypeScript errors\\n            reuseTerm(sourceTerm: Term, reuseBranch: boolean): Term;\\n            reuseTermWithPinning(sourceTerm: Term): Term;\\n            deleteCustomProperty(name: string): void;\\n            deleteAllCustomProperties(): void;\\n            setCustomProperty(name: string, value: string): void;\\n        }\\n\\n        interface TermSetCollection extends SP.ClientObjectCollection<TermSet> {\\n            itemAt(index: number): TermSet;\\n            get_item(index: number): TermSet;\\n            getById(id: SP.Guid): TermSet;\\n            getByName(name: string): TermSet;\\n        }\\n\\n        class TermSet extends TermSetItem {\\n            get_contact(): string;\\n            set_contact(value: string): void;\\n            get_description(): string;\\n            set_description(value: string): void;\\n            get_group(): TermGroup;\\n            get_isOpenForTermCreation(): boolean;\\n            set_isOpenForTermCreation(value: boolean): void;\\n            get_stakeholders(): string[];\\n            addStakeholder(stakeholderName: string): void;\\n            copy(): TermSet;\\n            deleteStakeholder(stakeholderName: string): void;\\n            exportObject(): SP.StringResult;\\n            getAllTerms(): TermCollection;\\n            getChanges(changeInformation: ChangeInformation): ChangedItemCollection;\\n            getTerm(termId: SP.Guid): Term;\\n            getTerms(pagingLimit: number | LabelMatchInformation): TermCollection;\\n            getTerms(termLabel: string, trimUnavailable: boolean): TermCollection;\\n            getTermsWithCustomProperty(customPropertyName: string, trimUnavailable: boolean): TermCollection;\\n            getTermsWithCustomProperty(customPropertyMatchInformation: CustomPropertyMatchInformation): TermCollection;\\n            move(targetGroup: TermGroup): void;\\n        }\\n\\n        interface TermCollection extends SP.ClientObjectCollection<Term> {\\n            itemAt(index: number): Term;\\n            get_item(index: number): Term;\\n            getById(id: SP.Guid): Term;\\n            getByName(name: string): Term;\\n        }\\n\\n        class Term extends TermSetItem {\\n            get_description(): string;\\n            get_isDeprecated(): boolean;\\n            get_isKeyword(): boolean;\\n            get_isPinned(): boolean;\\n            get_isPinnedRoot(): boolean;\\n            get_isReused(): boolean;\\n            get_isRoot(): boolean;\\n            get_isSourceTerm(): boolean;\\n            get_labels(): LabelCollection;\\n            get_localCustomProperties(): { [key: string]: string; };\\n            get_mergedTermIds(): SP.Guid[];\\n            get_parent(): Term;\\n            get_pathOfTerm(): string;\\n            get_pinSourceTermSet(): TermSet;\\n            get_reusedTerms(): TermCollection;\\n            get_sourceTerm(): Term;\\n            get_termsCount(): number;\\n            get_termSet(): TermSet;\\n            get_termSets(): TermSetCollection;\\n            copy(doCopyChildren: boolean): Term;\\n            createLabel(labelName: string, lcid: number, isDefault: boolean): Label;\\n            deleteLocalCustomProperty(name: string): void;\\n            deleteAllLocalCustomProperties(): void;\\n            deprecate(doDepricate: boolean): void;\\n            getAllLabels(lcid: number): LabelCollection;\\n            getDefaultLabel(lcid: number): Label;\\n            getDescription(lcid: number): SP.StringResult;\\n\\n            getTerms(pagingLimit: number): TermCollection;\\n            getTerms(\\n                termLabel: string,\\n                lcid: number,\\n                defaultLabelOnly: boolean,\\n                stringMatchOption: StringMatchOption,\\n                resultCollectionSize: number,\\n                trimUnavailable: boolean): TermCollection;\\n\\n            merge(termToMerge: Term): void;\\n            move(newParnt: TermSetItem): void;\\n            reassignSourceTerm(reusedTerm: Term): void;\\n            setDescription(description: string, lcid: number): void;\\n            setLocalCustomProperty(name: string, value: string): void;\\n            getIsDescendantOf(ancestorTerm: Term): SP.BooleanResult;\\n            getPath(lcid: number): SP.StringResult;\\n        }\\n\\n        interface LabelCollection extends SP.ClientObjectCollection<Label> {\\n            itemAt(index: number): Label;\\n            get_item(index: number): Label;\\n            getByValue(name: string): Label;\\n        }\\n\\n        class Label extends SP.ClientObject {\\n            get_isDefaultForLanguage(): boolean;\\n            get_language(): number;\\n            set_language(value: number): void;\\n            get_term(): Term;\\n            get_value(): string;\\n            set_value(value: string): void;\\n            deleteObject(): void;\\n            setAsDefaultForLanguage(): void;\\n        }\\n\\n        class LabelMatchInformation extends SP.ClientObject {\\n            constructor(context: SP.ClientContext);\\n            get_defaultLabelOnly(): boolean;\\n            set_defaultLabelOnly(value: boolean): void;\\n            get_excludeKeyword(): boolean;\\n            set_excludeKeyword(value: boolean): void;\\n            get_lcid(): number;\\n            set_lcid(value: number): void;\\n            get_resultCollectionSize(): number;\\n            set_resultCollectionSize(value: number): void;\\n            get_stringMatchOption(): StringMatchOption;\\n            set_stringMatchOption(value: StringMatchOption): void;\\n            get_termLabel(): string;\\n            set_termLabel(value: string): void;\\n            get_trimDeprecated(): boolean;\\n            set_trimDeprecated(value: boolean): void;\\n            get_trimUnavailable(): boolean;\\n            set_trimUnavailable(value: boolean): void;\\n        }\\n\\n        class CustomPropertyMatchInformation extends SP.ClientObject {\\n            constructor(context: SP.ClientContext);\\n            get_customPropertyName(): string;\\n            set_customPropertyName(value: string): void;\\n            get_customPropertyValue(): string;\\n            set_customPropertyValue(value: string): void;\\n            get_resultCollectionSize(): number;\\n            set_resultCollectionSize(value: number): void;\\n            get_stringMatchOption(): StringMatchOption;\\n            set_stringMatchOption(value: StringMatchOption): void;\\n            get_trimUnavailable(): boolean;\\n            set_trimUnavailable(value: boolean): void;\\n        }\\n\\n        class ChangeInformation extends SP.ClientObject {\\n            constructor(context: SP.ClientContext);\\n            get_itemType(): ChangeItemType;\\n            set_itemType(value: ChangeItemType): void;\\n            get_operationType(): ChangeOperationType;\\n            set_operationType(value: ChangeOperationType): void;\\n            get_startTime(): Date;\\n            set_startTime(value: Date): void;\\n            get_withinTimeSpan(): number;\\n            set_withinTimeSpan(value: number): void;\\n        }\\n\\n        interface ChangedItemCollection extends SP.ClientObjectCollection<ChangedItem> {\\n            itemAt(index: number): ChangedItem;\\n            get_item(index: number): ChangedItem;\\n        }\\n\\n        class ChangedItem extends SP.ClientObject {\\n            get_changedBy(): string;\\n            get_changedTime(): Date;\\n            get_id(): SP.Guid;\\n            get_itemType(): ChangeItemType;\\n            get_operation(): ChangeOperationType;\\n        }\\n\\n        class ChangedSite extends ChangedItem {\\n            get_siteId(): SP.Guid;\\n            get_termId(): SP.Guid;\\n            get_termSetId(): SP.Guid;\\n        }\\n\\n        class ChangedGroup extends ChangedItem {\\n        }\\n\\n        class ChangedTerm extends ChangedItem {\\n            get_changedCustomProperties(): string[];\\n            get_changedLocalCustomProperties(): string[];\\n            get_groupId(): SP.Guid;\\n            get_lcidsForChangedDescriptions(): number[];\\n            get_lcidsForChangedLabels(): number[];\\n            get_termSetId(): SP.Guid;\\n        }\\n\\n        class ChangedTermSet extends ChangedItem {\\n            get_fromGroupId(): SP.Guid;\\n            get_groupId(): SP.Guid;\\n        }\\n        class ChangedTermStore extends ChangedItem {\\n            get_changedLanguage(): number;\\n            get_isDefaultLanguageChanged(): boolean;\\n            get_isFullFarmRestore(): boolean;\\n        }\\n\\n        class TaxonomyField extends SP.FieldLookup {\\n            constructor(context: SP.ClientContext, fields: SP.FieldCollection, filedName: string);\\n            get_anchorId(): SP.Guid;\\n            set_anchorId(value: SP.Guid): void;\\n            get_createValuesInEditForm(): boolean;\\n            set_createValuesInEditForm(value: boolean): void;\\n            get_isAnchorValid(): boolean;\\n            get_isKeyword(): boolean;\\n            set_isKeyword(value: boolean): void;\\n            get_isPathRendered(): boolean;\\n            set_isPathRendered(value: boolean): void;\\n            get_isTermSetValid(): boolean;\\n            get_open(): boolean;\\n            set_open(value: boolean): void;\\n            get_sspId(): SP.Guid;\\n            set_sspId(value: SP.Guid): void;\\n            get_targetTemplate(): string;\\n            set_targetTemplate(value: string): void;\\n            get_termSetId(): SP.Guid;\\n            set_termSetId(value: SP.Guid): void;\\n            get_textField(): SP.Guid;\\n            get_userCreated(): SP.Guid;\\n            set_userCreated(value: SP.Guid): void;\\n\\n            getFieldValueAsText(value: TaxonomyFieldValue): SP.StringResult;\\n            getFieldValueAsTaxonomyFieldValue(value: string): TaxonomyFieldValue;\\n            getFieldValueAsTaxonomyFieldValueCollection(value: string): TaxonomyFieldValueCollection;\\n            setFieldValueByTerm<T = any>(listItem: SP.ListItem<T>, term: Term, lcid: number): void;\\n            setFieldValueByTermCollection<T = any>(listItem: SP.ListItem<T>, terms: TermCollection, lcid: number): void;\\n            setFieldValueByCollection<T = any>(listItem: SP.ListItem<T>, terms: Term[], lcid: number): void;\\n            setFieldValueByValue<T = any>(listItem: SP.ListItem<T>, taxValue: TaxonomyFieldValue): void;\\n            setFieldValueByValueCollection<T = any>(listItem: SP.ListItem<T>, taxValueCollection: TaxonomyFieldValueCollection): void;\\n            getFieldValueAsHtml(value: TaxonomyFieldValue): SP.StringResult;\\n            getValidatedString(value: TaxonomyFieldValue): SP.StringResult;\\n        }\\n\\n        class TaxonomyFieldValueCollection extends SP.ClientObjectCollection<TaxonomyFieldValue> {\\n            constructor(context: SP.ClientContext, fieldValue: string, creatingField: SP.Field);\\n            itemAt(index: number): TaxonomyFieldValue;\\n            get_item(index: number): TaxonomyFieldValue;\\n            populateFromLabelGuidPairs(text: string): void;\\n        }\\n\\n        class TaxonomyFieldValue extends SP.ClientValueObject {\\n            get_label(): string;\\n            set_label(value: string): void;\\n            get_termGuid(): SP.Guid;\\n            set_termGuid(value: SP.Guid): void;\\n            get_wssId(): number;\\n            set_wssId(value: number): void;\\n        }\\n\\n        class MobileTaxonomyField extends SP.ClientObject {\\n            get_readOnly(): boolean;\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace DocumentSet {\\n        class DocumentSet extends ClientObject {\\n            static create(context: ClientContext, parentFolder: Folder, name: string, ctid: ContentTypeId): StringResult;\\n        }\\n    }\\n\\n    namespace Video {\\n        class EmbedCodeConfiguration extends ClientValueObject {\\n            get_autoPlay(): boolean;\\n            set_autoPlay(value: boolean): boolean;\\n\\n            get_displayTitle(): boolean;\\n            set_displayTitle(value: boolean): boolean;\\n\\n            get_linkToOwnerProfilePage(): boolean;\\n            set_linkToOwnerProfilePage(value: boolean): boolean;\\n\\n            get_linkToVideoHomePage(): boolean;\\n            set_linkToVideoHomePage(value: boolean): boolean;\\n\\n            get_loop(): boolean;\\n            set_loop(value: boolean): boolean;\\n\\n            get_pixelHeight(): number;\\n            set_pixelHeight(value: number): number;\\n\\n            get_pixelWidth(): number;\\n            set_pixelWidth(value: number): number;\\n\\n            get_startTime(): number;\\n            set_startTime(value: number): number;\\n\\n            get_previewImagePath(): string;\\n            set_previewImagePath(value: string): string;\\n        }\\n\\n        class VideoSet extends DocumentSet.DocumentSet {\\n            static createVideo(context: ClientContext, parentFolder: Folder, name: string, ctid: ContentTypeId): StringResult;\\n            static uploadVideo(context: ClientContext, list: List, fileName: string, file: any[], overwriteIfExists: boolean, parentFolderPath: string): StringResult;\\n            static getEmbedCode(context: ClientContext, videoPath: string, properties: EmbedCodeConfiguration): StringResult;\\n            static migrateVideo<T = any>(context: ClientContext, videoFile: File): SP.ListItem<T>;\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace UI {\\n        namespace ApplicationPages {\\n            class SelectorSelectionEventArgs extends Sys.EventArgs {\\n                constructor(entities: any);\\n                get_entities(): any;\\n            }\\n            // tslint:disable-next-line: interface-name\\n            interface ISelectorComponent {\\n                get_selectedEntities(): any;\\n                set_selectedEntities(value: any): void;\\n                get_callback(): (sender: any, e: Sys.EventArgs) => void;\\n                set_callback(value: (sender: any, e: Sys.EventArgs) => void): void;\\n                get_scopeKey(): string;\\n                get_componentType(): SP.UI.ApplicationPages.SelectorType;\\n                revertTo(ent: SP.UI.ApplicationPages.ResolveEntity): void;\\n                removeEntity(ent: SP.UI.ApplicationPages.ResolveEntity): void;\\n                setEntity(ent: SP.UI.ApplicationPages.ResolveEntity): void;\\n            }\\n            enum SelectorType {\\n                none,\\n                resource,\\n                people,\\n                people_And_Resource,\\n                event,\\n            }\\n            class CalendarSelector extends Sys.Component {\\n                static instance(): SP.UI.ApplicationPages.CalendarSelector;\\n                registerSelector(selector: SP.UI.ApplicationPages.ISelectorComponent): void;\\n                getSelector(type: SP.UI.ApplicationPages.SelectorType, scopeKey: string): SP.UI.ApplicationPages.ISelectorComponent;\\n                addHandler(scopeKey: string, people: boolean, resource: boolean, handler: (sender: any, selection: SP.UI.ApplicationPages.SelectorSelectionEventArgs) => void): void;\\n                revertTo(scopeKey: string, ent: SP.UI.ApplicationPages.ResolveEntity): void;\\n                removeEntity(scopeKey: string, ent: SP.UI.ApplicationPages.ResolveEntity): void;\\n                constructor();\\n            }\\n            class BaseSelectorComponent implements SP.UI.ApplicationPages.ISelectorComponent {\\n                constructor(key: string, type: SP.UI.ApplicationPages.SelectorType);\\n                get_scopeKey(): string;\\n                get_componentType(): SP.UI.ApplicationPages.SelectorType;\\n                get_selectedEntities(): any;\\n                set_selectedEntities(value: any): void;\\n                get_callback(): (sender: any, e: Sys.EventArgs) => void;\\n                set_callback(value: (sender: any, e: Sys.EventArgs) => void): void;\\n                revertTo(ent: SP.UI.ApplicationPages.ResolveEntity): void;\\n                removeEntity(ent: SP.UI.ApplicationPages.ResolveEntity): void;\\n                setEntity(ent: SP.UI.ApplicationPages.ResolveEntity): void;\\n            }\\n\\n            // tslint:disable-next-line: interface-name\\n            interface ICalendarController {\\n                moveToDate(date: string): void;\\n                moveToViewType(viewType: string): void;\\n                moveToViewDate(scope: SP.UI.ApplicationPages.CalendarScope, date: string): void;\\n                moveToView(scope: SP.UI.ApplicationPages.CalendarScope): void;\\n                expandAll(): void;\\n                collapseAll(): void;\\n                refreshItems(): void;\\n                getActiveScope(): SP.UI.ApplicationPages.CalendarScope;\\n                newItemDialog(contentTypeId: string): void;\\n                deleteItem(itemId: string): void;\\n            }\\n            enum CalendarScope {\\n                nothing,\\n                monthly,\\n                weeklyGroup,\\n                daily,\\n                weekly,\\n                dailyGroup,\\n            }\\n            class CalendarInstanceRepository {\\n                static registerInstance(instanceId: string, contoller: SP.UI.ApplicationPages.ICalendarController): void;\\n                static lookupInstance(instanceId: string): SP.UI.ApplicationPages.ICalendarController;\\n                static firstInstance(): SP.UI.ApplicationPages.ICalendarController;\\n            }\\n            class ResolveEntity {\\n                tYPE_EVENT: string;\\n                tYPE_USER: string;\\n                tYPE_RESOURCE: string;\\n                tYPE_EXCHANGE: string;\\n                entityType: string;\\n                displayName: string;\\n                email: string;\\n                accountName: string;\\n                id: string;\\n                members: SP.UI.ApplicationPages.ResolveEntity[];\\n                needResolve: boolean;\\n                isGroup: boolean;\\n                get_key(): string;\\n                constructor();\\n            }\\n            class ClientPeoplePickerQueryParameters extends SP.ClientValueObject {\\n                get_allowEmailAddresses(): boolean;\\n                set_allowEmailAddresses(value: boolean): void;\\n                get_allowMultipleEntities(): boolean;\\n                set_allowMultipleEntities(value: boolean): void;\\n                get_allUrlZones(): boolean;\\n                set_allUrlZones(value: boolean): void;\\n                get_enabledClaimProviders(): string;\\n                set_enabledClaimProviders(value: string): void;\\n                get_forceClaims(): boolean;\\n                set_forceClaims(value: boolean): void;\\n                get_maximumEntitySuggestions(): number;\\n                set_maximumEntitySuggestions(value: number): void;\\n                get_principalSource(): SP.Utilities.PrincipalSource;\\n                set_principalSource(value: SP.Utilities.PrincipalSource): void;\\n                get_principalType(): SP.Utilities.PrincipalType;\\n                set_principalType(value: SP.Utilities.PrincipalType): void;\\n                get_queryString(): string;\\n                set_queryString(value: string): void;\\n                get_required(): boolean;\\n                set_required(value: boolean): void;\\n                get_sharePointGroupID(): number;\\n                set_sharePointGroupID(value: number): void;\\n                get_urlZone(): SP.UrlZone;\\n                set_urlZone(value: SP.UrlZone): void;\\n                get_urlZoneSpecified(): boolean;\\n                set_urlZoneSpecified(value: boolean): void;\\n                get_web(): SP.Web;\\n                set_web(value: SP.Web): void;\\n                get_webApplicationID(): SP.Guid;\\n                set_webApplicationID(value: SP.Guid): void;\\n                get_typeId(): string;\\n                writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n                constructor();\\n            }\\n            class ClientPeoplePickerWebServiceInterface {\\n                static clientPeoplePickerSearchUser(context: SP.ClientRuntimeContext, queryParams: SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters): SP.StringResult;\\n                static clientPeoplePickerResolveUser(context: SP.ClientRuntimeContext, queryParams: SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters): SP.StringResult;\\n            }\\n            class PeoplePickerWebServiceInterface {\\n                static getSearchResultsByHierarchy(context: SP.ClientRuntimeContext, providerID: string, hierarchyNodeID: string, entityTypes: string, contextUrl: string): SP.StringResult;\\n                static getSearchResults(context: SP.ClientRuntimeContext, searchPattern: string, providerID: string, hierarchyNodeID: string, entityTypes: string): SP.StringResult;\\n            }\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace UI {\\n        class PopoutMenu implements Sys.IDisposable {\\n            constructor(launcherId: string, menuId: string, iconId: string, launcherOpenCssClass: string, textDirection: string, closeIconUrl: string, isClustered: boolean, closeIconOffsetLeft: number, closeIconOffsetTop: number, closeIconHeight: number, closeIconWidth: number);\\n            launchMenu(): void;\\n            closeMenu(): void;\\n            static createPopoutMenuInstanceAndLaunch(anchorId: string, menuId: string, iconId: string, anchorOpenCss: string, textDirection: string, closeIconUrl: string, isClustered: boolean, x: number, y: number, height: number, width: number): void;\\n            static closeActivePopoutMenuInstance(): void;\\n            dispose(): void;\\n        }\\n        class AttractModeControl extends Sys.UI.Control {\\n            defaultAttractModeIcon: string;\\n            cssAttractMode: string;\\n            cssAttractModeBackground: string;\\n            cssAttractModeCell: string;\\n            cssAttractModeWrapper: string;\\n            cssAttractModeIcon: string;\\n            cssAttractModeText: string;\\n            get_imageElement(): any;\\n            get_textElement(): HTMLElement;\\n            constructor();\\n        }\\n\\n        namespace Notify {\\n            function addNotification(strHtml: string, bSticky: boolean): string;\\n            function removeNotification(nid: string): void;\\n            function showLoadingNotification(bSticky: boolean): string;\\n\\n            class Notification {\\n                constructor(containerId: SPNotifications.ContainerID, strHtml: string, bSticky?: boolean, strTooltip?: string, onclickHandler?: () => void, extraData?: SPStatusNotificationData);\\n                get_id(): string;\\n                Show(bNoAnimate: boolean): void;\\n                Hide(bNoAnimate: boolean): void;\\n            }\\n            class NotificationContainer {\\n                constructor(id: number, element: any, layer: number, notificationLimit?: number);\\n                Clear(): void;\\n                GetCount(): number;\\n                SetEventHandler(eventId: SPNotifications.EventID, eventHandler: any): void;\\n            }\\n        }\\n\\n        class Status {\\n            static addStatus(strTitle: string, strHtml?: string, atBegining?: boolean): string;\\n            static appendStatus(sid: string, strTitle: string, strHtml: string): string;\\n            static updateStatus(sid: string, strHtml: string): void;\\n            static setStatusPriColor(sid: string, strColor: string): void;\\n            static removeStatus(sid: string): void;\\n            static removeAllStatus(hide: boolean): void;\\n            constructor();\\n        }\\n\\n        namespace Workspace {\\n            function add_resized(handler: () => void): void;\\n            function remove_resized(handler: () => void): void;\\n        }\\n        class Menu {\\n            static create(id: string): SP.UI.Menu;\\n            addMenuItem(text: string, actionScriptText: string, imageSourceUrl: string, imageAlternateText: string, sequenceNumber: number, description: string, id: string): HTMLElement;\\n            addSeparator(): void;\\n            addSubMenu(text: string, imageSourceUrl: string, imageAlternateText: string, sequenceNumber: number, description: string, id: string): SP.UI.Menu;\\n            show(relativeElement: HTMLElement, forceRefresh: boolean, flipTopLevelMenu: boolean, yOffset: number): void;\\n            showFilterMenu(relativeElement: HTMLElement, forceRefresh: boolean, flipTopLevelMenu: boolean, yOffset: number, fShowClose: boolean, fShowCheckBoxes: boolean): void;\\n            hideIcons(): void;\\n            showIcons(): void;\\n        }\\n        class MenuTest {\\n            static setup(relativeElement: HTMLElement): void;\\n            constructor();\\n        }\\n\\n        function $create_DialogOptions(): DialogOptions;\\n\\n        /** Result of a modal dialog execution */\\n        enum DialogResult {\\n            /** Do not use this */\\n            invalid,\\n            /** User closed dialog, cancelling the action */\\n            cancel,\\n            /** Dialog actions completed successfully */\\n            OK\\n        }\\n        /** Callback which processes dialog result value after dialog is closed */\\n        type DialogReturnValueCallback = (dialogResult: DialogResult, returnValue: any) => void;\\n        /** Options for dialog creation */\\n        // tslint:disable-next-line: interface-name\\n        interface IDialogOptions {\\n            /** Text displayed in the title bar of the dialog box. If not defined, it will default to the title of the page defined by url property. */\\n            title?: string;\\n            /** X coordinate of the dialog box. */\\n            x?: number;\\n            /** Y coordinate of the dialog box. */\\n            y?: number;\\n            /** The dialog will be maximized when shown. */\\n            showMaximized?: boolean;\\n            /** url of the page which is shown in the modal dialog. You should use either html or url attribute, but not both. */\\n            url?: string;\\n            /** specifies if close button should be shown on the dialog */\\n            showClose?: boolean;\\n            /** specifies if maximize button should be shown on the dialog */\\n            allowMaximize?: boolean;\\n            /** callback that is called after dialog is closed */\\n            dialogReturnValueCallback?: DialogReturnValueCallback;\\n            /** automatically determine size of the dialog based on its contents. */\\n            autoSize?: boolean;\\n            /** minimum width of the dialog when using autoSize option */\\n            autoSizeStartWidth?: number;\\n            /** include padding for adding a scrollbar */\\n            includeScrollBarPadding?: boolean;\\n            /** width of the dialog. if not specified, will be determined automatically based on the contents of the dialog */\\n            width?: number;\\n            /** height of the dialog. if not specified, will be determined automatically based on the contents of the dialog */\\n            height?: number;\\n            /** html element which will be used as contents of the dialog. You should use either html or url attribute, but not both. */\\n            html?: HTMLElement;\\n            /** custom arguments to be passed to the dialog */\\n            args?: any;\\n        }\\n        class DialogOptions implements IDialogOptions {\\n            /** Text displayed in the title bar of the dialog box. If not defined, it will default to the title of the page defined by url property. */\\n            title: string;\\n            /** X coordinate of the dialog box. */\\n            x: number;\\n            /** Y coordinate of the dialog box. */\\n            y: number;\\n            /** The dialog will be maximized when shown. */\\n            showMaximized: boolean;\\n            /** url of the page which is shown in the modal dialog. You should use either html or url attribute, but not both. */\\n            url: string;\\n            /** specifies if close button should be shown on the dialog */\\n            showClose: boolean;\\n            /** specifies if maximize button should be shown on the dialog */\\n            allowMaximize: boolean;\\n            /** callback that is called after dialog is closed */\\n            dialogReturnValueCallback: DialogReturnValueCallback;\\n            /** automatically determine size of the dialog based on its contents. */\\n            autoSize: boolean;\\n            /** minimum width of the dialog when using autoSize option */\\n            autoSizeStartWidth: number;\\n            /** include padding for adding a scrollbar */\\n            includeScrollBarPadding: boolean;\\n            /** width of the dialog. if not specified, will be determined automatically based on the contents of the dialog */\\n            width: number;\\n            /** height of the dialog. if not specified, will be determined automatically based on the contents of the dialog */\\n            height: number;\\n            /** html element which will be used as contents of the dialog. You should use either html or url attribute, but not both. */\\n            html: HTMLElement;\\n            /** custom arguments to be passed to the dialog */\\n            args: any;\\n        }\\n        /** Represents a dialog. Do not use this class directly from your code. */\\n        class Dialog {\\n            get_firstTabStop(): HTMLElement;\\n            get_lastTabStop(): HTMLElement;\\n            get_url(): string;\\n            get_html(): string;\\n            get_title(): string;\\n            get_args(): any;\\n            get_allowMaximize(): boolean;\\n            get_showClose(): boolean;\\n            get_returnValue(): any;\\n            set_returnValue(value: any): void;\\n            get_frameElement(): HTMLFrameElement;\\n            get_dialogElement(): HTMLElement;\\n            get_isMaximized(): boolean;\\n            get_closed(): boolean;\\n            autoSizeSuppressScrollbar(resizePageCallBack: any): void;\\n            autoSize(): void;\\n        }\\n        /** Represents a modal dialog */\\n        class ModalDialog extends SP.UI.Dialog {\\n            /** Displays a modal dialog defined by the specified options. */\\n            static showModalDialog(options: SP.UI.IDialogOptions): SP.UI.ModalDialog;\\n            /** Should be called from an existing dialog. */\\n            static commonModalDialogClose(dialogResult: SP.UI.DialogResult, returnValue: any): void;\\n            /** Shows a modal dialog, specified by url, callback, args, and options. Internally, uses SP.UI.ModalDialog.showModalDialog.\\n                @param url overrides options.url\\n                @param callback overrides options.dialogResultValueCallback\\n                @param args overrides options.args */\\n            static commonModalDialogOpen(url: string, options: SP.UI.IDialogOptions, callback?: SP.UI.DialogReturnValueCallback, args?: any): void;\\n            /** Refresh the page if specified dialogResult equals to SP.UI.DialogResult.OK */\\n            static RefreshPage(dialogResult: SP.UI.DialogResult): void;\\n            /** Show page specified by the url in a modal dialog. If the dialog returns SP.UI.DialogResult.OK, the page is refreshed. */\\n            static ShowPopupDialog(url: string): void;\\n            /** Show modal dialog specified by url, callback, height and width. */\\n            static OpenPopUpPage(url: string, callback: SP.UI.DialogReturnValueCallback, width?: number, height?: number): void;\\n            /** Displays a wait/loading modal dialog with the specified title, message, height and width. Height and width are defined in pixels. Cancel/close button is not shown. */\\n            static showWaitScreenWithNoClose(title: string, message?: string, height?: number, width?: number): SP.UI.ModalDialog;\\n            /** Displays a wait/loading modal dialog with the specified title, message, height and width. Height and width are defined in pixels. Cancel button is shown. If user clicks it, the callbackFunc is called. */\\n            static showWaitScreenSize(title: string, message?: string, callbackFunc?: SP.UI.DialogReturnValueCallback, height?: number, width?: number): SP.UI.ModalDialog;\\n            static showPlatformFirstRunDialog(url: string, callbackFunc: SP.UI.DialogReturnValueCallback): SP.UI.ModalDialog;\\n            static get_childDialog(): SP.UI.ModalDialog;\\n            /** Closes the dialog using the specified dialog result. */\\n            close(dialogResult: SP.UI.DialogResult): void;\\n        }\\n\\n        class Command {\\n            constructor(name: string, displayName: string);\\n            get_displayName(): string;\\n            set_displayName(value: string): string;\\n\\n            get_tooltip(): string;\\n            set_tooltip(value: string): string;\\n\\n            get_isEnabled(): boolean;\\n            set_isEnabled(value: boolean): boolean;\\n\\n            get_href(): string;\\n            get_name(): string;\\n            get_elementIDPrefix(): string;\\n            set_elementIDPrefix(value: string): string;\\n\\n            get_linkElement(): HTMLAnchorElement;\\n\\n            get_isDropDownCommand(): boolean;\\n            set_isDropDownCommand(value: boolean): boolean;\\n\\n            attachEvents(): void;\\n            render(builder: HtmlBuilder): void;\\n\\n            /**Should override*/\\n            onClick(): void;\\n        }\\n\\n        class CommandBar {\\n            constructor();\\n            get_commands(): Command[];\\n            get_dropDownThreshold(): number;\\n            set_dropDownThreshold(value: number): number;\\n            get_elementID(): string;\\n            get_overrideClass(): string;\\n            set_overrideClass(value: string): string;\\n            addCommand(action: Command): void;\\n            insertCommand(action: Command, position: number): void;\\n            render(builder: HtmlBuilder): void;\\n            attachEvents(): void;\\n            findCommandByName(name: string): Command;\\n        }\\n\\n        class PagingControl {\\n            constructor(id: string);\\n            render(innerContent: string): string;\\n            postRender(): void;\\n            get_innerContent(): HTMLSpanElement;\\n            get_innerContentClass(): string;\\n            setButtonState(buttonId: number, state: number): void;\\n            getButtonState(buttonId: number): number;\\n            onWindowResized(): void;\\n\\n            /**Should override*/\\n            onPrev(): void;\\n            onNext(): void;\\n\\n            static ButtonIDs: {\\n                prev: number;\\n                next: number;\\n            };\\n\\n            static ButtonState: {\\n                hidden: number;\\n                disabled: number;\\n                enabled: number;\\n            };\\n        }\\n\\n        namespace Workplace {\\n            function add_resized(handler: (obj: any, args: any) => void): void;\\n            function remove_resized(handler: (obj: any, args: any) => void): void;\\n        }\\n\\n        namespace UIUtility {\\n            function generateRandomElementId(): string;\\n            function cancelEvent(evt: Event): void;\\n            function clearChildNodes(elem: HTMLElement): void;\\n            function hideElement(elem: HTMLElement): void;\\n            function showElement(elem: HTMLElement): void;\\n            function insertBefore(elem: HTMLElement, targetElement: HTMLElement): void;\\n            function insertAfter(elem: HTMLElement, targetElement: HTMLElement): void;\\n            function removeNode(elem: HTMLElement): void;\\n            function calculateOffsetLeft(elem: HTMLElement): number;\\n            function calculateOffsetTop(elem: HTMLElement): number;\\n            function createHtmlInputText(text: string): HTMLInputElement;\\n            function createHtmlInputCheck(isChecked: boolean): HTMLInputElement;\\n            function setInnerText(elem: HTMLElement, value: string): void;\\n            function getInnerText(elem: HTMLElement): string;\\n            function isTextNode(elem: HTMLElement): boolean;\\n            function isSvgNode(elem: HTMLElement): boolean;\\n            function isNodeOfType(elem: HTMLElement, tagNames: string[]): boolean;\\n            function focusValidOnThisNode(elem: HTMLElement): boolean;\\n        }\\n    }\\n}\\n\\ndeclare namespace SPNotifications {\\n    enum ContainerID {\\n        Basic,\\n        Status,\\n    }\\n    enum EventID {\\n        OnShow,\\n        OnHide,\\n        OnDisplayNotification,\\n        OnRemoveNotification,\\n        OnNotificationCountChanged,\\n    }\\n}\\n\\ndeclare class SPStatusNotificationData {\\n    constructor(text: string, subText: string, imageUrl: string, sip: string);\\n}\\ndeclare function RefreshCommandUI(): void;\\n\\ndeclare namespace SP {\\n    namespace UI {\\n        namespace Controls {\\n            // tslint:disable-next-line: interface-name\\n            interface INavigationOptions {\\n                assetId?: string;\\n                siteTitle?: string;\\n                siteUrl?: string;\\n                appTitle?: string;\\n                appTitleIconUrl?: string;\\n                rightToLeft?: boolean;\\n                appStartPage?: string;\\n                appIconUrl?: string;\\n                appHelpPageUrl?: string;\\n                appHelpPageOnClick?: string;\\n                settingsLinks?: ISettingsLink[];\\n                language?: string;\\n                clientTag?: string;\\n                appWebUrl?: string;\\n                onCssLoaded?: string;\\n\\n                bottomHeaderVisible?: boolean;\\n                topHeaderVisible?: boolean;\\n            }\\n\\n            class NavigationOptions implements INavigationOptions { }\\n\\n            // tslint:disable-next-line: interface-name\\n            interface ISettingsLink {\\n                linkUrl: string;\\n                displayName: string;\\n            }\\n\\n            class SettingsLink implements ISettingsLink {\\n                linkUrl: string;\\n                displayName: string;\\n            }\\n\\n            class Navigation {\\n                constructor(placeholderDOMElementId: string, options: INavigationOptions);\\n                get_assetId(): string;\\n                get_siteTitle(): string;\\n                get_siteUrl(): string;\\n\\n                get_appTitle(): string;\\n                set_appTitle(value: string): string;\\n\\n                get_appTitleIconUrl(): string;\\n                set_appTitleIconUrl(value: string): string;\\n\\n                get_rightToLeft(): boolean;\\n                set_rightToLeft(value: boolean): boolean;\\n\\n                get_appStartPage(): string;\\n                set_appStartPage(value: string): string;\\n\\n                get_appIconUrl(): string;\\n                set_appIconUrl(value: string): string;\\n\\n                get_appHelpPageUrl(): string;\\n                set_appHelpPageUrl(value: string): string;\\n\\n                get_appHelpPageOnClick(): string;\\n                set_appHelpPageOnClick(value: string): string;\\n\\n                get_settingsLinks(): ISettingsLink[];\\n                set_settingsLinks(value: ISettingsLink[]): ISettingsLink[];\\n\\n                setVisible(value: boolean): void;\\n\\n                setTopHeaderVisible(value: boolean): void;\\n                setBottomHeaderVisible(value: boolean): void;\\n                remove(): void;\\n\\n                static getVersionedLayoutsUrl(pageName: string): string;\\n            }\\n\\n            class ControlManager {\\n                static getControl(placeHolderId: string): any;\\n            }\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace UserProfiles {\\n        /** Specifies types of changes made in the user profile store. */\\n        enum ChangeTypes {\\n            /** No change was made */\\n            none,\\n            /** An object was added */\\n            add,\\n            /** An object was modified */\\n            modify,\\n            /** An object was removed */\\n            remove,\\n            /** The metadata of an object was modified */\\n            metadata,\\n            /** Multiple operations were performed on an object */\\n            all\\n        }\\n\\n        class HashTag extends ClientValueObject {\\n            get_name(): string;\\n            get_useCount(): number;\\n        }\\n\\n        interface HashTagCollection extends SP.ClientObjectCollection<HashTag> {\\n            itemAt(index: number): HashTag;\\n            get_item(index: number): HashTag;\\n        }\\n\\n        /** Specifies types of user-related objects that can be changed in the user profile store. */\\n        enum ObjectTypes {\\n            none,\\n            singleValueProperty,\\n            multiValueProperty,\\n            anniversary,\\n            dlMembership,\\n            siteMembership,\\n            quickLink,\\n            colleague,\\n            personalizationSite,\\n            userProfile,\\n            webLog,\\n            custom,\\n            organizationProfile,\\n            organizationMembership,\\n            all\\n        }\\n\\n        /** Provides methods for operations related to people.\\n            Note: The SocialFollowingManager object is the recommended object for performing Following People and Following Content tasks.\\n            However, PeopleManager provides some methods that SocialFollowingManager doesn't. */\\n        class PeopleManager extends SP.ClientObject {\\n            constructor(context: SP.ClientRuntimeContext);\\n            static getTrendingTags(context: SP.ClientRuntimeContext): HashTagCollection;\\n            /** Checks whether the first user is following the second user. */\\n            static isFollowing(context: SP.ClientRuntimeContext, possibleFollowerAccountName: string, possibleFolloweeAccountName: string): SP.BooleanResult;\\n            /** Gets the URL of the edit profile page for the current user. */\\n            get_editProfileLink(): string;\\n            /** Gets a Boolean value that indicates whether the current user's People I'm Following list is public. */\\n            get_isMyPeopleListPublic(): boolean;\\n            /** Gets tags that the user is following. */\\n            getFollowedTags(numberOfTagsToFetch: number): string[];\\n            /** Gets user properties for the current user. */\\n            getMyProperties(): PersonProperties;\\n            getPropertiesFor(accountName: string): PersonProperties;\\n            /** Gets the specified user profile property for the specified user. */\\n            getUserProfilePropertyFor(accountName: string, propertyName: string): string;\\n            /** Gets the specified user profile properties for the specified user. */\\n            getUserProfilePropertiesFor(propertiesForUser: UserProfilePropertiesForUser): any[];\\n            /** Gets suggestions for who the current user might want to follow.\\n                Note: The recommended API to use for this task is SocialFollowingManager.getSuggestions.\\n                Returns list of PersonProperties objects */\\n            getMySuggestions(): SP.ClientObjectList<PersonProperties>;\\n            /** Removes the specified user from the user's list of suggested people to follow. */\\n            hideSuggestion(accountName: string): void;\\n            follow(accountName: string): void;\\n            stopFollowing(accountName: string): void;\\n            /** Add the specified tag to the current user's list of followed tags.\\n                @param tagId GUID of the tag to start following. */\\n            followTag(tagId: string): void;\\n            /** Remove the specified tag from the current user's list of followed tags.\\n                @param tagId GUID of the tag to stop following. */\\n            stopFollowingTag(tagId: string): void;\\n            amIFollowing(accountName: string): SP.BooleanResult;\\n            getPeopleFollowedByMe(): SP.ClientObjectList<PersonProperties>;\\n            getPeopleFollowedBy(accountName: string): SP.ClientObjectList<PersonProperties>;\\n            getMyFollowers(): SP.ClientObjectList<PersonProperties>;\\n            getFollowersFor(accountName: string): SP.ClientObjectList<PersonProperties>;\\n            amIFollowedBy(accountName: string): SP.BooleanResult;\\n            /** Uploads and sets the user profile picture.\\n                Pictures in bmp, jpg and png formats and up to 5,000,000 bytes are supported.\\n                A user can upload a picture only to the user's own profile.\\n                @param data Binary content of an image file */\\n            setMyProfilePicture(data: SP.Base64EncodedByteArray): void;\\n        }\\n\\n        /** Specifies the capabilities of a personal site. */\\n        enum PersonalSiteCapabilities {\\n            none,\\n            profile,\\n            social,\\n            storage,\\n            myTasksDashboard,\\n            education,\\n            guest\\n        }\\n\\n        /** Specifies an exception or status code for the state of a personal site instantiation. */\\n        enum PersonalSiteInstantiationState {\\n            uninitialized,\\n            enqueued,\\n            created,\\n            deleted,\\n            permissionsGeneralFailure,\\n            permissionsUPANotGranted,\\n            permissionsUserNotLicensed,\\n            permissionsSelfServiceSiteCreationDisabled,\\n            permissionsNoMySitesInPeopleLight,\\n            permissionsEmptyHostUrl,\\n            permissionsHostFailedToInitializePersonalSiteContext,\\n            errorGeneralFailure,\\n            errorManagedPathDoesNotExist,\\n            errorLanguageNotInstalled,\\n            errorPartialCreate,\\n            errorPersonalSiteAlreadyExists,\\n            errorRootSiteNotPresent,\\n            errorSelfServiceSiteCreateCallFailed\\n        }\\n\\n        enum SocialDataStoreExceptionCode {\\n            socialListNotFound,\\n            personalSiteNotFound,\\n            cannotCreatePersonalSite,\\n            noSocialFeatures\\n        }\\n\\n        /** Represents user properties. */\\n        class PersonProperties extends SP.ClientObject {\\n            /** Specifies the person's account name */\\n            get_accountName(): string;\\n            /** Specifies an array of strings containing the account names of a person's direct reports. */\\n            get_directReports(): string[];\\n            /** Specifies the person's name. */\\n            get_displayName(): string;\\n            /** Specifies the person's email address. */\\n            get_email(): string;\\n            /** Specifies an array of strings that specify the account names of a person's managers. */\\n            get_extendedManagers(): string[];\\n            /** Specifies an array of strings that specify the account names of person's extended reports. */\\n            get_extendedReports(): string[];\\n            /** Represents whether or not the current user is following this person. */\\n            get_isFollowed(): boolean;\\n            /** Specifies the person's latest microblog post. */\\n            get_latestPost(): string;\\n            /** Specifies an array of strings that specify the account names of person's peers, that is, those who have the same manager. */\\n            get_peers(): string[];\\n            /** Specifies the absolute URL of the person's personal page. */\\n            get_personalUrl(): string;\\n            /** Specifies the URL for the person's profile picture. */\\n            get_pictureUrl(): string;\\n            /** Specifies the person's title. */\\n            get_title(): string;\\n            /** Represents all user profile properties including custom.\\n                The privacy settings affect which properties can be retrieved.\\n                Multiple values are delimited by the vertical bar \\\"|\\\".\\n                Null values are specified as empty strings. */\\n            get_userProfileProperties(): { [name: string]: string; };\\n            /** Specifies the URL for the person's profile. */\\n            get_userUrl(): string;\\n        }\\n\\n        /** Provides an alternate entry point to user profiles rather than calling methods directly. */\\n        class ProfileLoader extends SP.ClientObject {\\n            static getProfileLoader(context: SP.ClientRuntimeContext): ProfileLoader;\\n            getUserProfile(): UserProfile;\\n        }\\n\\n        /** Represents a client-side user profile for a person.\\n            Note: The client-side UserProfile object provides methods you can use to create a personal site for the current user.\\n            However, it does not contain the user properties that the server-side UserProfile object contains.\\n            To access user properties from client-side code, use PeopleManager */\\n        class UserProfile extends SP.ClientObject {\\n            constructor();\\n            /** Represents the content that the user is following. */\\n            get_followedContent(): FollowedContent;\\n            /** Retrieves SP.Site object that represents the user's personal site. */\\n            get_personalSite(): SP.Site;\\n            /** Specifies attributes of the user's personal site. */\\n            get_personalSiteCapabilities(): PersonalSiteCapabilities;\\n            /** Provides the state of the user's personal site */\\n            get_personalSiteInstantiationState(): PersonalSiteInstantiationState;\\n            /** Specifies whether the user can import pictures */\\n            get_pictureImportEnabled(): boolean;\\n            /** Specifies the URL to allow the current user to create a personal site. */\\n            get_urlToCreatePersonalSite(): string;\\n            /** Specifies whether the current user's social data is to be shared. */\\n            shareAllSocialData(shareAll: boolean): void;\\n            /** This member is reserved for internal use and is not intended to be used directly from your code.\\n                Use the createPersonalSiteEnque method to create a personal site. */\\n            createPersonalSite(lcid: number): void;\\n            /** Enquees creation of a personal site for the current user.\\n                @param isInteractive Has a true value if the request is from a web browser and a false value if the request is from a client application. */\\n            createPersonalSiteEnque(isInteractive: boolean): void;\\n        }\\n\\n        /** Provides access to followed content items. */\\n        class FollowedContent extends SP.ClientObject {\\n            constructor(context: SP.ClientRuntimeContext);\\n            static newObject(context: SP.ClientRuntimeContext): FollowedContent;\\n            /** Gets the location of the followed sites view */\\n            get_followedDocumentsUrl(): string;\\n            /** Gets the location of the followed documents view. */\\n            get_followedSitesUrl(): string;\\n            /** The Follow method adds the specified document or site to the list of followed content.\\n                @param url  URL that identifies the item to follow.\\n                            The url parameter can identify an existing document or site using the url property of the original item.\\n                            The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId>\\n                @param data Optional parameter that holds application-defined data for the item.\\n                */\\n            follow(url: string, data?: FollowedItemData): FollowResult;\\n            /** The FollowItem method is reserved for server-to-server use only.\\n                The server sets the specified item to be followed by the current user.\\n                This method cannot be called from the client. */\\n            followItem(item: FollowedItem): FollowResult;\\n            /** Removes the specified document or site from list of followed content.\\n                @param url  URL that identifies the item to stop following.\\n                            The url parameter can identify an existing document or site using the url property of the original item.\\n                            The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId> */\\n            stopFollowing(url: string): void;\\n            /** Determines if the specified document or site is being followed.\\n                @param url  URL that identifies the item that is supposed to be followed.\\n                            The url parameter can identify an existing document or site using the url property of the original item.\\n                            The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId> */\\n            isFollowed(url: string): SP.BooleanResult;\\n            /** Retrieves the followed status of the specified document or site.\\n                Returns a value of type FollowedStatus, wrapped into a SP.IntResult object.\\n                @param url  URL that identifies the followed item.\\n                            The url parameter can identify an existing document or site using the url property of the original item.\\n                            The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId> */\\n            getFollowedStatus(url: string): SP.IntResult;\\n            /** Returns the followed item identified by a given URL or returns null if the item does not exist.\\n                @param url  URL that identifies the followed item.\\n                            The url parameter can identify an existing document or site using the url property of the original item.\\n                            The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId> */\\n            getItem(url: string): FollowedItem;\\n            /** Returns an array of zero or more followed items described by the type and subtype parameters.\\n                @param options Describes the type of item to return.\\n                @param subType Integer that identifies the sites to return by the web template. */\\n            getItems(options: FollowedContentQueryOptions, subtype: number): FollowedItem[];\\n            /** Updates the properties for followed item with specified URL.\\n                @param url  URL that identifies the followed item.\\n                            The url parameter can identify an existing document or site using the url property of the original item.\\n                            The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId>\\n                @param data Application-defined data stored with the followed item. */\\n            updateData(url: string, data: FollowedItemData): void;\\n            /** Returns the refreshed item that is being pointed to in the Social list.\\n                @param item The original item as stored in the Followed Content list. */\\n            refreshFollowedItem(item: FollowedItem): FollowedItem;\\n            /** Finds the original item that is being pointed to in the Followed Content list and updates the Title, Url, and IconUrl fields if they have been changed.\\n                @param url The URL of the original item as stored in the Followed Content list. */\\n            findAndUpdateFollowedItem(url: string): FollowedItem;\\n        }\\n\\n        /** Represents a followed content resource. */\\n        class FollowedItem extends SP.ClientValueObject {\\n            /** Additional metadata associated with this item */\\n            get_data(): { [name: string]: any; };\\n            /** Additional metadata associated with this item */\\n            set_data(value: { [name: string]: any; }): { [name: string]: any; };\\n            /** Specifies the type of the file if this item is a file. Otherwise, this property is the empty string. */\\n            get_fileType(): string;\\n            /** Specifies the type of the file if this item is a file. Otherwise, this property is the empty string. */\\n            set_fileType(value: string): string;\\n            /** Provides information about the application that opens a followed document. */\\n            get_fileTypeProgid(): string;\\n            /** Provides information about the application that opens a followed document. */\\n            set_fileTypeProgid(value: string): string;\\n            /** Specifies additional information about the followed item.\\n                The server stores the data so that it can return it to the client. */\\n            get_flags(): string;\\n            /** Specifies additional information about the followed item.\\n                The server stores the data so that it can return it to the client. */\\n            set_flags(value: string): string;\\n            /** Indicates whether the followed site has a feed. */\\n            get_hasFeed(): boolean;\\n            /** Indicates whether the followed site has a feed. */\\n            set_hasFeed(value: boolean): boolean;\\n            /** Specifies if the item is hidden from the user. If true this item will not generate activity in the user's feed. */\\n            get_hidden(): boolean;\\n            /** Specifies if the item is hidden from the user. If true this item will not generate activity in the user's feed. */\\n            set_hidden(value: boolean): boolean;\\n            /** Specifies the URL of an icon to represent this item. */\\n            get_iconUrl(): string;\\n            /** Specifies the URL of an icon to represent this item. */\\n            set_iconUrl(value: string): string;\\n            /** Specifies the identification for this item in the Content database. */\\n            get_itemId(): number;\\n            /** Specifies the identification for this item in the Content database. */\\n            set_itemId(value: number): number;\\n            /** Specifies the type of this item. */\\n            get_itemType(): FollowedItemType;\\n            /** Specifies the type of this item. */\\n            set_itemType(value: FollowedItemType): FollowedItemType;\\n            /** The ListId property specifies the list identification (GUID) for this item in the Content database if this item is a list or the list identification for its parent list.\\n                If the ItemType is Document, this property is specified, but if the ItemType is Site, then this property is not specified. */\\n            get_listId(): string;\\n            /** The ListId property specifies the list identification (GUID) for this item in the Content database if this item is a list or the list identification for its parent list.\\n                If the ItemType is Document, this property is specified, but if the ItemType is Site, then this property is not specified. */\\n            set_listId(value: string): string;\\n            /** Specifies the URL of this item's parent list or web. */\\n            get_parentUrl(): string;\\n            /** Specifies the URL of this item's parent list or web. */\\n            set_parentUrl(value: string): string;\\n            /** Provides information about the followed document to the application that opens it. */\\n            get_serverUrlProgid(): string;\\n            /** Provides information about the followed document to the application that opens it. */\\n            set_serverUrlProgid(value: string): string;\\n            /** Specifies the site identification (GUID) in the Content database for this item if this item is a site, or for its parent site if this item is not a site. */\\n            get_siteId(): string;\\n            /** Specifies the site identification (GUID) in the Content database for this item if this item is a site, or for its parent site if this item is not a site. */\\n            set_siteId(value: string): string;\\n            /** Specifies the subtype of this item.\\n                If the ItemType is Site, the Subtype specifies the web template identification.\\n                If the ItemType is Document, the Subtype has a value of 1. */\\n            get_subtype(): number;\\n            /** Specifies the subtype of this item.\\n                If the ItemType is Site, the Subtype specifies the web template identification.\\n                If the ItemType is Document, the Subtype has a value of 1. */\\n            set_subtype(value: number): number;\\n            /** Specifies the item of this item */\\n            get_title(): string;\\n            /** Specifies the item of this item */\\n            set_title(value: string): string;\\n            /** Specifies the GUID for this item in the Content database. */\\n            get_uniqueId(): SP.Guid;\\n            /** Specifies the GUID for this item in the Content database. */\\n            set_uniqueId(value: SP.Guid): SP.Guid;\\n            /** Specifies the URL of this item. */\\n            get_url(): string;\\n            /** Specifies the URL of this item. */\\n            set_url(value: string): string;\\n            /** Specifies the site identification (GUID) in the Content database for this item if it is a site, or the identification of its parent site if this item is a document. */\\n            get_webId(): SP.Guid;\\n            /** Specifies the site identification (GUID) in the Content database for this item if it is a site, or the identification of its parent site if this item is a document. */\\n            set_webId(value: SP.Guid): any;\\n        }\\n\\n        enum FollowedItemType {\\n            unknown,\\n            document,\\n            site,\\n            all\\n        }\\n\\n        enum FollowedContentExceptionType {\\n            itemAlreadyExists,\\n            itemDoesNotExist,\\n            invalidQueryString,\\n            invalidSubtypeValue,\\n            unsupportedItemType,\\n            followLimitReached,\\n            untrustedSource,\\n            unsupportedSite,\\n            internalError\\n        }\\n\\n        enum FollowedContentQueryOptions {\\n            unset,\\n            sites,\\n            documents,\\n            hidden,\\n            nonFeed,\\n            defaultOptions,\\n            all\\n        }\\n\\n        enum FollowedStatus {\\n            followed,\\n            notFollowed,\\n            notFollowable\\n        }\\n\\n        /** Contains additional data that can be attached to a FollowedItem object */\\n        class FollowedItemData extends SP.ClientObject {\\n            /** An unordered collection of key/value pairs for custom properties to be set on the item. */\\n            get_properties(): { [name: string]: any; };\\n        }\\n\\n        /** Returns information about a request to follow an item. */\\n        class FollowResult extends SP.ClientValueObject {\\n            /** Contains the item being followed. */\\n            get_item(): FollowedItem;\\n            /** Provides information about the attempt to follow an item. */\\n            get_resultType(): FollowResultType;\\n        }\\n\\n        enum FollowResultType {\\n            /** Result is unknown */\\n            unknown,\\n            /** The request succeeded and the item is being followed. */\\n            followed,\\n            /** The item was already being followed by the current user so there is no change in status. */\\n            refollowed,\\n            /** The request encountered the maximum follow limit. */\\n            hitFollowLimit,\\n            /** The request failed. */\\n            failed\\n        }\\n\\n        /** Represents a set of user profile properties for a specified user. */\\n        class UserProfilePropertiesForUser extends SP.ClientObject {\\n            /** Creates new UserProfilePropertiesForUser object\\n                @param context Specifies the client context to use.\\n                @param accountName Specifies the user by account name.\\n                @param propertyNames Specifies an array of strings that specify the properties to retrieve. */\\n            constructor(context: SP.ClientContext, accountName: string, propertyNames: string[]);\\n\\n            /** Specifies the user account name */\\n            get_accountName(): string;\\n            /** Specifies the user account name */\\n            set_accountName(value: string): string;\\n            /** Gets an array of strings that specify the user profile property names. */\\n            getPropertyNames(): string[];\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace Utilities {\\n        class Utility {\\n            lAYOUTS_LATESTVERSION_RELATIVE_URL: string;\\n            lAYOUTS_LATESTVERSION_URL: string;\\n            static get_layoutsLatestVersionRelativeUrl(): string;\\n            static get_layoutsLatestVersionUrl(): string;\\n            static getLayoutsPageUrl(pageName: string): string;\\n            static getImageUrl(imageName: string): string;\\n            static createWikiPageInContextWeb(context: SP.ClientRuntimeContext, parameters: SP.Utilities.WikiPageCreationInformation): SP.File;\\n            static localizeWebPartGallery(context: SP.ClientRuntimeContext, items: SP.ListItemCollection): SP.ClientObjectList<SP.ListItem>;\\n            static getAppLicenseInformation(context: SP.ClientRuntimeContext, productId: SP.Guid): SP.AppLicenseCollection;\\n            static importAppLicense(context: SP.ClientRuntimeContext, licenseTokenToImport: string, contentMarket: string, billingMarket: string, appName: string, iconUrl: string, providerName: string, appSubtype: number): void;\\n            static getAppLicenseDeploymentId(context: SP.ClientRuntimeContext): SP.GuidResult;\\n            static logCustomAppError(context: SP.ClientRuntimeContext, error: string): SP.IntResult;\\n            static logCustomRemoteAppError(context: SP.ClientRuntimeContext, productId: SP.Guid, error: string): SP.IntResult;\\n            static getLocalizedString(context: SP.ClientRuntimeContext, source: string, defaultResourceFile: string, language: number): SP.StringResult;\\n            static createNewDiscussion<T>(context: SP.ClientRuntimeContext, list: SP.List, title: string): SP.ListItem<T>;\\n            static createNewDiscussionReply<T>(context: SP.ClientRuntimeContext, parent: SP.ListItem<T>): SP.ListItem<T>;\\n            static markDiscussionAsFeatured(context: SP.ClientRuntimeContext, listID: string, topicIDs: string): void;\\n            static unmarkDiscussionAsFeatured(context: SP.ClientRuntimeContext, listID: string, topicIDs: string): void;\\n            static searchPrincipals(context: SP.ClientRuntimeContext, web: SP.Web, input: string, scopes: SP.Utilities.PrincipalType, sources: SP.Utilities.PrincipalSource, usersContainer: SP.UserCollection, maxCount: number): SP.Utilities.PrincipalInfo[];\\n            static getCurrentUserEmailAddresses(context: SP.ClientRuntimeContext): SP.StringResult;\\n            static createEmailBodyForInvitation(context: SP.ClientRuntimeContext, pageAddress: string): SP.StringResult;\\n            static getPeoplePickerURL(context: SP.ClientRuntimeContext, web: SP.Web, fieldUser: SP.FieldUser): SP.StringResult;\\n            static resolvePrincipal(context: SP.ClientRuntimeContext, web: SP.Web, input: string, scopes: SP.Utilities.PrincipalType, sources: SP.Utilities.PrincipalSource, usersContainer: SP.UserCollection, inputIsEmailOnly: boolean): SP.Utilities.PrincipalInfo;\\n            static getLowerCaseString(context: SP.ClientRuntimeContext, sourceValue: string, lcid: number): SP.StringResult;\\n            static formatDateTime(context: SP.ClientRuntimeContext, web: SP.Web, datetime: Date, format: SP.Utilities.DateTimeFormat): SP.StringResult;\\n            static isUserLicensedForEntityInContext(context: SP.ClientRuntimeContext, licensableEntity: string): SP.BooleanResult;\\n        }\\n        enum DateTimeFormat {\\n            dateTime,\\n            dateOnly,\\n            timeOnly,\\n            iSO8601,\\n            monthDayOnly,\\n            monthYearOnly,\\n            longDate,\\n            unknownFormat,\\n        }\\n        class EmailProperties extends SP.ClientValueObject {\\n            get_additionalHeaders(): any;\\n            set_additionalHeaders(value: any): void;\\n            get_bCC(): string[];\\n            set_bCC(value: string[]): void;\\n            get_body(): string;\\n            set_body(value: string): void;\\n            get_cC(): string[];\\n            set_cC(value: string[]): void;\\n            get_from(): string;\\n            set_from(value: string): void;\\n            get_subject(): string;\\n            set_subject(value: string): void;\\n            get_to(): string[];\\n            set_to(value: string[]): void;\\n            get_typeId(): string;\\n            writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n            constructor();\\n        }\\n        enum IconSize {\\n            size16,\\n            size32,\\n            size256,\\n        }\\n        enum LogAppErrorResult {\\n            success,\\n            errorsThrottled,\\n            accessDenied,\\n        }\\n        class PrincipalInfo extends SP.ClientValueObject {\\n            get_department(): string;\\n            get_displayName(): string;\\n            get_email(): string;\\n            get_jobTitle(): string;\\n            get_loginName(): string;\\n            get_mobile(): string;\\n            get_principalId(): number;\\n            get_principalType(): SP.Utilities.PrincipalType;\\n            get_sIPAddress(): string;\\n            get_typeId(): string;\\n            writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n            constructor();\\n        }\\n        enum PrincipalSource {\\n            none,\\n            userInfoList,\\n            windows,\\n            membershipProvider,\\n            roleProvider,\\n            all,\\n        }\\n        enum PrincipalType {\\n            none,\\n            user,\\n            distributionList,\\n            securityGroup,\\n            sharePointGroup,\\n            all,\\n        }\\n        enum SPWOPIFrameAction {\\n            view,\\n            edit,\\n            mobileView,\\n            interactivePreview,\\n        }\\n        class WikiPageCreationInformation extends SP.ClientValueObject {\\n            get_serverRelativeUrl(): string;\\n            set_serverRelativeUrl(value: string): void;\\n            get_wikiHtmlContent(): string;\\n            set_wikiHtmlContent(value: string): void;\\n            get_typeId(): string;\\n            writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n            constructor();\\n        }\\n        class DateUtility {\\n            static isLeapYear(year: number): boolean;\\n            static dateToJulianDay(year: number, month: number, day: number): number;\\n            static julianDayToDate(julianDay: number): SP.DateTimeUtil.SimpleDate;\\n            static daysInMonth(year: number, month: number): number;\\n        }\\n        class HttpUtility {\\n            /** Official version of STSHtmlEncode. Calls it internally. */\\n            static htmlEncode(stringToEncode: string): string;\\n            static urlPathEncode(stringToEncode: string): string;\\n            static urlKeyValueEncode(keyOrValueToEncode: string): string;\\n            static ecmaScriptStringLiteralEncode(scriptLiteralToEncode: string): string;\\n            static navigateTo(url: string): void;\\n            /** Appends correct \\\"Source\\\" parameter to the specified url, and then navigates to this url.\\n                \\\"Source\\\" parameter is recognized in many places in SharePoint, usually to determine \\\"Cancel\\\" behavior. */\\n            static appendSourceAndNavigateTo(url: string): void;\\n            static escapeXmlText(stringToEscape: string): string;\\n            static navigateHttpFolder(urlSrc: string, frameTarget: string): void;\\n        }\\n        class UrlBuilder {\\n            constructor(path: string);\\n            static urlCombine(path1: string, path2: string): string;\\n            static replaceOrAddQueryString(url: string, key: string, value: string): string;\\n            static removeQueryString(url: string, key: string): string;\\n            combinePath(path: string): void;\\n            addKeyValueQueryString(key: string, value: string): void;\\n            /** Returns the resulting url */\\n            get_url(): string;\\n            /** Same as get_url() */\\n            toString(): string;\\n        }\\n\\n        class LocUtility {\\n            static getLocalizedCountValue(locText: string, intervals: string, count: number): string;\\n        }\\n\\n        class VersionUtility {\\n            static get_layoutsLatestVersionRelativeUrl(): string;\\n            static get_layoutsLatestVersionUrl(): string;\\n            static getLayoutsPageUrl(pageName: string): string;\\n            static getImageUrl(imageName: string): string;\\n        }\\n    }\\n\\n    namespace DateTimeUtil {\\n        class SimpleDate {\\n            constructor(year: number, month: number, day: number, era: number);\\n            get_year(): number;\\n            set_year(value: number): void;\\n            get_month(): number;\\n            set_month(value: number): void;\\n            get_day(): number;\\n            set_day(value: number): void;\\n            get_era(): number;\\n            set_era(value: number): void;\\n            static dateEquals(date1: SimpleDate, date2: SimpleDate): boolean;\\n            static dateLessEqual(date1: SimpleDate, date2: SimpleDate): boolean;\\n            static dateGreaterEqual(date1: SimpleDate, date2: SimpleDate): boolean;\\n            static dateLess(date1: SimpleDate, date2: SimpleDate): boolean;\\n            static dateGreater(date1: SimpleDate, date2: SimpleDate): boolean;\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace WebParts {\\n        class LimitedWebPartManager extends SP.ClientObject {\\n            get_hasPersonalizedParts(): boolean;\\n            get_scope(): SP.WebParts.PersonalizationScope;\\n            get_webParts(): SP.WebParts.WebPartDefinitionCollection;\\n            addWebPart(webPart: SP.WebParts.WebPart, zoneId: string, zoneIndex: number): SP.WebParts.WebPartDefinition;\\n            importWebPart(webPartXml: string): SP.WebParts.WebPartDefinition;\\n        }\\n        enum PersonalizationScope {\\n            user,\\n            shared,\\n        }\\n        class TileData extends SP.ClientValueObject {\\n            get_backgroundImageLocation(): string;\\n            set_backgroundImageLocation(value: string): void;\\n            get_description(): string;\\n            set_description(value: string): void;\\n            get_iD(): number;\\n            set_iD(value: number): void;\\n            get_linkLocation(): string;\\n            set_linkLocation(value: string): void;\\n            get_tileOrder(): number;\\n            set_tileOrder(value: number): void;\\n            get_title(): string;\\n            set_title(value: string): void;\\n            get_typeId(): string;\\n            writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n            constructor();\\n        }\\n        class WebPart extends SP.ClientObject {\\n            get_hidden(): boolean;\\n            set_hidden(value: boolean): void;\\n            get_isClosed(): boolean;\\n            get_properties(): SP.PropertyValues;\\n            get_subtitle(): string;\\n            get_title(): string;\\n            set_title(value: string): void;\\n            get_titleUrl(): string;\\n            set_titleUrl(value: string): void;\\n            get_zoneIndex(): number;\\n        }\\n        class WebPartDefinition extends SP.ClientObject {\\n            get_id(): SP.Guid;\\n            get_webPart(): SP.WebParts.WebPart;\\n            get_zoneId(): string;\\n            saveWebPartChanges(): void;\\n            closeWebPart(): void;\\n            openWebPart(): void;\\n            deleteWebPart(): void;\\n            moveWebPartTo(zoneID: string, zoneIndex: number): void;\\n        }\\n        interface WebPartDefinitionCollection extends SP.ClientObjectCollection<WebPartDefinition> {\\n            itemAt(index: number): SP.WebParts.WebPartDefinition;\\n            get_item(index: number): SP.WebParts.WebPartDefinition;\\n            getById(id: SP.Guid): SP.WebParts.WebPartDefinition;\\n            getByControlId(controlId: string): SP.WebParts.WebPartDefinition;\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace Workflow {\\n        class WorkflowAssociation extends SP.ClientObject {\\n            get_allowManual(): boolean;\\n            set_allowManual(value: boolean): void;\\n            get_associationData(): string;\\n            set_associationData(value: string): void;\\n            get_autoStartChange(): boolean;\\n            set_autoStartChange(value: boolean): void;\\n            get_autoStartCreate(): boolean;\\n            set_autoStartCreate(value: boolean): void;\\n            get_baseId(): SP.Guid;\\n            get_created(): Date;\\n            get_description(): string;\\n            set_description(value: string): void;\\n            get_enabled(): boolean;\\n            set_enabled(value: boolean): void;\\n            get_historyListTitle(): string;\\n            set_historyListTitle(value: string): void;\\n            get_id(): SP.Guid;\\n            get_instantiationUrl(): string;\\n            get_internalName(): string;\\n            get_isDeclarative(): boolean;\\n            get_listId(): SP.Guid;\\n            get_modified(): Date;\\n            get_name(): string;\\n            set_name(value: string): void;\\n            get_taskListTitle(): string;\\n            set_taskListTitle(value: string): void;\\n            get_webId(): SP.Guid;\\n            update(): void;\\n            deleteObject(): void;\\n        }\\n        interface WorkflowAssociationCollection extends SP.ClientObjectCollection<WorkflowAssociation> {\\n            itemAt(index: number): SP.Workflow.WorkflowAssociation;\\n            get_item(index: number): SP.Workflow.WorkflowAssociation;\\n            getById(associationId: SP.Guid): SP.Workflow.WorkflowAssociation;\\n            add(parameters: SP.Workflow.WorkflowAssociationCreationInformation): SP.Workflow.WorkflowAssociation;\\n            getByName(name: string): SP.Workflow.WorkflowAssociation;\\n        }\\n        class WorkflowAssociationCreationInformation extends SP.ClientValueObject {\\n            get_contentTypeAssociationHistoryListName(): string;\\n            set_contentTypeAssociationHistoryListName(value: string): void;\\n            get_contentTypeAssociationTaskListName(): string;\\n            set_contentTypeAssociationTaskListName(value: string): void;\\n            get_historyList(): SP.List;\\n            set_historyList(value: SP.List): void;\\n            get_name(): string;\\n            set_name(value: string): void;\\n            get_taskList(): SP.List;\\n            set_taskList(value: SP.List): void;\\n            get_template(): SP.Workflow.WorkflowTemplate;\\n            set_template(value: SP.Workflow.WorkflowTemplate): void;\\n            get_typeId(): string;\\n            writeToXml(writer: SP.XmlWriter, serializationContext: SP.SerializationContext): void;\\n            constructor();\\n        }\\n        class WorkflowTemplate extends SP.ClientObject {\\n            get_allowManual(): boolean;\\n            get_associationUrl(): string;\\n            get_autoStartChange(): boolean;\\n            get_autoStartCreate(): boolean;\\n            get_description(): string;\\n            get_id(): SP.Guid;\\n            get_isDeclarative(): boolean;\\n            get_name(): string;\\n            get_permissionsManual(): SP.BasePermissions;\\n        }\\n        interface WorkflowTemplateCollection extends SP.ClientObjectCollection<WorkflowTemplate> {\\n            itemAt(index: number): SP.Workflow.WorkflowTemplate;\\n            get_item(index: number): SP.Workflow.WorkflowTemplate;\\n            getById(templateId: SP.Guid): SP.Workflow.WorkflowTemplate;\\n            getByName(name: string): SP.Workflow.WorkflowTemplate;\\n        }\\n    }\\n}\\n\\ndeclare namespace SP.WorkflowServices {\\n    enum WorkflowStatus {\\n        notStarted,\\n        started,\\n        suspended,\\n        canceling,\\n        canceled,\\n        terminated,\\n        completed,\\n        notSpecified,\\n        invalid\\n    }\\n\\n    // TODO: comments, types\\n    class InteropService extends SP.ClientObject {\\n        constructor(context: SP.ClientRuntimeContext, objectPath: SP.ObjectPathStaticProperty);\\n        static getCurrent(context: SP.ClientRuntimeContext): InteropService;\\n        enableEvents(listId: SP.Guid, itemGuid: SP.Guid): void;\\n        disableEvents(listId: SP.Guid, itemGuid: SP.Guid): void;\\n        startWorkflow(associationName: string, correlationId: SP.Guid, listId: SP.Guid, itemGuid: SP.Guid, workflowParameters: any): SP.GuidResult;\\n        cancelWorkflow(instanceId: SP.Guid): void;\\n    }\\n\\n    /** Represents a workflow definition and associated properties. */\\n    class WorkflowDefinition extends SP.ClientObject {\\n        constructor(context: SP.ClientRuntimeContext);\\n        /** Url of the association form */\\n        get_associationUrl(): string;\\n        /** Url of the association form */\\n        set_associationUrl(value: string): string;\\n        get_description(): string;\\n        set_description(value: string): string;\\n        get_displayName(): string;\\n        set_displayName(value: string): string;\\n        /** Identifier for a draft version of the workflow definition */\\n        get_draftVersion(): string;\\n        /** Identifier for a draft version of the workflow definition */\\n        set_draftVersion(value: string): string;\\n        /** Defines the fields of the workflow initiation forms and association forms (CAML string)  */\\n        get_formField(): string;\\n        /** Defines the fields of the workflow initiation forms and association forms (CAML string)  */\\n        set_formField(value: string): string;\\n        get_id(): string;\\n        set_id(value: string): string;\\n        get_initiationUrl(): string;\\n        set_initiationUrl(value: string): string;\\n        /** Gets custom properties of the workflow definition */\\n        get_properties(): { [propertyName: string]: any; };\\n        /** true if the workflow definition has been published to the external workflow host; false if the workflow definition is only saved on the site  */\\n        get_published(): boolean;\\n        /** Determines whether to automatically generate an association form for this workflow.\\n            If the value is true, and the associationUrl is not already set, a default association form is automatically generated for the workflow when saveDefinition is called.  */\\n        get_requiresAssociationForm(): boolean;\\n        /** Determines whether to automatically generate an association form for this workflow.\\n            If the value is true, and the associationUrl is not already set, a default association form is automatically generated for the workflow when saveDefinition is called.  */\\n        set_requiresAssociationForm(value: boolean): boolean;\\n        /** Determines whether to automatically generate an initiation form for this workflow.\\n            If the value is true, and the initiationUrl is not already set, a default initiation form is automatically generated for the workflow when saveDefinition is called.  */\\n        get_requiresInitiationForm(): boolean;\\n        /** Determines whether to automatically generate an initiation form for this workflow.\\n            If the value is true, and the initiationUrl is not already set, a default initiation form is automatically generated for the workflow when saveDefinition is called.  */\\n        set_requiresInitiationForm(value: boolean): boolean;\\n        /** RestrictToScope is a GUID value, used in conjunction with the RestrictToType property to further restrict the scope of the definition.\\n            For example, if the RestrictToType is \\\"List\\\", then setting the RestrictToScope to a particular list identifier limits the definition to be associable only to the specified list.\\n            If the RestrictToType is \\\"List\\\" but the RestrictToScope is null or the empty string, then the definition is associable to any list. */\\n        get_restrictToScope(): string;\\n        /** RestrictToScope is a GUID value, used in conjunction with the RestrictToType property to further restrict the scope of the definition.\\n            For example, if the RestrictToType is \\\"List\\\", then setting the RestrictToScope to a particular list identifier limits the definition to be associable only to the specified list.\\n            If the RestrictToType is \\\"List\\\" but the RestrictToScope is null or the empty string, then the definition is associable to any list. */\\n        set_restrictToScope(value: string): string;\\n        /** RestrictToType determines the possible event source type for a workflow subscription that uses this definition.\\n            Possible values include \\\"List\\\", \\\"Site\\\", the empty string, or null.  */\\n        get_restrictToType(): string;\\n        /** RestrictToType determines the possible event source type for a workflow subscription that uses this definition.\\n            Possible values include \\\"List\\\", \\\"Site\\\", the empty string, or null.  */\\n        set_restrictToType(value: string): string;\\n        /** XAML definition of the workflow */\\n        get_xaml(): string;\\n        /** XAML definition of the workflow */\\n        set_xaml(value: string): string;\\n        /** This method adds a key-value pair (propertyName, value) to the workflow definition object's property bag.  */\\n        setProperty(propertyName: string, value: string): void;\\n        /** This method is internal and is not intended to be used in your code. */\\n        initPropertiesFromJson(parentNode: any): void;\\n    }\\n\\n    /** Represents a collection of WorkflowDefinition objects */\\n    interface WorkflowDefinitionCollection extends SP.ClientObjectCollection<WorkflowDefinition> {\\n        itemAt(index: number): WorkflowDefinition;\\n        get_item(index: number): WorkflowDefinition;\\n        /** returns SP.WorkflowDefinition class */\\n        get_childItemType(): any;\\n    }\\n\\n    /** Manages workflow definitions and workflow activity authoring. */\\n    class WorkflowDeploymentService extends SP.ClientObject {\\n        /** Returns an XML representation of a list of valid Workflow Manager Client 1.0 actions for the specified web (WorkflowInfo element). */\\n        getDesignerActions(web: SP.Web): SP.StringResult;\\n        /** Returns an XML representation of a collection of XAML class signatures for workflow definitions.\\n            @param lastChanges Date time value representing the latest changes; class signatures older than this time are excluded from the result set.  */\\n        getActivitySignatures(lastChanged: string): SP.ClientResult<any>;\\n        /** Saves a SharePoint workflow definition to the workflow store.  */\\n        saveDefinition(definition: WorkflowDefinition): SP.GuidResult;\\n        /** Validates the specified activity against workflow definitions in the workflow store.  */\\n        validateActivity(activityXaml: string): SP.StringResult;\\n        /** Publishes a workflow definition to the workflow store.  */\\n        publishDefinition(definitionId: string): void;\\n        /** Marks a workflow definition as deprecated. Currently running workflow instances are allowed to complete, but new instances of the workflow definition are prevented from starting.  */\\n        deprecateDefinition(definitionId: string): void;\\n        /** Deletes a workflow definition.\\n            @param definitionId The guid identifier of the workflow definition.  */\\n        deleteDefinition(definitionId: string): void;\\n        /** Retrieves workflow definitions from the workflow store that match the tags. */\\n        enumerateDefinitions(publishedOnly: boolean): WorkflowDefinitionCollection;\\n        /** Retrieves a specified workflow definition from the workflow store.\\n            @param definitionId The guid identifier of the workflow definition.  */\\n        getDefinition(definitionId: string): WorkflowDefinition;\\n        /** Saves the collateral file of a workflow definition.\\n            @param workflowDefinitionId The guid identifier of the workflow definition.*/\\n        saveCollateral(workflowDefinitionId: string, leafFileName: string, fileContent: Base64EncodedByteArray): void;\\n        /** Deletes the URL of a workflow definition's collateral file.\\n            @param workflowDefinitionId The guid identifier of the workflow definition.  */\\n        deleteCollateral(workflowDefinitionId: string, leafFileName: string): void;\\n        /** Retrieves the URL of the collateral file of the workflow definition.\\n            @param workflowDefinitionId The guid identifier of the workflow definition.\\n            @param leafFileName The leaf name of the collateral file. */\\n        getCollateralUri(workflowDefinitionId: string, leafFileName: string): SP.StringResult;\\n        /** Packages a single workflow definition into a SharePoint solution package (.wsp file) and saves the package to the Site Assets library.\\n            Returns the URL of the package file in the Site Asset library.\\n            Remarks:\\n            1. This method does not activate the package.\\n            2. If a package with the same name already exists in the Site Assets library, the method adds an integer suffix in braces to the file name, e.g. packageDefaultFilename{2}.wsp\\n            @param definitionId The guid identifier of the workflow definition.\\n            @param packageDefaultFilename The default filename to choose for the new package.\\n            @param packageTitle The title of the package.\\n            @param packageDescription The description of the package. */\\n        packageDefinition(definitionId: SP.Guid, packageDefaultFilename: string, packageTitle: string, packageDescription: string): SP.StringResult;\\n    }\\n\\n    /** Represents an instance of a workflow association that performs on a list item the process that is defined in a workflow template */\\n    class WorkflowInstance extends SP.ClientObject {\\n        /** Contains the error string or exception information if the workflow faults. */\\n        get_faultInfo(): string;\\n        /** Unique identifier (GUID) for the workflow instance */\\n        get_id(): string;\\n        /** Gets the Coordinated Universal Time (UTC) when this workflow instance was created. */\\n        get_instanceCreated(): string;\\n        /** Gets the Coordinated Universal Time (UTC) when the workflow instance state was last persisted */\\n        get_lastUpdated(): string;\\n        /** Specifies properties of this workflow instance */\\n        get_properties(): { [name: string]: string; };\\n        /** Returns runtime status of the workflow instance */\\n        get_status(): WorkflowStatus;\\n        /** Specifies the custom status set by workflow authors. */\\n        get_userStatus(): string;\\n        /** Specifies the custom status set by workflow authors. */\\n        set_userStatus(value: string): string;\\n        /** Gets the unique identifier (GUID) of the subscription that instantiates the WorkflowInstance */\\n        get_workflowSubscriptionId(): SP.Guid;\\n        /** This method is internal and is not intended to be used in your code. */\\n        initPropertiesFromJson(parentNode: any): void;\\n    }\\n\\n    /** Represents a collection of WorkflowInstance objects */\\n    interface WorkflowInstanceCollection extends SP.ClientObjectCollection<WorkflowInstance> {\\n        itemAt(index: number): WorkflowInstance;\\n        get_item(index: number): WorkflowInstance;\\n        /** returns SP.WorkflowInstance class */\\n        get_childItemType(): any;\\n    }\\n\\n    /** Reads the SharePoint workflow instances from the external workflow host and manages the instance execution. */\\n    class WorkflowInstanceService extends SP.ClientObject {\\n        /** Starts a Workflow Manager Client 1.0 instance specified by the subscription and passes the supplied parameters.\\n            Returns GUID of the instance object.\\n            @param payload Object that contains name-value pairs of parameter names and values to pass into the workflow instance. */\\n        startWorkflow(subscription: WorkflowSubscription, payload: { [name: string]: any; }): SP.GuidResult;\\n        /** Starts a Workflow Manager Client 1.0 instance specified by the subscription and passes the supplied parameters.\\n            Returns GUID of the instance object.\\n            @param subscription The subscription associated with the workflow instance.\\n            @param itemId The integer id of the list item on which to start the workflow instance.\\n            @param payload Object that contains name-value pairs of parameter names and values to pass into the workflow instance. */\\n        startWorkflowOnListItem(subscription: WorkflowSubscription, itemId: number, payload: { [name: string]: any; }): SP.GuidResult;\\n        /** Gets workflow instance specified by the provided instance GUID */\\n        getInstance(instanceId: string): WorkflowInstance;\\n        /** Gets a workflow instance collection comprising the 100 most recent workflow instances started by a specified subscription.  */\\n        enumerate(parentSubscription: WorkflowSubscription): WorkflowInstanceCollection;\\n        /** Gets a workflow instance collection comprising 100 workflow instances starting at the specified offset.  */\\n        enumerateWithOffset(parentSubscription: WorkflowSubscription, offset: number): WorkflowInstanceCollection;\\n        /** Gets the list of instances for the specified list item. */\\n        enumerateInstancesForListItem(listId: string, itemId: number): WorkflowInstanceCollection;\\n        /** Gets the list of instances for the specified list item. */\\n        enumerateInstancesForListItemWithOffset(listId: string, itemId: number, offset: number): WorkflowInstanceCollection;\\n        /** Gets the list of instances for the current site. */\\n        enumerateInstancesForSite(): WorkflowInstanceCollection;\\n        /** Gets the list of instances for the current site. */\\n        enumerateInstancesForSiteWithOffset(offset: number): WorkflowInstanceCollection;\\n        /** Retrieves a count of all the instances of the specified WorkflowSubscription. */\\n        countInstances(parentSubscription: WorkflowSubscription): SP.IntResult;\\n        /** Retrieves a count of the instances of the specified WorkflowSubscription that have a specified status. */\\n        countInstancesWithStatus(parentSubscription: WorkflowSubscription, status: WorkflowStatus): SP.IntResult;\\n        /** Sends a cancel message to the specified workflow instance and permits the instance to execute a cancellation scope. */\\n        cancelWorkflow(instance: WorkflowInstance): void;\\n        /** Terminate a workflow instance forcefully by deleting it from memory. The instance is not allowed to execute a cancellation scope */\\n        terminateWorkflow(instance: WorkflowInstance): void;\\n        suspendWorkflow(instance: WorkflowInstance): void;\\n        resumeWorkflow(instance: WorkflowInstance): void;\\n        /** Sends a custom event to a running workflow with the event payload. */\\n        publishCustomEvent(instance: WorkflowInstance, eventName: string, payload: string): void;\\n        getDebugInfo(instance: WorkflowInstance): SP.StringResult;\\n    }\\n\\n    /** Describes the workflow host configuration states and provides service objects that interact with the workflow */\\n    class WorkflowServicesManager extends SP.ClientObject {\\n        constructor(context: SP.ClientRuntimeContext, web: SP.Web);\\n        static newObject(context: SP.ClientRuntimeContext, web: SP.Web): WorkflowServicesManager;\\n        /** The current application identifier.*/\\n        get_appId(): string;\\n        /** Indicates whether this workflow service is actively connected to a workflow host. */\\n        get_isConnected(): boolean;\\n        /** Returns the path of the current scope in the workflow host. */\\n        get_scopePath(): string;\\n        getWorkflowDeploymentService(): WorkflowDeploymentService;\\n        getWorkflowInstanceService(): WorkflowInstanceService;\\n        getWorkflowInteropService(): InteropService;\\n        getWorkflowSubscriptionService(): WorkflowSubscriptionService;\\n        /** This method is internal and is not intended to be used in your code. */\\n        initPropertiesFromJson(parentNode: any): void;\\n    }\\n\\n    /** Base class representing subscriptions for the external workflow host. */\\n    class WorkflowSubscription extends SP.ClientObject {\\n        /** Gets the unique ID of the workflow definition to activate. */\\n        get_definitionId(): SP.Guid;\\n        /** Sets the unique ID of the workflow definition to activate. */\\n        set_definitionId(value: SP.Guid): SP.Guid;\\n        /** Gets a boolean value that specifies if the workflow subscription is enabled.\\n            When disabled, new instances of the subscription cannot be started, but existing instances will continue to run.  */\\n        get_enabled(): boolean;\\n        /** Sets a boolean value that enables or disables the workflow subscription.\\n            When disabled, new instances of the subscription cannot be started, but existing instances will continue to run.  */\\n        set_enabled(value: boolean): boolean;\\n        /** Gets the logical source instance name of the event. (GUID) */\\n        get_eventSourceId(): string;\\n        /** Sets the logical source instance name of the event. (GUID) */\\n        set_eventSourceId(value: string): string;\\n        /** Gets or sets the list of event types for which the subscription is listening.\\n            For SharePoint events, these will map to a value in the SPEventReceiverType enumeration. */\\n        get_eventTypes(): string[];\\n        /** Gets or sets the list of event types for which the subscription is listening.\\n            For SharePoint events, these will map to a value in the SPEventReceiverType enumeration. */\\n        set_eventTypes(value: string[]): string[];\\n        /** Unique identifier (GUID) of the workflow subscription */\\n        get_id(): string;\\n        /** Unique identifier (GUID) of the workflow subscription */\\n        set_id(value: string): string;\\n        /** Boolean value that specifies whether multiple workflow instances can be started manually on the same list item at the same time. This property can be used for list workflows only.  */\\n        get_manualStartBypassesActivationLimit(): boolean;\\n        /** Boolean value that specifies whether multiple workflow instances can be started manually on the same list item at the same time. This property can be used for list workflows only.  */\\n        set_manualStartBypassesActivationLimit(value: boolean): boolean;\\n        /** Gets the name of the workflow subscription for the specified event source.  */\\n        get_name(): string;\\n        /** Sets the name of the workflow subscription for the specified event source.  */\\n        set_name(value: string): string;\\n        /** Gets the properties and values to pass to the workflow definition when the subscription is matched. */\\n        get_propertyDefinitions(): any;\\n        /** Gets the name of the workflow status field on the specified list.  */\\n        get_statusFieldName(): string;\\n        /** Gets or sets the name of the workflow status field on the specified list.  */\\n        set_statusFieldName(value: string): string;\\n        /** Sets the name-value pairs for workflow definition initiation parameters that are stored in the PropertyDefinitions property  */\\n        setProperty(propertyName: string, value: string): void;\\n        /** This method is internal and is not intended to be used in your code. */\\n        initPropertiesFromJson(parentNode: any): void;\\n    }\\n\\n    /** Represents a collection of WorkflowSubscription objects */\\n    interface WorkflowSubscriptionCollection extends SP.ClientObjectCollection<WorkflowSubscription> {\\n        itemAt(index: number): WorkflowSubscription;\\n        get_item(index: number): WorkflowSubscription;\\n        /** returns SP.WorkflowInstance class */\\n        get_childItemType(): any;\\n    }\\n\\n    class WorkflowSubscriptionService extends SP.ClientObject {\\n        constructor(context: SP.ClientRuntimeContext, objectPath: SP.ObjectPathStaticProperty);\\n        static getCurrent(context: SP.ClientRuntimeContext): WorkflowSubscriptionService;\\n        /** Creates a workflow subscription for a workflow, and returns the unique identifier of the new subscription. */\\n        publishSubscription(subscription: WorkflowSubscription): SP.GuidResult;\\n        /** Creates a workflow subscription for a workflow and if necessary an event receiver on the specified list.\\n            Also writes an EventSourceId that matches the list as the event source.\\n            Returns the unique identifier of the new subscription.\\n            @param listId Unique identifier (GUID) for the specified list. */\\n        publishSubscriptionForList(subscription: WorkflowSubscription, listId: string): SP.GuidResult;\\n        /** Ensures that an event receiver will monitor a list for the specified event.\\n            @param listId Unique identifier (GUID) for the specified list.\\n            @eventName eventName The name of the event to be monitored. */\\n        registerInterestInList(listId: string, eventName: string): void;\\n        /** Removes monitoring for an event receiver on the specified list with the specified event.\\n            @param listId GUID of the list containing the event receiver to be unregistered.\\n            @eventName eventName The name of the event to be removed. */\\n        unregisterInterestInList(listId: string, eventName: string): void;\\n        getSubscription(subscriptionId: SP.Guid): WorkflowSubscription;\\n        deleteSubscription(subscriptionId: SP.Guid): WorkflowSubscription;\\n        /** Retrieves workflow subscriptions that contains all of the workflow subscriptions on the Web  */\\n        enumerateSubscriptions(): WorkflowSubscriptionCollection;\\n        /** Retrieves workflow subscriptions based on workflow definition */\\n        enumerateSubscriptionsByDefinition(definitionId: string): WorkflowSubscriptionCollection;\\n        /** Retrieves workflow subscriptions based on the specified EventSourceId */\\n        enumerateSubscriptionsByEventSource(eventSourceId: string): WorkflowSubscriptionCollection;\\n        /** Retrieves workflow subscriptions based on the specified list.\\n            @param listId The unique identifier (GUID) of the list on which to filter the subscriptions. */\\n        enumerateSubscriptionsByList(listId: string): WorkflowSubscriptionCollection;\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace Publishing {\\n        class PublishingWeb extends ClientObject {\\n            static getPublishingWeb(context: ClientContext, web: Web): PublishingWeb;\\n\\n            get_web(): Web;\\n            addPublishingPage(pageInformation: PublishingPageInformation): PublishingPage;\\n        }\\n\\n        class PublishingPageInformation extends ClientValueObject {\\n            get_folder(): Folder;\\n            set_folder(value: Folder): Folder;\\n\\n            get_name(): string;\\n            set_name(value: string): string;\\n\\n            get_pageLayoutListItem(): ListItem;\\n            set_pageLayoutListItem(value: ListItem): ListItem;\\n        }\\n\\n        class PublishingPage extends ScheduledItem {\\n            static getPublishingPage(context: ClientContext, sourceListItem: ListItem): PublishingPage;\\n            addFriendlyUrl(friendlyUrlSegment: string, editableParent: Navigation.NavigationTermSetItem, doAddToNavigation: boolean): StringResult;\\n        }\\n\\n        class ScheduledItem extends ClientObject {\\n            get_listItem(): ListItem;\\n\\n            get_startDate(): Date;\\n            set_startDate(value: Date): Date;\\n\\n            get_endDate(): Date;\\n            set_endDate(value: Date): Date;\\n\\n            schedule(approvalComment: string): void;\\n        }\\n\\n        class PublishingSite extends ClientObject {\\n            static createPageLayout(context: ClientContext, parameters: PageLayoutCreationInformation): void;\\n        }\\n\\n        class PageLayoutCreationInformation extends ClientValueObject {\\n            get_web(): Web;\\n            set_web(value: Web): Web;\\n\\n            get_associatedContentTypeId(): string;\\n            set_associatedContentTypeId(value: string): string;\\n\\n            get_masterPageUrl(): string;\\n            set_masterPageUrl(value: string): string;\\n\\n            get_newPageLayoutNameWithoutExtension(): string;\\n            set_newPageLayoutNameWithoutExtension(value: string): string;\\n\\n            get_newPageLayoutEditablePath(): string;\\n            set_newPageLayoutEditablePath(value: string): string;\\n        }\\n\\n        class SiteServicesAddins {\\n            static getSettings(context: ClientContext, addinId: Guid): AddinSettings;\\n            static setSettings(context: ClientContext, addin: AddinSettings): void;\\n            static deleteSettings(context: ClientContext, addinId: Guid): void;\\n\\n            static getPlugin(context: ClientContext, pluginName: string): AddinPlugin;\\n            static setPlugin(context: ClientContext, addin: AddinPlugin): void;\\n            static deletePlugin(context: ClientContext, pluginName: string): void;\\n        }\\n\\n        class AddinSettings extends ClientObject {\\n            constructor(ctx: ClientContext, id: Guid);\\n\\n            get_id(): Guid;\\n\\n            get_title(): string;\\n            set_title(value: string): string;\\n\\n            get_description(): string;\\n            set_description(value: string): string;\\n\\n            get_enabled(): boolean;\\n            set_enabled(value: boolean): boolean;\\n\\n            get_namespace(): boolean;\\n            set_namespace(value: boolean): boolean;\\n\\n            get_headScript(): string;\\n            set_headScript(value: string): string;\\n\\n            get_htmlStartBody(): string;\\n            set_htmlStartBody(value: string): string;\\n\\n            get_htmlEndBody(): string;\\n            set_htmlEndBody(value: string): string;\\n\\n            get_metaTagPagePropertyMappings(): { [key: string]: string };\\n            set_metaTagPagePropertyMappings(value: { [key: string]: string }): { [key: string]: string };\\n        }\\n\\n        class AddinPlugin extends ClientObject {\\n            constructor(ctx: ClientContext);\\n\\n            get_description(): string;\\n            set_description(value: string): string;\\n\\n            get_markup(): string;\\n            set_markup(value: string): string;\\n\\n            get_title(): string;\\n            set_title(value: string): string;\\n        }\\n\\n        class DesignPackage {\\n            static install(context: ClientContext, site: Site, info: DesignPackageInfo, path: string): void;\\n            static uninstall(context: ClientContext, site: Site, info: DesignPackageInfo): void;\\n            static apply(context: ClientContext, site: Site, info: DesignPackageInfo): void;\\n            static exportEnterprise(context: ClientContext, site: Site, includeSearchConfiguration: boolean): ClientResult<DesignPackageInfo>;\\n            static exportSmallBusiness(context: ClientContext, site: Site, packageName: string, includeSearchConfiguration: boolean): ClientResult<DesignPackageInfo>;\\n        }\\n\\n        class DesignPackageInfo extends ClientValueObject {\\n            get_packageName(): string;\\n            set_packageName(value: string): string;\\n\\n            get_packageGuid(): Guid;\\n            set_packageGuid(value: Guid): Guid;\\n\\n            get_majorVersion(): number;\\n            set_majorVersion(value: number): number;\\n\\n            get_minorVersion(): number;\\n            set_minorVersion(value: number): number;\\n        }\\n\\n        class SiteImageRenditions {\\n            static getRenditions(context: ClientContext): ImageRendition[];\\n            static setRenditions(context: ClientContext, renditions: ImageRendition[]): void;\\n        }\\n\\n        class ImageRendition extends ClientValueObject {\\n            get_id(): number;\\n            get_version(): number;\\n\\n            get_name(): string;\\n            set_name(value: string): string;\\n\\n            get_width(): number;\\n            set_width(value: number): number;\\n\\n            get_height(): number;\\n            set_height(value: number): number;\\n        }\\n\\n        class Variations extends ClientObject {\\n            static getLabels(context: ClientContext): ClientObjectList<VariationLabel>;\\n            static getPeerUrl(context: ClientContext, currentUrl: string, labelTitle: string): StringResult;\\n            static updateListItems(context: ClientContext, listId: Guid, itemIds: number[]): void;\\n        }\\n\\n        class VariationLabel extends ClientObject {\\n            get_displayName(): string;\\n            set_displayName(value: string): string;\\n\\n            get_isSource(): boolean;\\n            set_isSource(value: boolean): boolean;\\n\\n            get_language(): string;\\n            set_language(value: string): string;\\n\\n            get_locale(): string;\\n            set_locale(value: string): string;\\n\\n            get_title(): string;\\n            set_title(value: string): string;\\n\\n            get_topWebUrl(): string;\\n            set_topWebUrl(value: string): string;\\n        }\\n\\n        class CustomizableString extends ClientObject {\\n            get_defaultValue(): string;\\n\\n            get_value(): string;\\n            set_value(value: string): string;\\n\\n            get_usesDefaultValue(): boolean;\\n            set_usesDefaultValue(value: boolean): boolean;\\n        }\\n\\n        namespace Navigation {\\n            enum NavigationLinkType {\\n                root,\\n                friendlyUrl,\\n                simpleLink\\n            }\\n\\n            enum StandardNavigationSource {\\n                unknown,\\n                portalProvider,\\n                taxonomyProvider,\\n                inheritFromParentWeb\\n            }\\n\\n            class NavigationTermSetItem extends ClientObject {\\n                get_id(): Guid;\\n\\n                get_isReadOnly(): boolean;\\n\\n                get_linkType(): NavigationLinkType;\\n                set_linkType(value: NavigationLinkType): NavigationLinkType;\\n\\n                get_targetUrlForChildTerms(): CustomizableString;\\n\\n                get_catalogTargetUrlForChildTerms(): CustomizableString;\\n\\n                get_taxonomyName(): string;\\n\\n                get_title(): CustomizableString;\\n\\n                get_terms(): NavigationTermCollection;\\n\\n                get_view(): NavigationTermSetView;\\n\\n                createTerm(termName: string, linkType: NavigationLinkType, termId: Guid): Taxonomy.Term;\\n\\n                getTaxonomyTermStore(): Taxonomy.TermStore;\\n\\n                getResolvedDisplayUrl(browserQueryString: string): StringResult;\\n            }\\n\\n            interface NavigationTermCollection extends ClientObjectCollection<NavigationTerm> {\\n            }\\n\\n            class NavigationTerm extends NavigationTermSetItem {\\n                get_associatedFolderUrl(): string;\\n                set_associatedFolderUrl(value: string): string;\\n\\n                get_catalogTargetUrl(): CustomizableString;\\n\\n                get_categoryImageUrl(): string;\\n                set_categoryImageUrl(value: string): string;\\n\\n                get_excludedProviders(): NavigationTermProviderNameCollection;\\n\\n                get_excludeFromCurrentNavigation(): boolean;\\n                set_excludeFromCurrentNavigation(value: boolean): boolean;\\n\\n                get_excludeFromGlobalNavigation(): boolean;\\n                set_excludeFromGlobalNavigation(value: boolean): boolean;\\n\\n                get_friendlyUrlSegment(): CustomizableString;\\n\\n                get_hoverText(): string;\\n                set_hoverText(value: string): string;\\n\\n                get_isDeprecated(): boolean;\\n                get_isPinned(): boolean;\\n                get_isPinnedRoot(): boolean;\\n\\n                get_parent(): NavigationTerm;\\n\\n                get_simpleLinkUrl(): string;\\n\\n                set_simpleLinkUrl(value: string): string;\\n\\n                get_targetUrl(): CustomizableString;\\n\\n                get_termSet(): NavigationTermSet;\\n\\n                getAsEditable(taxonomySession: Taxonomy.TaxonomySession): NavigationTerm;\\n\\n                getWithNewView(newView: NavigationTermSetView): NavigationTerm;\\n\\n                getResolvedTargetUrl(browserQueryString: string, remainingUrlSegments: string[]): StringResult;\\n\\n                getResolvedTargetUrlWithoutQuery(): StringResult;\\n\\n                getResolvedAssociatedFolderUrl(): StringResult;\\n\\n                getWebRelativeFriendlyUrl(): StringResult;\\n\\n                getAllParentTerms(): NavigationTermCollection;\\n\\n                getTaxonomyTerm(): Taxonomy.Term;\\n\\n                move(newParent: NavigationTermSetItem): void;\\n\\n                deleteObject(): void;\\n\\n                static getAsResolvedByWeb(context: ClientContext, term: Taxonomy.Term, web: Web, siteMapProviderName: string): NavigationTerm;\\n                static getAsResolvedByView(context: ClientContext, term: Taxonomy.Term, view: NavigationTermSetView): NavigationTerm;\\n            }\\n\\n            class NavigationTermSet extends NavigationTermSetItem {\\n                get_isNavigationTermSet(): boolean;\\n                set_isNavigationTermSet(value: boolean): boolean;\\n\\n                get_lcid(): number;\\n\\n                get_loadedFromPersistedData(): boolean;\\n\\n                get_termGroupId(): Guid;\\n                get_termStoreId(): Guid;\\n\\n                getAsEditable(taxonomySession: Taxonomy.TaxonomySession): NavigationTermSet;\\n\\n                getWithNewView(newView: NavigationTermSetView): NavigationTermSet;\\n\\n                getTaxonomyTermSet(): Taxonomy.TermSet;\\n\\n                getAllTerms(): NavigationTermCollection;\\n\\n                findTermForUrl(url: string): NavigationTerm;\\n\\n                static getAsResolvedByWeb(context: ClientContext, termSet: Taxonomy.TermSet, web: Web, siteMapProviderName: string): NavigationTermSet;\\n                static getAsResolvedByView(context: ClientContext, termSet: Taxonomy.TermSet, view: NavigationTermSetView): NavigationTermSet;\\n            }\\n\\n            interface NavigationTermProviderNameCollection extends ClientObjectCollection<string> {\\n                Add(item: string): void;\\n                Clear(): void;\\n                Remove(item: string): BooleanResult;\\n            }\\n\\n            class NavigationTermSetView extends ClientObject {\\n                constructor(context: ClientContext, web: Web, siteMapProviderName: string);\\n\\n                get_excludeDeprecatedTerms(): boolean;\\n                set_excludeDeprecatedTerms(value: boolean): boolean;\\n\\n                get_excludeTermsByPermissions(): boolean;\\n                set_excludeTermsByPermissions(value: boolean): boolean;\\n\\n                get_excludeTermsByProvider(): boolean;\\n                set_excludeTermsByProvider(value: boolean): boolean;\\n\\n                get_serverRelativeSiteUrl(): string;\\n\\n                get_serverRelativeWebUrl(): string;\\n\\n                get_siteMapProviderName(): string;\\n                set_siteMapProviderName(value: string): string;\\n\\n                get_webId(): Guid;\\n                get_webTitle(): string;\\n\\n                getCopy(): NavigationTermSetView;\\n\\n                static createEmptyInstance(context: ClientContext): NavigationTermSetView;\\n            }\\n\\n            class TaxonomyNavigation {\\n                static getWebNavigationSettings(context: ClientContext, web: Web): WebNavigationSettings;\\n                static getTermSetForWeb(context: ClientContext, web: Web, siteMapProviderName: string, includeInheritedSettings: boolean): NavigationTermSet;\\n                static setCrawlAsFriendlyUrlPage(context: ClientContext, navigationTerm: Taxonomy.Term, crawlAsFriendlyUrlPage: boolean): BooleanResult;\\n                static getNavigationLcidForWeb(context: ClientContext, web: Web): IntResult;\\n                static flushSiteFromCache(context: ClientContext, site: Site): void;\\n                static flushWebFromCache(context: ClientContext, web: Web): void;\\n                static flushTermSetFromCache(context: ClientContext, webForPermissions: Web, termStoreId: Guid, termSetId: Guid): void;\\n            }\\n\\n            class WebNavigationSettings extends ClientObject {\\n                constructor(context: ClientContext, web: Web);\\n\\n                get_addNewPagesToNavigation(): boolean;\\n                set_addNewPagesToNavigation(value: boolean): boolean;\\n\\n                get_createFriendlyUrlsForNewPages(): boolean;\\n                set_createFriendlyUrlsForNewPages(value: boolean): boolean;\\n\\n                get_currentNavigation(): StandardNavigationSettings;\\n                get_globalNavigation(): StandardNavigationSettings;\\n\\n                update(taxonomySession: Taxonomy.TaxonomySession): void;\\n                resetToDefaults(): void;\\n            }\\n\\n            class StandardNavigationSettings extends ClientObject {\\n                get_termSetId(): Guid;\\n                set_termSetId(value: Guid): Guid;\\n\\n                get_termStoreId(): Guid;\\n                set_termStoreId(value: Guid): Guid;\\n\\n                get_source(): StandardNavigationSource;\\n\\n                set_source(value: StandardNavigationSource): StandardNavigationSource;\\n            }\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    namespace CompliancePolicy {\\n        enum SPContainerType {\\n            site, // : 0,\\n            web, // : 1,\\n            list // : 2\\n        }\\n\\n        class SPContainerId extends ClientObject {\\n            static createFromList(context: ClientRuntimeContext, list: List): SPContainerId;\\n            static createFromWeb(context: ClientRuntimeContext, web: Web): SPContainerId;\\n            static createFromSite(context: ClientRuntimeContext, site: Site): SPContainerId;\\n            static create(context: ClientRuntimeContext, containerId: any): SPContainerId;\\n\\n            get_containerType(): ContentType;\\n            set_containerType(value: ContentType): ContentType;\\n\\n            get_listId(): SP.Guid;\\n            set_listId(value: SP.Guid): SP.Guid;\\n\\n            get_siteId(): SP.Guid;\\n            set_siteId(value: SP.Guid): SP.Guid;\\n\\n            get_siteUrl(): string;\\n            set_siteUrl(value: string): string;\\n\\n            get_tenantId(): SP.Guid;\\n            set_tenantId(value: SP.Guid): SP.Guid;\\n\\n            get_title(): string;\\n            set_title(value: string): string;\\n\\n            get_version(): any;\\n            set_version(value: any): any;\\n\\n            get_webId(): SP.Guid;\\n            set_webId(value: SP.Guid): SP.Guid;\\n\\n            serialize(): SP.StringResult;\\n        }\\n\\n        class SPPolicyAssociation extends ClientObject {\\n            get_allowOverride(): boolean;\\n            set_allowOverride(value: boolean): boolean;\\n\\n            get_comment(): string;\\n            set_comment(value: string): string;\\n\\n            get_defaultPolicyDefinitionConfigId(): any[];\\n            set_defaultPolicyDefinitionConfigId(value: any[]): any[];\\n\\n            get_description(): string;\\n            set_description(value: string): string;\\n\\n            get_identity(): boolean;\\n            set_identity(value: boolean): boolean;\\n\\n            get_name(): string;\\n            set_name(value: string): string;\\n\\n            get_policyApplyStatus(): any;\\n            set_policyApplyStatus(value: any): any;\\n\\n            get_policyDefinitionConfigIds(): any[];\\n            set_policyDefinitionConfigIds(value: any[]): any[];\\n\\n            get_scope(): any;\\n            set_scope(value: any): any;\\n\\n            get_source(): any;\\n            set_source(value: any): any;\\n\\n            get_version(): any;\\n            set_version(value: any): any;\\n\\n            get_whenAppliedUTC(): Date;\\n            set_whenAppliedUTC(value: Date): Date;\\n\\n            get_whenChangedUTC(): Date;\\n            set_whenChangedUTC(value: Date): Date;\\n\\n            get_whenCreatedUTC(): Date;\\n            set_whenCreatedUTC(value: Date): Date;\\n        }\\n\\n        class SPPolicyBinding extends ClientObject {\\n            get_identity(): any;\\n            set_identity(value: any): any;\\n\\n            get_isExempt(): boolean;\\n            set_isExempt(value: boolean): boolean;\\n\\n            get_mode(): any;\\n            set_mode(value: any): any;\\n\\n            get_name(): string;\\n            set_name(value: string): string;\\n\\n            get_policyApplyStatus(): any;\\n            set_policyApplyStatus(value: any): any;\\n\\n            get_policyAssociationConfigId(): any;\\n            set_policyAssociationConfigId(value: any): any;\\n\\n            get_policyDefinitionConfigId(): any;\\n            set_policyDefinitionConfigId(value: any): any;\\n\\n            get_policyRuleConfigId(): any;\\n            set_policyRuleConfigId(value: any): any;\\n\\n            get_scope(): any;\\n            set_scope(value: any): any;\\n\\n            get_source(): any;\\n            set_source(value: any): any;\\n\\n            get_version(): any;\\n            set_version(value: any): any;\\n\\n            get_whenAppliedUTC(): Date;\\n            set_whenAppliedUTC(value: Date): Date;\\n\\n            get_whenChangedUTC(): Date;\\n            set_whenChangedUTC(value: Date): Date;\\n\\n            get_whenCreatedUTC(): Date;\\n            set_whenCreatedUTC(value: Date): Date;\\n        }\\n\\n        class SPPolicyDefinition extends ClientObject {\\n            get_comment(): string;\\n            set_comment(value: string): string;\\n\\n            get_createdBy(): any;\\n            set_createdBy(value: any): any;\\n\\n            get_defaultPolicyRuleConfigId(): any;\\n            set_defaultPolicyRuleConfigId(value: any): any;\\n\\n            get_description(): string;\\n            set_description(value: string): string;\\n\\n            get_enabled(): boolean;\\n            set_enabled(value: boolean): boolean;\\n\\n            get_identity(): any;\\n            set_identity(value: any): any;\\n\\n            get_lastModifiedBy(): any;\\n            set_lastModifiedBy(value: any): any;\\n\\n            get_name(): string;\\n            set_name(value: string): string;\\n\\n            get_mode(): any;\\n            set_mode(value: any): any;\\n\\n            get_scenario(): any;\\n            set_scenario(value: any): any;\\n\\n            get_source(): any;\\n            set_source(value: any): any;\\n\\n            get_version(): any;\\n            set_version(value: any): any;\\n\\n            get_whenChangedUTC(): Date;\\n            set_whenChangedUTC(value: Date): Date;\\n\\n            get_whenCreatedUTC(): Date;\\n            set_whenCreatedUTC(value: Date): Date;\\n        }\\n\\n        class SPPolicyRule extends ClientObject {\\n            get_comment(): string;\\n            set_comment(value: string): string;\\n\\n            get_createdBy(): any;\\n            set_createdBy(value: any): any;\\n\\n            get_description(): string;\\n            set_description(value: string): string;\\n\\n            get_enabled(): boolean;\\n            set_enabled(value: boolean): boolean;\\n            get_identity(): any;\\n            set_identity(value: any): any;\\n\\n            get_lastModifiedBy(): any;\\n            set_lastModifiedBy(value: any): any;\\n\\n            get_mode(): any;\\n            set_mode(value: any): any;\\n\\n            get_name(): string;\\n            set_name(value: string): string;\\n\\n            get_policyDefinitionConfigId(): any;\\n            set_policyDefinitionConfigId(value: any): any;\\n\\n            get_priority(): any;\\n            set_priority(value: any): any;\\n\\n            get_ruleBlob(): any;\\n            set_ruleBlob(value: any): any;\\n\\n            get_whenChangedUTC(): Date;\\n            set_whenChangedUTC(value: Date): Date;\\n\\n            get_whenCreatedUTC(): Date;\\n            set_whenCreatedUTC(value: Date): Date;\\n        }\\n\\n        class SPPolicyStore extends ClientObject {\\n            constructor(context: ClientRuntimeContext, web: Web);\\n\\n            static createPolicyDefinition(context: ClientRuntimeContext): SPPolicyDefinition;\\n            static createPolicyBinding(context: ClientRuntimeContext): SPPolicyBinding;\\n            static createPolicyAssociation(context: ClientRuntimeContext): SPPolicyAssociation;\\n            static createPolicyRule(context: ClientRuntimeContext): SPPolicyRule;\\n\\n            updatePolicyRule(policyRule: SPPolicyRule): void;\\n\\n            getPolicyRule(policyRuleId: any, throwIfNull: boolean): SPPolicyRule;\\n\\n            deletePolicyRule(policyRuleId: any): void;\\n\\n            notifyUnifiedPolicySync(notificationId: any, syncSvcUrl: string, changeInfos: any, syncNow: boolean, fullSyncForTenant: boolean): void;\\n\\n            updatePolicyDefinition(policyDefinition: SPPolicyDefinition): void;\\n\\n            getPolicyDefinition(policyDefinitionId: any): SPPolicyDefinition;\\n\\n            deletePolicyDefinition(policyDefinitionId: any): void;\\n\\n            getPolicyDefinitions(scenario: any): ClientObjectList<SPPolicyDefinition>;\\n\\n            updatePolicyBinding(policyBinding: SPPolicyBinding): void;\\n\\n            getPolicyBinding(policyBindingId: any): SPPolicyBinding;\\n\\n            deletePolicyBinding(policyBindingId: any): void;\\n\\n            updatePolicyAssociation(policyAssociation: SPPolicyAssociation): void;\\n\\n            getPolicyAssociation(policyAssociationId: any): SPPolicyAssociation;\\n\\n            getPolicyAssociationForContainer(containerId: SPContainerId): SPPolicyAssociation;\\n\\n            deletePolicyAssociation(policyAssociationId: any): void;\\n        }\\n\\n        class SPPolicyStoreProxy extends ClientObject {\\n            constructor(context: ClientRuntimeContext, web: Web);\\n\\n            get_policyStoreUrl(): string;\\n        }\\n    }\\n\\n    namespace Discovery {\\n        enum ExportStatus {\\n            notStarted, // : 0,\\n            started, // : 1,\\n            complete, // : 2,\\n            failed // : 3\\n        }\\n\\n        class Case extends ClientObject {\\n            constructor(context: ClientRuntimeContext, web: Web);\\n            getExportContent(sourceIds: number[]): SP.StringResult;\\n        }\\n        class Export extends ClientObject {\\n            constructor(context: ClientRuntimeContext, item: ListItem);\\n            get_status(): ExportStatus;\\n            set_status(value: ExportStatus): ExportStatus;\\n            update(): void;\\n            getExportContent(): SP.StringResult;\\n        }\\n    }\\n\\n    namespace InformationPolicy {\\n        class ProjectPolicy extends SP.ClientObject {\\n            constructor(context: ClientRuntimeContext, objectPath: ObjectPath);\\n            get_description(): string;\\n\\n            get_emailBody(): string;\\n            set_emailBody(value: string): string;\\n\\n            get_emailBodyWithTeamMailbox(): string;\\n            set_emailBodyWithTeamMailbox(value: string): string;\\n\\n            get_emailSubject(): string;\\n            set_emailSubject(value: string): string;\\n\\n            get_name(): string;\\n            savePolicy(): void;\\n\\n            static getProjectPolicies(context: ClientRuntimeContext, web: Web): ClientObjectList<ProjectPolicy>;\\n            static getCurrentlyAppliedProject(context: ClientRuntimeContext, web: Web): ProjectPolicy;\\n            static applyProjectPolicy(context: ClientRuntimeContext, web: Web, projectPolicy: ProjectPolicy): void;\\n            static openProject(context: ClientRuntimeContext, web: Web): void;\\n            static closeProject(context: ClientRuntimeContext, web: Web): void;\\n            static postponeProject(context: ClientRuntimeContext, web: Web): void;\\n            static doesProjectHavePolicy(context: ClientRuntimeContext, web: Web): SP.BooleanResult;\\n            static isProjectClosed(context: ClientRuntimeContext, web: Web): SP.BooleanResult;\\n            static getProjectCloseDate(context: ClientRuntimeContext, web: Web): SP.DateTimeResult;\\n            static getProjectExpirationDate(context: ClientRuntimeContext, web: Web): SP.DateTimeResult;\\n        }\\n    }\\n}\\ndeclare class SPClientAutoFill {\\n    static MenuOptionType: {\\n        Option: number;\\n        Footer: number;\\n        Separator: number;\\n        Loading: number;\\n    };\\n\\n    static KeyProperty: string; // = 'AutoFillKey';\\n    static DisplayTextProperty: string; // = 'AutoFillDisplayText';\\n    static SubDisplayTextProperty: string; // = 'AutoFillSubDisplayText';\\n    static TitleTextProperty: string; // = 'AutoFillTitleText';\\n    static MenuOptionTypeProperty: string; // = 'AutoFillMenuOptionType';\\n\\n    static GetAutoFillObjFromInput(elmText: HTMLInputElement): SPClientAutoFill;\\n    static GetAutoFillObjFromContainer(elmChild: HTMLElement): SPClientAutoFill;\\n    static GetAutoFillMenuItemFromOption(elmChild: HTMLElement): HTMLElement;\\n\\n    constructor(elmTextId: string, elmContainerId: string, fnPopulateAutoFill: (targetElement: HTMLInputElement) => void);\\n    TextElementId: string;\\n    AutoFillContainerId: string;\\n    AutoFillMenuId: string;\\n    VisibleItemCount: number;\\n    CurrentFocusOption: number;\\n    AutoFillMinTextLength: number;\\n    AutoFillTimeout: number;\\n    AutoFillCallbackTimeoutID: string;\\n    FuncOnAutoFillClose: (elmTextId: string, ojData: ISPClientAutoFillData) => void;\\n    FuncPopulateAutoFill: (targetElement: HTMLElement) => void;\\n    AllOptionData: { [key: string]: ISPClientAutoFillData };\\n\\n    PopulateAutoFill(jsonObjSuggestions: ISPClientAutoFillData[], fnOnAutoFillCloseFuncName: (elmTextId: string, objData: ISPClientAutoFillData) => void): void;\\n    IsAutoFillOpen(): boolean;\\n    SetAutoFillHeight(): void;\\n    SelectAutoFillOption(elemOption: HTMLElement): void;\\n    FocusAutoFill(): void;\\n    BlurAutoFill(): void;\\n    CloseAutoFill(ojData: ISPClientAutoFillData): void;\\n    UpdateAutoFillMenuFocus(bMoveNextLink: boolean): void;\\n    UpdateAutoFillPosition(): void;\\n}\\n\\n// tslint:disable-next-line: interface-name\\ninterface ISPClientAutoFillData {\\n    AutoFillKey?: any;\\n    AutoFillDisplayText?: string;\\n    AutoFillSubDisplayText?: string;\\n    AutoFillTitleText?: string;\\n    AutoFillMenuOptionType?: number;\\n}\\n\\ndeclare class SPClientPeoplePicker {\\n    static ValueName: string; // = 'Key';\\n    static DisplayTextName: string; // = 'DisplayText';\\n    static SubDisplayTextName: string; // = 'Title';\\n    static DescriptionName: string; // = 'Description';\\n    static SIPAddressName: string; // = 'SIPAddress';\\n    static SuggestionsName: string; // = 'MultipleMatches';\\n    static UnvalidatedEmailAddressKey: string; // = \\\"UNVALIDATED_EMAIL_ADDRESS\\\";\\n    static KeyProperty: string; // = 'AutoFillKey';\\n    static DisplayTextProperty: string; // = 'AutoFillDisplayText';\\n    static SubDisplayTextProperty: string; // = 'AutoFillSubDisplayText';\\n    static TitleTextProperty: string; // = 'AutoFillTitleText';\\n    static DomainProperty: string; // = 'DomainText';\\n\\n    static SPClientPeoplePickerDict: {\\n        [pickerIelementId: string]: SPClientPeoplePicker;\\n    };\\n\\n    static InitializeStandalonePeoplePicker(clientId: string, value: ISPClientPeoplePickerEntity[], schema: ISPClientPeoplePickerSchema): void;\\n    static ParseUserKeyPaste(userKey: string): string;\\n    static GetTopLevelControl(elmChild: HTMLElement): HTMLElement;\\n    static AugmentEntity(entity: ISPClientPeoplePickerEntity): ISPClientPeoplePickerEntity;\\n    static AugmentEntitySuggestions(pickerObj: SPClientPeoplePicker, allEntities: ISPClientPeoplePickerEntity[], mergeLocal?: boolean): ISPClientPeoplePickerEntity[];\\n    static PickerObjectFromSubElement(elmSubElement: HTMLElement): SPClientPeoplePicker;\\n    static TestLocalMatch(strSearchLower: string, dataEntity: ISPClientPeoplePickerEntity): boolean;\\n    static BuildUnresolvedEntity(key: string, dispText: string): ISPClientPeoplePickerEntity;\\n    static AddAutoFillMetaData(pickerObj: SPClientPeoplePicker, options: ISPClientPeoplePickerEntity[], numOpts: number): ISPClientPeoplePickerEntity[];\\n    static BuildAutoFillMenuItems(pickerObj: SPClientPeoplePicker, options: ISPClientPeoplePickerEntity[]): ISPClientPeoplePickerEntity[];\\n    static IsUserEntity(entity: ISPClientPeoplePickerEntity): boolean;\\n    static CreateSPPrincipalType(acctStr: string): number;\\n\\n    TopLevelElementId: string; // '',\\n    EditorElementId: string; // '',\\n    AutoFillElementId: string; // '',\\n    ResolvedListElementId: string; // '',\\n    InitialHelpTextElementId: string; // '',\\n    WaitImageId: string; // '',\\n    HiddenInputId: string; // '',\\n    AllowEmpty: boolean; // true,\\n    ForceClaims: boolean; // false,\\n    AutoFillEnabled: boolean; // true,\\n    AllowMultipleUsers: boolean; // false,\\n    OnValueChangedClientScript: (pickerElementId: string, users: ISPClientPeoplePickerEntity[]) => void;\\n    OnUserResolvedClientScript: (pickerElementId: string, users: ISPClientPeoplePickerEntity[]) => void;\\n    OnControlValidateClientScript: (pickerElementId: string, users: ISPClientPeoplePickerEntity[]) => void;\\n    UrlZone: SP.UrlZone; // null,\\n    AllUrlZones: boolean; // false,\\n    SharePointGroupID: number; // 0,\\n    AllowEmailAddresses: boolean; // false,\\n    PPMRU: SPClientPeoplePickerMRU;\\n    UseLocalSuggestionCache: boolean; // true,\\n    CurrentQueryStr: string; // '',\\n    LatestSearchQueryStr: string; // '',\\n    InitialSuggestions: ISPClientPeoplePickerEntity[];\\n    CurrentLocalSuggestions: ISPClientPeoplePickerEntity[];\\n    CurrentLocalSuggestionsDict: ISPClientPeoplePickerEntity;\\n    VisibleSuggestions: number; // 5,\\n    PrincipalAccountType: string; // '',\\n    PrincipalAccountTypeEnum: SP.Utilities.PrincipalType;\\n    EnabledClaimProviders: string; // '',\\n    SearchPrincipalSource: SP.Utilities.PrincipalSource; // null,\\n    ResolvePrincipalSource: SP.Utilities.PrincipalSource; // null,\\n    MaximumEntitySuggestions: number; // 30,\\n    EditorWidthSet: boolean; // false,\\n    QueryScriptInit: boolean; // false,\\n    AutoFillControl: SPClientAutoFill; // null,\\n    TotalUserCount: number; // 0,\\n    UnresolvedUserCount: number; // 0,\\n    UserQueryDict: { [index: string]: SP.StringResult };\\n    ProcessedUserList: { [index: string]: SPClientPeoplePickerProcessedUser };\\n    HasInputError: boolean; // false,\\n    HasServerError: boolean; // false,\\n    ShowUserPresence: boolean; // true,\\n    TerminatingCharacter: string; // ';',\\n    UnresolvedUserElmIdToReplace: string; // '',\\n    WebApplicationID: SP.Guid; // '{00000000-0000-0000-0000-000000000000}',\\n    GetAllUserInfo(): ISPClientPeoplePickerEntity[];\\n\\n    SetInitialValue(entities: ISPClientPeoplePickerEntity[], initialErrorMsg?: string): void;\\n    AddUserKeys(userKeys: string, bSearch: boolean): void;\\n    BatchAddUserKeysOperation(allKeys: string[], numProcessed: number): void;\\n    ResolveAllUsers(fnContinuation: () => void): void;\\n    ExecutePickerQuery(queryIds: string, onSuccess: (queryId: string, result: SP.StringResult) => void, onFailure: (queryId: string, result: SP.StringResult) => void, fnContinuation: () => void): void;\\n    AddUnresolvedUserFromEditor(bRunQuery?: boolean): void;\\n    AddUnresolvedUser(unresolvedUserObj: ISPClientPeoplePickerEntity, bRunQuery?: boolean): void;\\n    UpdateUnresolvedUser(results: SP.StringResult, user: ISPClientPeoplePickerEntity): void;\\n    AddPickerSearchQuery(queryStr: string): string;\\n    AddPickerResolveQuery(queryStr: string): string;\\n    GetPeoplePickerQueryParameters(): SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters;\\n    AddProcessedUser(userObject: ISPClientPeoplePickerEntity, fResolved?: boolean): string;\\n    DeleteProcessedUser(elmToRemove: HTMLElement): void;\\n    OnControlValueChanged(): void;\\n    OnControlResolvedUserChanged(): void;\\n    EnsureAutoFillControl(): void;\\n    ShowAutoFill(resultsTable: ISPClientAutoFillData[]): void;\\n    FocusAutoFill(): void;\\n    BlurAutoFill(): void;\\n    IsAutoFillOpen(): boolean;\\n    EnsureEditorWidth(): void;\\n    SetFocusOnEditorEnd(): void;\\n    ToggleWaitImageDisplay(bShowImage?: boolean): void;\\n    SaveAllUserKeysToHiddenInput(): void;\\n    GetCurrentEditorValue(): string;\\n    GetControlValueAsJSObject(): ISPClientPeoplePickerEntity[];\\n    GetAllUserKeys(): string;\\n    GetControlValueAsText(): string;\\n    IsEmpty(): boolean;\\n    IterateEachProcessedUser(fnCallback: (index: number, user: SPClientPeoplePickerProcessedUser) => void): void;\\n    HasResolvedUsers(): boolean;\\n    Validate(): void;\\n    ValidateCurrentState(): void;\\n    GetUnresolvedEntityErrorMessage(): string;\\n    ShowErrorMessage(msg: string): void;\\n    ClearServerError(): void;\\n    SetServerError(): void;\\n    OnControlValidate(): void;\\n    SetEnabledState(bEnabled: boolean): void;\\n    DisplayLocalSuggestions(): void;\\n    CompileLocalSuggestions(input: string): void;\\n    PlanningGlobalSearch(): boolean;\\n    AddLoadingSuggestionMenuOption(): void;\\n    ShowingLocalSuggestions(): boolean;\\n    ShouldUsePPMRU(): boolean;\\n    AddResolvedUserToLocalCache(resolvedEntity: ISPClientPeoplePickerEntity, resolveText: string): void;\\n}\\n\\n// tslint:disable-next-line: interface-name\\ninterface ISPClientPeoplePickerSchema {\\n    TopLevelElementId?: string;\\n    EditorElementId?: string;\\n    AutoFillElementId?: string;\\n    ResolvedListElementId?: string;\\n    InitialHelpTextElementId?: string;\\n    WaitImageId?: string;\\n    HiddenInputId?: string;\\n\\n    AllowMultipleValues?: boolean;\\n    Required?: boolean;\\n    AutoFillEnabled?: boolean;\\n    ForceClaims?: boolean;\\n    AllowEmailAddresses?: boolean;\\n    AllUrlZones?: boolean;\\n    UseLocalSuggestionCache?: boolean;\\n    UserNoQueryPermission?: boolean;\\n\\n    VisibleSuggestions?: number;\\n    MaximumEntitySuggestions?: number;\\n\\n    ErrorMessage?: string;\\n    InitialHelpText?: string;\\n\\n    InitialSuggestions?: ISPClientPeoplePickerEntity[];\\n\\n    UrlZone?: SP.UrlZone;\\n    WebApplicationID?: SP.Guid;\\n    SharePointGroupID?: number;\\n\\n    /** Specify User, DL, SecGroup or SPGroup*/\\n    PrincipalAccountType?: string;\\n\\n    EnabledClaimProvider?: string;\\n    ResolvePrincipalSource?: SP.Utilities.PrincipalSource;\\n    SearchPrincipalSource?: SP.Utilities.PrincipalSource;\\n\\n    OnUserResolvedClientScript?(pickerElementId: string, users: ISPClientPeoplePickerEntity[]): void;\\n    OnValueChangedClientScript?(pickerElementId: string, users: ISPClientPeoplePickerEntity[]): void;\\n\\n    /** Number or '100%'*/\\n    Width?: any;\\n\\n    Rows?: number;\\n}\\n\\ndeclare class SPClientPeoplePickerMRU {\\n    static PPMRUVersion: number; // = 1;\\n    static MaxPPMRUItems: number; // = 200;\\n    static PPMRUDomLocalStoreKey: string; // = \\\"ClientPeoplePickerMRU\\\";\\n    static GetSPClientPeoplePickerMRU(): SPClientPeoplePickerMRU;\\n\\n    GetItems(strKey: string): { Key: string, [name: string]: any };\\n    SetItem<T extends { Key: string }>(strSearchTerm: string, objEntity: T): void;\\n    ResetCache(): void;\\n}\\n\\n// tslint:disable-next-line: interface-name\\ninterface ISPClientPeoplePickerEntity {\\n    Key?: string;\\n    Description?: string;\\n    DisplayText?: string;\\n    EntityType?: string;\\n    ProviderDisplayName?: string;\\n    ProviderName?: string;\\n    IsResolved?: boolean;\\n    EntityData?: {\\n        Title: string;\\n        MobilePhone: string;\\n        Department: string;\\n        Email: string;\\n    };\\n    MultipleMatches: ISPClientPeoplePickerEntity[];\\n    DomainText?: string;\\n    [key: string]: any;\\n}\\n\\ndeclare class SPClientPeoplePickerProcessedUser {\\n    UserContainerElementId: string; // '',\\n    DisplayElementId: string; // '',\\n    PresenceElementId: string; // '',\\n    DeleteUserElementId: string; // '',\\n    SID: string; // '',\\n    DisplayName: string; // '',\\n    SIPAddress: string; // '',\\n    UserInfo: ISPClientPeoplePickerEntity; // null,\\n    ResolvedUser: boolean; // true,\\n    Suggestions: ISPClientAutoFillData[]; // null,\\n    ErrorDescription: string; // '',\\n    ResolveText: string; // '',\\n    UpdateResolvedUser(newUserInfo: ISPClientPeoplePickerEntity, strNewElementId: string): void;\\n    UpdateSuggestions(entity: ISPClientPeoplePickerEntity): void;\\n    BuildUserHTML(): string;\\n    UpdateUserMaxWidth(): void;\\n    ResolvedAsUnverifiedEmail(): string;\\n\\n    static BuildUserPresenceHtml(elmId: string, strSip: string, bResolved?: boolean): string;\\n    static GetUserContainerElement(elmChild: HTMLElement): HTMLElement;\\n    static HandleProcessedUserClick(ndClicked: HTMLElement): void;\\n    static DeleteProcessedUser(elmToRemove: HTMLElement): void;\\n    static HandleDeleteProcessedUserKey(e: Event): void;\\n    static HandleResolveProcessedUserKey(e: Event): void;\\n}\\n\\ndeclare namespace Microsoft {\\n    namespace Office {\\n        namespace Server {\\n            namespace ReputationModel {\\n                class Reputation {\\n                    constructor();\\n                    static setLike(context: SP.ClientContext, listId: string, itemId: number, like: boolean): void;\\n                    static setRating(context: SP.ClientContext, listId: string, itemId: number, rating: number): void;\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace Define {\\n    function loadScript(url: string, successCallback: () => void, errCallback: () => void): void;\\n    /** Loads script from _layouts/15/[req].js */\\n    function require(req: string, callback: (arg: any[]) => void): void;\\n    /** Loads script from _layouts/15/[req].js */\\n    function require(req: string[], callback: (...args: any[]) => void): void;\\n    function define(name: string, deps: string[], def: (...args: any[]) => any): void;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace Verify {\\n    function ArgumentType(arg: string, expected: any): void;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace BrowserStorage {\\n    const local: CachedStorage;\\n    const session: CachedStorage;\\n\\n    /** Available only in SharePoint Online*/\\n    interface CachedStorage {\\n        getItem(key: string): string;\\n        setItem(key: string, value: string): void;\\n        removeItem(key: string): void;\\n        clead(): void;\\n        length: number;\\n    }\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace BrowserDetection {\\n    const browseris: Browseris;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace CSSUtil {\\n    function HasClass(elem: HTMLElement, className: string): boolean;\\n    function AddClass(elem: HTMLElement, className: string): void;\\n    function RemoveClass(elem: HTMLElement, className: string): void;\\n    function pxToFloat(pxString: string): number;\\n    function pxToNum(px: string): number;\\n    function numToPx(n: number): string;\\n    function getCurrentEltStyleByNames(elem: HTMLElement, styleNames: string[]): string;\\n    function getCurrentStyle(elem: HTMLElement, cssStyle: string): string;\\n    function getCurrentStyleCorrect(element: HTMLElement, camelStyleName: string, dashStyleName: string): string;\\n    function getOpacity(element: HTMLElement): number;\\n    function setOpacity(element: HTMLElement, value: number): void;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace DOM {\\n    const rightToLeft: boolean;\\n    function cancelDefault(evt: Event): void;\\n    function AbsLeft(el: HTMLElement): number;\\n    function AbsTop(el: HTMLElement): number;\\n    function CancelEvent(evt: Event): void;\\n    function GetElementsByName(nae: string): NodeList;\\n    function GetEventCoords(evt: Event): { x: number; y: number; };\\n    function GetEventSrcElement(evt: Event): HTMLElement;\\n    function GetInnerText(el: HTMLElement): string;\\n    function PreventDefaultNavigation(evt: Event): void;\\n    function SetEvent(eventName: string, eventFunc: (eventName: string, fnContent: (evt: Event) => void, window?: Window) => void, el: HTMLElement): void;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace Encoding {\\n    function EncodeScriptQuote(str: string): string;\\n    function HtmlEncode(str: string): string;\\n    function HtmlDecode(str: string): string;\\n    function AttrQuote(str: string): string;\\n    function ScriptEncode(str: string): string;\\n    function ScriptEncodeWithQuote(str: string): string;\\n    function CanonicalizeUrlEncodingCase(str: string): string;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace IE8Support {\\n    function arrayIndexOf<T>(array: T[], item: T, startIdx?: number): number;\\n    function attachDOMContentLoaded(handler: () => void): void;\\n    function getComputedStyle(domObj: HTMLElement, camelStyleName: string, dashStyleName: string): string;\\n    function stopPropagation(evt: Event): void;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace StringUtil {\\n    function BuildParam(stPattern: string, ...params: any[]): string;\\n    function ApplyStringTemplate(str: string, ...params: any[]): string;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace TypeUtil {\\n    function IsArray(value: any): boolean;\\n    function IsNullOrUndefined(value: any): boolean;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace Nav {\\n    const ajaxNavigate: AjaxNavigate;\\n    function convertRegularURLtoMDSURL(webUrl: string, fullPath: string): string;\\n    function isMDSUrl(url: string): boolean;\\n    function isPageUrlValid(url: string): boolean;\\n    function isPortalTemplatePage(url: string): boolean;\\n    function getAjaxLocationWindow(): string;\\n    function getSource(defaultSource?: string): string;\\n    function getUrlKeyValue(keyName: string, bNoDecode: boolean, url: string, bCaseInsensitive: boolean): string;\\n    function getWindowLocationNoHash(hre: string): string;\\n    function goToHistoryLink(el: HTMLAnchorElement, strVersion: string): void;\\n    function getGoToLinkUrl(el: HTMLAnchorElement): string;\\n    function goToLink(el: HTMLAnchorElement): void;\\n    function goToLinkOrDialogNewWindow(el: HTMLAnchorElement): void;\\n    function goToDiscussion(url: string): void;\\n    function onClickHook(evt: Event, topElm: HTMLElement): void;\\n    function pageUrlValidation(url: string, alertString: string): string;\\n    function parseHash(hash: string): { [name: string]: string };\\n    function navigate(url: string): void;\\n    function removeMDSQueryParametersFromUrl(url: string): string;\\n    function urlFromHashBag(hashObject: { [name: string]: string }): string;\\n    function wantsNewTab(evt: Event): boolean;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace URI_Encoding {\\n    function encodeURIComponent(str: string, bAsUrl?: boolean, bForFilterQuery?: boolean, bForCallback?: boolean): string;\\n    function escapeUrlForCallback(str: string): string;\\n}\\n\\ninterface ListItem {\\n    ID: number;\\n    ContentTypeId: string;\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace ListModule {\\n    namespace Util {\\n        function createViewEditUrl(renderCtx: SPClientTemplates.RenderContext, listItem: ListItem, useEditFormUrl?: boolean, appendSource?: boolean): string;\\n        function createItemPropertiesTitle(renderCtx: SPClientTemplates.RenderContext, listItem: ListItem): string;\\n        function clearSelectedItemsDict(context: any): void;\\n        function ctxInitItemState(context: any): void;\\n        function getAttributeFromItemTable(itemTableParam: HTMLElement, strAttributeName: string, strAttributeOldName: string): string;\\n        function getSelectedItemsDict(context: any): any;\\n        function removeOnlyPagingArgs(url: string): string;\\n        function removePagingArgs(url: string): string;\\n        function showAttachmentRows(): void;\\n    }\\n}\\n\\n/** Available only in SharePoint Online*/\\ndeclare namespace SPThemeUtils {\\n    function ApplyCurrentTheme(): void;\\n    function WithCurrentTheme(resultCallback: (themesCache: any) => void): void;\\n    function UseClientSideTheming(): boolean;\\n    function Suspend(): void;\\n}\\n\\ndeclare namespace SP {\\n    namespace JsGrid {\\n        enum TextDirection {\\n            Default, // 0,\\n            RightToLeft, // 1,\\n            LeftToRight // 2\\n        }\\n\\n        enum PaneId {\\n            MainGrid, // 0,\\n            PivotedGrid, // 1,\\n            Gantt // 2\\n        }\\n\\n        enum PaneLayout {\\n            GridOnly, // 0,\\n            GridAndGantt, // 1,\\n            GridAndPivotedGrid // 2\\n        }\\n        enum EditMode {\\n            ReadOnly, // 0,\\n            ReadWrite, // 1,\\n            ReadOnlyDefer, // 2,\\n            ReadWriteDefer, // 3,\\n            Defer // 4\\n        }\\n\\n        enum GanttDrawBarFlags {\\n            LeftLink, // 0x01,\\n            RightLink // 0x02\\n        }\\n        enum GanttBarDateType {\\n            Start, // 0,\\n            End // 1\\n        }\\n\\n        enum ValidationState {\\n            Valid, // 0,\\n            Pending, // 1,\\n            Invalid // 2\\n        }\\n\\n        enum HierarchyMode {\\n            None, // 0,\\n            Standard, // 1,\\n            Grouping // 2\\n        }\\n\\n        enum EditActorWriteType {\\n            Both, // 1,\\n            LocalizedOnly, // 2,\\n            DataOnly, // 3,\\n            Either // 4\\n        }\\n\\n        enum EditActorReadType {\\n            Both, // 1,\\n            LocalizedOnly, // 2,\\n            DataOnly // 3\\n        }\\n\\n        enum EditActorUpdateType {\\n            Committed, // 0,\\n            Uncommitted, // 1\\n        }\\n\\n        enum SortMode {\\n            Ascending, // 1,\\n            Descending, // -1,\\n            None // 0\\n        }\\n\\n        namespace RowHeaderStyleId {\\n            const Transfer: string; // 'Transfer',\\n            const Conflict: string; // 'Conflict'\\n        }\\n\\n        namespace RowHeaderAutoStyleId {\\n            const Dirty: string; // 'Dirty',\\n            const Error: string; // 'Error',\\n            const NewRow: string; // 'NewRow'\\n        }\\n\\n        enum RowHeaderStatePriorities {\\n            Dirty, // 10,\\n            Transfer, // 30,\\n            CellError, // 40,\\n            Conflict, // 50,\\n            RowError, // 60,\\n            NewRow // 90\\n        }\\n\\n        enum UpdateSerializeMode {\\n            Cancel, // 0,\\n            Default, // 1,\\n            PropDataOnly, // 2,\\n            PropLocalizedOnly, // 3,\\n            PropBoth // 4\\n        }\\n\\n        enum UpdateTrackingMode {\\n            PropData, // 2,\\n            PropLocalized, // 3,\\n            PropBoth // 4\\n        }\\n\\n        namespace UserAction {\\n            const UserEdit: string; // 'User Edit':string;\\n            const DeleteRecord: string; // 'Delete Record':string;\\n            const InsertRecord: string; // 'Insert Record':string;\\n            const Indent: string; // 'Indent':string;\\n            const Outdent: string; // 'Outdent':string;\\n            const Fill: string; // 'Fill':string;\\n            const Paste: string; // 'Paste':string;\\n            const CutPaste: string; // 'Cut/Paste'\\n        }\\n\\n        enum ReadOnlyActiveState {\\n            ReadOnlyActive, // 0,\\n            ReadOnlyDisabled, // 1\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IValue {\\n            data?: any;\\n            localized?: string;\\n        }\\n        enum SelectionTypeFlags {\\n            MultipleCellRanges,\\n            MultipleRowRanges,\\n            MultipleColRanges\\n        }\\n\\n        class JsGridControl {\\n            constructor(parentNode: HTMLElement, bShowLoadingBanner: boolean);\\n            /** Returns true if Init method has been executed successfully */\\n            IsInitialized(): boolean;\\n            /** Replaces the control TableCache object with the provided one */\\n            ResetData(cache: SP.JsGrid.TableCache): void;\\n            /** Initialize the control */\\n            Init(parameters: SP.JsGrid.JsGridControl.Parameters): void;\\n            Cleanup(): void;\\n            /** Removes all event handlers and markup associated with the control */\\n            Dispose(): void;\\n\\n            // todo\\n            NotifyDataAvailable(): void;\\n            NotifySave(): void;\\n            NotifyHide(): void;\\n            NotifyResize(): void;\\n            ClearTableView(): void;\\n            HideInitialLoadingBanner(): void;\\n            ShowInitialGridErrorMsg(errorMsg: string): void;\\n            ShowGridErrorMsg(errorMsg: string): void;\\n            LaunchPrintView(\\n                additionalScriptFiles: any,\\n                beforeInitFnName: any,\\n                beforeInitFnArgsObj: any,\\n                title: string,\\n                bEnableGantt: boolean,\\n                optGanttDelegateNames?: any,\\n                optInitTableViewParamsFnName?: any,\\n                optInitTableViewParamsFnArgsObj?: any,\\n                optInitGanttStylesFnName?: any,\\n                optInitGanttStylesFnArgsObj?: any): void;\\n            GetAllDataJson(fnOnFinished: any, optFnGetCellStyleID?: any): void;\\n            SetTableView(tableViewParams: any): void;\\n            SetRowView(rowViewParam: any): void;\\n\\n            /** Enable grid after Disable. */\\n            Enable(): void;\\n            /** Covers the grid with the semi-transparent panel, preventing any operations with it.\\n                Additionally, displays loading animated gif and optMsg as the message next to it.\\n                If optMsg is not specified, displays \\\"Loading...\\\" text. */\\n            Disable(optMsg?: string): void;\\n            /** Enables grid editing */\\n            EnableEditing(): void;\\n            /** Disables grid editing: all the records become readonly */\\n            DisableEditing(): void;\\n            /** Switches the currently selected cell into edit mode: displays edit control and sets focus into it.\\n                Returns true if success. */\\n            TryBeginEdit(): boolean;\\n            FinalizeEditing(fnContinue: () => void, fnError: () => void): void;\\n            /** Get diff tracker object that tracks changes to the grid data. */\\n            GetDiffTracker(): SP.JsGrid.Internal.DiffTracker;\\n            /** Moves focus to the JsGrid control */\\n            Focus(): void;\\n\\n            /** Try saving the new record row (aka entry row) if it was edited. */\\n            TryCommitFirstEntryRecords(fnCommitComplete: () => void): void;\\n            /** Removes all new record rows (aka entry rows), including unsaved and even empty ones.\\n                The latter seems to be a bug, as I haven't found any easy way to restore the empty entry row. */\\n            ClearUncommitedEntryRecords(): void;\\n            /** Returns true if there are any unsaved new record rows (aka entry rows). */\\n            AnyUncommitedEntryRecords(): boolean;\\n\\n            // todo\\n            AnyUncomittedProvisionalRecords(): boolean;\\n\\n            /** Gets record based on the recordKey\\n                @recordKey internal unique id of a row. You can get recordKey from view index via GetRecordKeyByViewIndex method. */\\n            GetRecord(recordKey: number): IRecord;\\n            /** Get entry record with the specified key.\\n                Entry record is a special type of record because it represents a new record that doesn't exist yet. */\\n            GetEntryRecord(key: any): any;\\n            /** Determine if the specified record key identifies valid entry row. */\\n            IsEntryRecord(recordKey: number): boolean;\\n            /** Determine whether the specified cell is editable. */\\n            IsCellEditable(record: IRecord, fieldKey: string, optPaneId?: any): boolean;\\n            /** Adds one of builtin row state indicator icons into the row header.\\n                Please pass one of the values of SP.JsGrid.RowHeaderStyleId\\n                Row header is the leftmost gray column of the table. */\\n            AddBuiltInRowHeaderState(recordKey: number, rowHeaderStateId: string): void;\\n            /** Adds the specified state into the row header.\\n                There can be several row header states for one row. Only one is shown (according to the Priority).\\n                Row header is the leftmost gray column of the table. */\\n            AddRowHeaderState(recordKey: number, rowHeaderState: SP.JsGrid.RowHeaderState): void;\\n            /** Removes header state with specified id from the row. */\\n            RemoveRowHeaderState(recordKey: number, rowHeaderStateId: string): void;\\n\\n            GetCheckSelectionManager(): any;\\n            UpdateProperties(propertyUpdates: any, changeName: any, optChangeKey?: any): any;\\n            GetLastRecordKey(): string;\\n            InsertProvisionalRecordBefore(beforeRecordKey: number, newRecord: any, initialValues: any): any;\\n            InsertProvisionalRecordAfter(afterRecordKey: number, newRecord: any, initialValues: any): any;\\n            IsProvisionalRecordKey(recordKey: number): boolean;\\n            InsertRecordBefore(beforeRecordKey: number, newRecord: any, optChangeKey?: any): any;\\n            InsertRecordAfter(afterRecordKey: number, newRecord: any, optChangeKey?: any): any;\\n            InsertHiddenRecord(recordKey: number, changeKey: any, optAfterRecordKey?: any): any;\\n            DeleteRecords(recordKeys: any, optChangeKey?: any): any;\\n            IndentRecords(recordKeys: any, optChangeKey?: any): any;\\n            OutdentRecords(recordKeys: any, optChangeKey?: any): any;\\n            ReorderRecords(beginRecordKey: number, endRecordKey: number, afterRecordKey: number, bSelectAfterwards: boolean): any;\\n            GetContiguousRowSelectionWithoutEntryRecords(): { begin: any; end: any; keys: any };\\n            CanMoveRecordsUpByOne(recordKeys: any): boolean;\\n            CanMoveRecordsDownByOne(recordKeys: any): boolean;\\n            MoveRecordsUpByOne(recordKeys: any): any;\\n            MoveRecordsDownByOne(recordKeys: any): any;\\n            GetReorderRange(recordKeys: any): any;\\n            GetNodeExpandCollapseState(recordKey: number): any;\\n            ToggleExpandCollapse(recordKey: number): void;\\n\\n            /** Attach event handler to a particular event type */\\n            AttachEvent(eventType: JsGrid.EventType, fnOnEvent: (args: IEventArgs) => void): void;\\n            /** Detach a previously set event handler */\\n            DetachEvent(eventType: JsGrid.EventType, fnOnEvent: any): void;\\n\\n            /** Set a delegate. Delegates are way to replace default functionality with custom one. */\\n            SetDelegate(delegateKey: JsGrid.DelegateType, fn: any): void;\\n            /** Get current delegate. */\\n            GetDelegate(delegateKey: JsGrid.DelegateType): any;\\n\\n            /** Re-render the specified row in the view. */\\n            RefreshRow(recordKey: number): void;\\n            /** Re-render all rows in the view.\\n                It can be used e.g. if you have some custom display controls and they are rendered differently depending on some external settings.\\n                In this case, if you update the external settings, obviously you have to then update the view for these settings to take effect. */\\n            RefreshAllRows(): void;\\n            /** Clears undo queue, and also differencies tracker state and versions manager state. */\\n            ClearChanges(): void;\\n\\n            GetGanttZoomLevel(): any;\\n            SetGanttZoomLevel(level: any): void;\\n            ScrollGanttToDate(date: any): void;\\n\\n            /** Get top record view index.\\n                You can then use GetRecordKeyByViewIndex to convert this value into the recordKey. */\\n            GetTopRecordIndex(): number;\\n            /** Get number of rows displayed in the current view. */\\n            GetViewRecordCount(): number;\\n            /** Get record key for a row that is specified by the viewIdx.\\n                viewIdx - index of the row in the view, use GetTopRecordIndex to get the first one.\\n                Returns recordKey, which is a unique numeric identifier of a row within a dataset.\\n                Main difference between viewIdx and recordKey is that viewIdx is only unique within a view,\\n                e.g. if you do paging, it can be same for different records.\\n             */\\n            GetRecordKeyByViewIndex(viewIdx: number): number;\\n            /** Opposite to GetRecordKeyByViewIndex, resolves the view index of the record based on record key.\\n                recordKey - unique numeric identifier of a row in the current dataset.\\n                Returns viewIdx - index of the row in the current view */\\n            GetViewIndexOfRecord(recordKey: number): number;\\n            /** Get top row index. Usually returns 0.\\n                You can then use GetRecordKeyByViewIndex to convert this value into the recordKey. */\\n            GetTopRowIndex(): number;\\n\\n            GetOutlineLevel(record: any): any;\\n            GetSplitterPosition(): any;\\n            SetSplitterPosition(pos: any): void;\\n            GetLeftColumnIndex(optPaneId?: any): any;\\n            EnsurePaneWidth(): void;\\n\\n            /** Show a previously hidden column at a specified position.\\n                If atIdx is not defined, column will be shown at it's previous position. */\\n            ShowColumn(columnKey: string, atIdx?: number): void;\\n            /** Hide the specified column from grid */\\n            HideColumn(columnKey: string): void;\\n            /** Update column descriptions */\\n            UpdateColumns(columnInfoCollection: ColumnInfoCollection): void;\\n            GetColumns(optPaneId?: string): ColumnInfo[];\\n            /** Get ColumnInfo object by fieldKey\\n                @fieldKey when working with SharePoint data sources, fieldKey corresponds to field internal name */\\n            GetColumnByFieldKey(fieldKey: string, optPaneId?: any): ColumnInfo;\\n            /** Adds a column, based on the specified grid field */\\n            AddColumn(columnInfo: ColumnInfo, gridField: GridField): void;\\n\\n            /** Switches column header in rename mode, showing textbox and thus giving the user possibility to rename this column. */\\n            RenameColumn(columnKey: string): void;\\n            /** Shows a dialog where user can reorder columns and change their widths. */\\n            ShowColumnConfigurationDialog(): void;\\n\\n            /** Returns true, if there are any errors in the JsGrid */\\n            AnyErrors(): boolean;\\n            /** Returns true, if there are any errors in a specified row */\\n            AnyErrorsInRecord(recordKey: number): boolean;\\n            /** Set error for the specified by recordKey and fieldKey cell.\\n                Returns id of the error, so that later you can clear the error using this id. */\\n            SetCellError(recordKey: number, fieldKey: string, errorMessage: string): number;\\n            /** Set error for the specified by recordKey row.\\n                In the leftmost column of this row, exclamation mark error indicator will appear.\\n                Clicking on this indicator will cause the specified error message appear in form of a reddish tooltip.\\n                Returns id of the error, so that later you can clear the error using this id. */\\n            SetRowError(recordKey: number, errorMessage: string): number;\\n            /** Clear specified by id error that was previously set on the specified by recordKey and fieldKey cell. */\\n            ClearCellError(recordKey: number, fieldKey: string, id: number): void;\\n            /** Clear all errors in the specified cell. */\\n            ClearAllErrorsOnCell(recordKey: number, fieldKey: string): void;\\n            /** Clear specified by id error that was previously set on the specified by recordKey row. */\\n            ClearRowError(recordKey: number, id: number): void;\\n            /** Clear all errors in the specified row. */\\n            ClearAllErrorsOnRow(recordKey: number): void;\\n            /** Get error message for the specified cell.\\n                If many errors are set on the cell, only first is returned.\\n                If there are no errors in the cell, returns null. */\\n            GetCellErrorMessage(recordKey: number, fieldKey: string): string;\\n            /** Get error message for the specified row.\\n                If many errors are set on the row, only first is returned.\\n                If there are no errors in the row, returns null. */\\n            GetRowErrorMessage(recordKey: number): string;\\n            /** This method is used mostly when you have a rather tall JSGrid and you want to ensure that user sees\\n                that some error has occured.\\n                You can specify the minId or/and filter function.\\n                If minId is specified, method searches for an error with first id which is greater than minId.\\n                Scrolls to the Returns the id of the found record.\\n                If there aren't any errors, that satisfy the conditions, method does nothing and returns null. */\\n            ScrollToAndExpandNextError(minId?: number, fnFilter?: (recordKey: number, fieldKey: string, id: number) => boolean): any;\\n            /** Same as ScrollToAndExpandNextError, but searches within the specified record.\\n                recordKey should be not null, otherwise you'll get an exception.\\n                bDontExpand controls whether the error tooltip will be shown (if bDontExpand=true, tooltip will not be shown). */\\n            ScrollToAndExpandNextErrorOnRecord(minId?: number, recordKey?: number, fnFilter?: (recordKey: number, fieldKey: string, id: number) => boolean, bDontExpand?: boolean): any;\\n\\n            GetFocusedItem(): any;\\n            SendKeyDownEvent(eventInfo: Sys.UI.DomEvent): any;\\n            /** Moves cursor to entry record (the row that is used to add new records) */\\n            JumpToEntryRecord(): void;\\n\\n            SelectRowRange(rowIdx1: number, rowIdx2: number, bAppend: boolean, optPaneId?: string): void;\\n            SelectColumnRange(colIdx1: number, colIdx2: number, bAppend: boolean, optPaneId?: string): void;\\n            SelectCellRange(rowIdx1: number, rowIdx2: number, colIdx1: number, colIdx2: number, bAppend: boolean, optPaneId?: string): void;\\n            SelectRowRangeByKey(rowKey1: any, rowKey2: any, bAppend: boolean, optPaneId?: string): void;\\n            SelectColumnRangeByKey(colKey1: any, colKey2: any, bAppend: boolean, optPaneId?: string): void;\\n            SelectCellRangeByKey(recordKey1: string, recordKey2: string, colKey1: any, colKey2: any, bAppend: boolean, optPaneId?: string): void;\\n\\n            ChangeKeys(oldKey: any, newKey: any): void;\\n            GetSelectedRowRanges(optPaneId?: any): any;\\n            GetSelectedColumnRanges(optPaneId?: any): any;\\n            GetSelectedRanges(optPaneId?: any): any;\\n            MarkPropUpdateInvalid(recordKey: number, fieldKey: any, changeKey: any, optErrorMsg?: any): any;\\n            GetCurrentChangeKey(): any;\\n            CreateAndSynchronizeToNewChangeKey(): any;\\n            CreateDataUpdateCmd(bUseCustomInitialUpdate: boolean): any;\\n            IsChangeKeyApplied(changeKey: any): any;\\n            GetChangeKeyForVersion(version: any): any;\\n            TryReadPropForChangeKey(recordKey: number, fieldKey: any, changeKey: any): any;\\n            GetUnfilteredHierarchyMap(): any;\\n            GetHierarchyState(bDecompressGuidKeys: boolean): any;\\n            IsGroupingRecordKey(recordKey: number): boolean;\\n            IsGroupingColumnKey(recordKey: number): boolean;\\n            GetSelectedRecordKeys(bDuplicatesAllowed: boolean): any;\\n            /** Cut data from currently selected cells into the clipboard.\\n                Will not work if current selection contains entry row or readonly cells. */\\n            CutToClipboard(): void;\\n            /** Copy data from currently selected cells into the clipboard. */\\n            CopyToClipboard(): void;\\n            /** Paste data from clipboard into currently selected cells. */\\n            PasteFromClipboard(): void;\\n            TryRestoreFocusAfterInsertOrDeleteColumns(origFocus: any): void;\\n            /** Get undo manager for performing undo/redo operations programmatically. */\\n            GetUndoManager(): SP.JsGrid.CommandManager;\\n            /** Gets number of records visible in the current view, including the entry row. */\\n            GetVisibleRecordCount(): number;\\n            /** Returns index of the system RecordIndicatorCheckBoxColumn. If not present in the view, returns null. */\\n            GetRecordIndicatorCheckBoxColumnIndex(): number;\\n            /** Determines if the specified record is visible in the current view. */\\n            IsRecordVisibleInView(recordKey: number): boolean;\\n            GetHierarchyQueryObject(): any;\\n            GetSpCsrRenderCtx(): any;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IChangeKey {\\n            Reserve(): void;\\n            Release(): void;\\n            GetVersionNumber(): number;\\n            CompareTo(changeKey: IChangeKey): number;\\n        }\\n\\n        enum EventType {\\n            OnCellFocusChanged,\\n            OnRowFocusChanged,\\n            OnCellEditBegin,\\n            OnCellEditCompleted,\\n            OnRightClick,\\n            OnPropertyChanged,\\n            OnRecordInserted,\\n            OnRecordDeleted,\\n            OnRecordChecked,\\n            OnCellErrorStateChanged,\\n            OnEntryRecordAdded,\\n            OnEntryRecordCommitted,\\n            OnEntryRecordPropertyChanged,\\n            OnRowErrorStateChanged,\\n            OnDoubleClick,\\n            OnBeforeGridDispose,\\n            OnSingleCellClick,\\n            OnInitialChangesForChangeKeyComplete,\\n            OnVacateChange,\\n            OnGridErrorStateChanged,\\n            OnSingleCellKeyDown,\\n            OnRecordsReordered,\\n            OnBeforePropertyChanged,\\n            OnRowEscape,\\n            OnBeginRenameColumn,\\n            OnEndRenameColumn,\\n            OnPasteBegin,\\n            OnPasteEnd,\\n            OnBeginRedoDataUpdateChange,\\n            OnBeginUndoDataUpdateChange\\n        }\\n\\n        enum DelegateType {\\n            ExpandColumnMenu,\\n            AddColumnMenuItems,\\n            Sort,\\n            Filter,\\n            InsertRecord,\\n            DeleteRecords,\\n            IndentRecords,\\n            OutdentRecords,\\n            IsRecordInsertInView,\\n            ExpandDelayLoadedHierarchyNode,\\n            AutoFilter,\\n            ExpandConflictResolution,\\n            GetAutoFilterEntries,\\n            LaunchFilterDialog,\\n            ShowColumnConfigurationDialog,\\n            GetRecordEditMode,\\n            GetGridRowStyleId,\\n            CreateEntryRecord,\\n            TryInsertEntryRecord,\\n            WillAddColumnMenuItems,\\n            NextPage,\\n            AddNewColumn,\\n            RemoveColumnFromView,\\n            ReorderColumnPositionInView,\\n            TryCreateProvisionalRecord,\\n            CanReorderRecords,\\n            AddNewColumnMenuItems,\\n            TryBeginPaste,\\n            AllowSelectionChange,\\n            GetFieldEditMode,\\n            GetFieldReadOnlyActiveState,\\n            OnBeforeRecordReordered\\n        }\\n\\n        enum ClickContext {\\n            SelectAllSquare,\\n            RowHeader,\\n            ColumnHeader,\\n            Cell,\\n            Gantt,\\n            Other\\n        }\\n\\n        class RowHeaderState {\\n            constructor(id: string, img: SP.JsGrid.Image, priority: SP.JsGrid.RowHeaderStatePriorities, tooltip: string, fnOnClick: (eventInfo: Sys.UI.DomEvent, recordKey: number) => void);\\n            GetId(): string;\\n            GetImg(): SP.JsGrid.Image;\\n            GetPriority(): SP.JsGrid.RowHeaderStatePriorities;\\n            GetOnClick(): (eventInfo: Sys.UI.DomEvent, recordKey: number) => void;\\n            GetTooltip(): string;\\n            toString(): string;\\n        }\\n\\n        class Image {\\n            /** optOuterCssNames and optImgCssNames are strings that contain css class names separated by spaces.\\n                optImgCssNames are applied to the img tag.\\n                if bIsClustered, image is rendered inside div, and optOuterCssNames are applied to the div. */\\n            constructor(imgSrc: string, bIsClustered: boolean, optOuterCssNames: string, optImgCssNames: string, bIsAnimated: boolean);\\n            imgSrc: string;\\n            bIsClustered: boolean;\\n            optOuterCssNames: string;\\n            imgCssNames: string;\\n            bIsAnimated: boolean;\\n            /** Renders the image with specified alternative text and on-click handler.\\n                If bHideTooltip == false, then alternative text is also shown as the tooltip (title attribute). */\\n            Render(altText: string, clickFn: (eventInfo: Sys.UI.DomEvent) => void, bHideTooltip: boolean): HTMLElement;\\n        }\\n        // tslint:disable-next-line: interface-name no-empty-interface\\n        interface IEventArgs { }\\n        namespace EventArgs {\\n            class OnEntryRecordAdded implements IEventArgs {\\n                constructor(recordKey: number);\\n                recordKey: number;\\n            }\\n\\n            class CellFocusChanged implements IEventArgs {\\n                constructor(newRecordKey: number, newFieldKey: string, oldRecordKey: number, oldFieldKey: string);\\n                newRecordKey: number;\\n                newFieldKey: string;\\n                oldRecordKey: number;\\n                oldFieldKey: string;\\n            }\\n            class RowFocusChanged implements IEventArgs {\\n                constructor(newRecordKey: number, oldRecordKey: number);\\n                newRecordKey: number;\\n                oldRecordKey: number;\\n            }\\n            class CellEditBegin implements IEventArgs {\\n                constructor(recordKey: number, fieldKey: string);\\n                recordKey: number;\\n                fieldKey: string;\\n            }\\n            class CellEditCompleted implements IEventArgs {\\n                constructor(recordKey: number, fieldKey: string, changeKey: JsGrid.IChangeKey, bCancelled: boolean);\\n                recordKey: number;\\n                fieldKey: string;\\n                changeKey: JsGrid.IChangeKey;\\n                bCancelled: boolean;\\n            }\\n            class Click implements IEventArgs {\\n                constructor(eventInfo: Sys.UI.DomEvent, context: JsGrid.ClickContext, recordKey: number, fieldKey: string);\\n                eventInfo: Sys.UI.DomEvent;\\n                context: JsGrid.ClickContext;\\n                recordKey: number;\\n                fieldKey: string;\\n            }\\n            class PropertyChanged implements IEventArgs {\\n                constructor(recordKey: number, fieldKey: string, oldProp: SP.JsGrid.Internal.PropertyUpdate, newProp: SP.JsGrid.Internal.PropertyUpdate, propType: SP.JsGrid.IPropertyType, changeKey: SP.JsGrid.IChangeKey, validationState: SP.JsGrid.ValidationState);\\n                recordKey: number;\\n                fieldKey: string;\\n                oldProp: SP.JsGrid.Internal.PropertyUpdate;\\n                newProp: SP.JsGrid.Internal.PropertyUpdate;\\n                propType: SP.JsGrid.IPropertyType;\\n                changeKey: SP.JsGrid.IChangeKey;\\n                validationState: SP.JsGrid.ValidationState;\\n            }\\n            class RecordInserted implements IEventArgs {\\n                constructor(recordKey: number, recordIdx: number, afterRecordKey: number, changeKey: JsGrid.IChangeKey);\\n                recordKey: number;\\n                recordIdx: number;\\n                afterRecordKey: number;\\n                changeKey: JsGrid.IChangeKey;\\n            }\\n            class RecordDeleted implements IEventArgs {\\n                constructor(recordKey: number, recordIdx: number, changeKey: JsGrid.IChangeKey);\\n                recordKey: number;\\n                recordIdx: number;\\n                changeKey: JsGrid.IChangeKey;\\n            }\\n            class RecordChecked implements IEventArgs {\\n                constructor(recordKeySet: SP.Utilities.Set, bChecked: boolean);\\n                recordKeySet: SP.Utilities.Set;\\n                bChecked: boolean;\\n            }\\n            class OnCellErrorStateChanged implements IEventArgs {\\n                constructor(recordKey: number, fieldKey: string, bAddingError: boolean, bCellCurrentlyHasError: boolean, bCellHadError: boolean, errorId: number);\\n                recordKey: number;\\n                fieldKey: string;\\n                bAddingError: boolean;\\n                bCellCurrentlyHasError: boolean;\\n                bCellHadError: boolean;\\n                errorId: number;\\n            }\\n            class OnRowErrorStateChanged implements IEventArgs {\\n                constructor(recordKey: number, bAddingError: boolean, bErrorCurrentlyInRow: boolean, bRowHadError: boolean, errorId: number, message: string);\\n                recordKey: number;\\n                bAddingError: boolean;\\n                bErrorCurrentlyInRow: boolean;\\n                bRowHadError: boolean;\\n                errorId: number;\\n                message: string;\\n            }\\n            class OnEntryRecordCommitted implements IEventArgs {\\n                constructor(origRecKey: string, recordKey: number, changeKey: JsGrid.IChangeKey);\\n                originalRecordKey: number;\\n                recordKey: number;\\n                changeKey: JsGrid.IChangeKey;\\n            }\\n            class SingleCellClick implements IEventArgs {\\n                constructor(eventInfo: Sys.UI.DomEvent, recordKey: number, fieldKey: string);\\n                eventInfo: Sys.UI.DomEvent;\\n                recordKey: number;\\n                fieldKey: string;\\n            }\\n            class PendingChangeKeyInitiallyComplete implements IEventArgs {\\n                constructor(changeKey: JsGrid.IChangeKey);\\n                changeKey: JsGrid.IChangeKey;\\n            }\\n            class VacateChange implements IEventArgs {\\n                constructor(changeKey: JsGrid.IChangeKey);\\n                changeKey: JsGrid.IChangeKey;\\n            }\\n            class GridErrorStateChanged implements IEventArgs {\\n                constructor(bAnyErrors: boolean);\\n                bAnyErrors: boolean;\\n            }\\n            class SingleCellKeyDown implements IEventArgs {\\n                constructor(eventInfo: Sys.UI.DomEvent, recordKey: number, fieldKey: string);\\n                eventInfo: Sys.UI.DomEvent;\\n                recordKey: number;\\n                fieldKey: string;\\n            }\\n            class OnRecordsReordered implements IEventArgs {\\n                constructor(recordKeys: string[], changeKey: JsGrid.IChangeKey);\\n                reorderedKeys: string[];\\n                changeKey: JsGrid.IChangeKey;\\n            }\\n            class OnRowEscape implements IEventArgs {\\n                constructor(recordKey: number);\\n                recordKey: number;\\n            }\\n            class OnEndRenameColumn implements IEventArgs {\\n                constructor(columnKey: string, originalColumnTitle: string, newColumnTitle: string);\\n                columnKey: string;\\n                originalColumnTitle: string;\\n                newColumnTitle: string;\\n            }\\n            class OnBeginRedoDataUpdateChange implements IEventArgs {\\n                constructor(changeKey: JsGrid.IChangeKey);\\n                changeKey: JsGrid.IChangeKey;\\n            }\\n            class OnBeginUndoDataUpdateChange implements IEventArgs {\\n                constructor(changeKey: JsGrid.IChangeKey);\\n                changeKey: JsGrid.IChangeKey;\\n            }\\n        }\\n\\n        namespace JsGridControl {\\n            class Parameters {\\n                tableCache: SP.JsGrid.TableCache;\\n                name: any; // TODO\\n                bNotificationsEnabled: boolean;\\n                styleManager: IStyleManager;\\n                minHeaderHeight: number;\\n                minRowHeight: number;\\n                commandMgr: SP.JsGrid.CommandManager;\\n                enabledRowHeaderAutoStates: SP.Utilities.Set;\\n                tableViewParams: TableViewParameters;\\n                bEnableDiffTracking: boolean;\\n                isRTL: boolean;\\n            }\\n            class TableViewParameters {\\n                paneLayout: SP.JsGrid.PaneLayout;\\n                defaultEditMode: SP.JsGrid.EditMode;\\n                allowedSelectionTypes: SP.JsGrid.SelectionTypeFlags;\\n\\n                bMovableColumns: boolean;\\n                bResizableColumns: boolean;\\n                bHidableColumns: boolean;\\n                bSortableColumns: boolean;\\n                bAutoFilterableColumns: boolean;\\n                bRowHeadersEnabled: boolean;\\n                bRecordIndicatorCheckboxesEnabled: boolean;\\n                bFillControlEnabled: boolean;\\n                bEditingEnabled: boolean;\\n                bNewRowEnabled: boolean;\\n\\n                checkSelectionCheckboxHiddenRecordKeys: string[];\\n                checkSelectionCheckboxDisabledRecordKeys: string[];\\n                checkSelectionCheckedRecordKeys: string[];\\n\\n                keyFieldName: string;\\n                gridFieldMap: { [name: string]: GridField };\\n\\n                columns: ColumnInfoCollection;\\n                messageOverrides: any; // TODO\\n                operationalConstantsFieldKeyMap: any; // TODO\\n\\n                ganttParams: GanttParameters;\\n                pivotedGridParams: PivotedGridParameters;\\n                rowViewParams: RowViewParameters;\\n            }\\n            class PivotedGridParameters {\\n                // this.dateRange = null;\\n                //   this.ganttBarStyles = null;\\n                //   this.ganttZoomLevel = 3;\\n                //   this.fnRenderGanttRow = null;\\n                //   this.fnGetGanttBarDate = null;\\n                //   this.fnGetGanttBarStyleIds = null;\\n                //   this.fnGetPredecessors = null;\\n                //   this.workDayStart = _spRegionalSettings.workDayStart;\\n                //   this.workDayEnd = _spRegionalSettings.workDayEnd;\\n                //   this.fieldKeyRedrawFilter = null;\\n            }\\n\\n            class GanttParameters {\\n                columns: ColumnInfoCollection;\\n            }\\n\\n            class RowViewParameters {\\n                hierarchyMode: SP.JsGrid.HierarchyMode;\\n                view: any;\\n\\n                topViewIdx: number;\\n\\n                groupingLevel: any;\\n                groupingRecordKeyPrefix: any;\\n                autoFilterState: any;\\n                unfilteredHierarchyMgr: any;\\n                hierarchyDelayLoadKeys: any;\\n                hierarchyState: any;\\n                sortState: any;\\n                filterState: any;\\n                autoFilterEntries: any;\\n                filteredDescCounts: any;\\n            }\\n        }\\n\\n        class CommandManager {\\n            // todo\\n        }\\n\\n        class TableCache {\\n            // todo\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IStyleManager {\\n            gridPaneStyle: IStyleType.GridPane;\\n            columnHeaderStyleCollection: {\\n                normal: IStyleType.Header;\\n                normalHover: IStyleType.Header;\\n                partSelected: IStyleType.Header;\\n                partSelectedHover: IStyleType.Header;\\n                allSelected: IStyleType.Header;\\n                allSelectedHover: IStyleType.Header;\\n            };\\n            rowHeaderStyleCollection: {\\n                normal: IStyleType.Header;\\n                normalHover: IStyleType.Header;\\n                partSelected: IStyleType.Header;\\n                partSelectedHover: IStyleType.Header;\\n                allSelected: IStyleType.Header;\\n                allSelectedHover: IStyleType.Header;\\n            };\\n            splitterStyleCollection: {\\n                normal: IStyleType.Splitter;\\n                normalHandle: IStyleType.SplitterHandle;\\n                hover: IStyleType.Splitter;\\n                hoverHandle: IStyleType.SplitterHandle;\\n                dra: IStyleType.Splitter;\\n                dragHandle: IStyleType.SplitterHandle;\\n            };\\n            defaultCellStyle: IStyleType.Cell;\\n            readOnlyCellStyle: IStyleType.Cell;\\n            readOnlyFocusedCellStyle: IStyleType.Cell;\\n            timescaleTierStyle: IStyleType.TimescaleTier;\\n            groupingStyles: any[];\\n            widgetDockStyle: IStyleType.Widget;\\n            widgetDockHoverStyle: IStyleType.Widget;\\n            widgetDockPressedStyle: IStyleType.Widget;\\n            RegisterCellStyle(styleId: string, cellStyle: IStyleType.Cell): void;\\n            GetCellStyle(styleId: string): IStyleType.Cell;\\n            UpdateSplitterStyleFromCss(styleObject: IStyleType.Splitter, splitterStyleNameCollection: any): void;\\n            UpdateHeaderStyleFromCss(styleObject: IStyleType.Header, headerStyleNameCol: any): void;\\n            UpdateGridPaneStyleFromCss(styleObject: IStyleType.GridPane, gridStyleNameCollection: any): void;\\n            UpdateDefaultCellStyleFromCss(styleObject: IStyleType.Cell, cssClass: string): void;\\n            UpdateGroupStylesFromCss(styleObject: IStyleType.Cell, prefix: string): void;\\n        }\\n        // tslint:disable-next-line: no-empty-interface interface-name\\n        interface IStyleType { }\\n        namespace IStyleType {\\n            interface Splitter extends IStyleType {\\n                outerBorderColor: any;\\n                leftInnerBorderColor: any;\\n                innerBorderColor: any;\\n                backgroundColor: any;\\n            }\\n            interface SplitterHandle extends IStyleType {\\n                outerBorderColor: any;\\n                leftInnerBorderColor: any;\\n                innerBorderColor: any;\\n                backgroundColor: any;\\n                gripUpperColor: any;\\n                gripLowerColor: any;\\n            }\\n            interface GridPane {\\n                verticalBorderColor: any;\\n                verticalBorderStyle: any;\\n                horizontalBorderColor: any;\\n                horizontalBorderStyle: any;\\n                backgroundColor: any;\\n                columnDropIndicatorColor: any;\\n                rowDropIndicatorColor: any;\\n                linkColor: any;\\n                visitedLinkColor: any;\\n                copyRectForeBorderColor: any;\\n                copyRectBackBorderColor: any;\\n                focusRectBorderColor: any;\\n                selectionRectBorderColor: any;\\n                selectedCellBgColor: any;\\n                readonlySelectionRectBorderColor: any;\\n                changeHighlightCellBgColor: any;\\n                fillRectBorderColor: any;\\n                errorRectBorderColor: any;\\n            }\\n            interface Header {\\n                font: any;\\n                fontSize: any;\\n                fontWeight: any;\\n                textColor: any;\\n                backgroundColor: any;\\n                outerBorderColor: any;\\n                innerBorderColor: any;\\n                eyeBrowBorderColor: any;\\n                eyeBrowColor: any;\\n                menuColor: any;\\n                menuBorderColor: any;\\n                resizeColor: any;\\n                resizeBorderColor: any;\\n                menuHoverColor: any;\\n                menuHoverBorderColor: any;\\n                resizeHoverColor: any;\\n                resizeHoverBorderColor: any;\\n                eyeBrowHoverColor: any;\\n                eyeBrowHoverBorderColor: any;\\n                elementClickColor: any;\\n                elementClickBorderColor: any;\\n            }\\n            interface Cell extends IStyleType {\\n                /** -> CSS font-family */\\n                font: any;\\n                /** -> CSS font-size */\\n                fontSize: any;\\n                /** -> CSS font-weight */\\n                fontWeight: any;\\n                /** -> CSS font-style */\\n                fontStyle: any;\\n                /** -> CSS color */\\n                textColor: any;\\n                /** -> CSS background-color */\\n                backgroundColor: any;\\n                /** -> CSS text-align */\\n                textAlign: any;\\n            }\\n            interface Widget {\\n                backgroundColor: any;\\n                borderColor: any;\\n            }\\n            interface RowHeaderStyle {\\n                backgroundColor: any;\\n                outerBorderColor: any;\\n                innerBorderColor: any;\\n            }\\n            interface TimescaleTier {\\n                font: any;\\n                fontSize: any;\\n                fontWeight: any;\\n                textColor: any;\\n                backgroundColor: any;\\n                verticalBorderColor: any;\\n                verticalBorderStyle: any;\\n                horizontalBorderColor: any;\\n                horizontalBorderStyle: any;\\n                outerBorderColor: any;\\n                todayLineColor: any;\\n            }\\n        }\\n\\n        class Style {\\n            static Type: {\\n                Splitter: IStyleType.Splitter;\\n                SplitterHandle: IStyleType.SplitterHandle;\\n                GridPane: IStyleType.GridPane;\\n                Header: IStyleType.Header;\\n                RowHeaderStyle: IStyleType.RowHeaderStyle;\\n                TimescaleTier: IStyleType.TimescaleTier;\\n                Cell: IStyleType.Cell;\\n                Widget: IStyleType.Widget;\\n            };\\n\\n            static SetRTL: (rtlObject: any) => void;\\n            static MakeJsGridStyleManager: () => IStyleManager;\\n            static CreateStyleFromCss: (styleType: IStyleType, cssStyleName: string, optExistingStyle?: any, optClassId?: any) => any;\\n            static CreateStyle: (styleType: IStyleType, styleProps: any) => any;\\n            static MergeCellStyles: (majorStyle: any, minorStyle: any) => any;\\n            static ApplyCellStyle: (td: HTMLTableCellElement, style: any) => void;\\n            static ApplyRowHeaderStyle: (domObj: HTMLElement, style: any, fnGetHeaderSibling: (elem: HTMLElement, previousElem: boolean) => void) => void;\\n            static ApplyCornerHeaderBorderStyle: (domObj: HTMLElement, colStyle: any, rowStyle: any) => void;\\n            static ApplyHeaderInnerBorderStyle: (domObj: HTMLElement, bIsRowHeader: any, headerObject: any) => void;\\n            static ApplyColumnContextMenuStyle: (domObj: HTMLElement, style: any) => void;\\n            static ApplySplitterStyle: (domObj: HTMLElement, style: any) => void;\\n            static MakeBorderString: (width: number, style: string, color: string) => string;\\n            static GetCellStyleDefaultBackgroundColor: () => string;\\n        }\\n\\n        class ColumnInfoCollection {\\n            constructor(colInfoArray: any[]);\\n            GetColumnByKey(key: string): any;\\n            GetColumnArray(bVisibleOnly?: boolean): any[];\\n            GetColumnMap(): { [key: string]: any; };\\n            AppendColumn(colInfo: any): void;\\n            InsertColumnAt(idx: number, colInfo: any): void;\\n            RemoveColumn(key: string): void;\\n            /** Returns null if the specified column is not found or hidden. */\\n            GetColumnPosition(key: string): number;\\n        }\\n\\n        class ColumnInfo {\\n            constructor(name: string, imgSrc: string, key: string, width: number);\\n            /** Column title */\\n            name: string;\\n            /** Column image URL.\\n                If not null, the column header cell will show the image instead of title text.\\n                If the title is defined at the same time as the imgSrc, the title will be shown as a tooltip. */\\n            imgSrc: string;\\n            /** Custom image HTML.\\n                If you define this in addition to the imgSrc attribute, then instead of standard img tag\\n                the custom HTML defined by this field will be used. */\\n            imgRawSrc: string;\\n            /** Column identifier */\\n            columnKey: string;\\n            /** Field keys of the fields, that are displayed in this column */\\n            fieldKeys: string[];\\n            /** Width of the column */\\n            width: number;\\n            bOpenMenuOnContentClick: boolean;\\n            /** always returns 'column' */\\n            ColumnType(): string;\\n            /** true by default */\\n            isVisible: boolean;\\n            /** true by default */\\n            isHidable: boolean;\\n            /** true by default */\\n            isResizable: boolean;\\n            /** true by default */\\n            isSortable: boolean;\\n            /** true by default */\\n            isAutoFilterable: boolean;\\n            /** false by default */\\n            isFooter: boolean;\\n            /** determine whether the cells in this column should be clickable */\\n            fnShouldLinkSingleValue: (record: IRecord, fieldKey: string, dataValue: any, localizedValue: any) => boolean;\\n            /** if a particular cell is determined as clickable by fnShouldLinkSingleValue, this function will be called when the cell is clicked */\\n            fnSingleValueClicked: (record: IRecord, fieldKey: string, dataValue: any, localizedValue: any) => void;\\n            /** this is used when you need to make some of the cells in the column readonly, but at the same time keep others editable */\\n            fnGetCellEditMode: (record: IRecord, fieldKey: string) => JsGrid.EditMode;\\n            /** this function should return name of the display control for the given cell in the column\\n                the name should be previously associated with the display control via SP.JsGrid.PropertyType.Utils.RegisterDisplayControl method */\\n            fnGetDisplayControlName: (record: IRecord, fieldKey: string) => string;\\n            /** this function should return name of the edit control for the given cell in the column\\n                the name should be previously associated with the edit control via SP.JsGrid.PropertyType.Utils.RegisterEditControl method */\\n            fnGetEditControlName: (record: IRecord, fieldKey: string) => string;\\n            /** set widget control names for a particular cell\\n                widgets are basically in-cell buttons with associated popup controls, e.g. date selector or address book button\\n                standard widget ids are defined in the SP.JsGrid.WidgetControl.Type enumeration\\n                it is also possible to create your own widgets\\n                usually this function is not used, and instead, widget control names are determined via PropertyType\\n             */\\n            fnGetWidgetControlNames: (record: IRecord, fieldKey: string) => string[];\\n            /** this function should return id of the style for the given cell in the column\\n                styles and their ids are registered for a JsGridControl via jsGridParams.styleManager.RegisterCellStyle method */\\n            fnGetCellStyleId: (record: IRecord, fieldKey: string, dataValue: any) => string;\\n            /** set custom tooltip for the given cell in the column. by default, localized value is displayed as the tooltip */\\n            fnGetSingleValueTooltip: (record: IRecord, fieldKey: string, dataValue: any, localizedValue: any) => string;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IRecord {\\n            /** True if this is an entry row */\\n            bIsNewRow: boolean;\\n\\n            /** Please use SetProp and GetProp */\\n            properties: { [fieldKey: string]: IPropertyBase };\\n\\n            /** returns recordKey */\\n            key(): number;\\n            /** returns raw data value for the specified field */\\n            GetDataValue(fieldKey: string): any;\\n            /** returns localized text value for the specified field */\\n            GetLocalizedValue(fieldKey: string): string;\\n            /** returns true if data value for the specified field is available */\\n            HasDataValue(fieldKey: string): boolean;\\n            /** returns true if localized text value for the specified field is available */\\n            HasLocalizedValue(fieldKey: string): boolean;\\n\\n            GetProp(fieldKey: string): IPropertyBase;\\n            SetProp(fieldKey: string, prop: IPropertyBase): void;\\n\\n            /** Update the specified field with the specified value */\\n            AddFieldValue(fieldKey: string, value: any): void;\\n            /** Removes value of the specified field.\\n                Does not refresh the view. */\\n            RemoveFieldValue(fieldKey: string): void;\\n        }\\n\\n        class RecordFactory {\\n            constructor(gridFieldMap: any, keyColumnName: string, fnGetPropType: any);\\n            gridFieldMap: any;\\n            /** Create a new record */\\n            MakeRecord(dataPropMap: any, localizedPropMap: any, bKeepRawData: boolean): IRecord;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IPropertyBase {\\n            HasLocalizedValue(): boolean;\\n            HasDataValue(): boolean;\\n            Clone(): IPropertyBase;\\n            /** dataValue actually is cloned */\\n            Update(dataValue: any, localizedValue: string): void;\\n            GetLocalized(): string;\\n            GetData(): any;\\n        }\\n\\n        class Property {\\n            static MakeProperty(dataValue: any, localizedValue: string, bHasDataValue: boolean, bHasLocalizedValue: boolean, propType: any): IPropertyBase;\\n            static MakePropertyFromGridField(gridField: any, dataValue: any, localizedVal: string, optPropType?: any): IPropertyBase;\\n        }\\n\\n        class GridField {\\n            constructor(key: string, hasDataValue: boolean, hasLocalizedValue: boolean, textDirection: TextDirection, defaultCellStyleId?: any, editMode?: EditMode, dateOnly?: boolean, csrInfo?: any);\\n            key: string;\\n            hasDataValue: boolean;\\n            hasLocalizedValue: boolean;\\n            textDirection: TextDirection;\\n            dateOnly: boolean;\\n            csrInfo: any;\\n            GetEditMode(): EditMode;\\n            SetEditMode(mode: EditMode): void;\\n            GetDefaultCellStyleId(): any;\\n            CompareSingleDataEqual(dataValue1: any, dataValue2: any): boolean;\\n            GetPropType(): any;\\n            GetSingleValuePropType(): any;\\n            GetMultiValuePropType(): any;\\n            SetSingleValuePropType(svPropType: any): void;\\n            SetIsMultiValue(listSeparator: any): void;\\n            GetIsMultiValue(): boolean;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IEditActorGridContext {\\n            jsGridObj: JsGridControl;\\n            parentNode: HTMLElement;\\n            styleManager: IStyleManager;\\n            RTL: any;\\n            emptyValue: any;\\n            bLightFocus: boolean;\\n            OnKeyDown(domEvent: Sys.UI.DomEvent): void;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IEditControlGridContext extends IEditActorGridContext {\\n            OnActivateActor(): void;\\n            OnDeactivateActor(): void;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IPropertyType {\\n            ID: string;\\n            BeginValidateNormalizeConvert(recordKey: number, fieldKey: string, newValue: any, bIsLocalized: boolean, fnCallback: (args: { isValid: boolean; dataValue: any; normalizedLocValue: string }) => void, fnError: any): void;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface ILookupPropertyType extends IPropertyType {\\n            GetItems(fnCallback: any): void;\\n            DataToLocalized(dataValue: any): string;\\n            LocalizedToData(localized: string): any;\\n            GetImageSource(record: IRecord, dataValue: any): string;\\n            GetStyleId(dataValue: any): string;\\n            GetIsLimitedToList(): boolean;\\n            GetSerializableLookupPropType(): { items: any[]; id: string; bLimitToList: boolean };\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IMultiValuePropertyType extends IPropertyType {\\n            bMultiValue: boolean;\\n            separator: string;\\n            singleValuePropType: string;\\n            GetSerializableMultiValuePropType(): { singleValuePropTypeID: string; separatorChar: string; bDelayInit: boolean; };\\n            InitSingleValuePropType(): void;\\n            LocStrToLocStrArray(locStr: string): string[];\\n            LocStrArrayToLocStr(locStrArray: string[]): string;\\n        }\\n\\n        class PropertyType {\\n            /** Lookup property type factory, based on SP.JsGrid.PropertyType.LookupTable class.\\n                displayCtrlName should be one of the following: SP.JsGrid.DisplayControl.Type.Image, SP.JsGrid.DisplayControl.Type.ImageText or SP.JsGrid.DisplayControl.Type.Text\\n             */\\n            static RegisterNewLookupPropType(id: string, items: any[], displayCtrlName: string, bLimitToList: boolean): void;\\n\\n            /** Register a custom property type. */\\n            static RegisterNewCustomPropType(propType: IPropertyType, displayCtrlName: string, editControlName: string, widgetControlNames: string[]): void;\\n\\n            /** Register a custom property type, where display and edit controls, and also widgets, are derived from the specified parent property type. */\\n            static RegisterNewDerivedCustomPropType(propType: IPropertyType, baseTypeName: string): void;\\n        }\\n        namespace PropertyType {\\n            class String implements IPropertyType {\\n                constructor();\\n                ID: string;\\n                BeginValidateNormalizeConvert(recordKey: number, fieldKey: string, newValue: any, bIsLocalized: boolean, fnCallback: (args: { isValid: boolean; dataValue: any; normalizedLocValue: string }) => void, fnError: any): void;\\n                toString(): string;\\n            }\\n            class LookupTable implements ILookupPropertyType {\\n                constructor(items: any[], id: string, bLimitToList: boolean);\\n                ID: string;\\n                BeginValidateNormalizeConvert(recordKey: number, fieldKey: string, newValue: any, bIsLocalized: boolean, fnCallback: (args: { isValid: boolean; dataValue: any; normalizedLocValue: string }) => void, fnError: any): void;\\n                GetItems(fnCallback: any): void;\\n                DataToLocalized(dataValue: any): string;\\n                LocalizedToData(localized: string): any;\\n                GetImageSource(record: IRecord, dataValue: any): string;\\n                GetStyleId(dataValue: any): string;\\n                GetIsLimitedToList(): boolean;\\n                GetSerializableLookupPropType(): { items: any[]; id: string; bLimitToList: boolean };\\n            }\\n            class CheckBoxBoolean implements IPropertyType {\\n                constructor();\\n                ID: string;\\n                BeginValidateNormalizeConvert(recordKey: number, fieldKey: string, newValue: any, bIsLocalized: boolean, fnCallback: (args: { isValid: boolean; dataValue: any; normalizedLocValue: string }) => void, fnError: any): void;\\n                DataToLocalized(dataValue: any): string;\\n                GetBool(dataValue: any): boolean;\\n                toString(): string;\\n            }\\n            class DropDownBoolean implements IPropertyType {\\n                constructor();\\n                ID: string;\\n                BeginValidateNormalizeConvert(recordKey: number, fieldKey: string, newValue: any, bIsLocalized: boolean, fnCallback: (args: { isValid: boolean; dataValue: any; normalizedLocValue: string }) => void, fnError: any): void;\\n                DataToLocalized(dataValue: any): string;\\n                GetBool(dataValue: any): boolean;\\n                toString(): string;\\n            }\\n            class MultiValuePropType implements IMultiValuePropertyType {\\n                ID: string;\\n                BeginValidateNormalizeConvert(recordKey: number, fieldKey: string, newValue: any, bIsLocalized: boolean, fnCallback: (args: { isValid: boolean; dataValue: any; normalizedLocValue: string }) => void, fnError: any): void;\\n                bMultiValue: boolean;\\n                separator: string;\\n                singleValuePropType: string;\\n                GetSerializableMultiValuePropType(): { singleValuePropTypeID: string; separatorChar: string; bDelayInit: boolean; };\\n                InitSingleValuePropType(): void;\\n                LocStrToLocStrArray(locStr: string): string[];\\n                LocStrArrayToLocStr(locStrArray: string[]): string;\\n            }\\n            class HyperLink implements IPropertyType {\\n                ID: string;\\n                BeginValidateNormalizeConvert(recordKey: number, fieldKey: string, newValue: any, bIsLocalized: boolean, fnCallback: (args: { isValid: boolean; dataValue: any; normalizedLocValue: string }) => void, fnError: any): void;\\n                bHyperlink: boolean;\\n                DataToLocalized(dataValue: any): string;\\n                GetAddress(dataValue: any): string;\\n                /** Returns string like this: '\\\"http:// site.com, Site title\\\"' */\\n                GetCopyValue(record: IRecord, dataValue: any, locValue: string): string;\\n                toString(): string;\\n            }\\n\\n            class Utils {\\n                static RegisterDisplayControl(name: string, singleton: any, requiredFunctionNames: string[]): void;\\n                static RegisterEditControl(name: string, factory: (gridContext: IEditControlGridContext, gridTextInputElement: HTMLElement) => IEditControl, requiredFunctionNames: string[]): void;\\n                static RegisterWidgetControl(name: string, factory: (ddContext: any) => IPropertyType, requiredFunctionNames: string[]): void;\\n\\n                static UpdateDisplayControlForPropType(propTypeName: string, displayControlType: string): void;\\n            }\\n        }\\n\\n        namespace WidgetControl {\\n            class Type {\\n                static Demo: string;\\n                static Date: string;\\n                static AddressBook: string;\\n                static Hyperlink: string;\\n            }\\n        }\\n\\n        namespace Internal {\\n            class DiffTracker {\\n                constructor(objBag: any, fnGetChange: (version: any, keys: any[], synchronized: boolean, includeInvalidPropUpdates: boolean) => any);\\n                ExternalAPI: {\\n                    AnyChanges(): boolean;\\n                    ChangeKeySliceInfo(): any;\\n                    ChangeQuery(): any;\\n                    EventSliceInfo(): any;\\n                    GetChanges(optStartEvent: any, optEndEvent: any, optRecordKeys: any, bFirstStartEvent: boolean, bStartInclusive: boolean, bEndInclusive: boolean, bIncludeInvalidPropUpdates: boolean, bLastEndEvent: boolean): any;\\n                    GetChangesAsJson(changeQuery: any, optfnPreProcessUpdateForSerialize?: any): string;\\n                    GetUniquePropertyChanges(changeQuery: any, optfnFilter?: any): any;\\n                    RegisterEvent(changeKey: IChangeKey, eventObject: any): void;\\n                    UnregisterEvent(changeKey: IChangeKey, eventObject: any): void;\\n                };\\n                Clear(): void;\\n                NotifySynchronizeToChange(changeKey: IChangeKey): void;\\n                NotifyRollbackChange(changeKey: IChangeKey): void;\\n                NotifyVacateChange(changeKey: IChangeKey): void;\\n            }\\n\\n            class PropertyUpdate implements IValue {\\n                constructor(data: any, localized: string);\\n                data: any;\\n                localized: string;\\n            }\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IEditActorCellContext {\\n            propType: IPropertyType;\\n            originalValue: IValue;\\n            record: IRecord;\\n            column: ColumnInfo;\\n            field: GridField;\\n            fieldKey: string;\\n            cellExpandSpace: { left: number; top: number; fight: number; bottom: number; };\\n            SetCurrentValue(value: any): void;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IEditControlCellContext extends IEditActorCellContext {\\n            cellWidth: number;\\n            cellHeight: number;\\n            cellStyle: any; // TODO: Determine correct type\\n            cellRect: any;\\n            NotifyExpandControl(): void;\\n            NotifyEditComplete(): void;\\n            Show(element: HTMLElement): void;\\n            Hide(element: HTMLElement): void;\\n        }\\n\\n        namespace EditControl {\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IEditControl {\\n            SupportedWriteMode?: SP.JsGrid.EditActorWriteType;\\n            SupportedReadMode?: SP.JsGrid.EditActorReadType;\\n            GetCellContext?(): IEditControlCellContext;\\n            GetOriginalValue?(): IValue;\\n            SetValue?(value: IValue): void;\\n            Dispose(): void;\\n            GetInputElement?(): HTMLElement;\\n            Focus?(eventInfo: Sys.UI.DomEvent): void;\\n            BindToCell(cellContext: IEditControlCellContext): void;\\n            OnBeginEdit(eventInfo: Sys.UI.DomEvent): void;\\n            Unbind(): void;\\n            OnEndEdit(): void;\\n            OnCellMove?(): void;\\n            OnValueChanged?(newValue: IValue): void;\\n            IsCurrentlyUsingGridTextInputElement?(): boolean;\\n            SetSize?(width: number, height: number): void;\\n        }\\n\\n        class StaticDataSource {\\n            constructor(jsGridData: IGridData, optFnGetPropType?: (recordKey: string, key: string, dataPropMap: { [name: string]: any }) => any);\\n            AddColumn(gridField: SP.JsGrid.GridField, values: IValue[]): void;\\n            RemoveColumn(fieldKey: string): void;\\n            InitJsGridParams(optGridParams?: JsGridControl.Parameters): JsGridControl.Parameters;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IGridData {\\n            MetaData: IGridMetadata;\\n\\n            Fields: IFieldInfo[];\\n            Columns: IColumnInfo[];\\n\\n            LocalizedTable: any[];\\n            UnlocalizedTable: any[];\\n            ViewInfo: any[];\\n\\n            MultiValueSeparator?: string;\\n            LookupTableInfo?: ILookupTableInfo[];\\n            PivotedColumns?: ColumnInfo[];\\n            PaneLayout?: PaneLayout;\\n            GanttInfo?: any;\\n            AutoFilterableColumns?: boolean;\\n            AutoFilterState?: any;\\n            SortState?: any[];\\n            HierarchyState?: any;\\n            TopRecord?: number;\\n            RecordCount?: number;\\n            AdditionalParams?: any;\\n            CellStyles?: any;\\n            GroupingGridRowStyleIds?: any[];\\n            UnfilteredHierarchy?: any;\\n            AutoFilterEntries?: any;\\n\\n            ViewDepKeys?: any[];\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IColumnInfo {\\n            /** Column title */\\n            name: string;\\n            /** Column image URL.\\n                If not null, the column header cell will show the image instead of title text.\\n                If the title is defined at the same time as the imgSrc, the title will be shown as a tooltip. */\\n            imgSrc?: string;\\n            /** Column identifier */\\n            columnKey: string;\\n            /** Column identifier */\\n            fieldKey: string;\\n            /** Field keys of the fields, that are displayed in this column */\\n            fieldKeys: string[];\\n            /** Width of the column */\\n            width: number;\\n            /** true by default */\\n            isVisible?: boolean;\\n            /** true by default */\\n            isHidable?: boolean;\\n            /** true by default */\\n            isResizable?: boolean;\\n            /** true by default */\\n            isSortable?: boolean;\\n            /** true by default */\\n            isAutoFilterable?: boolean;\\n            /** false by default */\\n            isFooter?: boolean;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IGridMetadata {\\n            KeyColumnName: string;\\n            IsGanttEnabled?: boolean;\\n            IsHierarchyEnabled?: boolean;\\n            IsSorted?: boolean;\\n            GroupingLevel?: number;\\n            GroupingPrefix?: string;\\n            RecordKeyHash?: string;\\n            RecordKeyOrderChanged?: any;\\n            GridOperationalConstantsFieldKeyMap?: { [index: number]: string };\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface IFieldInfo {\\n            fieldKey: string;\\n            propertyTypeId: string;\\n            editMode?: EditMode;\\n            hasDataValue?: boolean;\\n            hasLocalizedValue?: boolean;\\n            multiValue?: boolean;\\n            textDirection?: TextDirection;\\n            dateOnly?: boolean;\\n            defaultCellStyleId?: any;\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface ILookupTableInfo {\\n            id: string;\\n            showImage?: boolean;\\n            showText?: boolean;\\n            limitToList?: boolean;\\n            lookup: ILookupInfo[];\\n        }\\n\\n        // tslint:disable-next-line: interface-name\\n        interface ILookupInfo {\\n            localString: string;\\n            value: number;\\n        }\\n    }\\n\\n    namespace Utilities {\\n        class Set {\\n            constructor(items?: { [item: string]: number });\\n            // tslint:disable-next-line: unified-signatures\\n            constructor(items?: { [item: number]: number });\\n            /** Returns true if the set is empty */\\n            IsEmpty(): boolean;\\n            /** Returns first item in the set */\\n            First(): any;\\n            /** Returns the underlying collection of items as dictionary.\\n                Items are the keys, and values are always 1.\\n                So the return value may be either { [item: string]: number } or { [item: number]: number } */\\n            GetCollection(): any;\\n            /** Returns all items from the set as an array */\\n            ToArray(): any[];\\n            /** Adds all items from array to the set, and returns the set */\\n            AddArray(array: any[]): SP.Utilities.Set;\\n            /** Adds an item to the set */\\n            Add(item: any): any;\\n            /** Removes the specified item from the set and returns the removed item */\\n            Remove(item: any): any;\\n            /** Clears all the items from set */\\n            Clear(): SP.Utilities.Set;\\n            /** Returns true if item exists in this set */\\n            Contains(item: any): boolean;\\n            /** Returns a copy of this set */\\n            Clone(): SP.Utilities.Set;\\n            /** Returns a set that contains all the items that exist only in one of the sets (this and other), but not in both */\\n            SymmetricDifference(otherSet: SP.Utilities.Set): SP.Utilities.Set;\\n            /** Returns a set that contains all the items that are in this set but not in the otherSet */\\n            Difference(otherSet: SP.Utilities.Set): SP.Utilities.Set;\\n            /** Returns a new set, that contains items from this set and otherSet */\\n            Union(otherSet: SP.Utilities.Set): SP.Utilities.Set;\\n            /** Adds all items from otherSet to this set, and returns this set */\\n            UnionWith(otherSet: SP.Utilities.Set): SP.Utilities.Set;\\n            /** Returns a new set, that contains only items that exist both in this set and the otherSet */\\n            Intersection(otherSet: SP.Utilities.Set): SP.Utilities.Set;\\n        }\\n    }\\n}\\n\\ndeclare namespace SP {\\n    class GanttControl {\\n        static WaitForGanttCreation(callack: (control: GanttControl) => void): void;\\n        static Instances: GanttControl[];\\n        static FnGanttCreationCallback: Array<(control: GanttControl) => void>;\\n\\n        get_Columns(): SP.JsGrid.ColumnInfo[];\\n    }\\n}\\n\\n// ------- Srch namespace -------\\n\\ndeclare namespace Srch {\\n    enum EventType {\\n        none,\\n        queryReady,\\n        queryIssuing,\\n        batchQueryIssuing,\\n        resultReady,\\n        batchResultReady,\\n        queryStateChanged,\\n        resultRendered,\\n        preLoad,\\n        load,\\n        postLoad\\n    }\\n\\n    enum MessageLevel {\\n        information,\\n        warning,\\n        error\\n    }\\n\\n    enum UserActionType {\\n        search,\\n        pageNext,\\n        pagePrev,\\n        refine,\\n        sort,\\n        filterLanguage\\n    }\\n\\n    enum DateTimeKind {\\n        unspecified,\\n        utc,\\n        local\\n    }\\n\\n    interface RefinementInfo {\\n        Culture: string;\\n        DisplayName: string;\\n        Entropy: number;\\n        HitCount: number;\\n        Max: number;\\n        Mean: number;\\n        Min: number;\\n        Modifier: string;\\n        NonZeroCount: number;\\n        PartitionId: SP.Guid;\\n        Ratio: number;\\n        RefinementCount: number;\\n        RefinementName: string;\\n        RefinementToken: string;\\n        RefinementValue: string;\\n        RefinerName: string;\\n        RenderTemplateId: string;\\n        Score: number;\\n        Sum: number;\\n        Type: string;\\n        UniqueCount: number;\\n        UrlZone: number;\\n    }\\n\\n    class ClientControl extends Sys.UI.Control {\\n        constructor(elem: Element);\\n\\n        /** toggles visibility of children controls of the messageContainer */\\n        static toggleMessageDetails(messageContainer: Element): void;\\n        alternateRenderer: any;\\n        alternateRenderContext: any;\\n        loaded: boolean;\\n        /** returns next unique identifier for nested controls */\\n        get_nextUniqueId(): string;\\n        /** Gets the id of View display template that is used to render this control.\\n          * Example: '~sitecollection/_catalogs/masterpage/Display Templates/Search/Control_SearchResults.js'\\n          */\\n        get_renderTemplateId(): string;\\n        set_renderTemplateId(value: string): string;\\n        /** Returns true if control will load scripts defined by the serverTemplateScriptsToLoad field after control load. True by default. */\\n        get_delayLoadTemplateScripts(): boolean;\\n        /** If set to true, control will load scripts defined by the serverTemplateScriptsToLoad field after control load. True by default. */\\n        set_delayLoadTemplateScripts(value: boolean): boolean;\\n        get_states(): any;\\n        set_states(value: any): any;\\n        get_messages(): any[];\\n        set_messages(value: any[]): any[];\\n        get_showDataErrors(): boolean;\\n        /** False by default. */\\n        set_showDataErrors(value: boolean): boolean;\\n        get_alternateErrorMessage(): string;\\n        set_alternateErrorMessage(value: string): string;\\n        /** returns true if control has already been loaded at least once */\\n        get_isInitialLoad(): boolean;\\n        initialize(): void;\\n        dispose(): void;\\n        renderControl(listData: any, dataProvider: any): void;\\n        processDataProviderErrors(dataProviderToProcess: any): void;\\n        scriptApplication_PreLoad(sender: any, e: any): void;\\n        scriptApplication_Load(sender: any, e: any): void;\\n        scriptApplication_PostLoad(sender: any, e: any): void;\\n        loadServerTemplateScripts(): void;\\n        serverTemplateScriptsToLoad: any[];\\n        serverTemplateScriptsCallback(): void;\\n        loadRenderTemplateScripts(scriptReferences: any, success: any, failure: any, timeout: any, loadStandAloneCustomScripts: any): boolean;\\n        invokeAlternateRender(callback: any, container: any, ctx: any): any;\\n        invokeClientRenderer(node: any, ctx: any): any;\\n        processDataErrorMessages(dataErrorsList: any): any;\\n        processRenderingErrorMessages(ctx: any): any;\\n        hasMessages(): any;\\n        updateDisplayControlWithNewMessages(): any;\\n        /** show/hide the DOM element associated with control */\\n        setControlElementVisibility(showElement: boolean): any;\\n        clickHandler(e: Event): any;\\n    }\\n\\n    class DataProvider extends ClientControl {\\n        constructor(elem: Element);\\n        get_currentQueryState(): any;\\n        get_sourceID(): string;\\n        set_sourceID(value: string): string;\\n        get_sourceName(): string;\\n        set_sourceName(value: string): string;\\n        get_sourceLevel(): string;\\n        set_sourceLevel(value: string): string;\\n        get_collapseSpecification(): string;\\n        set_collapseSpecification(value: string): string;\\n        get_queryGroupName(): string;\\n        set_queryGroupName(value: string): string;\\n        get_queryPropertiesTemplateUrl(): string;\\n        set_queryPropertiesTemplateUrl(value: string): string;\\n        get_queryTemplate(): any;\\n        set_queryTemplate(value: any): any;\\n        get_fallbackSort(): any;\\n        set_fallbackSort(value: any): any;\\n        get_rankRules(): any;\\n        set_rankRules(value: any): any;\\n        get_initialQueryState(): any;\\n        set_initialQueryState(value: any): any;\\n        get_initialResult(): string;\\n        set_initialResult(value: string): string;\\n        get_initialResultRef(): any;\\n        set_initialResultRef(value: any): any;\\n        get_initialResultObject(): any;\\n        get_batched(): boolean;\\n        set_batched(value: boolean): boolean;\\n        get_active(): boolean;\\n        set_active(value: boolean): boolean;\\n        get_bypassResultTypes(): boolean;\\n        set_bypassResultTypes(value: boolean): boolean;\\n        get_processBestBets(): boolean;\\n        set_processBestBets(value: boolean): boolean;\\n        get_processPersonalFavorites(): boolean;\\n        set_processPersonalFavorites(value: boolean): boolean;\\n        /** Number of results displayed per page. 10 by default */\\n        get_resultsPerPage(): number;\\n        /** Number of results displayed per page. 10 by default */\\n        set_resultsPerPage(value: number): number;\\n        get_selectedRefiners(): any;\\n        set_selectedRefiners(value: any): any;\\n        get_selectedProperties(): any;\\n        set_selectedProperties(value: any): any;\\n        get_hitHighlightedProperties(): any;\\n        set_hitHighlightedProperties(value: any): any;\\n        get_fallbackLanguage(): any;\\n        set_fallbackLanguage(value: any): any;\\n        get_fallbackRankingModelID(): string;\\n        set_fallbackRankingModelID(value: string): string;\\n        get_fallbackRefinementFilters(): any;\\n        set_fallbackRefinementFilters(value: any): any;\\n        get_availableSorts(): any;\\n        set_availableSorts(value: any): any;\\n        get_contextualScopeUrl(): string;\\n        set_contextualScopeUrl(value: string): string;\\n        get_totalRows(): number;\\n        set_totalRows(value: number): number;\\n        get_rowCount(): number;\\n        set_rowCount(value: number): number;\\n        get_refinementInfo(): { [key: string]: RefinementInfo[] };\\n        get_entityInfo(): any;\\n        get_enableStemming(): boolean;\\n        set_enableStemming(value: boolean): boolean;\\n        get_enablePhonetic(): boolean;\\n        set_enablePhonetic(value: boolean): boolean;\\n        get_enableNicknames(): boolean;\\n        set_enableNicknames(value: boolean): boolean;\\n        get_trimDuplicates(): boolean;\\n        set_trimDuplicates(value: boolean): boolean;\\n        get_enableInterleaving(): boolean;\\n        set_enableInterleaving(value: boolean): boolean;\\n        get_enableQueryRules(): boolean;\\n        set_enableQueryRules(value: boolean): boolean;\\n        get_enableOrderingHitHighlightedProperty(): boolean;\\n        set_enableOrderingHitHighlightedProperty(value: boolean): boolean;\\n        get_hitHighlightedMultivaluePropertyLimit(): number;\\n        set_hitHighlightedMultivaluePropertyLimit(value: number): number;\\n        get_properties(): any;\\n        set_properties(value: any): any;\\n        get_clientType(): string;\\n        set_clientType(value: string): string;\\n        get_maxPagesAfterCurrent(): number;\\n        set_maxPagesAfterCurrent(value: number): number;\\n        get_userAction(): any;\\n        set_userAction(value: any): any;\\n        get_queryCount(): number;\\n        set_queryCount(value: number): number;\\n        get_resultsUrl(): any;\\n        set_resultsUrl(value: any): any;\\n        get_upScopeUrl(): any;\\n        get_effectiveQueryLanguage(): any;\\n        get_parentImpressionID(): any;\\n        set_parentImpressionID(value: any): any;\\n        get_updateAjaxNavigate(): boolean;\\n        set_updateAjaxNavigate(value: boolean): boolean;\\n        get_summaryLength(): number;\\n        set_summaryLength(value: number): number;\\n        get_desiredSnippetLength(): number;\\n        set_desiredSnippetLength(value: number): number;\\n        get_personalizedQuery(): boolean;\\n        set_personalizedQuery(value: boolean): boolean;\\n        initialize(): void;\\n        dispose(): void;\\n        scriptApplication_PreLoad(sender: any, e: any): void;\\n        scriptApplication_Load(sender: any, e: any): void;\\n        scriptApplication_PostLoad(sender: any, e: any): void;\\n        serverTemplateScriptsCallback(): void;\\n        add_queryIssuing(value: any): void;\\n        remove_queryIssuing(value: any): void;\\n        raiseQueryIssuingEvent(arg: any): void;\\n        add_resultReady(value: any): void;\\n        remove_resultReady(value: any): void;\\n        raiseResultReadyEvent(arg: any): void;\\n        add_queryStateChanged(value: any): void;\\n        raiseQueryStateChangedEvent(arg: any): void;\\n        displayControl_QueryReady(sender: any, e: any): void;\\n        searchBox_QueryReady(sender: any, e: any): void;\\n        searchBox_BatchQueryIssuing(sender: any, e: any): void;\\n        searchBox_BatchResultReady(sender: any, e: any): void;\\n        processInitial(): void;\\n        issueQuery(): void;\\n        displayControlMessages(): void;\\n        raiseEmptyResultReadyEvent(): void;\\n        getSortRankName(): string;\\n        getSortName(): string;\\n    }\\n\\n    class DisplayControl extends ClientControl {\\n        get_queryGroupName(): string;\\n        set_queryGroupName(value: string): string;\\n        get_dataProvider(): DataProvider;\\n        get_renderedResult(): boolean;\\n        set_renderedResult(value: boolean): boolean;\\n        get_shouldShowNoResultMessage(): boolean;\\n        set_shouldShowNoResultMessage(value: boolean): boolean;\\n        get_currentResultTableCollection(): any;\\n        set_currentResultTableCollection(value: any): any;\\n        get_emptyMessage(): string;\\n        set_emptyMessage(value: string): string;\\n        scriptApplication_PreLoad(sender: any, e: any): void;\\n        scriptApplication_PostLoad(sender: any, e: any): void;\\n        serverTemplateScriptsCallback(): void;\\n        add_queryReady(value: any): void;\\n        remove_queryReady(value: any): void;\\n        raiseQueryReadyEvent(arg: any): void;\\n        add_resultRendered(value: any): void;\\n        remove_resultRendered(value: any): void;\\n        raiseResultRenderedEvent(arg: any): void;\\n        add_oneTimeResultRendered(value: any): void;\\n        remove_oneTimeResultRendered(value: any): void;\\n        raiseOneTimeResultRenderedEvent(arg: any): void;\\n        refresh(queryState: any): void;\\n        dataProvider_QueryIssuing(sender: any, e: any): void;\\n        dataProvider_ResultReady(sender: any, e: any): void;\\n        processQueryIssuing(queryState: any): void;\\n        processResultReady(resultTableCollection: any): void;\\n        render(): void;\\n    }\\n\\n    class Refinement extends DisplayControl {\\n        static createRefinementTextbox(name: string): Element;\\n        static submitMultiRefinement(name: string, control: Refinement, useContains: boolean, useKQL: boolean): void;\\n        static ensureUserSpecifiedRefinerValueHasWhiteSpaceQuotes(inputText: string): string;\\n        static getRefinementLocalizedTitle(propertyName: string): string;\\n        static getRefinementTitle(currentRefinemntControl: RefinementControl): string;\\n        /** Gets expanded state of the specified filter from cookie */\\n        static getExpanded(filterName: string): string;\\n        /** Save expanded state of the specified filter to cookie */\\n        static setExpanded(filterName: string, value: string): void;\\n        static multiRefinerSpecifyOtherFilterValue(refinerName: string, clientControl: Refinement, useContains: boolean, useKQL: boolean): void;\\n\\n        constructor(elem: Element);\\n\\n        get_selectedRefinementControls(): RefinementControl[];\\n        set_selectedRefinementControls(value: RefinementControl[]): RefinementControl[];\\n        get_useManagedNavigationRefiners(): boolean;\\n        set_useManagedNavigationRefiners(value: boolean): boolean;\\n        get_emptyRefinementMessageId(): string;\\n        set_emptyRefinementMessageId(value: string): string;\\n\\n        scriptApplication_PreLoad(sender: any, e: any): void;\\n        render(): void;\\n        addRefinementFilter(filterName: string, filterToken: any): void;\\n        addRefinementFiltersJSON(refinersJSON: string): void;\\n        addRefinementFiltersJSONWithOr(refinersJSON: string): void;\\n        addRefinementFilters(refiners: any[]): void;\\n        addRefinementFiltersWithOp(refiners: any[], op: string): void;\\n        removeRefinementFilter(filterName: string, filterToken: string): void;\\n        removeRefinementFiltersJSON(refinersJSON: string): void;\\n        updateRefinementFilters(filterName: string, filterTokens: string[], op: string, useKQL: boolean, tokenToDisplayValueMap: any): void;\\n        updateRefinersJSON(refinersJSON: string): void;\\n        updateRefiners(refiners: any[], op: string, useKQL: boolean, tokenToDisplayValueMap: any): void;\\n        removeRefinementCategory(rcs: any, filterName: string): void;\\n        replaceRefinementFilter(oldRefinementFilter: any, newRefinementFilter: any): void;\\n        hasRefinementFilter(filterName: string, filterToken: string): boolean;\\n        hasAllRefinementFilters(filterName: string, filterTokens: string[]): boolean;\\n        hasRefinementCategory(refinementName: string): boolean;\\n        getCurrentRefinementCategory(refinementName: string): any;\\n        /** Gets refinement control with the specified propertyName */\\n        getRefinementControl(refinerName: string): RefinementControl;\\n        /** Returns true if selected refinement controls collection contains a control with the specified propertyName */\\n        hasRefiner(refinerName: string): boolean;\\n        /** Replaces the refinement controls */\\n        updateRefinementControls(newControls: RefinementControl[]): void;\\n    }\\n\\n    class RefinementControl {\\n        constructor(propertyName: string, spec: string, renderTemplateId: string);\\n\\n        propertyName: string;\\n        spec: string;\\n        renderTemplateId: string;\\n        overrideDisplayName: string;\\n        useDefaultDateIntervals: boolean;\\n        containerId: string;\\n        alternateRenderer: any;\\n        alternateRenderContext: any;\\n        countDisplay: string;\\n        deepHits: number;\\n    }\\n\\n    interface CSRFilter {\\n        IsSelected: boolean;\\n        RefinementCount: number;\\n        RefinementName: string;\\n        RefinementToken: string;\\n    }\\n\\n    interface CSRRefinementControl extends RefinementControl {\\n        csr_displayTitle: string;\\n        csr_filters: CSRFilter[];\\n        csr_isExpanded: string;\\n        csr_propertyName: string;\\n        csr_renderEmptyContainer: boolean;\\n        csr_showCounts: boolean;\\n        csr_useContains: boolean;\\n        csr_useKQL: boolean;\\n    }\\n\\n    class Result extends DisplayControl {\\n        static parsePropertyMappingWithSlotDisplayNames(mappings: any): { [key: string]: any };\\n        static parsePropertyMappingsString(mappings: any): { [key: string]: any };\\n        static getSelectedPropertiesFromMappingDictionary(propMappings: any): any[];\\n\\n        constructor(elem: Element);\\n\\n        get_itemTemplateId(): string;\\n        set_itemTemplateId(value: string): string;\\n        get_groupTemplateId(): string;\\n        set_groupTemplateId(value: string): string;\\n        get_itemBodyTemplateId(): string;\\n        set_itemBodyTemplateId(value: string): string;\\n        get_maxPagesBeforeCurrent(): number;\\n        set_maxPagesBeforeCurrent(value: number): number;\\n        get_maxPagesAfterCurrent(): number;\\n        set_maxPagesAfterCurrent(value: number): number;\\n        get_currentPageNumber(): number;\\n        set_currentPageNumber(value: number): number;\\n        get_showSortOptions(): boolean;\\n        set_showSortOptions(value: boolean): boolean;\\n        get_showLanguageOptions(): boolean;\\n        set_showLanguageOptions(value: boolean): boolean;\\n        get_repositionLanguageDropDown(): boolean;\\n        set_repositionLanguageDropDown(value: boolean): boolean;\\n        get_showPaging(): boolean;\\n        set_showPaging(value: boolean): boolean;\\n        get_showResults(): boolean;\\n        set_showResults(value: boolean): boolean;\\n        get_showBestBets(): boolean;\\n        set_showBestBets(value: boolean): boolean;\\n        get_showPersonalFavorites(): boolean;\\n        set_showPersonalFavorites(value: boolean): boolean;\\n        get_showDefinitions(): boolean;\\n        set_showDefinitions(value: boolean): boolean;\\n        get_showDidYouMean(): boolean;\\n        set_showDidYouMean(value: boolean): boolean;\\n        get_showAdvancedLink(): boolean;\\n        set_showAdvancedLink(value: boolean): boolean;\\n        get_showPreferencesLink(): boolean;\\n        set_showPreferencesLink(value: boolean): boolean;\\n        get_showResultCount(): boolean;\\n        set_showResultCount(value: boolean): boolean;\\n        get_showAlertMe(): boolean;\\n        set_showAlertMe(value: boolean): boolean;\\n        get_showViewDuplicates(): boolean;\\n        set_showViewDuplicates(value: boolean): boolean;\\n        get_pagingInfo(): any;\\n        get_shouldShowNoResultMessage(): boolean;\\n        get_advancedUrl(): string;\\n        set_advancedUrl(value: string): string;\\n        get_showUpScopeMessage(): boolean;\\n        set_showUpScopeMessage(value: boolean): boolean;\\n        get_scrollToTopOnRedraw(): boolean;\\n        set_scrollToTopOnRedraw(value: boolean): boolean;\\n        get_useSimplifiedQueryBuilder(): boolean;\\n        set_useSimplifiedQueryBuilder(value: boolean): boolean;\\n        get_preloadedItemTemplateIds(): string[];\\n        set_preloadedItemTemplateIds(value: string[]): string[];\\n        processResultReady(resultTableCollection: Microsoft.SharePoint.Client.Search.Query.ResultTableCollection): void;\\n        render(): void;\\n        scriptApplication_PreLoad(sender: any, e: any): void;\\n        sortOrRank(sortRankName: string): void;\\n        sort(sortName: string): void;\\n        changeQueryLanguage(queryLanguage: number): void;\\n        page(startAt: number): void;\\n        changeQueryTerm(queryTerm: any): void;\\n        viewDuplicates(docId: number): void;\\n        /** Returns true if the specified table has results and is enabled to be shown by this control */\\n        shouldShowTable(resultTable: Microsoft.SharePoint.Client.Search.Query.ResultTable): boolean;\\n\\n        setAriaCollapsed: (element: HTMLElement) => void;\\n        get_showQuerySuggestions: () => boolean;\\n        get_showNavigation: () => boolean;\\n        get_initialPrompt: () => string;\\n        get_currentTerm: () => string;\\n        handleClickOnCategoryLink: (id: string) => void;\\n        get_advancedSearchPageAddress: () => string;\\n        get_emptyRefinementMessageId: () => string;\\n        get_selectedRefinementControls: () => CSRRefinementControl[];\\n        activate: (prompt: string,\\n            searchBoxId: string, searchBoxDivId: string,\\n            navButtonId: string, suggestionsListId: string,\\n            navListId: string, searchBoxLinkId: string,\\n            searchBoxProgressClass: string, searchBoxPromptClass: string) => void;\\n    }\\n\\n    interface RefinementCategory {\\n        /** Use KQL */\\n        k: boolean;\\n        /**  token to display value map */\\n        m: { [key: string]: string } | null;\\n        /** Refiner Name (Mapped property) */\\n        n: string;\\n        o: string | \\\"and\\\" | \\\"or\\\" | \\\"AND\\\" | \\\"OR\\\";\\n        /** Values, prefixed by ǂǂ for taxonomy terms */\\n        t: string[];\\n    }\\n\\n    interface RefinerStructure {\\n        r: RefinementCategory[];\\n        l: number;\\n        /** Keyword */\\n        k: string;\\n    }\\n\\n    interface QueryState {\\n        e: number;\\n        k: string;\\n        r: RefinementCategory[];\\n    }\\n\\n    /** Represents the search box control */\\n    class SearchBox extends ClientControl {\\n        constructor(elem: Element);\\n\\n        /** Returns the current search term */\\n        get_currentTerm(): string;\\n        /** Sets the current search term.\\n          * Does not update results or even re-render control automatically, only sets the value.\\n          * You can call .renderControl() method to re-render control.\\n          */\\n        set_currentTerm(value: string): string;\\n\\n        get_queryGroupNames(): string[];\\n        set_queryGroupNames(value: any): string[];\\n\\n        /** Gets the results page address, e.g. '~site/_layouts/15/osssearchresults.aspx?u={contexturl}' */\\n        get_resultsPageAddress(): string;\\n        /** Sets the results page address, e.g. '~site/_layouts/15/osssearchresults.aspx?u={contexturl}'\\n          * Parameter u is used for setting the url filter for the search, so that only results within\\n          * e.g. specified site are returned. Omit this parameter if you want to search everywhere.\\n          */\\n        set_resultsPageAddress(value: string): string;\\n\\n        get_showAdvancedLink(): boolean;\\n        set_showAdvancedLink(value: boolean): boolean;\\n\\n        get_showQuerySuggestions(): boolean;\\n        set_showQuerySuggestions(value: boolean): boolean;\\n\\n        get_showNavigation(): boolean;\\n        set_showNavigation(value: boolean): boolean;\\n\\n        get_showPeopleNameSuggestions(): boolean;\\n        set_showPeopleNameSuggestions(value: boolean): boolean;\\n\\n        /** Gets the interval in milliseconds, if user is idle during this interval, suggestions retrieval will be initiated.\\n         * Default value is 250.\\n         */\\n        get_querySuggestionCompletionInterval(): number;\\n        /** Sets the interval in milliseconds, if user is idle during this interval, suggestions retrieval will be initiated.\\n         * Default value is 250.\\n         */\\n        set_querySuggestionCompletionInterval(value: number): number;\\n\\n        /** Gets minimum length of the search term for suggestions to be retrieved. Default is 2 letters. */\\n        get_querySuggestionMinimumPrefixLength(): number;\\n        /** Sets minimum length of the search term for suggestions to be retrieved. Default is 2 letters. */\\n        set_querySuggestionMinimumPrefixLength(value: number): number;\\n\\n        /** Gets number of suggestions to display. Default is 5. */\\n        get_querySuggestionCount(): number;\\n        /** Sets number of suggestions to display. Default is 5. */\\n        set_querySuggestionCount(value: number): number;\\n\\n        get_personalResultCount(): number;\\n        set_personalResultCount(value: number): number;\\n\\n        get_advancedSearchPageAddress(): string;\\n        set_advancedSearchPageAddress(value: string): string;\\n\\n        get_showPreferencesLink(): boolean;\\n        set_showPreferencesLink(value: boolean): boolean;\\n\\n        get_serverInitialRender(): boolean;\\n        set_serverInitialRender(value: boolean): boolean;\\n\\n        get_setFocusOnPageLoad(): boolean;\\n        set_setFocusOnPageLoad(value: boolean): boolean;\\n\\n        get_allowEmptySearch(): boolean;\\n        set_allowEmptySearch(value: boolean): boolean;\\n\\n        get_updatePageTitle(): boolean;\\n        set_updatePageTitle(value: boolean): boolean;\\n\\n        get_pageTitlePrefix(): string;\\n        set_pageTitlePrefix(value: string): string;\\n\\n        /** Gets the search input placeholder text */\\n        get_currentPrompt(): string;\\n        /** Sets the search input placeholder text */\\n        set_currentPrompt(value: string): string;\\n\\n        get_initialPrompt(): string;\\n        set_initialPrompt(value: string): string;\\n\\n        /** Gets the css class/classes of the placeholder text. Default is 'ms-srch-sb-prompt ms-helperText' */\\n        get_promptCssClass(): string;\\n        /** Sets the css class/classes of the placeholder text. Default is 'ms-srch-sb-prompt ms-helperText' */\\n        set_promptCssClass(value: string): string;\\n\\n        get_tryInplaceQuery(): boolean;\\n        set_tryInplaceQuery(value: boolean): boolean;\\n\\n        /** Gets the id of the search box input element */\\n        get_searchBoxInputId(): string;\\n        /** Sets the id of the search box input element */\\n        set_searchBoxInputId(value: string): string;\\n\\n        get_searchBoxContainerId(): string;\\n        set_searchBoxContainerId(value: string): string;\\n\\n        get_navigationButtonId(): string;\\n        set_navigationButtonId(value: string): string;\\n\\n        get_suggestionsListId(): string;\\n        set_suggestionsListId(value: string): string;\\n\\n        get_navigationListId(): string;\\n        set_navigationListId(value: string): string;\\n\\n        get_searchBoxInputElement(): Element;\\n\\n        get_searchBoxProgressClass(): string;\\n        set_searchBoxProgressClass(value: string): string;\\n\\n        get_searchBoxContainerElement(): Element;\\n\\n        get_searchBoxLinkId(): string;\\n        set_searchBoxLinkId(value: string): string;\\n\\n        get_searchBoxLinkElement(): Element;\\n\\n        get_navigationNodes(): any;\\n        set_navigationNodes(value: any): any;\\n\\n        get_msBeforeShowingProgress(): number;\\n        set_msBeforeShowingProgress(value: number): number;\\n\\n        get_maintainQueryState(): boolean;\\n        set_maintainQueryState(value: boolean): boolean;\\n\\n        get_querySuggestionsSourceID(): string;\\n        set_querySuggestionsSourceID(value: string): string;\\n\\n        scriptApplication_PreLoad(sender: any, e: any): void;\\n        scriptApplication_PostLoad(sender: any, e: any): void;\\n        serverTemplateScriptsCallback(): any;\\n\\n        add_queryReady(value: any): void;\\n        remove_queryReady(value: any): void;\\n        raiseQueryReadyEvent(arg: any): void;\\n\\n        add_batchQueryIssuing(value: any): void;\\n        remove_batchQueryIssuing(value: any): void;\\n        raiseBatchQueryIssuingEvent(arg: any): void;\\n\\n        add_batchResultReady(value: any): void;\\n        remove_batchResultReady(value: any): void;\\n        raiseBatchResultReadyEvent(arg: any): void;\\n\\n        dataProvider_QueryStateChanged(sender: any, e: any): void;\\n        dataProvider_QueryIssuing(sender: any, e: any): void;\\n        dataProvider_ResultReady(sender: any, e: any): void;\\n\\n        search(term: string): void;\\n        hidePrompt(): void;\\n        showPrompt(): void;\\n        focus(): void;\\n        setBorder(focused: boolean): void;\\n\\n        activate(prompt: string, searchBoxInputId: string, searchBoxContainerId: string, navigationButtonId: string, suggestionsListId: string, navigationListId: string, searchBoxLinkId: string, searchBoxProgressClass: string, searchBoxPromptClass: string): void;\\n        activateDefaultNavigationBehavior(): void;\\n        activateDefaultQuerySuggestionBehavior(): void;\\n    }\\n\\n    class RefinementUtil {\\n        static stringValueToEqualsToken(x: string): string;\\n        static peoplePickerApplyIdPrefix(control: Srch.ClientControl | Srch.RefinementControl): string;\\n        static peoplePickerPrep(id: string, refiner: Srch.RefinementControl, clientControl: Srch.Refinement): string;\\n    }\\n\\n    type RenderFunction = (ctx: any) => string;\\n\\n    class U {\\n        /** Returns true if the value parameter is null or empty string */\\n        static e(value: string): boolean;\\n        /** Returns true if the value parameter is empty string */\\n        static w(value: any): boolean;\\n        /** Returns true if the value parameter is null or undefined */\\n        static n(value: any): boolean;\\n        /** Returns true if current page is in edit mode */\\n        static isPageInEditMode(): boolean;\\n        /** Returns true if current page is displayed in the Minimal Download Strategy (MDS) mode */\\n        static isPageInMdsMode(): boolean;\\n\\n        static isPagePartialLoad(): boolean;\\n        /** Returns true if the current page uses right-to-left mode (RTL) */\\n        static isRTL(): boolean;\\n\\n        /** Ensures that the given value is not null or undefined; throws an exception otherwise. */\\n        static ensureNotNullOrUndefined(value: any, context: any, methodName: string, paraName: string): void;\\n        /** Ensures that the given value is not null, undefined or empty; throws an exception otherwise. */\\n        static ensureNotNullOrEmptyString(value: string, context: any, methodName: string, paraName: string): void;\\n        /** Returns copy of the passed source dictionary */\\n        static copyDictionary(source: { [key: string]: any }): { [key: string]: any };\\n        /** Returns true if the obj parameter is null, undefined, number or string */\\n        static isPrimitive(obj: any): boolean;\\n        /** Returns true if the obj parameter is array */\\n        static isArray(obj: any): boolean;\\n        /** Safely pushes item to array (does nothing if the array is null or undefined) */\\n        static appendArray(array: any[], item: any): void;\\n        /** Safely sets field of an object (does nothing if either object or fieldName is null/empty); returns true if value was set */\\n        static setFieldOnObject(targetObject: any, fieldName: string, fieldValue: any): boolean;\\n        /** Safely gets field of an object (returns null if object is null or undefined) */\\n        static getFieldOnObject(targetObject: any, fieldName: string): any;\\n        /** Safely gets field of an object or creates it if it is null or undefined */\\n        static getOrCreateFieldOnObject(targetObject: any, fieldName: string, defaultValue: any): any;\\n        /** Safely gets field of an object (returns empty string instead of null as \\\"getFieldOnObject\\\") */\\n        static getStringFieldOnObject(targetObject: any, fieldName: string): string;\\n        /** Returns true if the specified item is found in the specified array (uses '===' for comparing) */\\n        static isInArray(array: any[], item: any): boolean;\\n        /** Removes the specified item from the specified array and returns array that has the deleted item */\\n        static removeArray(array: any[], item: any): any[];\\n        /** Removes trailing spaces and also replaces double spaces inside string to single spaces */\\n        static trimExtraSpaces(value: string): string;\\n        /** Adds the specified CSS class to element (if not there already) */\\n        static ensureCSSClassNameExist(e: Element, className: string): void;\\n        /** Removes the specified CSS class from the element */\\n        static ensureCSSClassNameNotExist(e: Element, className: string): void;\\n        /** Adds cookie with specified parameters */\\n        static setCookie(name: string, value: string, expires?: Date, domain?: string, path?: string): void;\\n        /** Gets cookie by name */\\n        static getCookie(name: string): string;\\n        /** Returns true if the specified URL belongs to the specified host name */\\n        static isSameHost(url: string, hostName: string): boolean;\\n        /** Returns the hostname of current page */\\n        static getHostName(): string;\\n\\n        static trace(c: Srch.ClientControl, method: string, message: string): void;\\n        static traceFormatted(c: Srch.ClientControl, method: string, format: string, ...values: string[]): void;\\n\\n        /** Same as $addHandler with safety checks */\\n        static addHandler(element: Element, eventName: string, handler: (instance: any, eventArgs: any) => void): void;\\n        /** Same as $removeHandler with safety checks */\\n        static removeHandler(element: Element, eventName: string, handler: (instance: any, eventArgs: any) => void): void;\\n\\n        /** Returns true if the specified element is a descendant of the container element */\\n        static isDescendant(element: Element, container: Element): boolean;\\n        /** Returns the closest to startingElement parent of the specified tag name */\\n        static getParentElementByName(startingElement: Element, tagName: string): Element;\\n        /** Returns the #s4-workspace element or if not found, then the fallback element */\\n        static getWorkspace(fallback: Element): Element;\\n        /** Returns specified by attributeName attribute of startingElement or of it's closest parent who has it */\\n        static getParentAttributeByName(startingElement: Element, attributeName: string): string;\\n        /** Returns the ClientControl associated with specified DOM element */\\n        static getClientComponent(e: Element): ClientControl;\\n\\n        static getResultObject(id: string): any;\\n        static setResultObject(id: string, resultObject: any): any;\\n        static findResultObjectFromDOM(e: Element, type: string): any;\\n\\n        /** Appends specified parameter key and value string to the specified URL */\\n        static appendUrlParameter(url: string, keyAndValue: string): string;\\n\\n        /** Ensures that the given URL protocol value is allowed. Returns the specified URL value if the protocol is allowed; empty string otherwise. */\\n        static ensureAllowedProtocol(value: string): string;\\n        /** Indicates whether the specified protocol is allowed. */\\n        static isProtocolAllowed(value: string, allowRelativeUrl: boolean): boolean;\\n\\n        /** Returns true if the URL is a relative URL */\\n        static isUrlRelative(url: string): boolean;\\n        /** Returns true if the URL is a server-relative URL (i.e. starts with '/') */\\n        static isUrlServerRelative(url: string): boolean;\\n        /** Returns true if the URL is a relative URL, but not a server-relative URL */\\n        static isUrlPagelRelative(url: string): boolean;\\n\\n        static logClick(e: any, clickType: any): void;\\n        static fillKeywordQuery(query: any, dp: any): void;\\n\\n        /** Parses username out from SharePoint user field value */\\n        static getUsernameFromAuthorField(authorField: string): string;\\n        /** Parses user display name out from SharePoint user field value */\\n        static getDisplayNameFromAuthorField(authorField: string): string;\\n        /** Parses SharePoint array field value and returns array of strings */\\n        static getArray(value: string): string[];\\n        /** Converts file extension to a more friendly representation, e.g. 'doc' => 'file_Word' */\\n        static getFriendlyNameForFileExtension(fileExtension: string): string;\\n        /** Returns true if the fileExtension belongs to a webpage, e.g. 'ascx', 'aspx', 'html', 'php', etc.  */\\n        static isWebPage(fileExtension: string): boolean;\\n        /** Truncates the string to specified maximum allowed amount of characters (if max amount is not exceeded - does nothing) */\\n        static truncateEnd(original: string, maxChars: number): string;\\n        /** Returns true if specified by logoUrl image is one of default site logos */\\n        static isDefaultSiteLogo(logoUrl: string): boolean;\\n        /** Returns formatted date */\\n        static toFormattedDate(dateValue: Date, dateTimeFormatId?: string): string;\\n        /** Returns formatted number */\\n        static toFormattedNumber(num: number, defaultDecimalPlacesIfNotInt: number): string;\\n        /** If number is more than 1000, rounds up three last digits, e.g. 72389 => '72,000+'. If number is more than 100000, returns '100,000+' */\\n        static toFriendlyNumber(num: number): string;\\n        /** Returns human-readable size in kilobytes/megabytes etc. (the captions are localized) */\\n        static toFileSizeDisplay(numberOfBytes: number, showDecimalPart: boolean): string;\\n\\n        static getVideoImageWithFallbackSource(valueObject: any, width: number, height: number): string;\\n        static getImageSourceWithRendition(imageInfo: any, width: number, height: number): string;\\n        static parseTypedRangeToken(rangeFilterToken: string, objToStoreFilterTokenType: any): any;\\n        static modifyMediaDurationRefinementName(resultRow: any): void;\\n        static getDeepLinks(deeplinks: string, maxRows: number): string;\\n        static truncateUrl(url: string, maxChars: number): string;\\n        static truncateHighlightedUrl(url: string, maxChars: number): string;\\n\\n        /** Copies the specified string to clipboard, if possible */\\n        static copyLink(link: string): void;\\n\\n        /** Registers display template function in the system.\\n         *  @param name Identifier of the template. Usually template is registered twice: by URL and by name.\\n         *  @param template The display template. It can be either string, or function, that gets the CSR context object and returns HTML string\\n          */\\n        static registerRenderTemplateByName(name: string, templateFunction: string | RenderFunction): void;\\n        /** Returns display template registered (can be either string or function) */\\n        static getRenderTemplateByName(name: string, renderCtx: any): string | RenderFunction;\\n\\n        static addRenderContextCallback(renderCtx: any, callbackType: any, callbackFunction: any, enforceUnique: any, templateFunction: any): void;\\n        static setItemRenderWrapper(renderCtx: any, itemRenderWrapperFunction: any, templateFunction: any): any;\\n        static logRenderingErrorMessageToContext(renderCtx: any, messageText: any, operationName: any): void;\\n        /** Gets the URL of template based on display template function or the rendering context */\\n        static getTemplateUrlFromFunctionOrRenderCtx(templateFunctionOrRenderCtx: any): string;\\n        static createErrorObjectWithExecContext(messageText: any, operationName: any, templateFuncOrRenderCtx: any): any;\\n        /** Returns the CSR template that was previously registered using 'registerRenderTemplateByName' based on CSR template level */\\n        static resolveRenderTemplate(renderCtx: any, component: ClientControl, level: 'Item' | 'Group' | 'View' | 'Body'): string | RenderFunction;\\n\\n        /** Returns formatted time string from seconds string, which contains a number that represents amount of seconds passed since 00:00:00 today */\\n        static getFormattedTimeFromSeconds(secondsStr: string): string;\\n        /** Returns true if the keyCode is \\\\n or \\\\r */\\n        static isEnterKey(keyCode: any): boolean;\\n\\n        /** Prevents default event action and stops further propagation of the event in the DOM */\\n        static cancelEvent(e: Event): void;\\n        /** Prevents default event action or/and stops further propagation of the event in the DOM */\\n        static cancelEventEx(e: Event, preventDefault: boolean, stopPropagation: boolean): void;\\n        /** Gets a value from 'Properties' field object of the specified parent object */\\n        static getTableProperty(parent: any, propName: string): any;\\n        /** Concatenates two URL fragments and returns resulting URL */\\n        static concatUrl(firstPart: string, secondPart: string): string;\\n        /** Returns URL to the html16.png image */\\n        static getIconUrl(): string;\\n        /** Returns URL to the folder.gif image */\\n        static getFolderIconUrl(): string;\\n        /** Returns URL of the appropriate file image based on the file type identifier (see getFriendlyNameForFileExtension) */\\n        static getIconUrlByFileExtension(item: string, defaultIconPath?: string): string;\\n\\n        /** Returns string that contains safe call to HP.Show, passing over the itemId, hpContainerId and templateUrl parameters, and supplying true for wide parameter. */\\n        static getShowHoverPanelCallbackWide(itemId: string, hpContainerId: string, templateUrl: string): string;\\n        /** Returns string that contains safe call to HP.Show, passing over the itemId, hpContainerId and templateUrl parameters, and supplying false for wide parameter. */\\n        static getShowHoverPanelCallback(itemId: string, hpContainerId: string, templateUrl: string): string;\\n        /** Returns string that contains safe call to HP.Hide */\\n        static getHideHoverPanelCallback(): string;\\n\\n        static getHighlightedProperty(key: string, result: any, property: string): any;\\n        static processHHXML(pre: string): string;\\n        static createXMLDocument(xml: string): XMLDocument;\\n        static getUnEncodedMultiValuedResults(multiValue: string, maxItems: number, rawDelimiter: string): string;\\n        static getTrimmedString(value: string, cutOff: number): string;\\n        static trimTitle(title: string, maximumLengthInChars: number, numberOfTermsToUse: number): string;\\n        static extractReplyTitleFromSummary(hitHighlightedSummary: string, titleLength: number): string;\\n        static getTrimmedProcessedHHXMLString(value: string, cutOff: number): string;\\n        static getMultipleHHXMLNodeValues(xmlDoc: XMLDocument, nodeName: string, numItems: number, rawDelimiter: string): string;\\n        static getSingleHHXMLNodeValue(xmlDoc: XMLDocument, nodeName: string): string;\\n        static isTableTypeof(resultTable: any, tableTypeName: string): boolean;\\n        static isSubstrateTable(resultTable: any): boolean;\\n        static getTableOfType(tableCollection: Microsoft.SharePoint.Client.Search.Query.ResultTableCollection, tableTypeName: string): Microsoft.SharePoint.Client.Search.Query.ResultTable;\\n        static isFirstPromotedBlock(resultTable: Microsoft.SharePoint.Client.Search.Query.ResultTable): boolean;\\n        static isFirstRankedBlock(resultTable: Microsoft.SharePoint.Client.Search.Query.ResultTable): boolean;\\n        static isIntentTable(resultTable: Microsoft.SharePoint.Client.Search.Query.ResultTable): boolean;\\n        static createBehavior(id: string, type: any, properties: any, targetElementId: string): any;\\n\\n        /** Uses SPAnimation to animate an element */\\n        static animate(element: Element, animationID: any, finishFunc: any): void;\\n        static hideElement(element: Element): void;\\n        static showElement(element: Element): void;\\n        static positionElement(element: Element, offset: string): void;\\n        static resetElement(element: Element): void;\\n        static shouldAnimate(dp: any): boolean;\\n        static animateResults(result: Result, userAction: any): void;\\n\\n        static loadScripts(scriptReferences: string[], success: any, failure: any, timeout: number): void;\\n        static appendScriptsToLoad(scripts: string[], script: string): void;\\n        static registerLoadedScripts(scripts: string[]): void;\\n\\n        /** Returns HTML for collapsible refiner title */\\n        static collapsibleRefinerTitle(propertyName: string, idPrefix: string, title: string, iconClass: string, customOnClick: string | null, isExpanded: string): string;\\n        /** Returns true if current page is osssearchresults.aspx */\\n        static isDefaultSiteSearchPage(): boolean;\\n        /** Replaces tokens {searchcenterurl}, {contexturl}, {resultsurl}, {defaultpageslistname}, {Locale} and others, and converts URL to server-relative */\\n        static replaceUrlTokens(url: string): string;\\n        /** Adds ctag parameter to the URL and replaces URL tokens */\\n        static urlTokenExpansion(jsLink: string): string;\\n\\n        static includeCSS(templateLink: string, relativeLink: string): void;\\n        static includeScript(templateLink: string, scriptLink: string): void;\\n        static includeLanguageScript(templateLink: string, scriptLink: string): void;\\n\\n        static isSPFSKU(): boolean;\\n        /** Retrieves localized string with the specified id */\\n        static loadResource(id: string): string;\\n        /** Retrieves localized string with the specified id */\\n        static loadResourceForTemplate(id: string, templateFunc: (ctx: any) => string): string;\\n        /** Registers in system resources defined by the dictionary object */\\n        static registerResourceDictionary(locale: string, dict: { [key: string]: string }): void;\\n\\n        static restorePath(el: Element, originalText: string, selectText: string): void;\\n        static selectPath(text: string, el: Element): void;\\n        static setPath(e: Event, el: Element, text: string, originalText: string): void;\\n        static restoreText(el: Element, originalText: string, selectText: string): void;\\n        static selectText(text: string, el: Element): void;\\n\\n        /** Renders datetime value in friendly format into element specified by targetElementID */\\n        static renderFriendlyTimeIntervalString(dateTimeSinceUTC: Date, targetElementID: string, calendarType?: number): void;\\n        /** Returns human-friendly representation of the datetime value, e.g. \\\"A few seconds ago\\\"\\\" */\\n        static getFriendlyTimeInterval(dateTimeSince: Date, calendarType: number): string;\\n        /** Gets calendar type according to the current regional settings */\\n        static getCalendarType(): any;\\n\\n        static htmlEncodeNonBase64ImageUrl(url: string): string;\\n\\n        static createFileIconAltText(container: boolean, b: any): string;\\n\\n        static hitHighlightingOpenTag: string;\\n        static hitHighlightingCloseTag: string;\\n        static titleTruncationLength: number;\\n        static titleTruncationLengthWithMetadata: number;\\n        static titleTruncationLengthWithPreview: number;\\n        static summaryTruncationLength: number;\\n        static summaryTruncationLengthWithPreview: number;\\n        static pathTruncationLength: number;\\n        static pathTruncationLengthWithPreview: number;\\n        static pathTruncationLengthWithMetadata: number;\\n        static personaControlRenderedThreshold: number;\\n        static maximumSocialMetadataValue: number;\\n        static contentFixedWidthLength: number;\\n    }\\n\\n    namespace U {\\n        class PropNames {\\n            static renderTemplates: 'RenderTemplates';\\n            static renderTemplateId: 'RenderTemplateId';\\n            static tableType: 'TableType';\\n            static queryErrors: 'QueryErrors';\\n            static resultTables: 'ResultTables';\\n            static resultRows: 'ResultRows';\\n            static queryId: 'QueryId';\\n            static properties: 'Properties';\\n            static rowCount: 'RowCount';\\n            static totalRows: 'TotalRows';\\n            static totalRowsIncludingDuplicates: 'TotalRowsIncludingDuplicates';\\n            static queryRuleId: 'QueryRuleId';\\n            static parentTableReference: 'ParentTableReference';\\n            static isFirstPinnedBlock: 'IsFirstPinnedResultBlock';\\n            static isFirstRankedBlock: 'IsFirstRankedResultBlock';\\n        }\\n\\n        class Ids {\\n            static group: '_group';\\n            static groupTitle: '_groupTitle';\\n            static groupLink: '_groupLink';\\n            static groupContent: '_groupContent';\\n            static item: '_item';\\n            static body: '_itemBody';\\n            static title: '_itemTitle';\\n            static icon: '_itemIcon';\\n            static titleLink: '_itemTitleLink';\\n            static summary: '_itemSummary';\\n            static path: '_itemPath';\\n            static hover: '_hover';\\n            static visualBestBet: '_visualBestBet';\\n            static preview: '_itemPreview';\\n            static deepLinks: '_deepLinks';\\n            static members: '_members';\\n            static replies: '_replies';\\n            static discussions: '_discussions';\\n            static likes: '_likes';\\n            static postInfo: '_postInfo';\\n        }\\n\\n        class LoadScriptsState {\\n            scriptsToLoad: any;\\n            progress: number;\\n            timeoutHandle: any;\\n        }\\n\\n        enum LoadScriptsProgress {\\n            loading,\\n            success,\\n            failure\\n        }\\n    }\\n\\n    interface QueryGroup {\\n        dataProvider: DataProvider;\\n        displays: DisplayControl[];\\n        name: string;\\n        searchBoxes: Refinement[];\\n    }\\n\\n    class ScriptApplicationManager {\\n        static get_current(): ScriptApplicationManager;\\n        static get_clientRuntimeContext(): SP.ClientRuntimeContext;\\n        /** Returns server-relative link to _layouts/EditUserPref.aspx */\\n        get_preferencesUrl(): string;\\n        /** Returns server-relative link to _layouts/manageresulttypes.aspx */\\n        get_resultTypesUrl(): string;\\n        /** Returns server-relative link to _layouts/DesignDisplayTemplates.aspx */\\n        get_displayTemplatesUrl(): string;\\n        /** Returns server-relative link to _layouts/listqueryrules.aspx */\\n        get_queryRulesUrl(): string;\\n        /** Returns server-relative link to _layouts/manageresultsources.aspx */\\n        get_resultSourcesUrl(): string;\\n        /** Returns absolute URL of the current page (without ? and # parts) */\\n        get_pagePath(): string;\\n\\n        /** Adds handler for the preload event */\\n        add_preLoad(handlerFunction: (instance: any, eventArgs: any) => void): void;\\n        /** Removes handler for the preload event */\\n        remove_preLoad(handlerFunction: (instance: any, eventArgs: any) => void): void;\\n        /** Raises the preload event */\\n        raisePreLoadEvent(): void;\\n\\n        /** Adds handler for the load event */\\n        add_load(handlerFunction: (instance: any, eventArgs: any) => void): void;\\n        /** Removes handler for the load event */\\n        remove_load(handlerFunction: (instance: any, eventArgs: any) => void): void;\\n        /** Raises the load event */\\n        raiseLoadEvent(): void;\\n\\n        /** Adds handler for the postload event */\\n        add_postLoad(handlerFunction: (instance: any, eventArgs: any) => void): void;\\n        /** Removes handler for the postload event */\\n        remove_postLoad(handlerFunction: (instance: any, eventArgs: any) => void): void;\\n        /** Raises the postload event */\\n        raisePostLoadEvent(): void;\\n\\n        initialize(): void;\\n        dispose(): void;\\n\\n        /** Registers DisplayControl, DataProvider or SearchBox in the system.\\n         * After registration the controls will be correctly processed in the page search context.\\n         */\\n        registerClientControl(clientControl: DisplayControl | DataProvider | SearchBox): void;\\n\\n        /** Puts specified hash-key address into the current page location.\\n         * @param url The hash-key, e.g. '#k=test'\\n         */\\n        navigateTo(url: string): void;\\n\\n        /** Gets the current search session ID from the cookies (if session ID does not exist in the cookies yet - it will be added) */\\n        get_searchSessionID(): void;\\n\\n        getNavigationNodes(): HTMLCollection;\\n\\n        queryGroups: { [key: string]: QueryGroup };\\n\\n        states: {\\n            openDocumentsInClient: boolean;\\n            contextTitle: string\\n        };\\n    }\\n\\n    class Res {\\n        static sb_ResultsPageTitle: string;\\n        static sb_EmptyQueryWarning: string;\\n        static sb_InvalidResultPageURL: string;\\n        static sb_SitePrompt: string;\\n        static sb_Prompt: string;\\n        static sb_Prompt_NavNode: string;\\n        static sb_GoSearch: string;\\n        static sb_GoNav: string;\\n        static sb_AdvancedLink: string;\\n        static sb_PreferencesLink: string;\\n        static sb_AccessKey: string;\\n        static sb_SearchInProgress: string;\\n        static qs_PersonalResultTitleSingular: string;\\n        static qs_PersonalResultTitlePlural: string;\\n        static qs_NameSuggestionsTitle: string;\\n        static qs_SuggestionListAriaLabel: string;\\n        static dp_ScriptLoadFailed: string;\\n        static rf_EmptyRefinement: string;\\n        static rf_RefinementTitle: string;\\n        static rf_RefineBy: string;\\n        static rf_All: string;\\n        static rf_RefineByAuthorGoButton: string;\\n        static rf_Apply: string;\\n        static rf_AddProperty: string;\\n        static rs_ResultsTitle: string;\\n        static rs_MoveToPage: string;\\n        static rs_MoveToPrevPage: string;\\n        static rs_MoveToNextPage: string;\\n        static rs_GroupMoreLink: string;\\n        static rs_Hide_Results: string;\\n        static qb_GetRecItems: string;\\n        static qb_ScopeRecItems: string;\\n        static qb_GetFillIn: string;\\n        static qb_ShowRecsOnly: string;\\n        static qb_FillInPopular: string;\\n        static qb_FillInPopularScope: string;\\n        static qb_FillInKeywords: string;\\n        static qb_NoCollapseString: string;\\n        static qb_ShowAllCollapseString: string;\\n        static qb_ShowRefinersOnly: string;\\n        static qb_RecsFromURLToken: string;\\n        static qb_Remove: string;\\n        static qb_FallbackResultTitle: string;\\n        static rf_DefaultNumberLabels_min: string;\\n        static rf_DefaultNumberLabels_max: string;\\n        static rf_DefaultNumberLabels_range: string;\\n        static rf_DefaultNumberLabels_value: string;\\n        static rf_DefaultDateRangeLabels_min: string;\\n        static rf_DefaultDateRangeLabels_max: string;\\n        static rf_DefaultDateRangeLabels_range: string;\\n        static rf_DefaultDateRangeLabels_value: string;\\n        static rf_DefaultDateBoundaryLabels_0: string;\\n        static rf_DefaultDateBoundaryLabels_1: string;\\n        static rf_DefaultDateBoundaryLabels_2: string;\\n        static rf_DefaultDateBoundaryLabels_3: string;\\n        static rf_RangeBoundariesAnyValue: string;\\n        static rf_RefinementTitle_Author: string;\\n        static rf_RefinementTitle_AuthorOWSUSER: string;\\n        static rf_RefinementTitle_Write: string;\\n        static rf_RefinementTitle_LastModifiedTime: string;\\n        static rf_RefinementTitle_owstaxidmetadataalltagsinfo: string;\\n        static rf_RefinementTitle_owsmetadatafacetinfo: string;\\n        static rf_RefinementTitle_languages: string;\\n        static rf_RefinementTitle_ContentType: string;\\n        static rf_RefinementTitle_Size: string;\\n        static rf_RefinementTitle_UrlDepth: string;\\n        static rf_RefinementTitle_People: string;\\n        static rf_RefinementTitle_FileType: string;\\n        static rf_RefinementTitle_FileExtension: string;\\n        static rf_RefinementLabel_More: string;\\n        static rf_ShowMoreResults_Tooltip: string;\\n        static rf_RefinementLabel_Less: string;\\n        static rf_RefinementLabel_EnterName: string;\\n        static rf_RefinementTitle_CreatedBy: string;\\n        static rf_RefinementTitle_from: string;\\n        static rf_RefinementTitle_recipients: string;\\n        static rf_RefinementTitle_subject: string;\\n        static rf_RefinementTitle_Kind: string;\\n        static rf_RefinementTitle_ContentClass: string;\\n        static rf_RefinementTitle_WebTemplate: string;\\n        static rf_RefinementTitle_participants: string;\\n        static rf_RefinementTitle_AttachmentType: string;\\n        static rf_RefinementTitle_BaseOfficeLocation: string;\\n        static rf_RefinementTitle_companies: string;\\n        static rf_RefinementTitle_ContentTypeId: string;\\n        static rf_RefinementTitle_Created: string;\\n        static rf_RefinementTitle_Department: string;\\n        static rf_RefinementTitle_PeopleKeywords: string;\\n        static rf_RefinementTitle_DisplayAuthor: string;\\n        static rf_RefinementTitle_format: string;\\n        static rf_RefinementTitle_ImageDateCreated: string;\\n        static rf_RefinementTitle_JobTitle: string;\\n        static rf_RefinementTitle_Location: string;\\n        static rf_RefinementTitle_locations: string;\\n        static rf_RefinementTitle_ManagedProperties: string;\\n        static rf_RefinementTitle_MediaDuration: string;\\n        static rf_RefinementTitle_PeopleInMedia: string;\\n        static rf_RefinementTitle_personnames: string;\\n        static rf_RefinementTitle_PictureHeight: string;\\n        static rf_RefinementTitle_PictureWidth: string;\\n        static rf_RefinementTitle_PostAuthor: string;\\n        static rf_RefinementTitle_recommendedfor: string;\\n        static rf_RefinementTitle_Responsibilities: string;\\n        static rf_RefinementTitle_SharedWithInternal: string;\\n        static rf_RefinementTitle_Site: string;\\n        static rf_RefinementTitle_sitename: string;\\n        static rf_RefinementTitle_Tags: string;\\n        static rf_RefinementTitle_Title: string;\\n        static rf_ResultTypeRefinerValue_MSAccess: string;\\n        static rf_ResultTypeRefinerValue_AdobePDF: string;\\n        static rf_ResultTypeRefinerValue_Assignment: string;\\n        static rf_ResultTypeRefinerValue_Archive: string;\\n        static rf_ResultTypeRefinerValue_Blog: string;\\n        static rf_ResultTypeRefinerValue_Book: string;\\n        static rf_ResultTypeRefinerValue_Community: string;\\n        static rf_ResultTypeRefinerValue_Course: string;\\n        static rf_ResultTypeRefinerValue_Discussion: string;\\n        static rf_ResultTypeRefinerValue_Email: string;\\n        static rf_ResultTypeRefinerValue_MSExcel: string;\\n        static rf_ResultTypeRefinerValue_Image: string;\\n        static rf_ResultTypeRefinerValue_Lesson: string;\\n        static rf_ResultTypeRefinerValue_LotusNotes: string;\\n        static rf_ResultTypeRefinerValue_NewsfeedPost: string;\\n        static rf_ResultTypeRefinerValue_MSOneNote: string;\\n        static rf_ResultTypeRefinerValue_MSPowerPoint: string;\\n        static rf_ResultTypeRefinerValue_MSProject: string;\\n        static rf_ResultTypeRefinerValue_MSPublisher: string;\\n        static rf_ResultTypeRefinerValue_SharePointSite: string;\\n        static rf_ResultTypeRefinerValue_Task: string;\\n        static rf_ResultTypeRefinerValue_TeamSite: string;\\n        static rf_ResultTypeRefinerValue_Text: string;\\n        static rf_ResultTypeRefinerValue_Video: string;\\n        static rf_ResultTypeRefinerValue_Visio: string;\\n        static rf_ResultTypeRefinerValue_Wiki: string;\\n        static rf_ResultTypeRefinerValue_Webpage: string;\\n        static rf_ResultTypeRefinerValue_MSWord: string;\\n        static rf_ResultTypeRefinerValue_XML: string;\\n        static rf_OtherValue: string;\\n        static rf_ClearAll: string;\\n        static cc_err_WebPartErrorMessageDisplayHeader: string;\\n        static cc_err_DataErrorMessageDisplayHeader: string;\\n        static cc_err_RenderingErrorMessageDisplayHeader: string;\\n        static cc_err_TemplateNotFoundMessage: string;\\n        static cc_err_HiddenWithNoResultsWarningMessage: string;\\n        static cc_err_ShowMessageDetails: string;\\n        static cc_err_HideMessageDetails: string;\\n        static cc_err_CorrelationIdMessage: string;\\n        static cc_err_CustomLocStringWarningDisplayHeaderFormat: string;\\n        static cc_err_NoCustomLoadedLocStringWarningDisplayHeaderFormat: string;\\n        static cc_err_MalformedHeader: string;\\n        static cc_err_QueryThrottledDetailsHeader: string;\\n        static cc_ValueRenderer_FileSizeKilobyte: string;\\n        static cc_ValueRenderer_FileSizeMegabyte: string;\\n        static cc_ValueRenderer_FileSizeGigabyte: string;\\n        static cc_ValueRenderer_BooleanYes: string;\\n        static cc_ValueRenderer_BooleanNo: string;\\n        static qb_SortTab_ThenBy: string;\\n        static qb_SortTab_ChangeRankingWhen: string;\\n        static qb_SortTab_OrWhen: string;\\n        static qb_TestQueryTab_ShowAdvanced: string;\\n        static qb_TestQueryTab_HideAdvanced: string;\\n        static recs_ControlTitle: string;\\n        static recs_ShowDetails: string;\\n        static recs_SaveLink: string;\\n        static recs_Open: string;\\n        static recs_Recommended: string;\\n        static recs_Fillin: string;\\n        static recs_LastEditedBy: string;\\n        static recs_Location: string;\\n        static recs_AltIcon: string;\\n        static pkr_CatalogPickerMoreLink: string;\\n        static pkr_CatalogPickerMoreLinkToolTip: string;\\n        static pkr_CatalogPickerSelectLinkToolTip: string;\\n        static item_CopyLink: string;\\n        static item_Tooltip_CopyLink: string;\\n        static item_Alt_Preview: string;\\n        static hp_Tooltip_Close: string;\\n        static hp_Size: string;\\n        static hp_Views_Singular: string;\\n        static hp_Views_Plural: string;\\n        static hp_ViewsLifeTime: string;\\n        static hp_Popularity: string;\\n        static hp_PopularityLifeTimePlural: string;\\n        static hp_PopularityLifeTimePluralAndRecentPlural: string;\\n        static hp_PopularityLifeTimeSingular: string;\\n        static hp_PopularityLifeTimeSingularAndRecentSingular: string;\\n        static hp_PopularityLifeTimePluralAndRecentSingular: string;\\n        static hp_Tooltip_ViewsLifeTime: string;\\n        static hp_Tooltip_ViewsRecent: string;\\n        static hp_ChangedByAuthorDate: string;\\n        static hp_Tooltip_Views: string;\\n        static hp_LastModified: string;\\n        static hp_Tooltip_LastModified: string;\\n        static hp_RecentlyEdited: string;\\n        static hp_Tooltip_Contributors: string;\\n        static hp_Authors2: string;\\n        static hp_Authors3: string;\\n        static hp_Authors4: string;\\n        static hp_Authors5Singular: string;\\n        static hp_Authors5Plural: string;\\n        static hp_RecentlyEdited_eDiscovery: string;\\n        static hp_Tooltip_RecentlyEdited_More: string;\\n        static hp_RecentlyEdited_More: string;\\n        static hp_ViewDuplicates: string;\\n        static hp_Tooltip_ViewDuplicates: string;\\n        static hp_ViewLibrary: string;\\n        static hp_Tooltip_ViewLibrary: string;\\n        static hp_Send_Title: string;\\n        static hp_Send_Open: string;\\n        static hp_Send_OpenInClient: string;\\n        static hp_Send_OpenInWeb: string;\\n        static hp_Send_ViewRelated: string;\\n        static hp_Send: string;\\n        static hp_Tooltip_Send: string;\\n        static hp_OpenInClient: string;\\n        static hp_Edit: string;\\n        static hp_Follow: string;\\n        static hp_NoData: string;\\n        static hp_Tooltip_OpenInClient: string;\\n        static hp_Alt_ImagePreview: string;\\n        static hp_PictureDimensions: string;\\n        static hp_PictureHeightWidth: string;\\n        static hp_DateTaken: string;\\n        static hp_SectionHeadings: string;\\n        static hp_Alt_SiteLogo: string;\\n        static hp_SiteDescription: string;\\n        static hp_Open: string;\\n        static hp_Tooltip_Open: string;\\n        static hp_Tooltip_Follow: string;\\n        static hp_Tooltip_StopFollowing: string;\\n        static tprprt_Recent: string;\\n        static tprprt_Lifetime: string;\\n        static tprprt_excel_report_entrypoint: string;\\n        static qb_token_Equals: string;\\n        static qb_token_NotEquals: string;\\n        static qb_token_GreaterThan: string;\\n        static qb_token_LessThan: string;\\n        static qb_token_Contains: string;\\n        static qb_token_NotContains: string;\\n        static qb_token_ContainsStartsWith: string;\\n        static qb_token_StartsWith: string;\\n        static qb_token_NotStartsWith: string;\\n        static qb_token_SiteColletion: string;\\n        static qb_token_Site: string;\\n        static qb_token_Page: string;\\n        static qb_token_Topic: string;\\n        static qb_token_TopicIdWithChildren: string;\\n        static qb_token_UserName: string;\\n        static qb_token_PreferredContentLanguage: string;\\n        static qb_token_Date: string;\\n        static qb_token_SearchBoxQuery: string;\\n        static qb_token_SearchTerms: string;\\n        static qb_token_QueryString: string;\\n        static qb_token_URLToken: string;\\n        static qb_token_PageField: string;\\n        static qb_token_SiteLocale: string;\\n        static qb_token_DisplayLanguage: string;\\n        static qb_token_OnlySites: string;\\n        static qb_token_OnlyLists: string;\\n        static qb_token_OnlyListItems: string;\\n        static qb_path_SiteCollection: string;\\n        static qb_path_Site: string;\\n        static qb_path_Page: string;\\n        static qb_path_List: string;\\n        static qb_path_Catalog: string;\\n        static qb_path_QueryString: string;\\n        static qb_path_URL_token: string;\\n        static qb_path_URL: string;\\n        static qb_path_None: string;\\n        static qb_ContentType_Article: string;\\n        static qb_ContentType_Audio: string;\\n        static qb_ContentType_DocSet: string;\\n        static qb_ContentType_Page: string;\\n        static qb_ContentType_Picture: string;\\n        static qb_ContentType_Report: string;\\n        static qb_ContentType_Task: string;\\n        static qb_ContentType_Video: string;\\n        static qb_ContentType_WikiPage: string;\\n        static qb_PathControl_ChooseQueryString: string;\\n        static qb_PathControl_ChooseURL: string;\\n        static qb_PathControl_ChooseTag: string;\\n        static qb_PathControl_ChooseTag_None: string;\\n        static qb_PathControl_ChooseTag_ThisTag: string;\\n        static qb_PathControl_ChooseTag_Topic: string;\\n        static qb_PathControl_ChooseTag_SubTopic: string;\\n        static qb_UserQuery_TypeQuery: string;\\n        static qb_UserQuery_Properties: string;\\n        static qb_UserQuery_AddToken: string;\\n        static qb_UserQuery_ChooseContentType: string;\\n        static qb_UserQuery_AddAdditionalFilter: string;\\n        static qb_UserQuery_ChooseSort: string;\\n        static qb_UserQuery_PickCatalog2: string;\\n        static qb_UserQuery_ConfigureCatalog: string;\\n        static qb_UserQuery_ManualValue: string;\\n        static qb_UserQuery_SelectProperty: string;\\n        static qb_UserQuery_SelectValue: string;\\n        static qb_UserQuery_ShowAllProperties: string;\\n        static qb_QueryType_UserQuery: string;\\n        static qb_QueryType_Latest: string;\\n        static qb_QueryType_ContentType: string;\\n        static qb_QueryType_RecommendedItems: string;\\n        static qb_QueryType_Popular: string;\\n        static qb_QueryType_Video: string;\\n        static qb_QueryType_Catalog: string;\\n        static qb_Error_SourceIdInvalid: string;\\n        static qb_Tab_FilterBy: string;\\n        static qb_Tab_QueryHelper: string;\\n        static qb_Tab_SortBy: string;\\n        static qb_Tab_TestQuery: string;\\n        static qb_Tab_Settings: string;\\n        static qb_NotApplicable: string;\\n        static qb_ComplexObject: string;\\n        static qb_PreviewResult_NoTemplateVariables: string;\\n        static qb_PreviewResult_CouldNotResolveTemplateVariables: string;\\n        static qb_PreviewResult_ErrorExpandTokens: string;\\n        static qb_PreviewResult_EmptyQuery: string;\\n        static searchResult_NoResult: string;\\n        static qb_CatalogPicker_Title: string;\\n        static qb_UseDefinedSort: string;\\n        static hp_Duration: string;\\n        static hp_PeopleInVideo: string;\\n        static hp_PostedBy: string;\\n        static hp_VideoDescription: string;\\n        static hp_GoToVideoPage: string;\\n        static item_Community_Member: string;\\n        static item_Community_Members: string;\\n        static item_Community_MemberLabel: string;\\n        static item_Community_MembersLabel: string;\\n        static item_Reply: string;\\n        static item_Replies: string;\\n        static item_ReplyLabel: string;\\n        static item_RepliesLabel: string;\\n        static item_NoReplies: string;\\n        static item_Like: string;\\n        static item_Likes: string;\\n        static item_NoLikes: string;\\n        static item_RepliesAndLikes: string;\\n        static item_MoreThan: string;\\n        static item_DefaultTitle: string;\\n        static item_BestReply: string;\\n        static item_postDate: string;\\n        static item_postAuthor: string;\\n        static item_postAuthorDate: string;\\n        static item_replyDate: string;\\n        static item_replyAuthor: string;\\n        static item_replyAuthorDate: string;\\n        static item_Community_Discussion: string;\\n        static item_Community_Discussions: string;\\n        static item_Community_DiscussionLabel: string;\\n        static item_Community_DiscussionsLabel: string;\\n        static hp_Discussion: string;\\n        static hp_DiscussionCategory: string;\\n        static hp_Reply: string;\\n        static hp_ReplyCategory: string;\\n        static hp_PopularDiscussions: string;\\n        static hp_OriginalPost: string;\\n        static hp_RecentReplies: string;\\n        static hp_ViewDiscussion: string;\\n        static hp_ViewConversation: string;\\n        static hp_Community: string;\\n        static hp_VisitCommunity: string;\\n        static hp_MicroBlog: string;\\n        static item_MicroBlog_Reply: string;\\n        static item_MicroBlog_Replies: string;\\n        static item_MicroBlog_Like: string;\\n        static item_MicroBlog_Likes: string;\\n        static item_MicroBlog_NoReplies: string;\\n        static item_MicroBlog_SeeFullConversation: string;\\n        static item_MicroBlog_RootPostTitle: string;\\n        static item_People_Responsibilities: string;\\n        static item_People_Skills: string;\\n        static item_People_PastProjects: string;\\n        static item_People_Interests: string;\\n        static item_People_Schools: string;\\n        static item_People_Memberships: string;\\n        static item_People_EditProfileLink: string;\\n        static item_People_SelfSearchFrequency: string;\\n        static item_People_SelfSearchFrequency_ViewsMonths_Singular: string;\\n        static item_People_SelfSearchFrequency_ViewsMonths_Plural: string;\\n        static item_People_SelfSearchFrequency_ViewsWeeks_Singular: string;\\n        static item_People_SelfSearchFrequency_ViewsWeeks_Plural: string;\\n        static item_People_SelfSearchKeywords: string;\\n        static item_People_LastModified: string;\\n        static item_People_NoPresenceAvailable: string;\\n        static hp_PeopleItem_Skills: string;\\n        static hp_PeopleItem_PastProjects: string;\\n        static hp_PeopleItem_Interests: string;\\n        static hp_PeopleItem_Schools: string;\\n        static hp_PeopleItem_Summary: string;\\n        static hp_PeopleItem_Memberships: string;\\n        static hp_PeopleItem_Authorship: string;\\n        static hp_PeopleItem_RelatedThrough: string;\\n        static hp_PeopleItem_MoreItems: string;\\n        static hp_PeopleItem_Related: string;\\n        static hp_PeopleItem_NoInformationAvailable: string;\\n        static hp_PeopleItem_ViewProfile: string;\\n        static hp_WebPageItem_Results: string;\\n        static hp_WebPageItem_MoreResults_Label: string;\\n        static rs_Preferences: string;\\n        static rs_Advanced: string;\\n        static rs_NoResult: string;\\n        static rs_SingleResultCount: string;\\n        static rs_ResultCount: string;\\n        static rs_ApproximateResultCount: string;\\n        static rs_EdiscoveryTopResultCount: string;\\n        static rs_UpscopeTitle: string;\\n        static rs_Upscope: string;\\n        static rs_DidYouMean: string;\\n        static rs_Edit_ResultSourcesTitle: string;\\n        static rs_Edit_ResultTypesTitle: string;\\n        static rs_Edit_QueryRulesTitle: string;\\n        static rs_Edit_ResultSourcesDescription: string;\\n        static rs_Edit_ResultSources: string;\\n        static rs_Edit_ResultTypesDescription: string;\\n        static rs_Edit_ResultType: string;\\n        static rs_Edit_DisplayTemplate: string;\\n        static rs_Edit_QueryRulesDescription: string;\\n        static rs_Edit_QueryRules: string;\\n        static rs_Edit_PromotedTitle: string;\\n        static rs_Edit_RankedTitle: string;\\n        static rs_Edit_PromotedDescription: string;\\n        static rs_Edit_RankedDescription: string;\\n        static rs_Edit_ConfigureSearchResults: string;\\n        static rs_Edit_ConfigureSearchResults_Link: string;\\n        static rs_NoResultsTitle: string;\\n        static rs_NoResultsMessageWhenSearchSkipped: string;\\n        static rs_NoResultsSuggestions: string;\\n        static rs_NoResultsSpelling: string;\\n        static rs_NoResultsDifferentTerms: string;\\n        static rs_NoResultsGeneralTerms: string;\\n        static rs_NoResultsFewerTerms: string;\\n        static rs_NoResultsRefiners: string;\\n        static rs_NoResultsTips: string;\\n        static rs_NoResultsTips_Link: string;\\n        static us_NoTerm_Error: string;\\n        static u_ScriptLoadFail: string;\\n        static u_ScriptLoadFailForViewer: string;\\n        static item_NoImageMessage: string;\\n        static control_NoResultsDisplayMode: string;\\n        static control_NoResultsEditMode: string;\\n        static file_CSS: string;\\n        static file_Help: string;\\n        static file_Installer: string;\\n        static file_JavaScript: string;\\n        static file_Log: string;\\n        static file_Mail: string;\\n        static file_Access: string;\\n        static file_Excel: string;\\n        static file_InfoPath: string;\\n        static file_OneNote: string;\\n        static file_PowerPoint: string;\\n        static file_Project: string;\\n        static file_Publisher: string;\\n        static file_SPDesigner: string;\\n        static file_Visio: string;\\n        static file_Word: string;\\n        static file_XPS: string;\\n        static file_Audio: string;\\n        static file_RTF: string;\\n        static file_Text: string;\\n        static file_WebPage: string;\\n        static file_XML: string;\\n        static file_XSL: string;\\n        static file_Zip: string;\\n        static ct_Folder: string;\\n        static ct_Image: string;\\n        static file_Document: string;\\n        static cc_sts_list_announcements: string;\\n        static cc_sts_list_events: string;\\n        static cc_sts_list_contacts: string;\\n        static cc_sts_list_discussionboard: string;\\n        static cc_sts_list_documentlibrary: string;\\n        static cc_sts_listitem_documentlibrary: string;\\n        static cc_sts_list_links: string;\\n        static cc_sts_list: string;\\n        static cc_sts_listitem: string;\\n        static cc_sts_list_picturelibrary: string;\\n        static cc_sts_listitem_picturelibrary: string;\\n        static cc_sts_web: string;\\n        static cc_sts_site: string;\\n        static cc_sts_list_survey: string;\\n        static cc_sts_list_tasks: string;\\n        static cc_sts_list_xmlform: string;\\n        static rs_SortDescription: string;\\n        static rs_SocialDistanceSort: string;\\n        static rs_LanguageDescription: string;\\n        static rs_LanguagePreferences: string;\\n        static rs_PreferredSearchLanguage: string;\\n        static rs_MoreLanguages: string;\\n        static rs_SearchScope: string;\\n        static rs_SearchScopeTooltip: string;\\n        static rs_SelectPreferredSearchLanguage: string;\\n        static rs_SelectPreferredSearchLanguage_Language: string;\\n        static edu_BookAuthor: string;\\n        static edu_BookCategory: string;\\n        static edu_BookRights: string;\\n        static edu_BookReleaseDate: string;\\n        static edu_BookHomePageLink: string;\\n        static edu_Class: string;\\n        static edu_AssignmentCategory: string;\\n        static edu_AssignmentFormat: string;\\n        static edu_AssignmentFormatNone: string;\\n        static edu_AssignmentFormatOnlineFile: string;\\n        static edu_AssignmentFormatOnlineQuiz: string;\\n        static edu_AssignmentFormatInClass: string;\\n        static edu_AssignmentFormatUnknown: string;\\n        static edu_AssignmentMaxPoints: string;\\n        static edu_DueDate: string;\\n        static edu_ReadPermission: string;\\n        static edu_PrintPermission: string;\\n        static edu_WritePermission: string;\\n        static edu_EnableScriptPermission: string;\\n        static edu_AssignmentLabel: string;\\n        static edu_LessonLabel: string;\\n        static edu_BookLabel: string;\\n        static rf_RefinementTitle_DMSDocAuthor: string;\\n        static rf_RefinementTitle_DMSCategory: string;\\n        static rf_RefinementTitle_EDiscSpecifyProperty: string;\\n        static refconf_NoSampleValues: string;\\n        static refconf_SortBy_Name: string;\\n        static refconf_SortBy_Number: string;\\n        static refconf_SortBy_Count: string;\\n        static refconf_SortDirection_Ascending: string;\\n        static refconf_SortDirection_Descending: string;\\n        static refconf_Error_FailedToRestoreConfiguration: string;\\n        static refconf_Section_SuggestedRefiners: string;\\n        static refconf_Section_OtherRefiners: string;\\n        static refconf_Section_Separator: string;\\n        static refconf_SampleValuesDialog_Title: string;\\n        static refconf_ResultsWithValues: string;\\n        static refconf_TotalResults: string;\\n        static refconf_FNT_ConfigurationLoadFailure: string;\\n        static refconf_FNT_ConfigurationLoadWarning: string;\\n        static refconf_FNT_ConfigurationLoadWarningNullResponse: string;\\n        static refconf_FNT_InheritModeTermInfoSingularFormatString: string;\\n        static refconf_FNT_DCR_InheritModeAnotherTermset: string;\\n        static refconf_FNT_DCR_CustomRefiners: string;\\n        static refconf_FNT_DCR_DescendantInfo_ChildTermsTotal: string;\\n        static refconf_FNT_DCR_DescendantInfo_ChildTermsNotInheriting: string;\\n        static refconf_FNT_DCR_DescendantInfo_ChildTermsStoppingInheriting: string;\\n        static refconf_FNT_DCR_DescendantInfo_ChildTermsStoppingInheritingLinkAnchor: string;\\n        static refconf_FNT_DCR_StopInheritingPopupTitle: string;\\n        static refconf_FNT_DCR_InheritPopupTitle: string;\\n        static refconf_FNT_DCR_RefinementConfigurationDialogTitle: string;\\n        static refconf_FNT_DCR_LoadingConfiguration: string;\\n        static refconf_FNT_DCR_DescendantStoppingInheritancePopupTitle: string;\\n        static refconf_FNT_DCR_UseManualIntervals: string;\\n        static refconf_FNT_DCR_RefinementPreviewPopupTitle: string;\\n        static refconf_FNT_DCR_PropertiesForFriendly: string;\\n        static refconf_FNT_DCR_PropertiesFor: string;\\n        static refconf_FNT_DCR_TotalResultsTooltip: string;\\n        static refconf_FNT_DCR_GeneratingPreview: string;\\n        static refconf_DCR_Yes: string;\\n        static refconf_DCR_No: string;\\n        static refconf_DCR_FacetedNavigationProgressTitle: string;\\n        static refconf_DCR_RefinementConfigurationDialogProgressTitle: string;\\n        static refconf_DCR_RefinementConfigurationDialogManagedPropertyTooltip: string;\\n        static refconf_DCR_RefinementConfigurationDialogManagedPropertyTooltipNoAliases: string;\\n        static refconf_DCR_RefinementConfigurationDialogManagedPropertyTooltipSeparator: string;\\n        static refconf_DCR_RefinementConfigurationDialog_TooManyRefiners_Warning: string;\\n        static refconf_DCR_RefinementConfigurationDialog_TooManyRefiners_Error: string;\\n        static refconf_DCR_RefinementConfigurationDialog_NoSuggestedRefiners_Warning: string;\\n        static refconf_DCR_RefinementConfigurationDialog_InvalidSelectedRefiner_Warning: string;\\n        static edisc_MultiValueFormat: string;\\n        static edisc_NoSubject: string;\\n        static edisc_ControlPagingFormat: string;\\n        static hp_Summary: string;\\n        static rf_DefaultMinutesLabels_min: string;\\n        static rf_DefaultMinutesLabels_max: string;\\n        static rf_DefaultMinutesLabels_range: string;\\n        static rf_DefaultMinutesLabels_value: string;\\n        static hp_NowDateTime_Today: string;\\n        static hp_NowDateTime_Yesterday: string;\\n        static hp_NowDateTime_MonthAgo: string;\\n        static hp_NowDateTime_YearAgo: string;\\n        static hp_NowDateTime_DaysAgo: string;\\n        static hp_NowDateTime_MonthsAgo: string;\\n        static hp_NowDateTime_YearsAgo: string;\\n        static rs_UpScopeActionPhrase: string;\\n        static control_Content_NoResultsDisplayMode: string;\\n        static control_RollupPage_NoResultsDisplayMode: string;\\n        static control_Content_NoResultsEditMode: string;\\n        static item_Diagnostic_PictureSlot: string;\\n        static item_Diagnostic_PathSlot: string;\\n        static item_Diagnostic_Preview: string;\\n        static item_Diagnostic_Value: string;\\n        static item_Diagnostic_MappedManagedProperty: string;\\n        static item_Diagnostic_PropertyMappings: string;\\n        static item_Diagnostic_SlotNameFormat: string;\\n        static item_Diagnostic_ItemTitleFormat: string;\\n        static hp_Preview_LoadingImgAlt: string;\\n        static rf_EDiscExTypeRefinerValue_Email: string;\\n        static rf_EDiscExTypeRefinerValue_Contacts: string;\\n        static rf_EDiscExTypeRefinerValue_Meetings: string;\\n        static rf_EDiscExTypeRefinerValue_Tasks: string;\\n        static rf_EDiscExTypeRefinerValue_Notes: string;\\n        static rf_EDiscExTypeRefinerValue_Documents: string;\\n        static rf_EDiscExTypeRefinerValue_Journal: string;\\n        static rf_EDiscExTypeRefinerValue_IM: string;\\n        static control_EDisc_Subject: string;\\n        static control_EDisc_Recipients: string;\\n        static control_EDisc_Sender: string;\\n        static control_EDisc_DateSent: string;\\n        static control_EDisc_Title: string;\\n        static control_EDisc_Author: string;\\n        static control_EDisc_DateModified: string;\\n        static hp_EDisc_Cc: string;\\n        static hp_EDisc_Bcc: string;\\n        static item_Content_GenericNoImageSymbol: string;\\n        static hp_EDisc_From: string;\\n        static hp_EDisc_To: string;\\n        static hp_EDisc_AttachmentsTooltip: string;\\n        static control_EDisc_DateSentTooltip: string;\\n        static rs_AlertMe: string;\\n        static item_Generic_OpenCalloutTooltip: string;\\n        static item_CommunityPortal_DetailsIntervals: string;\\n        static item_CommunityPortal_DetailsMembers: string;\\n        static item_CommunityPortal_DetailsDiscussions: string;\\n        static item_CommunityPortal_DetailsReplies: string;\\n        static item_CommunityPortal_Date: string;\\n        static item_CommunityPortal_MoreDetails: string;\\n        static ar_htv_Follow: string;\\n        static ar_htv_StartFollowing: string;\\n        static ar_htv_StopFollowing: string;\\n        static ar_rec_NoResults: string;\\n        static ar_Explanation: string;\\n        static ar_htv_IsFollowed: string;\\n        static ar_htv_IsNotFollowed: string;\\n        static hp_Post: string;\\n        static hp_Tooltip_Post: string;\\n        static rs_PartialResultWarning_Line1: string;\\n        static rs_PartialResultWarning_Line2: string;\\n        static rs_HasParseExceptionWarning_Line1: string;\\n        static rs_HasParseExceptionWarning_Line2: string;\\n    }\\n}\\n\\n/** Returns true if the value parameter is null or empty string */\\ndeclare function $isEmptyString(value: string): boolean;\\n/** Returns true if the value parameter is null or undefined */\\ndeclare function $isNull(value: any): boolean;\\n/** Returns true if the specified item is found in the specified array (uses '===' for comparing) */\\ndeclare function $isInArray(array: any[], item: any): boolean;\\n/** Returns true if the specified array is null or empty */\\ndeclare function $isEmptyArray(array: any[]): boolean;\\n/** (alias for SP.Utilities.HttpUtility.htmlEncode) */\\ndeclare function $htmlEncode(s: string): string;\\n/** (alias for SP.Utilities.HttpUtility.ecmaScriptStringLiteralEncode) */\\ndeclare function $scriptEncode(s: string): string;\\n/** (alias for SP.Utilities.HttpUtility.urlKeyValueEncode) */\\ndeclare function $urlKeyValueEncode(s: string): string;\\n/** (alias for SP.Utilities.HttpUtility.urlPathEncode) */\\ndeclare function $urlPathEncode(s: string): string;\\n/** Ensures that url has correct protocol or is a relative URL, and html-encodes it.\\n * If URL is incorrect, returns empty string. */\\ndeclare function $urlHtmlEncode(s: string): string;\\n\\ndeclare function $imgSrcUrl(p: any): string;\\ndeclare function $contentLineText(p: any): any;\\n\\n/** Returns the ClientControl associated with specified DOM element (alias for Srch.U.getClientComponent) */\\ndeclare function $getClientControl(e: Element): Srch.ClientControl;\\n\\n/** (alias for Srch.U.getResultObject) */\\ndeclare function $getResultItem(id: string): any;\\n/** (alias for Srch.U.setResultObject) */\\ndeclare function $setResultItem(id: string, resultObject: any): void;\\n/** (alias for Srch.U.getResultObject) */\\ndeclare function $getResultObject(id: string): any;\\n/** (alias for Srch.U.setResultObject) */\\ndeclare function $setResultObject(id: string, resultObject: any): void;\\n/** (alias for Srch.U.findResultObjectFromDOM) */\\ndeclare function $findResultObjectFromDOM(e: Element, type: string): void;\\n\\ndeclare function $getItemValue(ctx: any, nameToLookup: string): any;\\ndeclare function $getCachedItemValue(ctx: any, nameToLookup: string): any;\\n\\ndeclare function $includeScript(templateLink: string, relativeLink: string): void;\\ndeclare function $includeCSS(templateLink: string, scriptLink: string): void;\\ndeclare function $includeLanguageScript(templateLink: string, scriptLink: string): any;\\n/** Registers in system resources defined by the dictionary object (alias for Srch.U.registerResourceDictionary) */\\ndeclare function $registerResourceDictionary(locale: string, dict: { [key: string]: string }): void;\\n/** Retrieves localized string with the specified id */\\ndeclare function $resource(id: string): string;\\n/** (calls Srch.U.setItemRenderWrapper) */\\ndeclare function $setItemWrapperCallback(renderCtx: any, itemWrapperFunction: any): void;\\n/** (calls Srch.U.addRenderContextCallback) */\\ndeclare function $addRenderContextCallback(renderCtx: any, itemWrapperFunction: any): void;\\n\\n// ------- CUI namespace -------\\ndeclare namespace CUI {\\n    enum CommandType {\\n        general,\\n        tabSelection,\\n        optionSelection,\\n        menuCreation,\\n        preview,\\n        previewRevert,\\n        optionPreview,\\n        optionPreviewRevert,\\n        ignoredByMenu,\\n        menuClose,\\n        rootEvent,\\n    }\\n\\n    enum GalleryElementDimensions {\\n        size16by16,\\n        size32by32,\\n        size48by48,\\n        size64by48,\\n        size72by96,\\n        size96by72,\\n        size96by96,\\n        size128by128,\\n        size190by30,\\n        size190by40,\\n        size190by50,\\n        size190by60,\\n    }\\n\\n    enum DataQueryType {\\n        none,\\n        all,\\n        ribbonVisibleTabDeep,\\n        ribbonShallow,\\n        ribbonTab,\\n        root,\\n    }\\n\\n    enum ContextualColor {\\n        none,\\n        darkBlue,\\n        lightBlue,\\n        teal,\\n        orange,\\n        green,\\n        magenta,\\n        yellow,\\n        purple,\\n    }\\n\\n    enum Direction {\\n        LTR,\\n        RTL,\\n    }\\n\\n    enum ImgContainerType {\\n        div,\\n        span,\\n        anchor,\\n    }\\n\\n    enum ImgContainerSize {\\n        none,\\n        size5by3,\\n        size13by13,\\n        size16by16,\\n        size32by32,\\n        size48by48,\\n        size64by48,\\n        size72by96,\\n        size96by72,\\n        size96by96,\\n        size56by24,\\n        size2by16,\\n    }\\n\\n    enum PMarker {\\n        beginSession,\\n        endSession,\\n        perfCUIRibbonInitStart,\\n        perfCUIRibbonInitPercvdEnd,\\n        perfCUIRibbonTabSwitchWarmStart,\\n        perfCUIRibbonTabSwitchWarmPercvdEnd,\\n        perfCUIRibbonTabSwitchWarmEnd,\\n        perfCUIRibbonCompleteConstruction,\\n        perfCUIRibbonQueryDataStart,\\n        perfCUIRibbonQueryDataEnd,\\n        perfWSSWikiUpdatePanelStart,\\n        perfWSSWikiUpdatePanelEnd,\\n        perfWSSWebPartComponentMouseClickStart,\\n        perfWSSWebPartComponentMouseClickEnd,\\n        perfCUIAddAndPositionBackFrameStart,\\n        perfCUIAddAndPositionBackFrameEnd,\\n        perfCUIFlyoutAnchorOnClickStart,\\n        perfCUIFlyoutAnchorOnClickEnd,\\n        perfCUIDropDownOnArrowButtonClickStart,\\n        perfCUIDropDownOnArrowButtonClickEnd,\\n        perfWSSBreadcrumbStart,\\n        perfWSSBreadcrumbEnd,\\n        perfWSSSelectOrDeselectAllStart,\\n        perfWSSSelectOrDeselectAllEnd,\\n        perfWSSSelectItemStart,\\n        perfWSSSelectItemEnd,\\n        perfWSSFilterSortStart,\\n        perfWSSFilterSortEnd,\\n        perfWSSMMUOpenStart,\\n        perfWSSMMUOpenEnd,\\n        perfWSSECBClickStart,\\n        perfWSSECBClickEnd,\\n        perfSPSSaveStatusNoteBegin,\\n        perfSPSSaveStatusNoteEnd,\\n        perfWSSCalendarRenderStart,\\n        perfWSSCalendarRenderEnd,\\n        perfPLTxInstrumentStart,\\n        perfPLTxInstrumentEnd,\\n        perfCUIRibbonButtonOnClickStart,\\n        perfCUIRibbonButtonOnClickEnd,\\n        perfCUIRibbonInsertTableOnClickStart,\\n        perfCUIRibbonInsertTableOnClickEnd,\\n        perfCUIRibbonToggleButtonOnClickStart,\\n        perfCUIRibbonToggleButtonOnClickEnd,\\n        perfWSSDialogShow,\\n        perfWSSDialogClosed,\\n        perfWSSRTEDialogOnLoadEnd,\\n        perfWSSRTEDialogOnOkButtonClickStart,\\n        perfWSSRTEAutoCompleteSetResultsStart,\\n        perfWSSRTEAutoCompleteSetResultsEnd,\\n        perfCUIRibbonEditWikiPageStart,\\n        perfCUIRibbonEditWikiPageEnd,\\n    }\\n\\n    interface IMenuItem { }\\n    interface ISelectableControl { }\\n    interface IRootBuildClient { }\\n    interface IModalController { }\\n\\n    class BuildOptions {\\n        lazyMenuInit: boolean;\\n        trimmedIds: string[];\\n        attachToDOM: boolean;\\n        validateServerRendering: boolean;\\n        fixedPositioningEnabled: boolean;\\n        dataExtensions: any[];\\n        clientID: string;\\n        constructor();\\n    }\\n\\n    class BuildContext { }\\n\\n    class DataNodeWrapper {\\n        static ATTRIBUTES: string;\\n        static CHILDREN: string;\\n        static NAME: string;\\n        static ALIGNMENT: string;\\n        static ALT: string;\\n        static CLASSNAME: string;\\n        static COLOR: string;\\n        static COMMAND: string;\\n        static CONTEXTUALGROUPID: string;\\n        static CSSCLASS: string;\\n        static DARKBLUE: string;\\n        static DECIMALDIGITS: string;\\n        static DESCRIPTION: string;\\n        static DISPLAYCOLOR: string;\\n        static DISPLAYMODE: string;\\n        static DIVIDER: string;\\n        static ELEMENTDIMENSIONS: string;\\n        static GREEN: string;\\n        static GROUPID: string;\\n        static id: string;\\n        static INDEX: string;\\n        static INTERVAL: string;\\n        static LABELTEXT: string;\\n        static LAYOUTTITLE: string;\\n        static LIGHTBLUE: string;\\n        static LOWSCALEWARNING: string;\\n        static MAGENTA: string;\\n        static MAXHEIGHT: string;\\n        static MAXIMUMVALUE: string;\\n        static MAXWIDTH: string;\\n        static MENUITEMID: string;\\n        static MESSAGE: string;\\n        static MINIMUMVALUE: string;\\n        static namE_CAPS: string;\\n        static ONEROW: string;\\n        static ORANGE: string;\\n        static POPUP: string;\\n        static POPUPSIZE: string;\\n        static PURPLE: string;\\n        static SCROLLABLE: string;\\n        static SEQUENCE: string;\\n        static SIZE: string;\\n        static STYLE: string;\\n        static TEAL: string;\\n        static TEMPLATEALIAS: string;\\n        static THREEROW: string;\\n        static TITLE: string;\\n        static TWOROW: string;\\n        static TYPE: string;\\n        static VALUE: string;\\n        static YELLOW: string;\\n        static RIBBON: string;\\n        static QAT: string;\\n        static JEWEL: string;\\n        static TABS: string;\\n        static CONTEXTUALTABS: string;\\n        static CONTEXTUALGROUP: string;\\n        static TAB: string;\\n        static SCALING: string;\\n        static MAXSIZE: string;\\n        static SCALE: string;\\n        static GROUP: string;\\n        static GROUPS: string;\\n        static LAYOUT: string;\\n        static SECTION: string;\\n        static OVERFLOWSECTION: string;\\n        static ROW: string;\\n        static CONTROL: string;\\n        static OVERFLOWAREA: string;\\n        static STRIP: string;\\n        static CONTROLS: string;\\n        static MENU: string;\\n        static MENUSECTION: string;\\n        static TEMPLATE: string;\\n        static TEMPLATES: string;\\n        static RIBBONTEMPLATES: string;\\n        static GROUPTEMPLATE: string;\\n        static GALLERY: string;\\n        static colors: string;\\n        static color: string;\\n        static toggleButton: string;\\n        static comboBox: string;\\n        static dropDown: string;\\n        static button: string;\\n        static splitButton: string;\\n        static flyoutAnchor: string;\\n        static galleryButton: string;\\n        static insertTable: string;\\n        static label: string;\\n        static mruSplitButton: string;\\n        static spinner: string;\\n        static textBox: string;\\n        static checkBox: string;\\n        static colorPicker: string;\\n        static separator: string;\\n        static jewelMenuLauncher: string;\\n        static BUTTONDOCK: string;\\n        static BUTTONDOCKS: string;\\n        static CENTERALIGN: string;\\n        static LEFTALIGN: string;\\n        static RIGHTALIGN: string;\\n        static TOOLBAR: string;\\n        static LARGE: string;\\n        static MEDIUM: string;\\n        static SMALL: string;\\n        static DIVIDERAFTER: string;\\n        static DIVIDERBEFORE: string;\\n    }\\n\\n    class Builder implements Sys.IDisposable {\\n        dispose(): void;\\n    }\\n\\n    class CommandEventArgs extends Sys.EventArgs {\\n        constructor(id, type: CommandType, source, pars);\\n    }\\n\\n    class Component implements CUI.IMenuItem, Sys.IDisposable {\\n        /* tslint:disable:variable-name */\\n        _lastWidthUpdate: number;\\n        _lastHeightUpdate: number;\\n        _lastTopUpdate: number;\\n        _lastLeftUpdate: number;\\n        /* tslint:enable:variable-name */\\n        constructor(root: CUI.Component, id: string, title: string, description: string);\\n        createChildArray(): void;\\n        get_id(): string;\\n        set_id(id: string): void;\\n        get_root(): CUI.Component;\\n        get_parent(): CUI.Component;\\n        set_parent(value: CUI.Component): CUI.Component;\\n        getChild(id: string): CUI.Component;\\n        getChildByTitle(title: string): CUI.Component;\\n        addChild(child: CUI.Component): void;\\n        addChildAtIndex(child: CUI.Component, index: number);\\n        removeChild(id: string): void;\\n        removeChildren(): void;\\n        ensureCorrectChildType(): void;\\n        initRootMember(root: CUI.Component);\\n        get_visible(): boolean;\\n        set_visible(value: boolean): boolean;\\n        get_enabled(): boolean;\\n        set_enabled(value: boolean): boolean;\\n        onEnabledChanged(enabled: boolean);\\n        get_title(): string;\\n        set_title(title: string): string;\\n        get_description(): string;\\n        set_description(description: string): string;\\n        valueIsDirty(lastUpdate: number): boolean;\\n        get_domElementTagName(): string;\\n        get_cssClass(): string;\\n        get_visibleInDOM(): boolean;\\n        ensureDOMElementAndEmpty(): void;\\n        appendChildrenToElement(elm: Element): void;\\n        raiseCommandEvent(commandId: string, type: CommandType, properties: any);\\n        getTextValue(): string;\\n        receiveFocus(): void;\\n        onMenuClosed(): void;\\n        doDelayedInit(): void;\\n        get_needsDelayIniting(): boolean;\\n        dispose(): null;\\n    }\\n\\n    class Menu extends CUI.Component { }\\n\\n    class ContextMenu extends CUI.Menu {\\n        constructor(root, id: string, title: string, description: string, maxWidth: string);\\n    }\\n\\n    class ContextMenuDock extends CUI.Component { }\\n\\n    class Control implements Sys.IDisposable, CUI.IMenuItem {\\n        constructor(root: CUI.Root, id: string, properties: CUI.ControlProperties);\\n        dispose();\\n        get_id(): string;\\n        get_root(): CUI.Root;\\n        get_enabled(): boolean;\\n        set_enabled(enabled: boolean): boolean;\\n        createComponentForDisplayMode(displayMode: string);\\n    }\\n\\n    class MenuLauncher extends CUI.Control implements IModalController {\\n        constructor(root: CUI.Root, id: string, properties: CUI.ControlProperties, menu);\\n    }\\n\\n    class ContextMenuLauncher extends MenuLauncher { }\\n\\n    class RootProperties { }\\n\\n    class ContextMenuRootProperties extends CUI.RootProperties { }\\n\\n    class Root extends CUI.Component implements Sys.IDisposable { }\\n\\n    class ContextMenuRoot extends CUI.Root { }\\n\\n    class ControlProperties {\\n        Id: string;\\n        Command: string;\\n        TemplateAlias: string;\\n        PopulateDynamically: string;\\n        PopulateOnlyOnce: string;\\n        PopulateQueryCommand: string;\\n        Width: string;\\n        LabelText: string;\\n        ToolTipTitle: string;\\n        ToolTipDescription: string;\\n        ToolTipHelpKeyWord: string;\\n        ToolTipImage32by32: string;\\n        ToolTipImage32by32Class: string;\\n        ToolTipImage32by32Top: number;\\n        ToolTipImage32by32Left: number;\\n        ToolTipSelectedItemTitle: string;\\n        ToolTipShortcutKey: string;\\n        LabelCss: string;\\n        Image32by32: string;\\n        Image32by32Class: string;\\n        Image32by32Top: number;\\n        Image32by32Left: number;\\n        Image16by16: string;\\n        Image16by16Class: string;\\n        Image16by16Top: number;\\n        Image16by16Left: number;\\n        // QueryCommand: string;\\n        constructor();\\n    }\\n\\n    class ControlComponent extends CUI.Component { }\\n\\n    class DataQueryResult { }\\n    class DataQuery { }\\n    class DataSource { }\\n    class Gallery extends CUI.Component { }\\n    class Jewel extends CUI.Root { }\\n    class JewelBuildContext extends CUI.BuildContext { }\\n    class JewelBuildOptions extends CUI.BuildOptions { }\\n    class JewelBuilder extends CUI.Builder { }\\n    class MenuItem extends CUI.ControlComponent { }\\n    class MenuLauncherControlProperties extends CUI.ControlProperties { }\\n    class BrowserUtility { }\\n    class MenuSection extends CUI.Component { }\\n    class QAT extends CUI.Root { }\\n    class QATBuildContext extends CUI.BuildContext { }\\n    class QATBuildOptions extends CUI.BuildOptions { }\\n    class QATBuilder extends CUI.Builder { }\\n    class RibbonPeripheralSection { }\\n\\n    class ContextualGroup {\\n        constructor(id: string, title: string, color: number, command: string);\\n        get_id(): string;\\n        get_count(): number;\\n        get_title(): string;\\n        get_color(): number;\\n        get_command(): string;\\n        dispose(): void;\\n    }\\n\\n    class Template { }\\n    class DeclarativeTemplate extends CUI.Template { }\\n\\n    class RibbonComponent extends CUI.Component {\\n        constructor(ribbon: CUI.Ribbon, id: string, title: string, description: string);\\n        get_ribbon(): CUI.Ribbon;\\n    }\\n\\n    class Group extends CUI.RibbonComponent {\\n        constructor(\\n            ribbon: CUI.Ribbon,\\n            id: string,\\n            title: string,\\n            description: string,\\n            command: string,\\n            properties: CUI.ControlProperties);\\n        get_cssClass(): string;\\n        get_domElementTagName(): string;\\n        unselectLayout(): void;\\n        selectLayout(layoutType: string, popupLayoutTitle: string): void;\\n    }\\n\\n    class GroupPopup extends CUI.Component { }\\n\\n    class Layout extends CUI.RibbonComponent {\\n        constructor(ribbon: CUI.Ribbon, id: string, title: string);\\n        get_cssClass(): string;\\n        get_visibleInDOM(): boolean;\\n    }\\n\\n    class GroupPopupLayout extends CUI.Layout { }\\n\\n    class RootEventCommandProperties { }\\n    class RibbonEventCommandProperties extends CUI.RootEventCommandProperties { }\\n    class CommandContextSwitchCommandProperties { }\\n\\n    class Ribbon extends CUI.Root {\\n        constructor(id: string, properties: CUI.ControlProperties);\\n        refresh(): void;\\n        setFocusOnRibbon(): void;\\n        setFocusOnCurrentTab(): void;\\n        setFocus(): void;\\n        addContextualGroup(id: string, title: string, color, command: string);\\n        get_contextualGroupIds(): string[];\\n        removeContextualGroup(id: string): void;\\n        showContextualGroup(id: string): void;\\n        hideContextualGroup(id: string): void;\\n        addChildAtIndex(child, index: number): void;\\n    }\\n\\n    class RibbonCommand { }\\n    class RibbonBuildContext extends CUI.BuildContext { }\\n    class RibbonBuildOptions extends CUI.BuildOptions { }\\n    class RibbonBuilder extends CUI.Builder { }\\n    class Row extends CUI.Component { }\\n    class ScalingStep { }\\n    class Scaling { }\\n    type Alignment = 0 | 2;\\n    type RowType = 2 | 3 | 4;\\n\\n    class Section extends CUI.RibbonComponent {\\n        /**\\n         * @param type  2 - OneRow, 3 - TwoRow, 4 - ThreeRow.\\n         * @param alignment 0 - Top, 2  - Middle,\\n         */\\n        constructor(ribbon: CUI.Ribbon, id: string, type: RowType, alignment: Alignment);\\n        get_cssClass(): string;\\n        get_type(): number;\\n        get_alignment(): number;\\n        getRow(rowIndex: number): CUI.Row;\\n    }\\n\\n    class Strip extends CUI.RibbonComponent { }\\n\\n    class Tab extends CUI.RibbonComponent {\\n        // tslint:disable-next-line: parameters-max-number\\n        constructor(\\n            ribbon: CUI.Ribbon,\\n            id: string,\\n            title: string,\\n            description: string,\\n            command: string,\\n            contextual: boolean,\\n            contextualGroupId: string,\\n            cssClass: string);\\n        get_domElementTagName(): string;\\n        get_cssClass(): string;\\n        get_selected(): boolean;\\n        set_selected(isSelected: boolean): void;\\n        get_scaling(): string;\\n        get_currentScalingIndex(): number;\\n        scaleMax(): void;\\n        scaleUp(): void;\\n        scaleDown(): void;\\n        get_contextual(): boolean;\\n        get_contextualGroupId(): string;\\n        get_visible(): boolean;\\n        set_visible(isVisible: boolean): boolean;\\n        get_command(): string;\\n    }\\n\\n    class TemplateManager { }\\n\\n    class RootUser { }\\n\\n    class ButtonDock extends CUI.Component { }\\n\\n    class Toolbar extends CUI.Root { }\\n\\n    class ToolbarBuildContext extends CUI.BuildContext { }\\n    class ToolbarBuildOptions extends CUI.BuildOptions { }\\n    class ToolbarBuilder extends CUI.Builder { }\\n    class ToolTip extends CUI.Component { }\\n    class Unit { }\\n    class Utility { }\\n    class ScriptUtility { }\\n    class UIUtility { }\\n\\n    class ListNode<T> {\\n        data: T;\\n        previous: ListNode<T>;\\n        next: ListNode<T>;\\n\\n        constructor(data: T, prev: ListNode<T>, next: ListNode<T>);\\n    }\\n\\n    class List<T> implements IEnumerable<T> {\\n        constructor();\\n\\n        add(data: T): void;\\n        insert(index: number, data: T): void;\\n        remove(data: T): void;\\n        clear(): void;\\n        indexOf(data: T): number;\\n        get_item(index: number): T;\\n        get_count(): number;\\n        getEnumerator(): CUI.ListEnumerator<T>;\\n        getEnumeratorAtPos(): CUI.ListEnumerator<T>;\\n    }\\n\\n    class ListEnumerator<T> {\\n        constructor(index);\\n        get_current(): T;\\n        moveNext(): boolean;\\n        movePrevious(): boolean;\\n        reset(): void;\\n    }\\n\\n    class JsonXmlElement {\\n        constructor(name: string, attrs: string[]);\\n        get_name(): string;\\n        get_attributes(): string[];\\n        appendChild(name: string, attrs: string[]): CUI.JsonXmlElement;\\n        appendChildNode(node: CUI.JsonXmlElement): CUI.JsonXmlElement;\\n        get_childNodes(): CUI.JsonXmlElement[];\\n    }\\n\\n    namespace Page {\\n        class PageComponent implements CUI.Page.ICommandHandler {\\n            canHandleCommand(commandId: string): boolean;\\n            handleCommand(commandId: string, properties: any, sequenceNumber: number): boolean;\\n            init(): void;\\n            getGlobalCommands(): string[];\\n            getFocusedCommands(): string[];\\n            isFocusable(): boolean;\\n            receiveFocus(): boolean;\\n            yieldFocus(): boolean;\\n            getId(): string;\\n        }\\n        interface ICommandHandler {\\n            canHandleCommand(commandId: string): boolean;\\n            handleCommand(commandId: string, properties: any, sequenceNumber: number): boolean;\\n        }\\n        class CommandDispatcher {\\n            executeCommand(commandId: string, properties: any);\\n        }\\n        class FocusManager extends CUI.Page.CommandDispatcher implements CUI.Page.ICommandHandler {\\n            canHandleCommand(commandId: string): boolean;\\n            handleCommand(commandId: string, properties: any, sequenceNumber: number): boolean;\\n            requestFocusForComponent(component: CUI.Component);\\n            releaseFocusFromComponent(component: CUI.Component);\\n            releaseAllFoci(): boolean;\\n            getFocusedComponents(): CUI.Component[];\\n        }\\n        class PageManager extends CUI.RootUser implements CUI.Page.ICommandHandler, CUI.IRootBuildClient {\\n            static createPageManager(): CUI.Page.PageManager;\\n            static get_instance(): CUI.Page.PageManager;\\n            static initialize(): void;\\n            add_ribbonInited(value: () => void);\\n            get_commandDispatcher(): CUI.Page.CommandDispatcher;\\n            get_focusManager(): CUI.Page.FocusManager;\\n            get_undoManager(): CUI.Page.UndoManager;\\n            canHandleCommand(commandId: string): boolean;\\n            handleCommand(commandId: string, properties: any, sequenceNumber: number): boolean;\\n        }\\n        class UndoManager implements CUI.Page.ICommandHandler {\\n            canHandleCommand(commandId: string): boolean;\\n            handleCommand(commandId: string, properties: any, sequenceNumber: number): boolean;\\n        }\\n    }\\n\\n    namespace Controls {\\n        class ContextMenuControlProperties extends CUI.MenuLauncherControlProperties {\\n        }\\n\\n        class Button extends CUI.Control implements CUI.IMenuItem, CUI.ISelectableControl {\\n            constructor(root: CUI.Root, id: string, properties: ControlProperties);\\n            createComponentForDisplayModeInternal(displayMode: string);\\n            createDOMElementForDisplayMode(displayMode: string);\\n            onEnabledChanged(enabled: boolean);\\n            getTextValue(): string;\\n            getLabel(): string;\\n            receiveFocus(): void;\\n            getDropDownDOMElementForDisplayMode(displayMode: string): void;\\n            deselect(): void;\\n            getMenuItemId(): string;\\n            getCommandValueId(): string;\\n            focusOnDisplayedComponent(): void;\\n            onClick(e: Event): void;\\n            handleMouseFocus(e: FocusEvent);\\n            handleMouseBlur(e: FocusEvent);\\n            handleTabFocus(e: FocusEvent);\\n            handleTabBlur(e: FocusEvent);\\n            onMenuClosed(): void;\\n            dispose(): void;\\n        }\\n\\n        class CheckBoxCommandProperties { }\\n        class ToggleButton extends CUI.Control implements CUI.IMenuItem, CUI.ISelectableControl { }\\n        class CheckBox extends CUI.Controls.ToggleButton { }\\n        class ColorPickerCommandProperties { }\\n        class ColorPicker extends CUI.Control implements CUI.IMenuItem { }\\n\\n        class DropDown extends CUI.MenuLauncher {\\n            constructor(root: CUI.Root, id: string, properties: CUI.ControlProperties, menu);\\n        }\\n\\n        class ComboBox extends CUI.Controls.DropDown { }\\n        class DropDownCommandProperties {\\n            SelectedItemId: string;\\n            Value: string;\\n        }\\n        class FlyoutAnchor extends CUI.MenuLauncher { }\\n        class GalleryButtonCommandProperties { }\\n        class GalleryButton extends CUI.Control implements CUI.ISelectableControl { }\\n        class InsertTableCommandProperties { }\\n        class InsertTable extends CUI.Control { }\\n        class LabelCommandProperties { }\\n        class Label extends CUI.Control { }\\n        class MRUSplitButton extends CUI.Controls.DropDown { }\\n        class Separator extends CUI.Control { }\\n        class SpinnerCommandProperties { }\\n        class Spinner extends CUI.Control { }\\n        class SplitButton extends CUI.MenuLauncher { }\\n        class TextBoxCommandProperties { }\\n        class TextBox extends CUI.Control { }\\n        class ToggleButtonCommandProperties { }\\n        class JewelMenuLauncher extends CUI.MenuLauncher { }\\n    }\\n}\\n\\ndeclare namespace Commands {\\n    class CommandIds {\\n        static ApplicationStateChanged: string;\\n        static GlobalRedo: string;\\n        static Redo: string;\\n        static GlobalUndo: string;\\n        static Undo: string;\\n    }\\n    class GlobalRedoProperties {\\n        static SequenceNumber: string;\\n    }\\n    class RedoProperties {\\n        static SequenceNumber: string;\\n    }\\n    class GlobalUndoProperties {\\n        static SequenceNumber: string;\\n    }\\n    class UndoProperties {\\n        static SequenceNumber: string;\\n    }\\n}\\n\\n// ------- SP.Ribbon namespace -------\\n\\ndeclare namespace SP {\\n    namespace Ribbon {\\n        interface WebPartComponentInitInfo {\\n            editable: boolean;\\n            isEditMode: boolean;\\n            allowWebPartAdder: boolean;\\n        }\\n\\n        interface IRelatedFieldsInfoRequestor { }\\n        class Utility { }\\n        class UtilityInternal { }\\n        class SQMUtility { }\\n        class SU { }\\n        class CommandUIExtensionPageComponent extends CUI.Page.PageComponent { }\\n        class ToolbarRibbonAdapterData { }\\n        class ToolbarRibbonAdapter extends CUI.Page.PageComponent { }\\n        class WebPartPageComponentData extends SP.Ribbon.ToolbarRibbonAdapterData { }\\n        class WebPartPageComponent extends SP.Ribbon.ToolbarRibbonAdapter { }\\n        class ListViewWebPartPageComponentData extends SP.Ribbon.WebPartPageComponentData { }\\n        class PagingInformation { }\\n        class ECBMenuItem extends Object { }\\n        class CLVP { }\\n        class ListViewWebPartData extends SP.Ribbon.ToolbarRibbonAdapterData { }\\n        class ListViewWebPartPageComponent extends SP.Ribbon.WebPartPageComponent implements SP.Application.UI.ViewInformationRequestor, SP.Application.UI.DefaultFormsInformationRequestor {\\n            onViewInformationReturned(viewGroups: SP.Application.UI.ViewSelectorGroups): void;\\n            onDefaultFormsInformationRetrieveSuccess(defaultForms: SP.Application.UI.DefaultFormsInformation): void;\\n            onDefaultFormsInformationRetrieveFailure(): void;\\n        }\\n        class ListFormWebPartPageComponentData extends SP.Ribbon.WebPartPageComponentData { }\\n        class ListFormWebPartPageComponent extends SP.Ribbon.WebPartPageComponent { }\\n        class DocLibWebPartPageComponent extends SP.Ribbon.ListViewWebPartPageComponent { }\\n        class GenericListWebPartPageComponentData extends SP.Ribbon.ListViewWebPartPageComponentData { }\\n        class GenericListWebPartPageComponent extends SP.Ribbon.ListViewWebPartPageComponent { }\\n        class SolutionsPageComponent extends SP.Ribbon.ListViewWebPartPageComponent { }\\n        class WikiPageComponent extends CUI.Page.PageComponent { }\\n        class FetchedDocLibItemInfo { }\\n        class DocLibAspxPageComponent extends CUI.Page.PageComponent { }\\n        class WebPartComponent extends CUI.Page.PageComponent {\\n            static get_instance(): SP.Ribbon.WebPartComponent;\\n            static registerWithPageManager(initInfo: SP.Ribbon.WebPartComponentInitInfo): void;\\n            selectWebPart(zc: HTMLElement, setNextRibbonTab: boolean): void;\\n        }\\n        class FetchListViewWebPartPageComponentWorker { }\\n        class BlogPostWebPartPageComponent { }\\n        class PageManager extends CUI.Page.PageManager {\\n            get_ribbon(): SP.Ribbon.Ribbon;\\n            addPageComponent(component: CUI.Component): void;\\n            removePageComponent(component: CUI.Component): void;\\n            isRootCommandEnabled(commandId: string, root: CUI.Root): boolean;\\n            onRootRefreshed(root: CUI.Root): void;\\n            static get_instance(): SP.Ribbon.PageManager;\\n        }\\n        class PageStateActionButton { }\\n        class RelatedFieldsFetcher { }\\n        class RelatedFieldsHelper implements SP.Ribbon.IRelatedFieldsInfoRequestor { }\\n\\n        class UsageReportPageComponent extends CUI.Page.PageComponent { }\\n        class GroupBoardWebPartPageComponent extends SP.Ribbon.GenericListWebPartPageComponent { }\\n        class CalendarPageComponentData extends SP.Ribbon.GenericListWebPartPageComponentData { }\\n        class CalendarListPageComponent extends SP.Ribbon.GenericListWebPartPageComponent { }\\n        class HelpCommandNames { }\\n        class HelpPageComponent extends CUI.Page.PageComponent { }\\n        class SaveConflictHandler { }\\n        class TrackTabPageComponent extends CUI.Page.PageComponent { }\\n        class UserInterfacePageComponent extends CUI.Page.PageComponent { }\\n        class EMailLink { }\\n\\n        class Ribbon extends CUI.Ribbon {\\n            removeChild(id: string): void;\\n            removeContextualGroup(id: string): void;\\n        }\\n        namespace PageState {\\n            class PageStateStrings { }\\n            class PageStateCommands { }\\n            class PageStateHandler extends CUI.Page.PageComponent implements CUI.Page.ICommandHandler { }\\n            class StateChangeDialogHandler { }\\n            class Handlers { }\\n        }\\n        namespace TenantAdmin {\\n            class TenantAdminPageComponent extends CUI.Page.PageComponent { }\\n        }\\n    }\\n    class BWsaConfig { }\\n    class Ticks { }\\n    class TimerResetCheck { }\\n    class StreamRowCounters { }\\n    class BWsaDatapoint { }\\n    class WsaStreamRow { }\\n    class BWsaStream { }\\n    class BWsaHeader { }\\n    class BWsaData { }\\n    class BWsaClient { }\\n}\\n\\ndeclare function _ribbonStartInit(initialTabId: string, buildMinimized: boolean, e: Event): void;\\n\";","/// <reference types='jquery' />\nimport * as monaco from 'monaco-editor';\nimport tmp from '../../node_modules/spexplorerts/bundles/spexplorerts.d.ts.html';\nimport legacy from './defs/legacy.d.html';\nimport misc from './defs/misc.d.html';\nimport jqueryDef from './defs/JQuery.d.html';\nimport jqueryStaticDef from './defs/jqueryStatic.d.html';\nimport sp from './defs/sp.d.html';\nvar $ = require('jquery');\n\n//https://github.com/microsoft/monaco-typescript/pull/8\n\n// @ts-ignore\nself.MonacoEnvironment = {\n    getWorkerUrl: function (/*moduleId: string, label: string*/) {\n        return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\n        self.MonacoEnvironment = {\n          baseUrl: 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.20.0/min/'\n        };\n        importScripts('https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.20.0/min/vs/base/worker/workerMain.js');`\n        )}`;\n    }\n};\n\n//validation settings\n// monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n//     noSemanticValidation: false,\n//     noSyntaxValidation: false\n// });\n\n// compiler options\nmonaco.languages.typescript.typescriptDefaults.setCompilerOptions({\n    target: monaco.languages.typescript.ScriptTarget.ES5,\n    allowNonTsExtensions: true\n});\n\nmonaco.languages.typescript.typescriptDefaults.addExtraLib(legacy, 'file:///node_modules/@types/jquery/legacy.d.ts');\nmonaco.languages.typescript.typescriptDefaults.addExtraLib(misc, 'file:///node_modules/@types/jquery/misc.d.ts');\nmonaco.languages.typescript.typescriptDefaults.addExtraLib(jqueryStaticDef, 'file:///node_modules/@types/jquery/jQueryStatic.d.ts');\nmonaco.languages.typescript.typescriptDefaults.addExtraLib(jqueryDef, 'file:///node_modules/@types/jquery/jQuery.d.ts');\n\nmonaco.languages.typescript.typescriptDefaults.addExtraLib(sp, 'ts:filename/mysp.d.ts');\nmonaco.languages.typescript.typescriptDefaults.addExtraLib(tmp, 'file:///node_modules/@types/spexplorerjs.d.ts');\n\n// monaco.languages.typescript.typescriptDefaults.addExtraLib(\"declare module 'test/file1' { export interface Test {} }\", 'file:///node_modules/@types/test/file1.d.ts'); \n//monaco.languages.typescript.typescriptDefaults.addExtraLib( `    `, 'inmemory://model/test7.d.ts');\n\nexport class MyMonacoEditor {\n    constructor(elemorId: string | HTMLElement, type: string, value: string) {\n\n        var elem: HTMLElement;\n        if (typeof elemorId === 'string')\n            elem = document.getElementById(elemorId);\n        else elem = elemorId;\n\n        var model = monaco.editor.createModel(value, type, monaco.Uri.parse('file:///main.tsx'));\n\n        this.editor = monaco.editor.create(elem, { model: model });\n        monaco.languages.typescript.getTypeScriptWorker().then((worker) => {\n            worker(model.uri).then((client) => {\n                this.tsproxy = client;\n            });\n        });\n        // Explanation:\n        // Press F1 (Alt-F1 in Edge) => the action will appear and run if it is enabled\n        // Press Ctrl-F10 => the action will run if it is enabled\n        // Press Chord Ctrl-K, Ctrl-M => the action will run if it is enabled\n\n        this.editor.addAction({\n            id: 'format',\n            label: 'Format',\n            keybindings: [monaco.KeyMod.Alt | monaco.KeyCode.KEY_F,],\n            precondition: null,\n            keybindingContext: null,\n            contextMenuGroupId: 'navigation',\n            contextMenuOrder: 1.5,\n            run: function (ed) {\n                ed.getAction('editor.action.formatDocument').run();\n                return null;\n            }\n        });\n        this.editor.addAction({\n            // An unique identifier of the contributed action.\n            id: 'runIt',\n            // A label of the action that will be presented to the user.\n            label: 'Run',\n            // An optional array of keybindings for the action.\n            keybindings: [\n                monaco.KeyMod.Alt | monaco.KeyCode.KEY_R,\n                // chord\n                //monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_M)\n            ],\n            // A precondition for this action.\n            precondition: null,\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\n            keybindingContext: null,\n            contextMenuGroupId: 'navigation',\n            contextMenuOrder: 1.5,\n            // Method that will be executed when the action is triggered.\n            // @param editor The editor instance is passed in as a convinience\n            run: function (ed) {\n                $(elem).trigger('run', ed.getValue());\n                return null;\n            }\n        });\n    }\n    tsproxy: any;\n    editor: monaco.editor.IStandaloneCodeEditor;\n    setValue(val: string) {\n        this.editor.setValue(val);\n    }\n    getValue(): JQuery.Promise<string> {\n        console.log('getvalue');\n        this.tsproxy.getEmitOutput('file:///main.tsx').then((r: any) => {\n            console.log({ 'gotvalue': r });\n            p1.resolve(r.outputFiles[0].text);\n        });\n\n        //return this.editor.getValue();\n        var p1 = $.Deferred();\n        return p1.promise();\n    }\n}","export class TinyLogger {\n    log(...args: any[]) {\n        console.log(args);\n    }\n}"],"sourceRoot":""}